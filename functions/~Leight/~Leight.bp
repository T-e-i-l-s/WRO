MIN1_m = 0 ' global variable init 
MIN2_m = 0 ' global variable init 
MAX1_m = 0 ' global variable init 
MAX2_m = 0 ' global variable init 
K_m = 0 ' global variable init 
V_m = 0 ' global variable init 
MAXR_m = 0 ' global variable init 
MINR_m = 0 ' global variable init 
MAXW_m = 0 ' global variable init 
MINW_m = 0 ' global variable init 
MAXB_m = 0 ' global variable init 
MINB_m = 0 ' global variable init 
ZONE1_m = 0 ' global variable init 
ZONE2_m = 0 ' global variable init 
BLACK_m = 0 ' global variable init 
GRAD_m = 0 ' global variable init 
MM_m = 0 ' global variable init 
SP_m = 0 ' global variable init 
COLORS_m[0] = 0 ' global variable init 
ID_m = 0 ' global variable init 
RED_m = 0 ' global variable init 
START_m = 0 ' global variable init 
MSGSZEV3_m = 0 ' global variable init 
MSGSZSLV_m = 0 ' global variable init 
S1_m = 0 ' global variable init 
S2_m = 0 ' global variable init 
U_m = 0 ' global variable init 
L_m = 0 ' global variable init 
F_m = 0 ' global variable init 
A_m = 0 ' global variable init 
COLS_m[0] = 0 ' global variable init 
B1_m = 0 ' global variable init 
B2_m = 0 ' global variable init 
B3_m = 0 ' global variable init 
L_1 = 0 ' local variable init 
NSP_1 = 0 ' local variable init 
SP_1 = 0 ' local variable init 
A_1 = 0 ' local variable init 
U_1 = 0 ' local variable init 
MM_2 = 0 ' local variable init 
SP_2 = 0 ' local variable init 
L_2 = 0 ' local variable init 
EV3.SetLEDColor ( "OFF" , "NORMAL" )
time.Reset1 ()
Sensor.SetMode ( 2 , 0 )
Sensor.SetMode ( 3 , 0 )
MIN1_m = 0
MIN2_m = 0
MAX1_m = 100
MAX2_m = 100
K_m = 1
V_m = 70
MAXR_m = 0
MINR_m = 0
MAXW_m = 0
MINW_m = 0
MAXB_m = 0
MINB_m = 0
LCD.Clear ()
ZONE1_m = 0
ZONE2_m = 0
BLACK_m = 0
GRAD_m = 0
MM_m = 0
SP_m = 0
COLORS_m [ 1 ] = 0
COLORS_m [ 2 ] = 0
COLORS_m [ 3 ] = 0
COLORS_m [ 4 ] = 0
COLORS_m [ 5 ] = 0
COLORS_m [ 6 ] = 0
COLORS_m [ 7 ] = 0
COLORS_m [ 8 ] = 0
COLORS_m [ 9 ] = 0
COLORS_m [ 10 ] = 0
COLORS_m [ 11 ] = 0
COLORS_m [ 12 ] = 0
ID_m = 0
RED_m = 0
START_m = 0
MSGSZEV3_m = 0
MSGSZSLV_m = 0
Sub SEN1
S1_m = 100 * ( Sensor.ReadPercent ( 2 ) - MIN1_m ) / ( MAX1_m - MIN1_m )
EndSub
Sub SEN2
S2_m = 100 * ( Sensor.ReadPercent ( 3 ) - MIN2_m ) / ( MAX2_m - MIN2_m )
EndSub
Sub LINE1
SEN1 ()
SEN2 ()
U_m = S1_m - S2_m
Motor.StartPower ( "C" , V_m - U_m * K_m )
Motor.StartPower ( "B" , V_m + U_m * K_m )
EndSub
Sub LINE2
SEN1 ()
SEN2 ()
U_m = S2_m - S1_m
Motor.StartPower ( "C" , V_m - U_m * K_m )
Motor.StartPower ( "B" , V_m + U_m * K_m )
EndSub
Sub MOVE_2
Motor.ResetCount ( "BC" )
SP_1 = 30
While ( Math.Abs ( Motor.GetCount ( "C" ) ) + Math.Abs ( Motor.GetCount ( "B" ) ) ) / 2 <= L_1
A_1 = 90 / ( 82 * 3.14 ) * 360
if L_1 - ( Math.Abs ( Motor.GetCount ( "C" ) ) + Math.Abs ( Motor.GetCount ( "B" ) ) ) / 2 < A_1 and SP_1 > 35 Then
SP_1 = SP_1 - 0.9
if NSP_1 < 0 Then
SP_1 = 0 - SP_1
endif
EndIf
if ( Math.Abs ( Motor.GetCount ( "C" ) ) + Math.Abs ( Motor.GetCount ( "B" ) ) ) / 2 < A_1 or SP_1 < NSP_1 Then
SP_1 = Math.abs ( SP_1 ) + 0.2
if NSP_1 < 0 Then
SP_1 = 0 - SP_1
endif
EndIf
U_1 = Motor.GetCount ( "B" ) - Motor.GetCount ( "C" )
Motor.StartPower ( "C" , SP_1 + U_1 * 10 )
Motor.StartPower ( "B" , SP_1 - U_1 * 10 )
EndWhile
Motor.Stop ( "BC" , "true" )
EndSub
Sub TOMM_2
L_2 = MM_2 / ( 82 * 3.14 ) * 360
Motor.ResetCount ( "BC" )
L_1 = L_2
NSP_1 = SP_2
MOVE_2()
SP_2 = 0
EndSub
Sub LEFT
L_m = 60 / ( 82 * 3.14 ) * 360
Motor.Move ( "BC" , 20 , L_m , "true" )
Motor.MoveSync ( "BC" , - 20 , 20 , 130 , "true" )
While Sensor.ReadPercent ( 3 ) < 21
Motor.StartSync ( "BC" , - 20 , 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
While Sensor.ReadPercent ( 3 ) > 10
Motor.StartSync ( "BC" , - 20 , 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
EndSub
Sub RIGHT
L_m = 63 / ( 82 * 3.14 ) * 360
Motor.Move ( "BC" , 20 , L_m , "true" )
Motor.MoveSync ( "BC" , 20 , - 20 , 130 , "true" )
While Sensor.ReadPercent ( 2 ) < 21
Motor.StartSync ( "BC" , 20 , - 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
While Sensor.ReadPercent ( 2 ) > 10
Motor.StartSync ( "BC" , 20 , - 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
EndSub
Sub FRZ
Buttons.Flush ()
Motor.Stop ( "BC" , "true" )
Buttons.Wait ()
Speaker.Note ( 70 , "B7" , 200 )
EndSub
F_m = EV3File.OpenWrite ( "cols.txt" )
MM_m = 150
Sensor.SetMode ( 4 , 2 )
L_m = MM_m / ( 82 * 3.14 ) * 360
Motor.ResetCount ( "BC" )
A_m = 0
COLS_m [ 0 ] = 0
SP_m = 30
while Sensor.ReadRawValue ( 4 , 0 ) = 0
U_m = Motor.GetCount ( "B" ) - Motor.GetCount ( "C" )
Motor.StartPower ( "C" , SP_m + U_m * 10 )
Motor.StartPower ( "B" , SP_m - U_m * 10 )
EndWhile
Motor.ResetCount ( "BC" )
while Motor.GetCount ( "B" ) < L_m
U_m = Motor.GetCount ( "B" ) - Motor.GetCount ( "C" )
Motor.StartPower ( "C" , SP_m + U_m * 10 )
Motor.StartPower ( "B" , SP_m - U_m * 10 )
COLS_m [ A_m ] = Sensor.ReadRawValue ( 4 , 0 )
EV3File.WriteLine ( F_m , COLS_m [ A_m ] + "; " )
A_m = A_m + 1
EndWhile
B1_m = 0
while COLS_m [ B1_m ] <> 0
B1_m = B1_m + 1
EndWhile
B1_m = B1_m / ( A_m / 15 )
LCD.Text ( 1 , 20 , 30 , 2 , math.Floor ( B1_m / 7 ) )
SP_m = 30
while Sensor.ReadRawValue ( 4 , 0 ) = 0
U_m = Motor.GetCount ( "B" ) - Motor.GetCount ( "C" )
Motor.StartPower ( "C" , SP_m + U_m * 10 )
Motor.StartPower ( "B" , SP_m - U_m * 10 )
EndWhile
A_m = 0
Motor.ResetCount ( "BC" )
while Motor.GetCount ( "B" ) < L_m
U_m = Motor.GetCount ( "B" ) - Motor.GetCount ( "C" )
Motor.StartPower ( "C" , SP_m + U_m * 10 )
Motor.StartPower ( "B" , SP_m - U_m * 10 )
COLS_m [ A_m ] = Sensor.ReadRawValue ( 4 , 0 )
EV3File.WriteLine ( F_m , COLS_m [ A_m ] + "; " )
A_m = A_m + 1
EndWhile
motor.Stop ( "bc" , "false" )
B2_m = 0
while COLS_m [ B2_m ] <> 0
B2_m = B2_m + 1
EndWhile
B2_m = B2_m / ( A_m / 15 )
LCD.Text ( 1 , 20 , 60 , 2 , math.Floor ( B2_m / 7 ) )
while Sensor.ReadRawValue ( 4 , 0 ) = 0
U_m = Motor.GetCount ( "B" ) - Motor.GetCount ( "C" )
Motor.StartPower ( "C" , SP_m + U_m * 10 )
Motor.StartPower ( "B" , SP_m - U_m * 10 )
EndWhile
A_m = 0
Motor.ResetCount ( "BC" )
while Motor.GetCount ( "B" ) < L_m
U_m = Motor.GetCount ( "B" ) - Motor.GetCount ( "C" )
Motor.StartPower ( "C" , SP_m + U_m * 10 )
Motor.StartPower ( "B" , SP_m - U_m * 10 )
COLS_m [ A_m ] = Sensor.ReadRawValue ( 4 , 0 )
EV3File.WriteLine ( F_m , COLS_m [ A_m ] + "; " )
A_m = A_m + 1
EndWhile
motor.Stop ( "bc" , "false" )
B3_m = 0
while COLS_m [ B3_m ] <> 0
B3_m = B3_m + 1
EndWhile
B3_m = B3_m / ( A_m / 15 )
LCD.Text ( 1 , 20 , 90 , 2 , math.Floor ( B3_m / 7 ) )
LCD.Text ( 1 , 60 , 45 , 2 , math.Floor ( B1_m / 7 ) + math.Floor ( B2_m / 7 ) + math.Floor ( B3_m / 7 ) )
FRZ ()
