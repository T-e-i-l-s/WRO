Sensor.SetMode(4,2)
Sensor.SetMode(1,2)
I2CPORT = 3 'Порт
I2CSLVADDR = 1 'Адрес
MSGSZEV3 = 0
MSGSZSLV = 0
Function GetV(in number I2CPORT)
    sendarray[0] = 66 'отсылаемое значение внутри датчика (0x42)
    recvarray = Sensor.CommunicateI2C( I2CPORT,@I2CSLVADDR,1,4,sendarray)
    'принятие массива с элементами RGB по порядку
    sNum = recvarray[0] 'Значение color number I2C, для HSV
    sRed = recvarray[1] 'Значение Red I2C для HSV
    sGreen = recvarray[2] 'Значение Green I2C для HSV
    sBlue = recvarray[3] 'Значение Blue I2C для HSV
    sRed = sRed / 255
    sGreen = sGreen / 255
    sBlue = sBlue / 255
    If (sRed > sGreen) And (sRed > sBlue) Then
      max = sRed
    ElseIf (sGreen > sRed) And (sGreen > sBlue) then
      max = sGreen
    ElseIf (sBlue > sRed) And (sBlue > sGreen) then
      max = sBlue
    EndIf  
    If (sRed < sGreen) And (sRed < sBlue) Then
      min = sRed
    ElseIf (sGreen < sRed) And (sGreen < sBlue) then
      min = sGreen
    ElseIf (sBlue < sRed) And (sBlue < sGreen) then
      min = sBlue
    EndIf
  v = max
    If (max = 0) Then
    S = 0
  Else
    S = 1 - min / max
  EndIf
  If (sRed = max) Then
      If (sGreen >= sBlue) Then
        H = 60 * (sGreen - sBlue) / (max - min)
      Else
        H = 60 * (sGreen - sBlue) / (max - min) + 360
      EndIf
    Else
      If (max = sGreen) Then
        H = 60 * (sBlue - sRed) / (max - min) + 120
      Else
        H = 60 * (sRed - sGreen) / (max - min) + 240
      EndIf
    EndIf
  LCD.Text(1,20,I2CPORT*10,2,H + S + v)
EndFunction


While "true"
  LCD.Clear()
  GetV(4)
  Program.Delay(2000)
 EndWhile