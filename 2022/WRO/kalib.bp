Sensor.SetMode(1,2)
Sensor.SetMode(4,2)
'Num = recvarray[0] 'Значение color number I2C, для HSV
'sRed = recvarray[1] 'Значение Red I2C для HSV
'sGreen = recvarray[2] 'Значение Green I2C для HSV
'sBlue = recvarray[3] 'Значение Blue I2C для HSV
col = 0
Red = 0
@I2CPORT = 1 'Порт
@MSGSZEV3 = 0
@MSGSZSLV = 0

n = 0

Sub HSV1
  sendarray[0] = 66 'отсылаемое значение внутри датчика (0x42)
  recvarray = Sensor.CommunicateI2C(1,1,1,4,sendarray)
  'принятие массива с элементами RGB по порядку
  sNum = recvarray[0] 'Значение color number I2C, для HSV
  sRed = recvarray[1] 'Значение Red I2C для HSV
  sGreen = recvarray[2] 'Значение Green I2C для HSV
  sBlue = recvarray[3] 'Значение Blue I2C для HSV
  sRed = sRed / 255
  sGreen = sGreen / 255
  sBlue = sBlue / 255
  If (sRed > sGreen) And (sRed > sBlue) Then
    max = sRed
  ElseIf (sGreen > sRed) And (sGreen > sBlue) then
    max = sGreen
  ElseIf (sBlue > sRed) And (sBlue > sGreen) then
    max = sBlue
  EndIf  
  If (sRed < sGreen) And (sRed < sBlue) Then
    min = sRed
  ElseIf (sGreen < sRed) And (sGreen < sBlue) then
    min = sGreen
  ElseIf (sBlue < sRed) And (sBlue < sGreen) then
    min = sBlue
  EndIf
  If (max = min) Then
    H = 0
  Else     
    If (sRed = max) Then
      If (sGreen >= sBlue) Then
        H = 60 * (sGreen - sBlue) / (max - min)
      Else
        H = 60 * (sGreen - sBlue) / (max - min) + 360
      EndIf
    Else
      If (max = sGreen) Then
        H = 60 * (sBlue - sRed) / (max - min) + 120
      Else
        H = 60 * (sRed - sGreen) / (max - min) + 240
      EndIf
    EndIf
  EndIf
  
  
  If (max = 0) Then
    S = 0
  Else
    S = 1 - min / max
  EndIf
  V = max
  
    
  If (H > 0 And H < 20) And V > 0.4 Then
    Color = 5  'Red
  ElseIf (H > 210 And H < 300) And (V > 0.4) Then
    Color = 2  'Blue 
  ElseIf (H > 20 And H < 100) And (V > 0.6) Then
    Color = 4  'Yellow 
  ElseIf H > 100 And H < 210 Then
    Color = 3  'green                      
  Else
    color = 0
  EndIf
  
  @n = Color
  
  
EndSub

Sub HSV4
  sendarray[0] = 66 'отсылаемое значение внутри датчика (0x42)
  recvarray = Sensor.CommunicateI2C(4,@I2CSLVADDR,1,4,sendarray)
  'принятие массива с элементами RGB по порядку
  sNum = recvarray[0] 'Значение color number I2C, для HSV
  sRed = recvarray[1] 'Значение Red I2C для HSV
  sGreen = recvarray[2] 'Значение Green I2C для HSV
  sBlue = recvarray[3] 'Значение Blue I2C для HSV
  sRed = sRed / 255
  sGreen = sGreen / 255
  sBlue = sBlue / 255
  If (sRed > sGreen) And (sRed > sBlue) Then
    max = sRed
  ElseIf (sGreen > sRed) And (sGreen > sBlue) then
    max = sGreen
  ElseIf (sBlue > sRed) And (sBlue > sGreen) then
    max = sBlue
  EndIf  
  If (sRed < sGreen) And (sRed < sBlue) Then
    min = sRed
  ElseIf (sGreen < sRed) And (sGreen < sBlue) then
    min = sGreen
  ElseIf (sBlue < sRed) And (sBlue < sGreen) then
    min = sBlue
  EndIf
  If (max = min) Then
    H = 0
  Else     
    If (sRed = max) Then
      If (sGreen >= sBlue) Then
        H = 60 * (sGreen - sBlue) / (max - min)
      Else
        H = 60 * (sGreen - sBlue) / (max - min) + 360
      EndIf
    Else
      If (max = sGreen) Then
        H = 60 * (sBlue - sRed) / (max - min) + 120
      Else
        H = 60 * (sRed - sGreen) / (max - min) + 240
      EndIf
    EndIf
  EndIf
  
  
  If (max = 0) Then
    S = 0
  Else
    S = 1 - min / max
  EndIf
  V = max
  
    
  If (H > 0 And H < 20) And V > 0.4 Then
    Color = 5  'Red
  ElseIf (H > 210 And H < 300) And (V > 0.4) Then
    Color = 2  'Blue 
  ElseIf (H > 20 And H < 100) And (V > 0.6) Then
    Color = 4  'Yellow 
  ElseIf H > 100 And H < 210 Then
    Color = 3  'green                      
  Else
    color = 0
  EndIf
  
  @n = Color
  
EndSub




While Buttons.Current <> "E"
  LCD.Clear()
  LCD.Text(1,20,20,2,"Red_Dal")
  HSV1()
  rd1 = n
  HSV4()
  rd2 = n
  LCD.Text(1,20,60,1,rd1)
  LCD.Text(1,20,90,1,rd2)
  Program.Delay(300)
EndWhile
Speaker.Note(100,"c#5",200)
Program.Delay(300)


While Buttons.Current <> "E"
  LCD.Clear()
  LCD.Text(1,20,20,2,"Black_Dal")
  HSV1()
  bd1 = n
  LCD.Text(1,20,60,1,n)
  HSV4()
  bd2 = n
  LCD.Text(1,20,90,1,n)
  Program.Delay(300)
EndWhile
Speaker.Note(100,"c#5",200)
Program.Delay(300)


While Buttons.Current <> "E"
  LCD.Clear()
  LCD.Text(1,20,20,2,"White_Dal")
  HSV1()
  wd1 = n
  LCD.Text(1,20,60,1,n)
  HSV4()
  wd2 = n
  LCD.Text(1,20,90,1,n)
  Program.Delay(300)
EndWhile
Speaker.Note(100,"c#5",200)
Program.Delay(300)








While Buttons.Current <> "E"
  LCD.Clear()
  LCD.Text(1,20,20,2,"Red_Bliz")
  HSV1()
  rb1 = @n
  LCD.Text(1,20,60,1,n)
  HSV4()
  rb2 = @n
  LCD.Text(1,20,90,1,n)
  Program.Delay(300)
EndWhile
Speaker.Note(100,"c#5",200)
Program.Delay(300)


While Buttons.Current <> "E"
  LCD.Clear()
  LCD.Text(1,20,20,2,"Black_Bliz")
  HSV1()
  bb1 = @n
  LCD.Text(1,20,60,1,n)
  HSV4()
  bb2 = @n
  LCD.Text(1,20,90,1,n)
  Program.Delay(300)
EndWhile
Speaker.Note(100,"c#5",200)
Program.Delay(300)


While Buttons.Current <> "E"
  LCD.Clear()
  LCD.Text(1,20,20,2,"White_Bliz")
  HSV1()
  wb1 = @n
  LCD.Text(1,20,60,1,n)
  HSV4()
  wb2 = @n
  LCD.Text(1,20,90,1,n)
  Program.Delay(300)
EndWhile
Speaker.Note(100,"c#5",200)
Program.Delay(300)


LCD.Clear()
LCD.Text(1,20,20,2,"Ready!")
Speaker.Note(100,"c#3",500)




f1=EV3File.OpenWrite("ld.txt")
EV3File.WriteLine(f1,rd1)
EV3File.WriteLine(f1,bd1)
EV3File.WriteLine(f1,wd1)
EV3File.Close(f1)

f1=EV3File.OpenWrite("rd.txt")
EV3File.WriteLine(f1,rd2)
EV3File.WriteLine(f1,bd2)
EV3File.WriteLine(f1,wd2)
EV3File.Close(f1)



f1=EV3File.OpenWrite("lb.txt")
EV3File.WriteLine(f1,rb1)
EV3File.WriteLine(f1,bb1)
EV3File.WriteLine(f1,wb1)
EV3File.Close(f1)

f1=EV3File.OpenWrite("rb.txt")
EV3File.WriteLine(f1,rb2)
EV3File.WriteLine(f1,bb2)
EV3File.WriteLine(f1,wb2)
EV3File.Close(f1)
