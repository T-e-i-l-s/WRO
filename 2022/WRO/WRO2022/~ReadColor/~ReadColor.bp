MSGSZEV3_m = 0 ' global variable init 
MSGSZSLV_m = 0 ' global variable init 
SENDARRAY_m[0] = 0 ' global variable init 
RECVARRAY_m[0] = 0 ' global variable init 
SNUM_m = 0 ' global variable init 
SRED_m = 0 ' global variable init 
SGREEN_m = 0 ' global variable init 
SBLUE_m = 0 ' global variable init 
MAX_m = 0 ' global variable init 
MIN_m = 0 ' global variable init 
H_m = 0 ' global variable init 
S_m = 0 ' global variable init 
V_m = 0 ' global variable init 
COLOR_m = 0 ' global variable init 
N_m = 0 ' global variable init 
Sensor.SetMode ( 1 , 2 )
Sensor.SetMode ( 4 , 2 )
MSGSZEV3_m = 0
MSGSZSLV_m = 0
Sub LEFTDAL
SENDARRAY_m [ 0 ] = 66
RECVARRAY_m = Sensor.CommunicateI2C ( 1 , 1 , 1 , 4 , SENDARRAY_m )
SNUM_m = RECVARRAY_m [ 0 ]
SRED_m = RECVARRAY_m [ 1 ]
SGREEN_m = RECVARRAY_m [ 2 ]
SBLUE_m = RECVARRAY_m [ 3 ]
SRED_m = SRED_m
SGREEN_m = SGREEN_m
SBLUE_m = SBLUE_m
If ( SRED_m > SGREEN_m ) And ( SRED_m > SBLUE_m ) Then
MAX_m = SRED_m
ElseIf ( SGREEN_m > SRED_m ) And ( SGREEN_m > SBLUE_m ) then
MAX_m = SGREEN_m
ElseIf ( SBLUE_m > SRED_m ) And ( SBLUE_m > SGREEN_m ) then
MAX_m = SBLUE_m
EndIf
If ( SRED_m < SGREEN_m ) And ( SRED_m < SBLUE_m ) Then
MIN_m = SRED_m
ElseIf ( SGREEN_m < SRED_m ) And ( SGREEN_m < SBLUE_m ) then
MIN_m = SGREEN_m
ElseIf ( SBLUE_m < SRED_m ) And ( SBLUE_m < SGREEN_m ) then
MIN_m = SBLUE_m
EndIf
If ( MAX_m = MIN_m ) Then
H_m = 0
Else
If ( SRED_m = MAX_m ) Then
If ( SGREEN_m >= SBLUE_m ) Then
H_m = 60 * ( SGREEN_m - SBLUE_m ) / ( MAX_m - MIN_m )
Else
H_m = 60 * ( SGREEN_m - SBLUE_m ) / ( MAX_m - MIN_m ) + 360
EndIf
Else
If ( MAX_m = SGREEN_m ) Then
H_m = 60 * ( SBLUE_m - SRED_m ) / ( MAX_m - MIN_m ) + 120
Else
H_m = 60 * ( SRED_m - SGREEN_m ) / ( MAX_m - MIN_m ) + 240
EndIf
EndIf
EndIf
If ( MAX_m = 0 ) Then
S_m = 0
Else
S_m = 1 - MIN_m / MAX_m
EndIf
V_m = MAX_m
If ( H_m > 0.8 And H_m < 29 ) or ( H_m > 352 and H_m < 360 ) Then
COLOR_m = 5
ElseIf ( SRED_m > 60 And SRED_m < 110 ) Then
COLOR_m = 1
ElseIf SRED_m > 110 And SRED_m < 320 Then
COLOR_m = 6
Else
COLOR_m = 0
EndIf
LCD.Text ( 1 , 20 , 20 , 2 , SGREEN_m + SBLUE_m )
EndSub
Sub HSV4
SENDARRAY_m [ 0 ] = 66
RECVARRAY_m = Sensor.CommunicateI2C ( 4 , 1 , 1 , 4 , SENDARRAY_m )
SNUM_m = RECVARRAY_m [ 0 ]
SRED_m = RECVARRAY_m [ 1 ]
SGREEN_m = RECVARRAY_m [ 2 ]
SBLUE_m = RECVARRAY_m [ 3 ]
SRED_m = SRED_m
SGREEN_m = SGREEN_m
SBLUE_m = SBLUE_m
If ( SRED_m > SGREEN_m ) And ( SRED_m > SBLUE_m ) Then
MAX_m = SRED_m
ElseIf ( SGREEN_m > SRED_m ) And ( SGREEN_m > SBLUE_m ) then
MAX_m = SGREEN_m
ElseIf ( SBLUE_m > SRED_m ) And ( SBLUE_m > SGREEN_m ) then
MAX_m = SBLUE_m
EndIf
If ( SRED_m < SGREEN_m ) And ( SRED_m < SBLUE_m ) Then
MIN_m = SRED_m
ElseIf ( SGREEN_m < SRED_m ) And ( SGREEN_m < SBLUE_m ) then
MIN_m = SGREEN_m
ElseIf ( SBLUE_m < SRED_m ) And ( SBLUE_m < SGREEN_m ) then
MIN_m = SBLUE_m
EndIf
If ( MAX_m = MIN_m ) Then
H_m = 0
Else
If ( SRED_m = MAX_m ) Then
If ( SGREEN_m >= SBLUE_m ) Then
H_m = 60 * ( SGREEN_m - SBLUE_m ) / ( MAX_m - MIN_m )
Else
H_m = 60 * ( SGREEN_m - SBLUE_m ) / ( MAX_m - MIN_m ) + 360
EndIf
Else
If ( MAX_m = SGREEN_m ) Then
H_m = 60 * ( SBLUE_m - SRED_m ) / ( MAX_m - MIN_m ) + 120
Else
H_m = 60 * ( SRED_m - SGREEN_m ) / ( MAX_m - MIN_m ) + 240
EndIf
EndIf
EndIf
If ( MAX_m = 0 ) Then
S_m = 0
Else
S_m = 1 - MIN_m / MAX_m
EndIf
V_m = MAX_m
If ( H_m > 0.8 and H_m < 70 ) or ( H_m > 307 and H_m < 360 ) Then
COLOR_m = 5
ElseIf SRED_m > 5 And SRED_m < 17 Then
COLOR_m = 1
ElseIf SRED_m > 16 or ( SRED_m < 20 and SRED_m > 15 ) Then
COLOR_m = 6
Else
COLOR_m = 0
EndIf
N_m = COLOR_m
LCD.Text ( 1 , 130 , 20 , 2 , COLOR_m )
LCD.Text ( 1 , 130 , 50 , 1 , H_m )
LCD.Text ( 1 , 130 , 80 , 1 , SRED_m )
EndSub
LCD.Clear ()
While "true"
LEFTDAL ()
HSV4 ()
Program.Delay ( 200 )
EndWhile
