DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VMSGSZEV3_M
DATAF VMSGSZSLV_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VSNUM_M
DATAF VSRED_M
DATAF VSGREEN_M
DATAF VSBLUE_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VS_M
DATAF VV_M
DATAF VCOLOR_M

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VMSGSZEV3_M
    MOVEF_F 0.0 VMSGSZSLV_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VCOLOR_M
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VMSGSZEV3_M
    MOVEF_F 0.0 VMSGSZSLV_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VCOLOR_M
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 1.0 no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 2.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 4.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    MOVEF_F 0.0 VMSGSZEV3_M
    MOVEF_F 0.0 VMSGSZSLV_M
    CALL LCD.CLEAR
  while169:
  whilebody169:
    WRITE32 ENDSUB_COL4BLIZ:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_COL4BLIZ
CALLSUB170:
    JR whilebody169
  endwhile169:
ENDTHREAD:
    RETURN
SUB_COL1DAL:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C 1.0 1.0 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    MOVEF_F VSRED_M VSRED_M
    MOVEF_F VSGREEN_M VSGREEN_M
    MOVEF_F VSBLUE_M VSBLUE_M
    JR_LTEQF VSRED_M VSGREEN_M else10_1
    JR_LTEQF VSRED_M VSBLUE_M else10_1
    MOVEF_F VSRED_M VMAX_M
    JR endif10
  else10_1:
    JR_LTEQF VSGREEN_M VSRED_M else10_2
    JR_LTEQF VSGREEN_M VSBLUE_M else10_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif10
  else10_2:
    JR_LTEQF VSBLUE_M VSRED_M else10_3
    JR_LTEQF VSBLUE_M VSGREEN_M else10_3
    MOVEF_F VSBLUE_M VMAX_M
  else10_3:
  endif10:
    JR_GTEQF VSRED_M VSGREEN_M else11_1
    JR_GTEQF VSRED_M VSBLUE_M else11_1
    MOVEF_F VSRED_M VMIN_M
    JR endif11
  else11_1:
    JR_GTEQF VSGREEN_M VSRED_M else11_2
    JR_GTEQF VSGREEN_M VSBLUE_M else11_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif11
  else11_2:
    JR_GTEQF VSBLUE_M VSRED_M else11_3
    JR_GTEQF VSBLUE_M VSGREEN_M else11_3
    MOVEF_F VSBLUE_M VMIN_M
  else11_3:
  endif11:
    JR_NEQF VMAX_M VMIN_M else12_1
    MOVEF_F 0.0 VH_M
    JR endif12
  else12_1:
    JR_NEQF VSRED_M VMAX_M else13_1
    JR_LTF VSGREEN_M VSBLUE_M else14_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf18
    DATA8 flag18
    DIVF F.0 F.1 tmpf18
    CP_EQF 0.0 F.1 flag18
    SELECTF flag18 0.0 tmpf18 VH_M

    JR endif14
  else14_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf22
    DATA8 flag22
    DIVF F.1 F.2 tmpf22
    CP_EQF 0.0 F.2 flag22
    SELECTF flag22 0.0 tmpf22 F.0

    ADDF F.0 360.0 VH_M
  else14_2:
  endif14:
    JR endif13
  else13_1:
    JR_NEQF VMAX_M VSGREEN_M else24_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf28
    DATA8 flag28
    DIVF F.1 F.2 tmpf28
    CP_EQF 0.0 F.2 flag28
    SELECTF flag28 0.0 tmpf28 F.0

    ADDF F.0 120.0 VH_M
    JR endif24
  else24_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf33
    DATA8 flag33
    DIVF F.1 F.2 tmpf33
    CP_EQF 0.0 F.2 flag33
    SELECTF flag33 0.0 tmpf33 F.0

    ADDF F.0 240.0 VH_M
  else24_2:
  endif24:
  else13_2:
  endif13:
  else12_2:
  endif12:
    JR_NEQF VMAX_M 0.0 else35_1
    MOVEF_F 0.0 VS_M
    JR endif35
  else35_1:
    DATAF tmpf36
    DATA8 flag36
    DIVF VMIN_M VMAX_M tmpf36
    CP_EQF 0.0 VMAX_M flag36
    SELECTF flag36 0.0 tmpf36 F.0

    SUBF 1.0 F.0 VS_M
  else35_2:
  endif35:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VSGREEN_M 50.0 else38_1
    MOVEF_F 6.0 VCOLOR_M
    JR endif38
  else38_1:
    JR_LTEQF VS_M 0.43 else38_2
    JR_GTEQF VS_M 0.55 else38_2
    MOVEF_F 1.0 VCOLOR_M
    JR endif38
  else38_2:
    JR_LTEQF VS_M 0.6 else38_3
    JR_GTEQF VS_M 0.8 else38_3
    MOVEF_F 5.0 VCOLOR_M
    JR endif38
  else38_3:
    MOVEF_F 0.0 VCOLOR_M
  else38_4:
  endif38:
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 80.0 2.0 S.0
RETSUB_COL1DAL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_COL1DAL:
SUB_COL1BLIZ:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C 1.0 1.0 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    MOVEF_F VSRED_M VSRED_M
    MOVEF_F VSGREEN_M VSGREEN_M
    MOVEF_F VSBLUE_M VSBLUE_M
    JR_LTEQF VSRED_M VSGREEN_M else51_1
    JR_LTEQF VSRED_M VSBLUE_M else51_1
    MOVEF_F VSRED_M VMAX_M
    JR endif51
  else51_1:
    JR_LTEQF VSGREEN_M VSRED_M else51_2
    JR_LTEQF VSGREEN_M VSBLUE_M else51_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif51
  else51_2:
    JR_LTEQF VSBLUE_M VSRED_M else51_3
    JR_LTEQF VSBLUE_M VSGREEN_M else51_3
    MOVEF_F VSBLUE_M VMAX_M
  else51_3:
  endif51:
    JR_GTEQF VSRED_M VSGREEN_M else52_1
    JR_GTEQF VSRED_M VSBLUE_M else52_1
    MOVEF_F VSRED_M VMIN_M
    JR endif52
  else52_1:
    JR_GTEQF VSGREEN_M VSRED_M else52_2
    JR_GTEQF VSGREEN_M VSBLUE_M else52_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif52
  else52_2:
    JR_GTEQF VSBLUE_M VSRED_M else52_3
    JR_GTEQF VSBLUE_M VSGREEN_M else52_3
    MOVEF_F VSBLUE_M VMIN_M
  else52_3:
  endif52:
    JR_NEQF VMAX_M VMIN_M else53_1
    MOVEF_F 0.0 VH_M
    JR endif53
  else53_1:
    JR_NEQF VSRED_M VMAX_M else54_1
    JR_LTF VSGREEN_M VSBLUE_M else55_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf59
    DATA8 flag59
    DIVF F.0 F.1 tmpf59
    CP_EQF 0.0 F.1 flag59
    SELECTF flag59 0.0 tmpf59 VH_M

    JR endif55
  else55_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf63
    DATA8 flag63
    DIVF F.1 F.2 tmpf63
    CP_EQF 0.0 F.2 flag63
    SELECTF flag63 0.0 tmpf63 F.0

    ADDF F.0 360.0 VH_M
  else55_2:
  endif55:
    JR endif54
  else54_1:
    JR_NEQF VMAX_M VSGREEN_M else65_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf69
    DATA8 flag69
    DIVF F.1 F.2 tmpf69
    CP_EQF 0.0 F.2 flag69
    SELECTF flag69 0.0 tmpf69 F.0

    ADDF F.0 120.0 VH_M
    JR endif65
  else65_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf74
    DATA8 flag74
    DIVF F.1 F.2 tmpf74
    CP_EQF 0.0 F.2 flag74
    SELECTF flag74 0.0 tmpf74 F.0

    ADDF F.0 240.0 VH_M
  else65_2:
  endif65:
  else54_2:
  endif54:
  else53_2:
  endif53:
    JR_NEQF VMAX_M 0.0 else76_1
    MOVEF_F 0.0 VS_M
    JR endif76
  else76_1:
    DATAF tmpf77
    DATA8 flag77
    DIVF VMIN_M VMAX_M tmpf77
    CP_EQF 0.0 VMAX_M flag77
    SELECTF flag77 0.0 tmpf77 F.0

    SUBF 1.0 F.0 VS_M
  else76_2:
  endif76:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VSGREEN_M 200.0 else79_1
    MOVEF_F 6.0 VCOLOR_M
    JR endif79
  else79_1:
    JR_LTEQF VS_M 0.4 else79_2
    JR_GTEQF VS_M 0.53 else79_2
    MOVEF_F 1.0 VCOLOR_M
    JR endif79
  else79_2:
    JR_LTEQF VS_M 0.65 else79_3
    JR_GTEQF VS_M 0.8 else79_3
    MOVEF_F 5.0 VCOLOR_M
    JR endif79
  else79_3:
    MOVEF_F 0.0 VCOLOR_M
  else79_4:
  endif79:
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 80.0 2.0 S.0
RETSUB_COL1BLIZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_COL1BLIZ:
SUB_COL4DAL:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C 4.0 1.0 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    MOVEF_F VSRED_M VSRED_M
    MOVEF_F VSGREEN_M VSGREEN_M
    MOVEF_F VSBLUE_M VSBLUE_M
    JR_LTEQF VSRED_M VSGREEN_M else92_1
    JR_LTEQF VSRED_M VSBLUE_M else92_1
    MOVEF_F VSRED_M VMAX_M
    JR endif92
  else92_1:
    JR_LTEQF VSGREEN_M VSRED_M else92_2
    JR_LTEQF VSGREEN_M VSBLUE_M else92_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif92
  else92_2:
    JR_LTEQF VSBLUE_M VSRED_M else92_3
    JR_LTEQF VSBLUE_M VSGREEN_M else92_3
    MOVEF_F VSBLUE_M VMAX_M
  else92_3:
  endif92:
    JR_GTEQF VSRED_M VSGREEN_M else93_1
    JR_GTEQF VSRED_M VSBLUE_M else93_1
    MOVEF_F VSRED_M VMIN_M
    JR endif93
  else93_1:
    JR_GTEQF VSGREEN_M VSRED_M else93_2
    JR_GTEQF VSGREEN_M VSBLUE_M else93_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif93
  else93_2:
    JR_GTEQF VSBLUE_M VSRED_M else93_3
    JR_GTEQF VSBLUE_M VSGREEN_M else93_3
    MOVEF_F VSBLUE_M VMIN_M
  else93_3:
  endif93:
    JR_NEQF VMAX_M VMIN_M else94_1
    MOVEF_F 0.0 VH_M
    JR endif94
  else94_1:
    JR_NEQF VSRED_M VMAX_M else95_1
    JR_LTF VSGREEN_M VSBLUE_M else96_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf100
    DATA8 flag100
    DIVF F.0 F.1 tmpf100
    CP_EQF 0.0 F.1 flag100
    SELECTF flag100 0.0 tmpf100 VH_M

    JR endif96
  else96_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf104
    DATA8 flag104
    DIVF F.1 F.2 tmpf104
    CP_EQF 0.0 F.2 flag104
    SELECTF flag104 0.0 tmpf104 F.0

    ADDF F.0 360.0 VH_M
  else96_2:
  endif96:
    JR endif95
  else95_1:
    JR_NEQF VMAX_M VSGREEN_M else106_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf110
    DATA8 flag110
    DIVF F.1 F.2 tmpf110
    CP_EQF 0.0 F.2 flag110
    SELECTF flag110 0.0 tmpf110 F.0

    ADDF F.0 120.0 VH_M
    JR endif106
  else106_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf115
    DATA8 flag115
    DIVF F.1 F.2 tmpf115
    CP_EQF 0.0 F.2 flag115
    SELECTF flag115 0.0 tmpf115 F.0

    ADDF F.0 240.0 VH_M
  else106_2:
  endif106:
  else95_2:
  endif95:
  else94_2:
  endif94:
    JR_NEQF VMAX_M 0.0 else117_1
    MOVEF_F 0.0 VS_M
    JR endif117
  else117_1:
    DATAF tmpf118
    DATA8 flag118
    DIVF VMIN_M VMAX_M tmpf118
    CP_EQF 0.0 VMAX_M flag118
    SELECTF flag118 0.0 tmpf118 F.0

    SUBF 1.0 F.0 VS_M
  else117_2:
  endif117:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VSGREEN_M 24.0 else120_1
    MOVEF_F 6.0 VCOLOR_M
    JR endif120
  else120_1:
    JR_LTEQF VS_M 0.04 else120_2
    JR_GTEQF VS_M 0.36 else120_2
    MOVEF_F 1.0 VCOLOR_M
    JR endif120
  else120_2:
    JR_LTEQF VS_M 0.36 else120_3
    JR_GTEQF VS_M 0.5 else120_3
    MOVEF_F 5.0 VCOLOR_M
    JR endif120
  else120_3:
    MOVEF_F 0.0 VCOLOR_M
  else120_4:
  endif120:
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 80.0 2.0 S.0
RETSUB_COL4DAL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_COL4DAL:
SUB_COL4BLIZ:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C 4.0 1.0 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    MOVEF_F VSRED_M VSRED_M
    MOVEF_F VSGREEN_M VSGREEN_M
    MOVEF_F VSBLUE_M VSBLUE_M
    JR_LTEQF VSRED_M VSGREEN_M else133_1
    JR_LTEQF VSRED_M VSBLUE_M else133_1
    MOVEF_F VSRED_M VMAX_M
    JR endif133
  else133_1:
    JR_LTEQF VSGREEN_M VSRED_M else133_2
    JR_LTEQF VSGREEN_M VSBLUE_M else133_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif133
  else133_2:
    JR_LTEQF VSBLUE_M VSRED_M else133_3
    JR_LTEQF VSBLUE_M VSGREEN_M else133_3
    MOVEF_F VSBLUE_M VMAX_M
  else133_3:
  endif133:
    JR_GTEQF VSRED_M VSGREEN_M else134_1
    JR_GTEQF VSRED_M VSBLUE_M else134_1
    MOVEF_F VSRED_M VMIN_M
    JR endif134
  else134_1:
    JR_GTEQF VSGREEN_M VSRED_M else134_2
    JR_GTEQF VSGREEN_M VSBLUE_M else134_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif134
  else134_2:
    JR_GTEQF VSBLUE_M VSRED_M else134_3
    JR_GTEQF VSBLUE_M VSGREEN_M else134_3
    MOVEF_F VSBLUE_M VMIN_M
  else134_3:
  endif134:
    JR_NEQF VMAX_M VMIN_M else135_1
    MOVEF_F 0.0 VH_M
    JR endif135
  else135_1:
    JR_NEQF VSRED_M VMAX_M else136_1
    JR_LTF VSGREEN_M VSBLUE_M else137_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf141
    DATA8 flag141
    DIVF F.0 F.1 tmpf141
    CP_EQF 0.0 F.1 flag141
    SELECTF flag141 0.0 tmpf141 VH_M

    JR endif137
  else137_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf145
    DATA8 flag145
    DIVF F.1 F.2 tmpf145
    CP_EQF 0.0 F.2 flag145
    SELECTF flag145 0.0 tmpf145 F.0

    ADDF F.0 360.0 VH_M
  else137_2:
  endif137:
    JR endif136
  else136_1:
    JR_NEQF VMAX_M VSGREEN_M else147_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf151
    DATA8 flag151
    DIVF F.1 F.2 tmpf151
    CP_EQF 0.0 F.2 flag151
    SELECTF flag151 0.0 tmpf151 F.0

    ADDF F.0 120.0 VH_M
    JR endif147
  else147_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf156
    DATA8 flag156
    DIVF F.1 F.2 tmpf156
    CP_EQF 0.0 F.2 flag156
    SELECTF flag156 0.0 tmpf156 F.0

    ADDF F.0 240.0 VH_M
  else147_2:
  endif147:
  else136_2:
  endif136:
  else135_2:
  endif135:
    JR_NEQF VMAX_M 0.0 else158_1
    MOVEF_F 0.0 VS_M
    JR endif158
  else158_1:
    DATAF tmpf159
    DATA8 flag159
    DIVF VMIN_M VMAX_M tmpf159
    CP_EQF 0.0 VMAX_M flag159
    SELECTF flag159 0.0 tmpf159 F.0

    SUBF 1.0 F.0 VS_M
  else158_2:
  endif158:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VSGREEN_M 90.0 else161_1
    MOVEF_F 6.0 VCOLOR_M
    JR endif161
  else161_1:
    JR_LTEQF VS_M 0.35 else161_2
    JR_GTEQF VS_M 0.5 else161_2
    MOVEF_F 1.0 VCOLOR_M
    JR endif161
  else161_2:
    JR_LTEQF VS_M 0.5 else161_3
    JR_GTEQF VS_M 0.8 else161_3
    MOVEF_F 5.0 VCOLOR_M
    JR endif161
  else161_3:
    MOVEF_F 0.0 VCOLOR_M
  else161_4:
  endif161:
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 80.0 2.0 S.0
RETSUB_COL4BLIZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_COL4BLIZ:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
