DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VMAX1_M
DATAF VMIN1_M
DATAF VMAX2_M
DATAF VMIN2_M
DATAF VK1_M
DATAF VV1_M
DATAF VK2_M
DATAF VV2_M
DATAF VK3_M
DATAF VV3_M
DATAF VK21_M
DATAF VV21_M
DATAF VK31_M
DATAF VV31_M
DATAF VRD_M
DATAF VBLACK_M
DATAF VBC1_M
DATAF VWC1_M
DATAF VBC2_M
DATAF VWC2_M
DATAF VRED_M
DATAF VMM_M
DATAF VS1_M
DATAF VS2_M
DATAF VU_M
DATAF VL_M
DATAF VV_M
DATAF VK_M
DATAF VDIS_M
DATAF VT_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VNUM_M
DATAF VR_M
DATAF VG_M
DATAF VB_M
DATAF VRGB_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VS_M
DATAF VCOL_M
ARRAY16 VARR_M 2
DATAF VI_M
DATAF VN_M
DATAF VTIME_M
DATAF VSP_1
DATAF VWHITE_1
DATAF VU_1
DATAF VL_1
DATAF VL_2
DATAF VSP_2
DATAF VDIS_2
DATAF VV_2
DATAF VU_2
DATAF VMM_3
DATAF VSP_3
DATAF VL_3
DATAF VGRAD_4
DATAF VSP_4
DATAF VL_4
DATAF VGRAD_5
DATAF VSP_5
DATAF VL_5
DATAF VGRAD_6
DATAF VL_6
DATAF VGRAD_7
DATAF VL_7
DATAS VMOTOR_8 252
DATAF VSPEED_8
DATAS VMOTOR_9 252
DATAF VSPEED_9
DATAF VN_10
DATAF VI_10
DATAF VL_10
DATAF VN_11
DATAF VI_11
DATAF VL_11
DATAF VN_12
DATAF VI_12
DATAF VL_12
DATAF VN_13
DATAF VI_13
DATAF VL_13
DATAF VN_14
DATAF VI_14
DATAF VL_14
DATAF VN_15
DATAF VI_15
DATAF VL_15
DATAF VN_16
DATAF VI_16
DATAF VN_17
DATAF VI_17
DATA32 RUNCOUNTER_TH_DOWN
DATA32 RUNCOUNTER_TH_UP

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 0.0 VMIN1_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VV1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VV2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VV3_M
    MOVEF_F 0.0 VK21_M
    MOVEF_F 0.0 VV21_M
    MOVEF_F 0.0 VK31_M
    MOVEF_F 0.0 VV31_M
    MOVEF_F 0.0 VRD_M
    MOVEF_F 0.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    MOVEF_F 0.0 VS1_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VU_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VK_M
    MOVEF_F 0.0 VDIS_M
    MOVEF_F 0.0 VT_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VNUM_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VB_M
    MOVEF_F 0.0 VRGB_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VCOL_M
    CALL ARRAYCREATE_FLOAT VARR_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VTIME_M
    MOVEF_F 0.0 VSP_1
    MOVEF_F 0.0 VWHITE_1
    MOVEF_F 0.0 VU_1
    MOVEF_F 0.0 VL_1
    MOVEF_F 0.0 VL_2
    MOVEF_F 0.0 VSP_2
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 0.0 VV_2
    MOVEF_F 0.0 VU_2
    MOVEF_F 0.0 VMM_3
    MOVEF_F 0.0 VSP_3
    MOVEF_F 0.0 VL_3
    MOVEF_F 0.0 VGRAD_4
    MOVEF_F 0.0 VSP_4
    MOVEF_F 0.0 VL_4
    MOVEF_F 0.0 VGRAD_5
    MOVEF_F 0.0 VSP_5
    MOVEF_F 0.0 VL_5
    MOVEF_F 0.0 VGRAD_6
    MOVEF_F 0.0 VL_6
    MOVEF_F 0.0 VGRAD_7
    MOVEF_F 0.0 VL_7
    STRINGS DUPLICATE '' VMOTOR_8
    MOVEF_F 0.0 VSPEED_8
    STRINGS DUPLICATE '' VMOTOR_9
    MOVEF_F 0.0 VSPEED_9
    MOVEF_F 0.0 VN_10
    MOVEF_F 0.0 VI_10
    MOVEF_F 0.0 VL_10
    MOVEF_F 0.0 VN_11
    MOVEF_F 0.0 VI_11
    MOVEF_F 0.0 VL_11
    MOVEF_F 0.0 VN_12
    MOVEF_F 0.0 VI_12
    MOVEF_F 0.0 VL_12
    MOVEF_F 0.0 VN_13
    MOVEF_F 0.0 VI_13
    MOVEF_F 0.0 VL_13
    MOVEF_F 0.0 VN_14
    MOVEF_F 0.0 VI_14
    MOVEF_F 0.0 VL_14
    MOVEF_F 0.0 VN_15
    MOVEF_F 0.0 VI_15
    MOVEF_F 0.0 VL_15
    MOVEF_F 0.0 VN_16
    MOVEF_F 0.0 VI_16
    MOVEF_F 0.0 VN_17
    MOVEF_F 0.0 VI_17
    MOVE32_32 0 RUNCOUNTER_TH_DOWN
    MOVE32_32 0 RUNCOUNTER_TH_UP
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TTH_DOWN
{
    DATA32 tmp
  launch:
    CALL PROGRAM_TH_DOWN 0
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN -1 RUNCOUNTER_TH_DOWN tmp
    JR_GT32 tmp 1 launch
}
vmthread TTH_UP
{
    DATA32 tmp
  launch:
    CALL PROGRAM_TH_UP 1
    CALL GETANDINC32 RUNCOUNTER_TH_UP -1 RUNCOUNTER_TH_UP tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_TH_DOWN
subcall PROGRAM_TH_UP
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1122
    WRITE32 ENDSUB_TH_DOWN:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TH_DOWN
  dispatch1122:
    JR_NEQ32 SUBPROGRAM 1 dispatch1123
    WRITE32 ENDSUB_TH_UP:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TH_UP
  dispatch1123:
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 0.0 VMIN1_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VV1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VV2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VV3_M
    MOVEF_F 0.0 VK21_M
    MOVEF_F 0.0 VV21_M
    MOVEF_F 0.0 VK31_M
    MOVEF_F 0.0 VV31_M
    MOVEF_F 0.0 VRD_M
    MOVEF_F 0.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    MOVEF_F 0.0 VS1_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VU_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VK_M
    MOVEF_F 0.0 VDIS_M
    MOVEF_F 0.0 VT_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VNUM_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VB_M
    MOVEF_F 0.0 VRGB_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VCOL_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VARR_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VTIME_M
    MOVEF_F 0.0 VSP_1
    MOVEF_F 0.0 VWHITE_1
    MOVEF_F 0.0 VU_1
    MOVEF_F 0.0 VL_1
    MOVEF_F 0.0 VL_2
    MOVEF_F 0.0 VSP_2
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 0.0 VV_2
    MOVEF_F 0.0 VU_2
    MOVEF_F 0.0 VMM_3
    MOVEF_F 0.0 VSP_3
    MOVEF_F 0.0 VL_3
    MOVEF_F 0.0 VGRAD_4
    MOVEF_F 0.0 VSP_4
    MOVEF_F 0.0 VL_4
    MOVEF_F 0.0 VGRAD_5
    MOVEF_F 0.0 VSP_5
    MOVEF_F 0.0 VL_5
    MOVEF_F 0.0 VGRAD_6
    MOVEF_F 0.0 VL_6
    MOVEF_F 0.0 VGRAD_7
    MOVEF_F 0.0 VL_7
    STRINGS DUPLICATE '' VMOTOR_8
    MOVEF_F 0.0 VSPEED_8
    STRINGS DUPLICATE '' VMOTOR_9
    MOVEF_F 0.0 VSPEED_9
    MOVEF_F 0.0 VN_10
    MOVEF_F 0.0 VI_10
    MOVEF_F 0.0 VL_10
    MOVEF_F 0.0 VN_11
    MOVEF_F 0.0 VI_11
    MOVEF_F 0.0 VL_11
    MOVEF_F 0.0 VN_12
    MOVEF_F 0.0 VI_12
    MOVEF_F 0.0 VL_12
    MOVEF_F 0.0 VN_13
    MOVEF_F 0.0 VI_13
    MOVEF_F 0.0 VL_13
    MOVEF_F 0.0 VN_14
    MOVEF_F 0.0 VI_14
    MOVEF_F 0.0 VL_14
    MOVEF_F 0.0 VN_15
    MOVEF_F 0.0 VI_15
    MOVEF_F 0.0 VL_15
    MOVEF_F 0.0 VN_16
    MOVEF_F 0.0 VI_16
    MOVEF_F 0.0 VN_17
    MOVEF_F 0.0 VI_17
    TIMER_READ timeMC1
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 2.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    CALL MOTOR.INVERT 'B'
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 100.0 VMIN1_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 100.0 VMIN2_M
    MOVEF_F 0.8 VK1_M
    MOVEF_F 75.0 VV1_M
    MOVEF_F 0.7 VK2_M
    MOVEF_F 55.0 VV2_M
    MOVEF_F 1.1 VK3_M
    MOVEF_F 30.0 VV3_M
    MOVEF_F 1.9 VK21_M
    MOVEF_F 45.0 VV21_M
    MOVEF_F 1.4 VK31_M
    MOVEF_F 20.0 VV31_M
    MOVEF_F 50.0 VRD_M
    MOVEF_F 20.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    DATA32 tmp565
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp565
    JR_NEQ32 0 tmp565 alreadylaunched565
    OBJECT_START TTH_DOWN
  alreadylaunched565:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds567
	MOVEF_32 300.0 milliseconds567
	DATA32 timer567
	TIMER_WAIT milliseconds567 timer567
	TIMER_READY timer567
    MOVEF_F 20.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB568:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 40.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB569:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds571
	MOVEF_32 1000.0 milliseconds571
	DATA32 timer571
	TIMER_WAIT milliseconds571 timer571
	TIMER_READY timer571
    MOVEF_F 175.0 VMM_3
    MOVEF_F 35.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB572:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 85.0 VMM_M
    DATAF tmpf574
    DATA8 flag574
    DIVF VMM_M 194.68 tmpf574
    CP_EQF 0.0 194.68 flag574
    SELECTF flag574 0.0 tmpf574 F.0

    MULF F.0 360.0 VL_M
  while576:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile576
  whilebody576:
    WRITE32 ENDSUB_LINE31:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE31
CALLSUB578:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody576
  endwhile576:
    CALL LCD.CLEAR
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VARR_M
    MOVEF_F 1.0 VI_M
  for582:
    JR_GTF VI_M 4.0 endfor582
  forbody582:
    WRITE32 ENDSUB_HSV:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB583:
    CALL ARRAYSTORE_FLOAT VI_M VRGB_M VARR_M
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf586
    DATA8 flag586
    DIVF VMM_M 194.68 tmpf586
    CP_EQF 0.0 194.68 flag586
    SELECTF flag586 0.0 tmpf586 F.0

    MULF F.0 360.0 VL_M
  while588:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile588
  whilebody588:
    WRITE32 ENDSUB_LINE21:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB590:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody588
  endwhile588:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 4.0 forbody582
  endfor582:
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VI_M
  for593:
    JR_GTF VI_M 3.0 endfor593
  forbody593:
    CALL ARRAYGET_FLOAT VI_M F.0 VARR_M
    JR_LTEQF F.0 VMAX_M else594_1
    CALL ARRAYGET_FLOAT VI_M VMAX_M VARR_M
    MOVEF_F VWC1_M VBC2_M
    ADDF VI_M 1.0 VWC1_M
  else594_1:
  endif594:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 3.0 forbody593
  endfor593:
    STRINGS VALUE_FORMATTED VBC1_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VWC1_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 20.0 70.0 2.0 S.0
    WRITE32 ENDSUB_FRZ:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_FRZ
CALLSUB603:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 70.0 VMM_M
    DATAF tmpf605
    DATA8 flag605
    DIVF VMM_M 194.68 tmpf605
    CP_EQF 0.0 194.68 flag605
    SELECTF flag605 0.0 tmpf605 F.0

    MULF F.0 360.0 VL_M
  while607:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile607
  whilebody607:
    WRITE32 ENDSUB_LINE21:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB609:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody607
  endwhile607:
    MOVEF_F 1.0 VI_M
  for611:
    JR_GTF VI_M 4.0 endfor611
  forbody611:
    WRITE32 ENDSUB_COL_BW:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_COL_BW
CALLSUB612:
    JR_NEQF VCOL_M 1.0 else613_1
    MOVEF_F VI_M VBC2_M
    CALL SPEAKER.TONE 40.0 250.0 200.0
    JR endif613
  else613_1:
    JR_NEQF VCOL_M 6.0 else613_2
    MOVEF_F VI_M VWC2_M
    CALL SPEAKER.TONE 40.0 1200.0 200.0
  else613_2:
  endif613:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf617
    DATA8 flag617
    DIVF VMM_M 194.68 tmpf617
    CP_EQF 0.0 194.68 flag617
    SELECTF flag617 0.0 tmpf617 F.0

    MULF F.0 360.0 VL_M
  while619:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile619
  whilebody619:
    WRITE32 ENDSUB_LINE21:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB621:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody619
  endwhile619:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 4.0 forbody611
  endfor611:
    JR_NEQF VWC1_M 0.0 else624_1
    JR_EQF VBC1_M 1.0 else625_1
    MOVEF_F 1.0 VWC1_M
    JR endif625
  else625_1:
    MOVEF_F 2.0 VWC1_M
  else625_2:
  endif625:
  else624_1:
  endif624:
    JR_NEQF VWC2_M 0.0 else626_1
    JR_EQF VBC2_M 1.0 else627_1
    MOVEF_F 1.0 VWC2_M
    JR endif627
  else627_1:
    MOVEF_F 2.0 VWC2_M
  else627_2:
  endif627:
  else626_1:
  endif626:
    JR_NEQF VBC1_M 0.0 else628_1
    JR_EQF VWC1_M 1.0 else629_1
    MOVEF_F 1.0 VBC1_M
    JR endif629
  else629_1:
    MOVEF_F 2.0 VBC1_M
  else629_2:
  endif629:
  else628_1:
  endif628:
    JR_NEQF VBC2_M 0.0 else630_1
    JR_EQF VWC2_M 1.0 else631_1
    MOVEF_F 1.0 VBC2_M
    JR endif631
  else631_1:
    MOVEF_F 2.0 VBC2_M
  else631_2:
  endif631:
  else630_1:
  endif630:
    STRINGS VALUE_FORMATTED VBC2_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 70.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VWC2_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 70.0 70.0 2.0 S.0
    MOVEF_F 15.0 VV21_M
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf637
    DATA8 flag637
    DIVF VMM_M 194.68 tmpf637
    CP_EQF 0.0 194.68 flag637
    SELECTF flag637 0.0 tmpf637 F.0

    MULF F.0 360.0 VL_M
  while639:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile639
  whilebody639:
    WRITE32 ENDSUB_LINE21:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB641:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody639
  endwhile639:
    MOVEF_F 30.0 VV21_M
    MOVEF_F 150.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB643:
    MOVEF_F 30.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB644:
    MOVEF_F 30.0 VGRAD_4
    MOVEF_F 40.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB645:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 120.0 VMM_M
    DATAF tmpf647
    DATA8 flag647
    DIVF VMM_M 194.68 tmpf647
    CP_EQF 0.0 194.68 flag647
    SELECTF flag647 0.0 tmpf647 F.0

    MULF F.0 360.0 VL_M
  while649:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile649
  whilebody649:
    WRITE32 ENDSUB_LINE3:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB651:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody649
  endwhile649:
    CALL MOTOR.RESETCOUNT 'BC'
  while654:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M or655
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VRD_M endwhile654
  or655:
  whilebody654:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M whilebody654
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VRD_M whilebody654
  endwhile654:
    MOVEF_F 35.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB669:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 50.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB670:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB671:
    MOVEF_F 30.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB672:
    MOVEF_F 150.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB673:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB674:
    WRITE32 ENDSUB_RIGHT:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB675:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 150.0 VMM_M
    DATAF tmpf677
    DATA8 flag677
    DIVF VMM_M 194.68 tmpf677
    CP_EQF 0.0 194.68 flag677
    SELECTF flag677 0.0 tmpf677 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while680:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf684
    DATA8 flag684
    DIVF F.1 2.0 tmpf684
    CP_EQF 0.0 2.0 flag684
    SELECTF flag684 0.0 tmpf684 F.0

    JR_GTEQF F.0 VL_M endwhile680
  whilebody680:
    WRITE32 ENDSUB_LINE3:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB685:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf689
    DATA8 flag689
    DIVF F.1 2.0 tmpf689
    CP_EQF 0.0 2.0 flag689
    SELECTF flag689 0.0 tmpf689 F.0

    JR_LTF F.0 VL_M whilebody680
  endwhile680:
    MOVEF_F 670.0 VMM_M
    DATAF tmpf690
    DATA8 flag690
    DIVF VMM_M 194.68 tmpf690
    CP_EQF 0.0 194.68 flag690
    SELECTF flag690 0.0 tmpf690 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while693:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf697
    DATA8 flag697
    DIVF F.1 2.0 tmpf697
    CP_EQF 0.0 2.0 flag697
    SELECTF flag697 0.0 tmpf697 F.0

    JR_GTEQF F.0 VL_M endwhile693
  whilebody693:
    WRITE32 ENDSUB_LINE1:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE1
CALLSUB698:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf702
    DATA8 flag702
    DIVF F.1 2.0 tmpf702
    CP_EQF 0.0 2.0 flag702
    SELECTF flag702 0.0 tmpf702 F.0

    JR_LTF F.0 VL_M whilebody693
  endwhile693:
    WRITE32 ENDSUB_OBJECT_YN:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_OBJECT_YN
CALLSUB703:
    JR_NEQF VCOL_M 1.0 else704_1
    MOVEF_F 1.0 VRED_M
    CALL SPEAKER.NOTE 50.0 'C#5' 300.0
  else704_1:
  endif704:
  while706:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 30.0 endwhile706
  whilebody706:
    WRITE32 ENDSUB_LINE1:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE1
CALLSUB708:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 30.0 whilebody706
  endwhile706:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 70.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB710:
    MOVEF_F 200.0 VMM_M
    DATAF tmpf711
    DATA8 flag711
    DIVF VMM_M 194.68 tmpf711
    CP_EQF 0.0 194.68 flag711
    SELECTF flag711 0.0 tmpf711 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while714:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf718
    DATA8 flag718
    DIVF F.1 2.0 tmpf718
    CP_EQF 0.0 2.0 flag718
    SELECTF flag718 0.0 tmpf718 F.0

    JR_GTEQF F.0 VL_M endwhile714
  whilebody714:
    WRITE32 ENDSUB_LINE1:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE1
CALLSUB719:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf723
    DATA8 flag723
    DIVF F.1 2.0 tmpf723
    CP_EQF 0.0 2.0 flag723
    SELECTF flag723 0.0 tmpf723 F.0

    JR_LTF F.0 VL_M whilebody714
  endwhile714:
    WRITE32 ENDSUB_OBJECT_YN:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_OBJECT_YN
CALLSUB724:
    JR_NEQF VCOL_M 1.0 else725_1
    MOVEF_F 4.0 VRED_M
    CALL SPEAKER.NOTE 50.0 'C#5' 300.0
  else725_1:
  endif725:
    MOVEF_F 350.0 VMM_M
    DATAF tmpf727
    DATA8 flag727
    DIVF VMM_M 194.68 tmpf727
    CP_EQF 0.0 194.68 flag727
    SELECTF flag727 0.0 tmpf727 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while730:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf734
    DATA8 flag734
    DIVF F.1 2.0 tmpf734
    CP_EQF 0.0 2.0 flag734
    SELECTF flag734 0.0 tmpf734 F.0

    JR_GTEQF F.0 VL_M endwhile730
  whilebody730:
    WRITE32 ENDSUB_LINE1:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE1
CALLSUB735:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf739
    DATA8 flag739
    DIVF F.1 2.0 tmpf739
    CP_EQF 0.0 2.0 flag739
    SELECTF flag739 0.0 tmpf739 F.0

    JR_LTF F.0 VL_M whilebody730
  endwhile730:
  while740:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile740
  whilebody740:
    WRITE32 ENDSUB_LINE2:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB742:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody740
  endwhile740:
    WRITE32 ENDSUB_RIGHT:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB744:
    MOVEF_F 50.0 VMM_M
    DATAF tmpf745
    DATA8 flag745
    DIVF VMM_M 194.68 tmpf745
    CP_EQF 0.0 194.68 flag745
    SELECTF flag745 0.0 tmpf745 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while748:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf752
    DATA8 flag752
    DIVF F.1 2.0 tmpf752
    CP_EQF 0.0 2.0 flag752
    SELECTF flag752 0.0 tmpf752 F.0

    JR_GTEQF F.0 VL_M endwhile748
  whilebody748:
    WRITE32 ENDSUB_LINE3:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB753:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 2.0 tmpf757
    CP_EQF 0.0 2.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    JR_LTF F.0 VL_M whilebody748
  endwhile748:
    MOVEF_F 100.0 VMM_M
    DATAF tmpf758
    DATA8 flag758
    DIVF VMM_M 194.68 tmpf758
    CP_EQF 0.0 194.68 flag758
    SELECTF flag758 0.0 tmpf758 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while761:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf765
    DATA8 flag765
    DIVF F.1 2.0 tmpf765
    CP_EQF 0.0 2.0 flag765
    SELECTF flag765 0.0 tmpf765 F.0

    JR_GTEQF F.0 VL_M endwhile761
  whilebody761:
    WRITE32 ENDSUB_LINE2:CALLSUB766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB766:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf770
    DATA8 flag770
    DIVF F.1 2.0 tmpf770
    CP_EQF 0.0 2.0 flag770
    SELECTF flag770 0.0 tmpf770 F.0

    JR_LTF F.0 VL_M whilebody761
  endwhile761:
  while771:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile771
  whilebody771:
    WRITE32 ENDSUB_LINE3:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB773:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody771
  endwhile771:
    WRITE32 ENDSUB_RIGHT:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB775:
    MOVEF_F 500.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB776:
  while777:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile777
  whilebody777:
    WRITE32 ENDSUB_LINE3:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB779:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody777
  endwhile777:
    MOVEF_F 0.0 VN_M
    JR_NEQF VWC1_M 3.0 else781_1
    MOVEF_F 1.0 VN_14
    MOVEF_F VN_M VI_14
    WRITE32 ENDSUB_W3_2:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W3_2
CALLSUB782:
    ADDF VN_M 1.0 VN_M
  else781_1:
  endif781:
    JR_NEQF VBC1_M 3.0 else784_1
    MOVEF_F 1.0 VN_15
    MOVEF_F VN_M VI_15
    WRITE32 ENDSUB_B3_2:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B3_2
CALLSUB785:
    ADDF VN_M 1.0 VN_M
  else784_1:
  endif784:
    JR_NEQF VBC1_M 2.0 else787_1
    MOVEF_F 1.0 VN_13
    MOVEF_F VN_M VI_13
    WRITE32 ENDSUB_B2_2:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B2_2
CALLSUB788:
    ADDF VN_M 1.0 VN_M
  else787_1:
  endif787:
    JR_NEQF VWC1_M 2.0 else790_1
    MOVEF_F 1.0 VN_12
    MOVEF_F VN_M VI_12
    WRITE32 ENDSUB_W2_2:CALLSUB791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W2_2
CALLSUB791:
    ADDF VN_M 1.0 VN_M
  else790_1:
  endif790:
    JR_NEQF VWC1_M 4.0 else793_1
    MOVEF_F 1.0 VN_16
    MOVEF_F VN_M VI_16
    WRITE32 ENDSUB_W4_2:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W4_2
CALLSUB794:
    ADDF VN_M 1.0 VN_M
  else793_1:
  endif793:
    JR_NEQF VBC1_M 4.0 else796_1
    MOVEF_F 1.0 VN_17
    MOVEF_F VN_M VI_17
    WRITE32 ENDSUB_B4_2:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B4_2
CALLSUB797:
    ADDF VN_M 1.0 VN_M
  else796_1:
  endif796:
    JR_NEQF VWC1_M 1.0 else799_1
    MOVEF_F 1.0 VN_10
    MOVEF_F VN_M VI_10
    WRITE32 ENDSUB_W1_2:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W1_2
CALLSUB800:
    ADDF VN_M 1.0 VN_M
  else799_1:
  endif799:
    JR_NEQF VBC1_M 1.0 else802_1
    MOVEF_F 1.0 VN_11
    MOVEF_F VN_M VI_11
    WRITE32 ENDSUB_B1_2:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B1_2
CALLSUB803:
    ADDF VN_M 1.0 VN_M
  else802_1:
  endif802:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf806
    DATA8 flag806
    DIVF VMM_M 194.68 tmpf806
    CP_EQF 0.0 194.68 flag806
    SELECTF flag806 0.0 tmpf806 F.0

    MULF F.0 360.0 VL_M
  while808:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile808
  whilebody808:
    WRITE32 ENDSUB_LINE3:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB810:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody808
  endwhile808:
  while812:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile812
  whilebody812:
    WRITE32 ENDSUB_LINE2:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB814:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody812
  endwhile812:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB816 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB816:
    MOVEF_F 50.0 VMM_3
    MOVEF_F 60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB817:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB818:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds820
	MOVEF_32 1500.0 milliseconds820
	DATA32 timer820
	TIMER_WAIT milliseconds820 timer820
	TIMER_READY timer820
    MOVEF_F 80.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB821:
    DATA32 milliseconds822
	MOVEF_32 100.0 milliseconds822
	DATA32 timer822
	TIMER_WAIT milliseconds822 timer822
	TIMER_READY timer822
    MOVEF_F 95.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB823:
    DATA32 milliseconds824
	MOVEF_32 100.0 milliseconds824
	DATA32 timer824
	TIMER_WAIT milliseconds824 timer824
	TIMER_READY timer824
    MOVEF_F 50.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB825:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB826:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB827:
    CALL MOTOR.START 'AD' 60.0
    DATA32 milliseconds829
	MOVEF_32 300.0 milliseconds829
	DATA32 timer829
	TIMER_WAIT milliseconds829 timer829
	TIMER_READY timer829
    MOVEF_F 70.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB830:
    CALL MOTOR.STOP 'AD' 'false'
    CALL SPEAKER.TONE 40.0 700.0 200.0
    MOVEF_F 80.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB833:
    MOVEF_F 80.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB834:
    MOVEF_F 70.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB835:
    DATA32 tmp836
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp836
    JR_NEQ32 0 tmp836 alreadylaunched836
    OBJECT_START TTH_DOWN
  alreadylaunched836:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB837:
    WRITE32 ENDSUB_LEFT:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB838:
    DATA32 tmp839
    CALL GETANDINC32 RUNCOUNTER_TH_UP 1  RUNCOUNTER_TH_UP tmp839
    JR_NEQ32 0 tmp839 alreadylaunched839
    OBJECT_START TTH_UP
  alreadylaunched839:
    MOVEF_F 500.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB840:
  while841:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile841
  whilebody841:
    WRITE32 ENDSUB_LINE3:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB843:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody841
  endwhile841:
    CALL MOTOR.STOP 'BC' 'true'
    JR_NEQF VRED_M 1.0 else846_1
    MOVEF_F 115.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB847:
    DATA32 tmp848
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp848
    JR_NEQ32 0 tmp848 alreadylaunched848
    OBJECT_START TTH_DOWN
  alreadylaunched848:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F 30.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB849:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB850:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB851:
    WRITE32 ENDSUB_RIGHT:CALLSUB852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB852:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf854
    DATA8 flag854
    DIVF VMM_M 194.68 tmpf854
    CP_EQF 0.0 194.68 flag854
    SELECTF flag854 0.0 tmpf854 F.0

    MULF F.0 360.0 VL_M
  while856:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile856
  whilebody856:
    WRITE32 ENDSUB_LINE3:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB858:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody856
  endwhile856:
  while860:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 30.0 endwhile860
  whilebody860:
    WRITE32 ENDSUB_LINE2:CALLSUB862 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB862:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 30.0 whilebody860
  endwhile860:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB864:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 300.0 VMM_M
    DATAF tmpf866
    DATA8 flag866
    DIVF VMM_M 194.68 tmpf866
    CP_EQF 0.0 194.68 flag866
    SELECTF flag866 0.0 tmpf866 F.0

    MULF F.0 360.0 VL_M
  while868:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile868
  whilebody868:
    WRITE32 ENDSUB_LINE2:CALLSUB870 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB870:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody868
  endwhile868:
    JR endif846
  else846_1:
    JR_NEQF VRED_M 4.0 else846_2
    MOVEF_F 110.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB872:
    DATA32 tmp873
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp873
    JR_NEQ32 0 tmp873 alreadylaunched873
    OBJECT_START TTH_DOWN
  alreadylaunched873:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB874 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB874:
    MOVEF_F 115.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB875:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB876:
    MOVEF_F 70.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB877:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB878:
    WRITE32 ENDSUB_RIGHT:CALLSUB879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB879:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf881
    DATA8 flag881
    DIVF VMM_M 194.68 tmpf881
    CP_EQF 0.0 194.68 flag881
    SELECTF flag881 0.0 tmpf881 F.0

    MULF F.0 360.0 VL_M
  while883:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile883
  whilebody883:
    WRITE32 ENDSUB_LINE3:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB885:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody883
  endwhile883:
    JR endif846
  else846_2:
    MOVEF_F 150.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB887:
    MOVEF_F 93.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB888:
    MOVEF_F 250.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB889:
    CALL MOTOR.START 'BC' 30.0
    DATA32 milliseconds891
	MOVEF_32 700.0 milliseconds891
	DATA32 timer891
	TIMER_WAIT milliseconds891 timer891
	TIMER_READY timer891
    MOVEF_F -40.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB892:
    MOVEF_F 30.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB893:
    DATA32 tmp894
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp894
    JR_NEQ32 0 tmp894 alreadylaunched894
    OBJECT_START TTH_DOWN
  alreadylaunched894:
    WRITE32 ENDSUB_OBJECT_YN:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_OBJECT_YN
CALLSUB895:
    JR_NEQF VCOL_M 1.0 else896_1
    MOVEF_F 2.0 VRED_M
    CALL SPEAKER.TONE 40.0 600.0 200.0
    MOVEF_F 95.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB898:
    MOVEF_F 100.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB899:
    MOVEF_F 10.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB900:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB901:
    MOVEF_F 520.0 VMM_3
    MOVEF_F -70.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB902:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB903:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB904:
    WRITE32 ENDSUB_RIGHT:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB905:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf907
    DATA8 flag907
    DIVF VMM_M 194.68 tmpf907
    CP_EQF 0.0 194.68 flag907
    SELECTF flag907 0.0 tmpf907 F.0

    MULF F.0 360.0 VL_M
  while909:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile909
  whilebody909:
    WRITE32 ENDSUB_LINE3:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB911:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody909
  endwhile909:
    JR endif896
  else896_1:
    MOVEF_F 3.0 VRED_M
    MOVEF_F 5.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB913:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB914:
    MOVEF_F 180.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB915:
    MOVEF_F 140.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB916:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 20.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB917:
    MOVEF_F 170.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB918:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F 60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB919:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB920:
    WRITE32 ENDSUB_LEFT:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB921:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf923
    DATA8 flag923
    DIVF VMM_M 194.68 tmpf923
    CP_EQF 0.0 194.68 flag923
    SELECTF flag923 0.0 tmpf923 F.0

    MULF F.0 360.0 VL_M
  while925:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile925
  whilebody925:
    WRITE32 ENDSUB_LINE3:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB927:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody925
  endwhile925:
  else896_2:
  endif896:
  else846_3:
  endif846:
    MOVEF_F 200.0 VMM_M
    DATAF tmpf929
    DATA8 flag929
    DIVF VMM_M 194.68 tmpf929
    CP_EQF 0.0 194.68 flag929
    SELECTF flag929 0.0 tmpf929 F.0

    MULF F.0 360.0 VL_M
  while931:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile931
  whilebody931:
    WRITE32 ENDSUB_LINE2:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB933:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody931
  endwhile931:
  while935:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile935
  whilebody935:
    WRITE32 ENDSUB_LINE2:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB937:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody935
  endwhile935:
    WRITE32 ENDSUB_RIGHT:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB939:
    MOVEF_F 80.0 VMM_M
    DATAF tmpf940
    DATA8 flag940
    DIVF VMM_M 194.68 tmpf940
    CP_EQF 0.0 194.68 flag940
    SELECTF flag940 0.0 tmpf940 F.0

    MULF F.0 360.0 VL_M
  while942:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile942
  whilebody942:
    WRITE32 ENDSUB_LINE3:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB944:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody942
  endwhile942:
  while946:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile946
  whilebody946:
    WRITE32 ENDSUB_LINE2:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB948:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody946
  endwhile946:
    JR_EQF VRED_M 1.0 or951
    JR_NEQF VRED_M 3.0 else950_1
  or951:
    MOVEF_F 310.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB952:
    STRINGS DUPLICATE 'AD' VMOTOR_9
    MOVEF_F 40.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB953:
    MOVEF_F 50.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB954:
    MOVEF_F 220.0 VMM_3
    MOVEF_F -50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB955:
    JR endif950
  else950_1:
    MOVEF_F 130.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB956:
    MOVEF_F 45.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB957:
    STRINGS DUPLICATE 'AD' VMOTOR_9
    MOVEF_F 40.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB958:
    MOVEF_F 70.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB959:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB960:
    MOVEF_F 30.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB961:
    MOVEF_F 170.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB962:
    MOVEF_F 220.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB963:
  else950_2:
  endif950:
    DATA32 tmp964
    CALL GETANDINC32 RUNCOUNTER_TH_UP 1  RUNCOUNTER_TH_UP tmp964
    JR_NEQ32 0 tmp964 alreadylaunched964
    OBJECT_START TTH_UP
  alreadylaunched964:
    MOVEF_F -40.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB965:
    MOVEF_F 35.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB966:
    MOVEF_F 60.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB967:
    CALL MOTOR.STARTPOWER 'B' 30.0
    CALL MOTOR.STARTPOWER 'C' -30.0
  while970:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 30.0 endwhile970
  whilebody970:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 30.0 whilebody970
  endwhile970:
  while973:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile973
  whilebody973:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody973
  endwhile973:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 20.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB977:
    MOVEF_F 150.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB978:
  while979:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile979
  whilebody979:
    WRITE32 ENDSUB_LINE2:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB981:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody979
  endwhile979:
    MOVEF_F 50.0 VGRAD_4
    MOVEF_F 45.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB983:
    MOVEF_F 50.0 VGRAD_5
    MOVEF_F 45.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB984:
    MOVEF_F 600.0 VMM_3
    MOVEF_F 80.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB985:
    MOVEF_F 75.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB986:
    MOVEF_F 95.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB987:
    MOVEF_F 50.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB988:
    MOVEF_F 20.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB989:
    MOVEF_F 25.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB990:
    CALL MOTOR.START 'AD' 40.0
    DATA32 milliseconds992
	MOVEF_32 300.0 milliseconds992
	DATA32 timer992
	TIMER_WAIT milliseconds992 timer992
	TIMER_READY timer992
    MOVEF_F 70.0 VMM_3
    MOVEF_F -50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB993:
    CALL MOTOR.STOP 'AD' 'false'
    CALL SPEAKER.TONE 40.0 700.0 200.0
    MOVEF_F 150.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB996:
    DATA32 milliseconds997
	MOVEF_32 100.0 milliseconds997
	DATA32 timer997
	TIMER_WAIT milliseconds997 timer997
	TIMER_READY timer997
    DATA32 tmp998
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp998
    JR_NEQ32 0 tmp998 alreadylaunched998
    OBJECT_START TTH_DOWN
  alreadylaunched998:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB999:
    MOVEF_F 300.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1000:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB1001:
    WRITE32 ENDSUB_RIGHT:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB1002:
    MOVEF_F 100.0 VMM_M
    DATAF tmpf1003
    DATA8 flag1003
    DIVF VMM_M 194.68 tmpf1003
    CP_EQF 0.0 194.68 flag1003
    SELECTF flag1003 0.0 tmpf1003 F.0

    MULF F.0 360.0 VL_M
  while1005:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile1005
  whilebody1005:
    WRITE32 ENDSUB_LINE3:CALLSUB1007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1007:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody1005
  endwhile1005:
  while1009:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1009
  whilebody1009:
    WRITE32 ENDSUB_LINE2:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1011:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1009
  endwhile1009:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1013:
    MOVEF_F 150.0 VMM_M
    DATAF tmpf1014
    DATA8 flag1014
    DIVF VMM_M 194.68 tmpf1014
    CP_EQF 0.0 194.68 flag1014
    SELECTF flag1014 0.0 tmpf1014 F.0

    MULF F.0 360.0 VL_M
  while1016:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile1016
  whilebody1016:
    WRITE32 ENDSUB_LINE2:CALLSUB1018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1018:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody1016
  endwhile1016:
    CALL MOTOR.RESETCOUNT 'BC'
  while1021:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M or1022
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VRD_M endwhile1021
  or1022:
  whilebody1021:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M whilebody1021
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VRD_M whilebody1021
  endwhile1021:
    MOVEF_F 100.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1036:
    MOVEF_F 10.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1037:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 50.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB1038:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1039:
    MOVEF_F 30.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB1040:
    MOVEF_F 150.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1041:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB1042:
    WRITE32 ENDSUB_RIGHT:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB1043:
    MOVEF_F 900.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB1044:
  while1045:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1045
  whilebody1045:
    WRITE32 ENDSUB_LINE3:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1047:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1045
  endwhile1045:
    MOVEF_F 0.0 VN_M
    JR_NEQF VWC2_M 3.0 else1049_1
    MOVEF_F 2.0 VN_14
    MOVEF_F VN_M VI_14
    WRITE32 ENDSUB_W3_2:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W3_2
CALLSUB1050:
    ADDF VN_M 1.0 VN_M
  else1049_1:
  endif1049:
    JR_NEQF VBC2_M 3.0 else1052_1
    MOVEF_F 2.0 VN_15
    MOVEF_F VN_M VI_15
    WRITE32 ENDSUB_B3_2:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B3_2
CALLSUB1053:
    ADDF VN_M 1.0 VN_M
  else1052_1:
  endif1052:
    JR_NEQF VBC2_M 2.0 else1055_1
    MOVEF_F 2.0 VN_13
    MOVEF_F VN_M VI_13
    WRITE32 ENDSUB_B2_2:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B2_2
CALLSUB1056:
    ADDF VN_M 1.0 VN_M
  else1055_1:
  endif1055:
    JR_NEQF VWC2_M 2.0 else1058_1
    MOVEF_F 2.0 VN_12
    MOVEF_F VN_M VI_12
    WRITE32 ENDSUB_W2_2:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W2_2
CALLSUB1059:
    ADDF VN_M 1.0 VN_M
  else1058_1:
  endif1058:
    JR_NEQF VWC2_M 4.0 else1061_1
    MOVEF_F 2.0 VN_16
    MOVEF_F VN_M VI_16
    WRITE32 ENDSUB_W4_2:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W4_2
CALLSUB1062:
    ADDF VN_M 1.0 VN_M
  else1061_1:
  endif1061:
    JR_NEQF VBC2_M 4.0 else1064_1
    MOVEF_F 2.0 VN_17
    MOVEF_F VN_M VI_17
    WRITE32 ENDSUB_B4_2:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B4_2
CALLSUB1065:
    ADDF VN_M 1.0 VN_M
  else1064_1:
  endif1064:
    JR_NEQF VWC2_M 1.0 else1067_1
    MOVEF_F 2.0 VN_10
    MOVEF_F VN_M VI_10
    WRITE32 ENDSUB_W1_2:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W1_2
CALLSUB1068:
    ADDF VN_M 1.0 VN_M
  else1067_1:
  endif1067:
    JR_NEQF VBC2_M 1.0 else1070_1
    MOVEF_F 2.0 VN_11
    MOVEF_F VN_M VI_11
    WRITE32 ENDSUB_B1_2:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B1_2
CALLSUB1071:
    ADDF VN_M 1.0 VN_M
  else1070_1:
  endif1070:
    MOVEF_F 650.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB1073:
  while1074:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1074
  whilebody1074:
    WRITE32 ENDSUB_LINE2:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1076:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1074
  endwhile1074:
    WRITE32 ENDSUB_LEFT:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB1078:
    MOVEF_F 50.0 VMM_M
    DATAF tmpf1079
    DATA8 flag1079
    DIVF VMM_M 194.68 tmpf1079
    CP_EQF 0.0 194.68 flag1079
    SELECTF flag1079 0.0 tmpf1079 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while1082:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1086
    DATA8 flag1086
    DIVF F.1 2.0 tmpf1086
    CP_EQF 0.0 2.0 flag1086
    SELECTF flag1086 0.0 tmpf1086 F.0

    JR_GTEQF F.0 VL_M endwhile1082
  whilebody1082:
    WRITE32 ENDSUB_LINE3:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1087:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1091
    DATA8 flag1091
    DIVF F.1 2.0 tmpf1091
    CP_EQF 0.0 2.0 flag1091
    SELECTF flag1091 0.0 tmpf1091 F.0

    JR_LTF F.0 VL_M whilebody1082
  endwhile1082:
    MOVEF_F 300.0 VMM_M
    DATAF tmpf1092
    DATA8 flag1092
    DIVF VMM_M 194.68 tmpf1092
    CP_EQF 0.0 194.68 flag1092
    SELECTF flag1092 0.0 tmpf1092 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while1095:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1099
    DATA8 flag1099
    DIVF F.1 2.0 tmpf1099
    CP_EQF 0.0 2.0 flag1099
    SELECTF flag1099 0.0 tmpf1099 F.0

    JR_GTEQF F.0 VL_M endwhile1095
  whilebody1095:
    WRITE32 ENDSUB_LINE2:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1100:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1104
    DATA8 flag1104
    DIVF F.1 2.0 tmpf1104
    CP_EQF 0.0 2.0 flag1104
    SELECTF flag1104 0.0 tmpf1104 F.0

    JR_LTF F.0 VL_M whilebody1095
  endwhile1095:
  while1105:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 or1106
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile1105
  or1106:
  whilebody1105:
    WRITE32 ENDSUB_LINE2:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1109:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody1105
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody1105
  endwhile1105:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1112:
    MOVEF_F 45.0 VGRAD_5
    MOVEF_F 50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB1113:
    MOVEF_F 80.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1114:
    CALL MOTOR.STOP 'AD' 'true'
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp VTIME_M
    CALL LCD.CLEAR
    DATAF tmpf1118
    DATA8 flag1118
    DIVF VTIME_M 1000.0 tmpf1118
    CP_EQF 0.0 1000.0 flag1118
    SELECTF flag1118 0.0 tmpf1118 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    WRITE32 ENDSUB_FRZ:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_FRZ
CALLSUB1121:
ENDTHREAD:
    RETURN
SUB_SEN1:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN1_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX1_M VMIN1_M F.1
    DATAF tmpf12
    DATA8 flag12
    DIVF F.0 F.1 tmpf12
    CP_EQF 0.0 F.1 flag12
    SELECTF flag12 0.0 tmpf12 VS1_M

RETSUB_SEN1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SEN1:
SUB_SEN2:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 F.1 tmpf17
    CP_EQF 0.0 F.1 flag17
    SELECTF flag17 0.0 tmpf17 VS2_M

RETSUB_SEN2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SEN2:
SUB_LINE1:
    WRITE32 ENDSUB_SEN1:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB18:
    WRITE32 ENDSUB_SEN2:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB19:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK1_M F.1
    ADDF VV1_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK1_M F.1
    SUBF VV1_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE1:
SUB_LINE2:
    WRITE32 ENDSUB_SEN1:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB27:
    WRITE32 ENDSUB_SEN2:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB28:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK2_M F.1
    ADDF VV2_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK2_M F.1
    SUBF VV2_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE2:
SUB_LINE3:
    WRITE32 ENDSUB_SEN1:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB36:
    WRITE32 ENDSUB_SEN2:CALLSUB37 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB37:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK3_M F.1
    ADDF VV3_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK3_M F.1
    SUBF VV3_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE3:
SUB_LINE21:
    WRITE32 ENDSUB_SEN2:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB45:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 30.0 VU_M
    MULF VU_M VK21_M F.1
    ADDF VV21_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VU_M VK21_M F.1
    SUBF VV21_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_LINE21:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE21:
SUB_LINE31:
    WRITE32 ENDSUB_SEN2:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB54:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 30.0 VU_M
    MULF VU_M VK31_M F.1
    ADDF VV31_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VU_M VK31_M F.1
    SUBF VV31_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_LINE31:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE31:
SUB_LINE_TOMM:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 184.918841175262 VL_M
  while64:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile64
  whilebody64:
    WRITE32 ENDSUB_LINE3:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB66:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody64
  endwhile64:
    MOVEF_F 20.0 VV_M
    MOVEF_F 0.55 VK_M
    SUBF VMM_M 100.0 F.1
    DATAF tmpf69
    DATA8 flag69
    DIVF F.1 194.68 tmpf69
    CP_EQF 0.0 194.68 flag69
    SELECTF flag69 0.0 tmpf69 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while72:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf76
    DATA8 flag76
    DIVF F.1 2.0 tmpf76
    CP_EQF 0.0 2.0 flag76
    SELECTF flag76 0.0 tmpf76 F.0

    JR_GTEQF F.0 VL_M endwhile72
  whilebody72:
    WRITE32 ENDSUB_SEN1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB77:
    WRITE32 ENDSUB_SEN2:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB78:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK_M F.1
    ADDF VV_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK_M F.1
    SUBF VV_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.1
    CALL MOTOR.GETCOUNT 'C' F.2
    ADDF F.1 F.2 F.0
    DATAF tmpf89
    DATA8 flag89
    DIVF F.0 2.0 tmpf89
    CP_EQF 0.0 2.0 flag89
    SELECTF flag89 0.0 tmpf89 VDIS_M

    DATAF tmpf90
    DATA8 flag90
    DIVF VDIS_M 360.0 tmpf90
    CP_EQF 0.0 360.0 flag90
    SELECTF flag90 0.0 tmpf90 F.0

    MULF F.0 194.68 VDIS_M
    JR_LTEQF VMM_M 1150.0 else92_1
    MOVEF_F 0.8 VT_M
    JR endif92
  else92_1:
    JR_LTEQF VMM_M 350.0 else92_2
    MOVEF_F 0.6 VT_M
    JR endif92
  else92_2:
    MOVEF_F 0.4 VT_M
    MOVEF_F 40.0 VV_M
  else92_3:
  endif92:
    MULF VMM_M 0.4 F.0
    JR_GTEQF VDIS_M F.0 else93_1
    JR_GTEQF VV_M 95.0 else93_1
    ADDF VV_M 0.6 VV_M
    JR endif93
  else93_1:
    MULF VMM_M VT_M F.0
    JR_LTEQF VDIS_M F.0 else93_2
    JR_LTEQF VV_M 15.0 else93_2
    SUBF VV_M 0.6 VV_M
  else93_2:
  endif93:
    JR_GTEQF VV_M 35.0 else98_1
    MOVEF_F 0.9 VK_M
    JR endif98
  else98_1:
    JR_GTEQF VV_M 55.0 else98_2
    MOVEF_F 0.7 VK_M
    JR endif98
  else98_2:
    JR_GTEQF VV_M 100.0 else98_3
    MOVEF_F 0.75 VK_M
  else98_3:
  endif98:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf102
    DATA8 flag102
    DIVF F.1 2.0 tmpf102
    CP_EQF 0.0 2.0 flag102
    SELECTF flag102 0.0 tmpf102 F.0

    JR_LTF F.0 VL_M whilebody72
  endwhile72:
RETSUB_LINE_TOMM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE_TOMM:
SUB_LEFT:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB103:
    MOVEF_F 60.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB104:
    CALL MOTOR.STARTPOWER 'B' -30.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while107:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 30.0 endwhile107
  whilebody107:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 30.0 whilebody107
  endwhile107:
  while110:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile110
  whilebody110:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody110
  endwhile110:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 10.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB114:
RETSUB_LEFT:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT:
SUB_RIGHT:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB115:
    MOVEF_F 60.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB116:
    CALL MOTOR.STARTPOWER 'B' 30.0
    CALL MOTOR.STARTPOWER 'C' -30.0
  while119:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 30.0 endwhile119
  whilebody119:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 30.0 whilebody119
  endwhile119:
  while122:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile122
  whilebody122:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody122
  endwhile122:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 10.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB126:
RETSUB_RIGHT:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT:
SUB_AROUND:
    MOVEF_F 140.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB127:
    CALL MOTOR.STARTPOWER 'B' -40.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 30.0 endwhile130
  whilebody130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 30.0 whilebody130
  endwhile130:
  while133:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile133
  whilebody133:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody133
  endwhile133:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 10.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB137:
RETSUB_AROUND:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_AROUND:
SUB_TOLINE_1:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 0.0 VWHITE_1
    DATA8 layer139
	DATA8 no139
	DATA8 mode8139
	
	MOVEF_8 2.0 no139
	SUB8 no139 1 no139
	DIV8 no139 4 layer139
	MATH MOD8 no139 4 no139

	MOVEF_8 2.0 mode8139
	
	INPUT_DEVICE READY_RAW layer139 no139 0 mode8139 0
    DATA8 layer140
	DATA8 no140
	DATA8 mode8140
	
	MOVEF_8 3.0 no140
	SUB8 no140 1 no140
	DIV8 no140 4 layer140
	MATH MOD8 no140 4 no140

	MOVEF_8 2.0 mode8140
	
	INPUT_DEVICE READY_RAW layer140 no140 0 mode8140 0
  while141:
    JR_EQF VWHITE_1 1.0 endwhile141
  whilebody141:
  while142:
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_EQF F.0 6.0 endwhile142
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_EQF F.0 6.0 endwhile142
  whilebody142:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_EQF F.0 6.0 and154
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 whilebody142
  and154:
  endwhile142:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 9.2459420587631 VL_1
  while158:
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VL_1 endwhile158
  whilebody158:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 VL_1 whilebody158
  endwhile158:
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_NEQF F.0 6.0 else172_1
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 else172_1
    MOVEF_F 1.0 VWHITE_1
  else172_1:
  endif172:
    JR_NEQF VWHITE_1 1.0 whilebody141
  endwhile141:
    DATA8 layer175
	DATA8 no175
	DATA8 mode8175
	
	MOVEF_8 2.0 no175
	SUB8 no175 1 no175
	DIV8 no175 4 layer175
	MATH MOD8 no175 4 no175

	MOVEF_8 0.0 mode8175
	
	INPUT_DEVICE READY_RAW layer175 no175 0 mode8175 0
    DATA8 layer176
	DATA8 no176
	DATA8 mode8176
	
	MOVEF_8 3.0 no176
	SUB8 no176 1 no176
	DIV8 no176 4 layer176
	MATH MOD8 no176 4 no176

	MOVEF_8 0.0 mode8176
	
	INPUT_DEVICE READY_RAW layer176 no176 0 mode8176 0
  while177:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile177
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile177
  whilebody177:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 and189
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody177
  and189:
  endwhile177:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_TOLINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOLINE_1:
SUB_MOVE_2:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 15.0 VV_2
    JR_GTEQF VSP_2 0.0 else194_1
    MULF VV_2 -1.0 VV_2
  else194_1:
  endif194:
  while196:
    JR_GTF VDIS_2 VL_2 endwhile196
  whilebody196:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_2
    MULF VU_2 0.8 F.1
    ADDF VV_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_2 0.8 F.1
    SUBF VV_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf209
    DATA8 flag209
    DIVF F.1 2.0 tmpf209
    CP_EQF 0.0 2.0 flag209
    SELECTF flag209 0.0 tmpf209 F.0

    MATH ABS F.0 VDIS_2
    MATH ABS VV_2 F.0
    MATH ABS VSP_2 F.1
    JR_GTEQF F.0 F.1 else211_1
    JR_LTEQF VSP_2 0.0 else214_1
    ADDF VV_2 0.2 VV_2
    JR endif214
  else214_1:
    SUBF VV_2 0.2 VV_2
  else214_2:
  endif214:
  else211_1:
  endif211:
    JR_LTEQF VDIS_2 VL_2 whilebody196
  endwhile196:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_MOVE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_MOVE_2:
SUB_TOMM_2:
    DATAF tmpf218
    DATA8 flag218
    DIVF VMM_3 194.68 tmpf218
    CP_EQF 0.0 194.68 flag218
    SELECTF flag218 0.0 tmpf218 F.0

    MULF F.0 360.0 VL_3
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F VL_3 VL_2
    MOVEF_F VSP_3 VSP_2
    WRITE32 ENDSUB_MOVE_2:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_MOVE_2
CALLSUB221:
    MOVEF_F 0.0 VSP_3
RETSUB_TOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOMM_2:
SUB_LEFT1_2:
    MULF 1092.72 VGRAD_4 F.0
    DATAF tmpf223
    DATA8 flag223
    DIVF F.0 360.0 tmpf223
    CP_EQF 0.0 360.0 flag223
    SELECTF flag223 0.0 tmpf223 VL_4

    DATAF tmpf224
    DATA8 flag224
    DIVF VL_4 200.96 tmpf224
    CP_EQF 0.0 200.96 flag224
    SELECTF flag224 0.0 tmpf224 F.0

    MULF F.0 360.0 VL_4
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'C' VSP_4
  while228:
    CALL MOTOR.GETCOUNT 'C' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 VL_4 endwhile228
  whilebody228:
    CALL MOTOR.STOP 'B' 'true'
    CALL MOTOR.GETCOUNT 'C' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 VL_4 whilebody228
  endwhile228:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_LEFT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT1_2:
SUB_RIGHT1_2:
    MULF 1092.72 VGRAD_5 F.0
    DATAF tmpf236
    DATA8 flag236
    DIVF F.0 360.0 tmpf236
    CP_EQF 0.0 360.0 flag236
    SELECTF flag236 0.0 tmpf236 VL_5

    DATAF tmpf237
    DATA8 flag237
    DIVF VL_5 200.96 tmpf237
    CP_EQF 0.0 200.96 flag237
    SELECTF flag237 0.0 tmpf237 F.0

    MULF F.0 360.0 VL_5
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' VSP_5
  while241:
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 VL_5 endwhile241
  whilebody241:
    CALL MOTOR.STOP 'C' 'true'
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 VL_5 whilebody241
  endwhile241:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_RIGHT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT1_2:
SUB_LEFT2_1:
    MULF 1092.72 VGRAD_6 F.0
    DATAF tmpf249
    DATA8 flag249
    DIVF F.0 360.0 tmpf249
    CP_EQF 0.0 360.0 flag249
    SELECTF flag249 0.0 tmpf249 VL_6

    DATAF tmpf250
    DATA8 flag250
    DIVF VL_6 200.96 tmpf250
    CP_EQF 0.0 200.96 flag250
    SELECTF flag250 0.0 tmpf250 F.0

    MULF F.0 360.0 VL_6
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' -30.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while255:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf261
    DATA8 flag261
    DIVF F.1 2.0 tmpf261
    CP_EQF 0.0 2.0 flag261
    SELECTF flag261 0.0 tmpf261 F.0

    DATAF tmpf262
    DATA8 flag262
    DIVF VL_6 2.0 tmpf262
    CP_EQF 0.0 2.0 flag262
    SELECTF flag262 0.0 tmpf262 F.1

    JR_GTF F.0 F.1 endwhile255
  whilebody255:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf268
    DATA8 flag268
    DIVF F.1 2.0 tmpf268
    CP_EQF 0.0 2.0 flag268
    SELECTF flag268 0.0 tmpf268 F.0

    DATAF tmpf269
    DATA8 flag269
    DIVF VL_6 2.0 tmpf269
    CP_EQF 0.0 2.0 flag269
    SELECTF flag269 0.0 tmpf269 F.1

    JR_LTEQF F.0 F.1 whilebody255
  endwhile255:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_LEFT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT2_1:
SUB_RIGHT2_1:
    MULF 1092.72 VGRAD_7 F.0
    DATAF tmpf272
    DATA8 flag272
    DIVF F.0 360.0 tmpf272
    CP_EQF 0.0 360.0 flag272
    SELECTF flag272 0.0 tmpf272 VL_7

    DATAF tmpf273
    DATA8 flag273
    DIVF VL_7 200.96 tmpf273
    CP_EQF 0.0 200.96 flag273
    SELECTF flag273 0.0 tmpf273 F.0

    MULF F.0 360.0 VL_7
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' 40.0
    CALL MOTOR.STARTPOWER 'C' -40.0
  while278:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf284
    DATA8 flag284
    DIVF F.1 2.0 tmpf284
    CP_EQF 0.0 2.0 flag284
    SELECTF flag284 0.0 tmpf284 F.0

    DATAF tmpf285
    DATA8 flag285
    DIVF VL_7 2.0 tmpf285
    CP_EQF 0.0 2.0 flag285
    SELECTF flag285 0.0 tmpf285 F.1

    JR_GTF F.0 F.1 endwhile278
  whilebody278:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf291
    DATA8 flag291
    DIVF F.1 2.0 tmpf291
    CP_EQF 0.0 2.0 flag291
    SELECTF flag291 0.0 tmpf291 F.0

    DATAF tmpf292
    DATA8 flag292
    DIVF VL_7 2.0 tmpf292
    CP_EQF 0.0 2.0 flag292
    SELECTF flag292 0.0 tmpf292 F.1

    JR_LTEQF F.0 F.1 whilebody278
  endwhile278:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_RIGHT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT2_1:
SUB_FRZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_FRZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_FRZ:
SUB_UP_2:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.RESETCOUNT 'AD'
    SUBF 0.0 VSPEED_8 F.0
    CALL MOTOR.START VMOTOR_8 F.0
    DATA32 milliseconds301
	MOVEF_32 200.0 milliseconds301
	DATA32 timer301
	TIMER_WAIT milliseconds301 timer301
	TIMER_READY timer301
  while302:
    CALL MOTOR.GETCOUNT VMOTOR_8 F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 endwhile302
    CALL MOTOR.GETSPEED VMOTOR_8 F.1
    MATH ABS F.1 F.0
    MULF VSPEED_8 0.3 F.1
    JR_LTEQF F.0 F.1 endwhile302
  whilebody302:
    CALL MOTOR.GETCOUNT VMOTOR_8 F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 and308
    CALL MOTOR.GETSPEED VMOTOR_8 F.1
    MATH ABS F.1 F.0
    MULF VSPEED_8 0.3 F.1
    JR_GTF F.0 F.1 whilebody302
  and308:
  endwhile302:
    CALL MOTOR.STOP 'ADBC' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_UP_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_UP_2:
SUB_DOWN_2:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.STARTPOWER VMOTOR_9 VSPEED_9
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds319
	MOVEF_32 600.0 milliseconds319
	DATA32 timer319
	TIMER_WAIT milliseconds319 timer319
	TIMER_READY timer319
    CALL MOTOR.STOP 'BC' 'true'
  while321:
    CALL MOTOR.GETSPEED VMOTOR_9 F.0
    MULF VSPEED_9 0.6 F.1
    JR_LTEQF F.0 F.1 endwhile321
  whilebody321:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.GETSPEED VMOTOR_9 F.0
    MULF VSPEED_9 0.6 F.1
    JR_GTF F.0 F.1 whilebody321
  endwhile321:
    CALL MOTOR.SCHEDULE VMOTOR_9 -20.0 0.0 20.0 0.0 'true' 

	DATA8 layer327
	DATA8 nos327
	DATA8 busy327
	CALL MOTORDECODEPORTSDESCRIPTOR VMOTOR_9 layer327 nos327
	JR_EQ8 0 nos327 motornotbusy327
  motorwaiting327:
	OUTPUT_TEST layer327 nos327 busy327
	JR_EQ8 busy327 0 motornotbusy327
	SLEEP
	JR motorwaiting327
  motornotbusy327:
    CALL MOTOR.STOP 'BC' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_DOWN_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_DOWN_2:
SUB_HSV:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C 1.0 1.0 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VR_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VG_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VB_M VRECVARRAY_M
    ADDF VR_M VG_M F.0
    ADDF F.0 VB_M VRGB_M
    JR_LTEQF VR_M VG_M else338_1
    JR_LTEQF VR_M VB_M else338_1
    MOVEF_F VR_M VMAX_M
    JR endif338
  else338_1:
    JR_LTEQF VG_M VR_M else338_2
    JR_LTEQF VG_M VB_M else338_2
    MOVEF_F VG_M VMAX_M
    JR endif338
  else338_2:
    JR_LTEQF VB_M VR_M else338_3
    JR_LTEQF VB_M VG_M else338_3
    MOVEF_F VB_M VMAX_M
  else338_3:
  endif338:
    JR_GTEQF VR_M VG_M else339_1
    JR_GTEQF VR_M VB_M else339_1
    MOVEF_F VR_M VMIN_M
    JR endif339
  else339_1:
    JR_GTEQF VG_M VR_M else339_2
    JR_GTEQF VG_M VB_M else339_2
    MOVEF_F VG_M VMIN_M
    JR endif339
  else339_2:
    JR_GTEQF VB_M VR_M else339_3
    JR_GTEQF VB_M VG_M else339_3
    MOVEF_F VB_M VMIN_M
  else339_3:
  endif339:
    JR_NEQF VMAX_M VMIN_M else340_1
    MOVEF_F 0.0 VH_M
    JR endif340
  else340_1:
    JR_NEQF VR_M VMAX_M else341_1
    JR_LTF VG_M VB_M else342_1
    SUBF VG_M VB_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf346
    DATA8 flag346
    DIVF F.0 F.1 tmpf346
    CP_EQF 0.0 F.1 flag346
    SELECTF flag346 0.0 tmpf346 VH_M

    JR endif342
  else342_1:
    SUBF VG_M VB_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf350
    DATA8 flag350
    DIVF F.1 F.2 tmpf350
    CP_EQF 0.0 F.2 flag350
    SELECTF flag350 0.0 tmpf350 F.0

    ADDF F.0 360.0 VH_M
  else342_2:
  endif342:
    JR endif341
  else341_1:
    JR_NEQF VMAX_M VG_M else352_1
    SUBF VB_M VR_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf356
    DATA8 flag356
    DIVF F.1 F.2 tmpf356
    CP_EQF 0.0 F.2 flag356
    SELECTF flag356 0.0 tmpf356 F.0

    ADDF F.0 120.0 VH_M
    JR endif352
  else352_1:
    SUBF VR_M VG_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf361
    DATA8 flag361
    DIVF F.1 F.2 tmpf361
    CP_EQF 0.0 F.2 flag361
    SELECTF flag361 0.0 tmpf361 F.0

    ADDF F.0 240.0 VH_M
  else352_2:
  endif352:
  else341_2:
  endif341:
  else340_2:
  endif340:
    JR_NEQF VMAX_M 0.0 else363_1
    MOVEF_F 0.0 VS_M
    JR endif363
  else363_1:
    DATAF tmpf364
    DATA8 flag364
    DIVF VMIN_M VMAX_M tmpf364
    CP_EQF 0.0 VMAX_M flag364
    SELECTF flag364 0.0 tmpf364 F.0

    SUBF 1.0 F.0 VS_M
  else363_2:
  endif363:
    MOVEF_F VMAX_M VV_M
    MULF VS_M 100.0 VS_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 100.0 VMIN_M
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_COL_BW:
    WRITE32 ENDSUB_HSV:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB367:
    JR_LTEQF VH_M 60.0 else368_1
    JR_GTEQF VH_M 240.0 else368_1
    JR_LTEQF VRGB_M 90.0 else369_1
    MOVEF_F 6.0 VCOL_M
    JR endif369
  else369_1:
    MOVEF_F 1.0 VCOL_M
  else369_2:
  endif369:
    JR endif368
  else368_1:
    MOVEF_F 0.0 VCOL_M
  else368_2:
  endif368:
RETSUB_COL_BW:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_COL_BW:
SUB_OBJECT_YN:
    WRITE32 ENDSUB_HSV:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB370:
    JR_LTEQF VRGB_M 35.0 else371_1
    JR_GTEQF VRGB_M 240.0 else371_1
    MOVEF_F 1.0 VCOL_M
    JR endif371
  else371_1:
    MOVEF_F 0.0 VCOL_M
  else371_2:
  endif371:
RETSUB_OBJECT_YN:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_OBJECT_YN:
SUB_TOBASE:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 100.0 VMM_M
    DATAF tmpf373
    DATA8 flag373
    DIVF VMM_M 194.68 tmpf373
    CP_EQF 0.0 194.68 flag373
    SELECTF flag373 0.0 tmpf373 F.0

    MULF F.0 360.0 VL_M
  while375:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile375
  whilebody375:
    WRITE32 ENDSUB_LINE3:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB377:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody375
  endwhile375:
  while379:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile379
  whilebody379:
    WRITE32 ENDSUB_SEN1:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB381:
    WRITE32 ENDSUB_SEN2:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB382:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M 0.55 F.1
    ADDF 40.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.55 F.1
    SUBF 40.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody379
  endwhile379:
RETSUB_TOBASE:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOBASE:
SUB_W1_2:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds392
	MOVEF_32 100.0 milliseconds392
	DATA32 timer392
	TIMER_WAIT milliseconds392 timer392
	TIMER_READY timer392
    MOVEF_F 280.0 VMM_3
    MOVEF_F -25.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB393:
    MOVEF_F 90.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB394:
    MOVEF_F 120.0 VL_10
    JR_NEQF VN_10 2.0 else395_1
    SUBF VL_10 40.0 VL_10
  else395_1:
  endif395:
    MOVEF_F VL_10 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB397:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB398:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB399:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB400:
    JR_NEQF VI_10 1.0 else401_1
    WRITE32 ENDSUB_LEFT:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB402:
    JR endif401
  else401_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB403:
    WRITE32 ENDSUB_TOBASE:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB404:
  else401_2:
  endif401:
RETSUB_W1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W1_2:
SUB_B1_2:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds406
	MOVEF_32 100.0 milliseconds406
	DATA32 timer406
	TIMER_WAIT milliseconds406 timer406
	TIMER_READY timer406
    MOVEF_F 90.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB407:
    MOVEF_F 95.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB408:
    MOVEF_F 120.0 VL_11
    JR_NEQF VN_11 2.0 else409_1
    SUBF VL_11 45.0 VL_11
  else409_1:
  endif409:
    MOVEF_F VL_11 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB411:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 30.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB412:
    SUBF VL_11 30.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB414:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB415:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB416:
    JR_NEQF VI_11 1.0 else417_1
    WRITE32 ENDSUB_LEFT:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB418:
    JR endif417
  else417_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB419:
    WRITE32 ENDSUB_TOBASE:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB420:
  else417_2:
  endif417:
RETSUB_B1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B1_2:
SUB_W2_2:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB421:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB422:
    CALL MOTOR.START 'BC' -20.0
    DATA32 milliseconds424
	MOVEF_32 1000.0 milliseconds424
	DATA32 timer424
	TIMER_WAIT milliseconds424 timer424
	TIMER_READY timer424
    MOVEF_F 5.0 VL_12
    JR_NEQF VN_12 2.0 else425_1
    ADDF VL_12 35.0 VL_12
  else425_1:
  endif425:
    MOVEF_F VL_12 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB427:
    MOVEF_F 95.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB428:
    MOVEF_F -25.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB429:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds431
	MOVEF_32 100.0 milliseconds431
	DATA32 timer431
	TIMER_WAIT milliseconds431 timer431
	TIMER_READY timer431
    MOVEF_F 20.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB432:
    MOVEF_F 185.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB433:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB434:
    MOVEF_F 160.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB435:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB436:
    MOVEF_F 70.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB437:
    MOVEF_F 40.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB438:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB439:
    JR_NEQF VI_12 1.0 else440_1
    WRITE32 ENDSUB_LEFT:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB441:
    JR endif440
  else440_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB442:
    WRITE32 ENDSUB_TOBASE:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB443:
  else440_2:
  endif440:
RETSUB_W2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W2_2:
SUB_B2_2:
    MOVEF_F 25.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB444:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB445:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB446:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds448
	MOVEF_32 1300.0 milliseconds448
	DATA32 timer448
	TIMER_WAIT milliseconds448 timer448
	TIMER_READY timer448
    MOVEF_F 30.0 VL_13
    JR_NEQF VN_13 2.0 else449_1
    ADDF VL_13 45.0 VL_13
  else449_1:
  endif449:
    MOVEF_F VL_13 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB451:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB452:
    MOVEF_F 40.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB453:
    MOVEF_F 280.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB454:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 30.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB455:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB456:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB457:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB458:
    JR_NEQF VI_13 1.0 else459_1
    WRITE32 ENDSUB_LEFT:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB460:
    JR endif459
  else459_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB461:
    WRITE32 ENDSUB_TOBASE:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB462:
  else459_2:
  endif459:
RETSUB_B2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B2_2:
SUB_W3_2:
    MOVEF_F 320.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB463:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB464:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB465:
    CALL MOTOR.START 'BC' -20.0
    DATA32 milliseconds467
	MOVEF_32 1000.0 milliseconds467
	DATA32 timer467
	TIMER_WAIT milliseconds467 timer467
	TIMER_READY timer467
    MOVEF_F 0.0 VL_14
    JR_NEQF VN_14 2.0 else468_1
    ADDF VL_14 40.0 VL_14
  else468_1:
  endif468:
    MOVEF_F VL_14 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB470:
    MOVEF_F 93.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB471:
    MOVEF_F 30.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB472:
    MOVEF_F 25.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB473:
    MOVEF_F 280.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB474:
    DATA32 milliseconds475
	MOVEF_32 100.0 milliseconds475
	DATA32 timer475
	TIMER_WAIT milliseconds475 timer475
	TIMER_READY timer475
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB476:
    MOVEF_F 190.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB477:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB478:
    MOVEF_F 500.0 VMM_3
    MOVEF_F -70.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB479:
    MOVEF_F 120.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB480:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB481:
    JR_NEQF VI_14 1.0 else482_1
    WRITE32 ENDSUB_LEFT:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB483:
    JR endif482
  else482_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB484:
    WRITE32 ENDSUB_TOBASE:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB485:
  else482_2:
  endif482:
RETSUB_W3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W3_2:
SUB_B3_2:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB486:
    DATA32 milliseconds487
	MOVEF_32 100.0 milliseconds487
	DATA32 timer487
	TIMER_WAIT milliseconds487 timer487
	TIMER_READY timer487
    MOVEF_F 90.0 VL_15
    JR_NEQF VN_15 2.0 else488_1
    SUBF VL_15 50.0 VL_15
  else488_1:
  endif488:
    DATA32 milliseconds490
	MOVEF_32 100.0 milliseconds490
	DATA32 timer490
	TIMER_WAIT milliseconds490 timer490
	TIMER_READY timer490
    MOVEF_F VL_15 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB491:
    DATA32 milliseconds492
	MOVEF_32 100.0 milliseconds492
	DATA32 timer492
	TIMER_WAIT milliseconds492 timer492
	TIMER_READY timer492
    MOVEF_F 100.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB493:
    DATA32 milliseconds494
	MOVEF_32 100.0 milliseconds494
	DATA32 timer494
	TIMER_WAIT milliseconds494 timer494
	TIMER_READY timer494
    MOVEF_F 45.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB495:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 30.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB496:
    MOVEF_F 310.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB497:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB498:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB499:
    MOVEF_F -20.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB500:
    JR_NEQF VI_15 1.0 else501_1
    WRITE32 ENDSUB_LEFT:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB502:
    JR endif501
  else501_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB503:
    WRITE32 ENDSUB_TOBASE:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB504:
  else501_2:
  endif501:
RETSUB_B3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B3_2:
SUB_W4_2:
    MOVEF_F 125.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB505:
    MOVEF_F 93.0 VGRAD_4
    MOVEF_F 50.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB506:
    JR_NEQF VN_16 2.0 else507_1
    MOVEF_F 15.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB508:
    JR endif507
  else507_1:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB509:
  else507_2:
  endif507:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB510:
    MOVEF_F 45.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB511:
    MOVEF_F 105.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB512:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB513:
    MOVEF_F 280.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB514:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB515:
    JR_NEQF VN_16 2.0 else516_1
    MOVEF_F 50.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB517:
    JR endif516
  else516_1:
    MOVEF_F 30.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB518:
  else516_2:
  endif516:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB519:
    JR_NEQF VI_16 1.0 else520_1
    WRITE32 ENDSUB_LEFT:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB521:
    JR endif520
  else520_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB522:
    WRITE32 ENDSUB_TOBASE:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB523:
  else520_2:
  endif520:
RETSUB_W4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W4_2:
SUB_B4_2:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds525
	MOVEF_32 100.0 milliseconds525
	DATA32 timer525
	TIMER_WAIT milliseconds525 timer525
	TIMER_READY timer525
    MOVEF_F 280.0 VMM_3
    MOVEF_F 60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB526:
    MOVEF_F 93.0 VGRAD_4
    MOVEF_F 50.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB527:
    JR_NEQF VN_17 2.0 else528_1
    MOVEF_F 20.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB529:
    JR endif528
  else528_1:
    MOVEF_F 25.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB530:
  else528_2:
  endif528:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 30.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB531:
    MOVEF_F 50.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB532:
    MOVEF_F 97.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB533:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB534:
    MOVEF_F 500.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB535:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB536:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB537:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB538:
    JR_NEQF VI_17 1.0 else539_1
    WRITE32 ENDSUB_LEFT:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB540:
    JR endif539
  else539_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB541:
    WRITE32 ENDSUB_TOBASE:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB542:
  else539_2:
  endif539:
RETSUB_B4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B4_2:
SUB_TH_UP:
    CALL MOTOR.RESETCOUNT 'AD'
    CALL MOTOR.START 'AD' -90.0
    DATA32 milliseconds545
	MOVEF_32 200.0 milliseconds545
	DATA32 timer545
	TIMER_WAIT milliseconds545 timer545
	TIMER_READY timer545
  while546:
    CALL MOTOR.GETCOUNT 'AD' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 endwhile546
    CALL MOTOR.GETSPEED 'AD' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 27.0 endwhile546
  whilebody546:
    CALL MOTOR.GETCOUNT 'AD' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 and551
    CALL MOTOR.GETSPEED 'AD' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 27.0 whilebody546
  and551:
  endwhile546:
    CALL MOTOR.STOP 'AD' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_TH_UP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TH_UP:
SUB_TH_DOWN:
    CALL MOTOR.STARTPOWER 'AD' 90.0
    DATA32 milliseconds559
	MOVEF_32 600.0 milliseconds559
	DATA32 timer559
	TIMER_WAIT milliseconds559 timer559
	TIMER_READY timer559
  while560:
    CALL MOTOR.GETSPEED 'AD' F.0
    JR_LTEQF F.0 63.0 endwhile560
  whilebody560:
    CALL MOTOR.GETSPEED 'AD' F.0
    JR_GTF F.0 63.0 whilebody560
  endwhile560:
    CALL MOTOR.STARTPOWER 'AD' 10.0
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_TH_DOWN:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TH_DOWN:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
