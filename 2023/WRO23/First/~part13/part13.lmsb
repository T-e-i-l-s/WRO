DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VMIN1_M
DATAF VMAX1_M
DATAF VMIN2_M
DATAF VMAX2_M
DATAF VK1_M
DATAF VV1_M
DATAF VK2_M
DATAF VV2_M
DATAF VK3_M
DATAF VV3_M
DATAF VK21_M
DATAF VV21_M
DATAF VK31_M
DATAF VV31_M
DATAF VRD_M
DATAF VBLACK_M
DATAF VBC1_M
DATAF VWC1_M
DATAF VBC2_M
DATAF VWC2_M
DATAF VRED_M
DATAF VMM_M
DATAF VS1_M
DATAF VS2_M
DATAF VU_M
DATAF VL_M
DATAF VV_M
DATAF VK_M
DATAF VDIS_M
DATAF VT_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VNUM_M
DATAF VR_M
DATAF VG_M
DATAF VB_M
DATAF VRGB_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VS_M
DATAF VCOL_M
DATAF VI_M
DATAF VN_M
DATAF VTIME_M
DATAF VSP_1
DATAF VU_1
DATAF VL_2
DATAF VSP_2
DATAF VDIS_2
DATAF VV_2
DATAF VU_2
DATAF VMM_3
DATAF VSP_3
DATAF VL_3
DATAF VGRAD_4
DATAF VSP_4
DATAF VL_4
DATAF VGRAD_5
DATAF VSP_5
DATAF VL_5
DATAF VGRAD_6
DATAF VL_6
DATAF VGRAD_7
DATAF VL_7
DATAS VMOTOR_8 252
DATAF VSPEED_8
DATAS VMOTOR_9 252
DATAF VSPEED_9
DATAF VN_10
DATAF VI_10
DATAF VL_10
DATAF VN_11
DATAF VI_11
DATAF VL_11
DATAF VN_12
DATAF VI_12
DATAF VL_12
DATAF VN_13
DATAF VI_13
DATAF VL_13
DATAF VN_14
DATAF VI_14
DATAF VL_14
DATAF VN_15
DATAF VI_15
DATAF VL_15
DATAF VN_16
DATAF VI_16
DATAF VN_17
DATAF VI_17
DATA32 RUNCOUNTER_TH_DOWN
DATA32 RUNCOUNTER_TH_UP

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VMIN1_M
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VV1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VV2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VV3_M
    MOVEF_F 0.0 VK21_M
    MOVEF_F 0.0 VV21_M
    MOVEF_F 0.0 VK31_M
    MOVEF_F 0.0 VV31_M
    MOVEF_F 0.0 VRD_M
    MOVEF_F 0.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    MOVEF_F 0.0 VS1_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VU_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VK_M
    MOVEF_F 0.0 VDIS_M
    MOVEF_F 0.0 VT_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VNUM_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VB_M
    MOVEF_F 0.0 VRGB_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VCOL_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VTIME_M
    MOVEF_F 0.0 VSP_1
    MOVEF_F 0.0 VU_1
    MOVEF_F 0.0 VL_2
    MOVEF_F 0.0 VSP_2
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 0.0 VV_2
    MOVEF_F 0.0 VU_2
    MOVEF_F 0.0 VMM_3
    MOVEF_F 0.0 VSP_3
    MOVEF_F 0.0 VL_3
    MOVEF_F 0.0 VGRAD_4
    MOVEF_F 0.0 VSP_4
    MOVEF_F 0.0 VL_4
    MOVEF_F 0.0 VGRAD_5
    MOVEF_F 0.0 VSP_5
    MOVEF_F 0.0 VL_5
    MOVEF_F 0.0 VGRAD_6
    MOVEF_F 0.0 VL_6
    MOVEF_F 0.0 VGRAD_7
    MOVEF_F 0.0 VL_7
    STRINGS DUPLICATE '' VMOTOR_8
    MOVEF_F 0.0 VSPEED_8
    STRINGS DUPLICATE '' VMOTOR_9
    MOVEF_F 0.0 VSPEED_9
    MOVEF_F 0.0 VN_10
    MOVEF_F 0.0 VI_10
    MOVEF_F 0.0 VL_10
    MOVEF_F 0.0 VN_11
    MOVEF_F 0.0 VI_11
    MOVEF_F 0.0 VL_11
    MOVEF_F 0.0 VN_12
    MOVEF_F 0.0 VI_12
    MOVEF_F 0.0 VL_12
    MOVEF_F 0.0 VN_13
    MOVEF_F 0.0 VI_13
    MOVEF_F 0.0 VL_13
    MOVEF_F 0.0 VN_14
    MOVEF_F 0.0 VI_14
    MOVEF_F 0.0 VL_14
    MOVEF_F 0.0 VN_15
    MOVEF_F 0.0 VI_15
    MOVEF_F 0.0 VL_15
    MOVEF_F 0.0 VN_16
    MOVEF_F 0.0 VI_16
    MOVEF_F 0.0 VN_17
    MOVEF_F 0.0 VI_17
    MOVE32_32 0 RUNCOUNTER_TH_DOWN
    MOVE32_32 0 RUNCOUNTER_TH_UP
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TTH_DOWN
{
    DATA32 tmp
  launch:
    CALL PROGRAM_TH_DOWN 0
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN -1 RUNCOUNTER_TH_DOWN tmp
    JR_GT32 tmp 1 launch
}
vmthread TTH_UP
{
    DATA32 tmp
  launch:
    CALL PROGRAM_TH_UP 1
    CALL GETANDINC32 RUNCOUNTER_TH_UP -1 RUNCOUNTER_TH_UP tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_TH_DOWN
subcall PROGRAM_TH_UP
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1027
    WRITE32 ENDSUB_TH_DOWN:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TH_DOWN
  dispatch1027:
    JR_NEQ32 SUBPROGRAM 1 dispatch1028
    WRITE32 ENDSUB_TH_UP:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TH_UP
  dispatch1028:
    MOVEF_F 0.0 VMIN1_M
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VV1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VV2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VV3_M
    MOVEF_F 0.0 VK21_M
    MOVEF_F 0.0 VV21_M
    MOVEF_F 0.0 VK31_M
    MOVEF_F 0.0 VV31_M
    MOVEF_F 0.0 VRD_M
    MOVEF_F 0.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    MOVEF_F 0.0 VS1_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VU_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VK_M
    MOVEF_F 0.0 VDIS_M
    MOVEF_F 0.0 VT_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VNUM_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VB_M
    MOVEF_F 0.0 VRGB_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VCOL_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VTIME_M
    MOVEF_F 0.0 VSP_1
    MOVEF_F 0.0 VU_1
    MOVEF_F 0.0 VL_2
    MOVEF_F 0.0 VSP_2
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 0.0 VV_2
    MOVEF_F 0.0 VU_2
    MOVEF_F 0.0 VMM_3
    MOVEF_F 0.0 VSP_3
    MOVEF_F 0.0 VL_3
    MOVEF_F 0.0 VGRAD_4
    MOVEF_F 0.0 VSP_4
    MOVEF_F 0.0 VL_4
    MOVEF_F 0.0 VGRAD_5
    MOVEF_F 0.0 VSP_5
    MOVEF_F 0.0 VL_5
    MOVEF_F 0.0 VGRAD_6
    MOVEF_F 0.0 VL_6
    MOVEF_F 0.0 VGRAD_7
    MOVEF_F 0.0 VL_7
    STRINGS DUPLICATE '' VMOTOR_8
    MOVEF_F 0.0 VSPEED_8
    STRINGS DUPLICATE '' VMOTOR_9
    MOVEF_F 0.0 VSPEED_9
    MOVEF_F 0.0 VN_10
    MOVEF_F 0.0 VI_10
    MOVEF_F 0.0 VL_10
    MOVEF_F 0.0 VN_11
    MOVEF_F 0.0 VI_11
    MOVEF_F 0.0 VL_11
    MOVEF_F 0.0 VN_12
    MOVEF_F 0.0 VI_12
    MOVEF_F 0.0 VL_12
    MOVEF_F 0.0 VN_13
    MOVEF_F 0.0 VI_13
    MOVEF_F 0.0 VL_13
    MOVEF_F 0.0 VN_14
    MOVEF_F 0.0 VI_14
    MOVEF_F 0.0 VL_14
    MOVEF_F 0.0 VN_15
    MOVEF_F 0.0 VI_15
    MOVEF_F 0.0 VL_15
    MOVEF_F 0.0 VN_16
    MOVEF_F 0.0 VI_16
    MOVEF_F 0.0 VN_17
    MOVEF_F 0.0 VI_17
    TIMER_READ timeMC1
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    CALL MOTOR.INVERT 'B'
    MOVEF_F 100.0 VMIN1_M
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 100.0 VMIN2_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.8 VK1_M
    MOVEF_F 75.0 VV1_M
    MOVEF_F 0.8 VK2_M
    MOVEF_F 50.0 VV2_M
    MOVEF_F 0.9 VK3_M
    MOVEF_F 20.0 VV3_M
    MOVEF_F 1.5 VK21_M
    MOVEF_F 35.0 VV21_M
    MOVEF_F 1.1 VK31_M
    MOVEF_F 20.0 VV31_M
    MOVEF_F 50.0 VRD_M
    MOVEF_F 20.0 VBLACK_M
    MOVEF_F 1.0 VBC1_M
    MOVEF_F 2.0 VWC1_M
    MOVEF_F 3.0 VBC2_M
    MOVEF_F 4.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    DATA32 tmp514
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp514
    JR_NEQ32 0 tmp514 alreadylaunched514
    OBJECT_START TTH_DOWN
  alreadylaunched514:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds516
	MOVEF_32 300.0 milliseconds516
	DATA32 timer516
	TIMER_WAIT milliseconds516 timer516
	TIMER_READY timer516
    MOVEF_F 25.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB517:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 40.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB518:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds520
	MOVEF_32 1000.0 milliseconds520
	DATA32 timer520
	TIMER_WAIT milliseconds520 timer520
	TIMER_READY timer520
    MOVEF_F 180.0 VMM_3
    MOVEF_F 35.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB521:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 70.0 VMM_M
    DATAF tmpf523
    DATA8 flag523
    DIVF VMM_M 194.68 tmpf523
    CP_EQF 0.0 194.68 flag523
    SELECTF flag523 0.0 tmpf523 F.0

    MULF F.0 360.0 VL_M
  while525:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile525
  whilebody525:
    WRITE32 ENDSUB_LINE31:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE31
CALLSUB527:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody525
  endwhile525:
    MOVEF_F 1.0 VI_M
  for529:
    JR_GTF VI_M 4.0 endfor529
  forbody529:
    WRITE32 ENDSUB_COL:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_COL
CALLSUB530:
    JR_NEQF VCOL_M 1.0 else531_1
    MOVEF_F VI_M VBC1_M
    CALL SPEAKER.TONE 40.0 250.0 200.0
    JR endif531
  else531_1:
    JR_NEQF VCOL_M 6.0 else531_2
    MOVEF_F VI_M VWC1_M
    CALL SPEAKER.TONE 40.0 1200.0 200.0
  else531_2:
  endif531:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf535
    DATA8 flag535
    DIVF VMM_M 194.68 tmpf535
    CP_EQF 0.0 194.68 flag535
    SELECTF flag535 0.0 tmpf535 F.0

    MULF F.0 360.0 VL_M
  while537:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile537
  whilebody537:
    WRITE32 ENDSUB_LINE21:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB539:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody537
  endwhile537:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 4.0 forbody529
  endfor529:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 70.0 VMM_M
    DATAF tmpf543
    DATA8 flag543
    DIVF VMM_M 194.68 tmpf543
    CP_EQF 0.0 194.68 flag543
    SELECTF flag543 0.0 tmpf543 F.0

    MULF F.0 360.0 VL_M
  while545:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile545
  whilebody545:
    WRITE32 ENDSUB_LINE21:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB547:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody545
  endwhile545:
    MOVEF_F 1.0 VI_M
  for549:
    JR_GTF VI_M 4.0 endfor549
  forbody549:
    WRITE32 ENDSUB_COL:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_COL
CALLSUB550:
    JR_NEQF VCOL_M 1.0 else551_1
    MOVEF_F VI_M VBC2_M
    CALL SPEAKER.TONE 40.0 250.0 200.0
    JR endif551
  else551_1:
    JR_NEQF VCOL_M 6.0 else551_2
    MOVEF_F VI_M VWC2_M
    CALL SPEAKER.TONE 40.0 1200.0 200.0
  else551_2:
  endif551:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf555
    DATA8 flag555
    DIVF VMM_M 194.68 tmpf555
    CP_EQF 0.0 194.68 flag555
    SELECTF flag555 0.0 tmpf555 F.0

    MULF F.0 360.0 VL_M
  while557:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile557
  whilebody557:
    WRITE32 ENDSUB_LINE21:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB559:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody557
  endwhile557:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 4.0 forbody549
  endfor549:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VBC1_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VWC1_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 20.0 70.0 2.0 S.0
    STRINGS VALUE_FORMATTED VBC2_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 70.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VWC2_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 70.0 70.0 2.0 S.0
    MOVEF_F 15.0 VV21_M
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf572
    DATA8 flag572
    DIVF VMM_M 194.68 tmpf572
    CP_EQF 0.0 194.68 flag572
    SELECTF flag572 0.0 tmpf572 F.0

    MULF F.0 360.0 VL_M
  while574:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile574
  whilebody574:
    WRITE32 ENDSUB_LINE21:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB576:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody574
  endwhile574:
    MOVEF_F 30.0 VV21_M
    MOVEF_F 150.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB578:
    MOVEF_F 30.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB579:
    MOVEF_F 30.0 VGRAD_4
    MOVEF_F 40.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB580:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 120.0 VMM_M
    DATAF tmpf582
    DATA8 flag582
    DIVF VMM_M 194.68 tmpf582
    CP_EQF 0.0 194.68 flag582
    SELECTF flag582 0.0 tmpf582 F.0

    MULF F.0 360.0 VL_M
  while584:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile584
  whilebody584:
    WRITE32 ENDSUB_LINE3:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB586:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody584
  endwhile584:
    CALL MOTOR.RESETCOUNT 'BC'
  while589:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M or590
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VRD_M endwhile589
  or590:
  whilebody589:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M whilebody589
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VRD_M whilebody589
  endwhile589:
    MOVEF_F 35.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB604:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 50.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB605:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB606:
    MOVEF_F 30.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB607:
    MOVEF_F 150.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB608:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB609:
    WRITE32 ENDSUB_RIGHT:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB610:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 820.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB612:
    WRITE32 ENDSUB_HSV:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB613:
    JR_LTEQF VRGB_M 40.0 else614_1
    MOVEF_F 1.0 VRED_M
    CALL SPEAKER.NOTE 50.0 'C#5' 300.0
  else614_1:
  endif614:
  while616:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 15.0 endwhile616
  whilebody616:
    WRITE32 ENDSUB_LINE2:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB618:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 15.0 whilebody616
  endwhile616:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB620:
    MOVEF_F 200.0 VMM_M
    DATAF tmpf621
    DATA8 flag621
    DIVF VMM_M 194.68 tmpf621
    CP_EQF 0.0 194.68 flag621
    SELECTF flag621 0.0 tmpf621 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while624:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf628
    DATA8 flag628
    DIVF F.1 2.0 tmpf628
    CP_EQF 0.0 2.0 flag628
    SELECTF flag628 0.0 tmpf628 F.0

    JR_GTEQF F.0 VL_M endwhile624
  whilebody624:
    WRITE32 ENDSUB_LINE2:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB629:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf633
    DATA8 flag633
    DIVF F.1 2.0 tmpf633
    CP_EQF 0.0 2.0 flag633
    SELECTF flag633 0.0 tmpf633 F.0

    JR_LTF F.0 VL_M whilebody624
  endwhile624:
    WRITE32 ENDSUB_HSV:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB634:
    JR_LTEQF VRGB_M 40.0 else635_1
    MOVEF_F 4.0 VRED_M
    CALL SPEAKER.NOTE 50.0 'C#5' 300.0
  else635_1:
  endif635:
    MOVEF_F 350.0 VMM_M
    DATAF tmpf637
    DATA8 flag637
    DIVF VMM_M 194.68 tmpf637
    CP_EQF 0.0 194.68 flag637
    SELECTF flag637 0.0 tmpf637 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while640:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf644
    DATA8 flag644
    DIVF F.1 2.0 tmpf644
    CP_EQF 0.0 2.0 flag644
    SELECTF flag644 0.0 tmpf644 F.0

    JR_GTEQF F.0 VL_M endwhile640
  whilebody640:
    WRITE32 ENDSUB_LINE1:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE1
CALLSUB645:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf649
    DATA8 flag649
    DIVF F.1 2.0 tmpf649
    CP_EQF 0.0 2.0 flag649
    SELECTF flag649 0.0 tmpf649 F.0

    JR_LTF F.0 VL_M whilebody640
  endwhile640:
  while650:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile650
  whilebody650:
    WRITE32 ENDSUB_LINE2:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB652:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody650
  endwhile650:
    WRITE32 ENDSUB_RIGHT:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB654:
    MOVEF_F 50.0 VMM_M
    DATAF tmpf655
    DATA8 flag655
    DIVF VMM_M 194.68 tmpf655
    CP_EQF 0.0 194.68 flag655
    SELECTF flag655 0.0 tmpf655 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while658:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf662
    DATA8 flag662
    DIVF F.1 2.0 tmpf662
    CP_EQF 0.0 2.0 flag662
    SELECTF flag662 0.0 tmpf662 F.0

    JR_GTEQF F.0 VL_M endwhile658
  whilebody658:
    WRITE32 ENDSUB_LINE3:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB663:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf667
    DATA8 flag667
    DIVF F.1 2.0 tmpf667
    CP_EQF 0.0 2.0 flag667
    SELECTF flag667 0.0 tmpf667 F.0

    JR_LTF F.0 VL_M whilebody658
  endwhile658:
    MOVEF_F 100.0 VMM_M
    DATAF tmpf668
    DATA8 flag668
    DIVF VMM_M 194.68 tmpf668
    CP_EQF 0.0 194.68 flag668
    SELECTF flag668 0.0 tmpf668 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while671:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf675
    DATA8 flag675
    DIVF F.1 2.0 tmpf675
    CP_EQF 0.0 2.0 flag675
    SELECTF flag675 0.0 tmpf675 F.0

    JR_GTEQF F.0 VL_M endwhile671
  whilebody671:
    WRITE32 ENDSUB_LINE2:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB676:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf680
    DATA8 flag680
    DIVF F.1 2.0 tmpf680
    CP_EQF 0.0 2.0 flag680
    SELECTF flag680 0.0 tmpf680 F.0

    JR_LTF F.0 VL_M whilebody671
  endwhile671:
  while681:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile681
  whilebody681:
    WRITE32 ENDSUB_LINE3:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB683:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody681
  endwhile681:
    WRITE32 ENDSUB_RIGHT:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB685:
    MOVEF_F 500.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB686:
  while687:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile687
  whilebody687:
    WRITE32 ENDSUB_LINE3:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB689:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody687
  endwhile687:
    MOVEF_F 0.0 VN_M
    JR_NEQF VWC1_M 3.0 else691_1
    MOVEF_F 1.0 VN_14
    MOVEF_F VN_M VI_14
    WRITE32 ENDSUB_W3_2:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W3_2
CALLSUB692:
    ADDF VN_M 1.0 VN_M
  else691_1:
  endif691:
    JR_NEQF VBC1_M 3.0 else694_1
    MOVEF_F 1.0 VN_15
    MOVEF_F VN_M VI_15
    WRITE32 ENDSUB_B3_2:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B3_2
CALLSUB695:
    ADDF VN_M 1.0 VN_M
  else694_1:
  endif694:
    JR_NEQF VBC1_M 2.0 else697_1
    MOVEF_F 1.0 VN_13
    MOVEF_F VN_M VI_13
    WRITE32 ENDSUB_B2_2:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B2_2
CALLSUB698:
    ADDF VN_M 1.0 VN_M
  else697_1:
  endif697:
    JR_NEQF VWC1_M 2.0 else700_1
    MOVEF_F 1.0 VN_12
    MOVEF_F VN_M VI_12
    WRITE32 ENDSUB_W2_2:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W2_2
CALLSUB701:
    ADDF VN_M 1.0 VN_M
  else700_1:
  endif700:
    JR_NEQF VWC1_M 4.0 else703_1
    MOVEF_F 1.0 VN_16
    MOVEF_F VN_M VI_16
    WRITE32 ENDSUB_W4_2:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W4_2
CALLSUB704:
    ADDF VN_M 1.0 VN_M
  else703_1:
  endif703:
    JR_NEQF VBC1_M 4.0 else706_1
    MOVEF_F 1.0 VN_17
    MOVEF_F VN_M VI_17
    WRITE32 ENDSUB_B4_2:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B4_2
CALLSUB707:
    ADDF VN_M 1.0 VN_M
  else706_1:
  endif706:
    JR_NEQF VWC1_M 1.0 else709_1
    MOVEF_F 1.0 VN_10
    MOVEF_F VN_M VI_10
    WRITE32 ENDSUB_W1_2:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W1_2
CALLSUB710:
    ADDF VN_M 1.0 VN_M
  else709_1:
  endif709:
    JR_NEQF VBC1_M 1.0 else712_1
    MOVEF_F 1.0 VN_11
    MOVEF_F VN_M VI_11
    WRITE32 ENDSUB_B1_2:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B1_2
CALLSUB713:
    ADDF VN_M 1.0 VN_M
  else712_1:
  endif712:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf716
    DATA8 flag716
    DIVF VMM_M 194.68 tmpf716
    CP_EQF 0.0 194.68 flag716
    SELECTF flag716 0.0 tmpf716 F.0

    MULF F.0 360.0 VL_M
  while718:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile718
  whilebody718:
    WRITE32 ENDSUB_LINE3:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB720:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody718
  endwhile718:
  while722:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile722
  whilebody722:
    WRITE32 ENDSUB_LINE2:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB724:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody722
  endwhile722:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB726:
    MOVEF_F 60.0 VMM_3
    MOVEF_F 60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB727:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB728:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds730
	MOVEF_32 1500.0 milliseconds730
	DATA32 timer730
	TIMER_WAIT milliseconds730 timer730
	TIMER_READY timer730
    MOVEF_F 75.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB731:
    DATA32 milliseconds732
	MOVEF_32 100.0 milliseconds732
	DATA32 timer732
	TIMER_WAIT milliseconds732 timer732
	TIMER_READY timer732
    MOVEF_F 95.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB733:
    DATA32 milliseconds734
	MOVEF_32 100.0 milliseconds734
	DATA32 timer734
	TIMER_WAIT milliseconds734 timer734
	TIMER_READY timer734
    MOVEF_F 50.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB735:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB736:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB737:
    CALL MOTOR.START 'AD' 60.0
    DATA32 milliseconds739
	MOVEF_32 300.0 milliseconds739
	DATA32 timer739
	TIMER_WAIT milliseconds739 timer739
	TIMER_READY timer739
    MOVEF_F 70.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB740:
    CALL MOTOR.STOP 'AD' 'false'
    CALL SPEAKER.TONE 40.0 700.0 200.0
    MOVEF_F 80.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB743:
    MOVEF_F 80.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB744:
    MOVEF_F 70.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB745:
    DATA32 tmp746
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp746
    JR_NEQ32 0 tmp746 alreadylaunched746
    OBJECT_START TTH_DOWN
  alreadylaunched746:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB747:
    WRITE32 ENDSUB_LEFT:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB748:
    DATA32 tmp749
    CALL GETANDINC32 RUNCOUNTER_TH_UP 1  RUNCOUNTER_TH_UP tmp749
    JR_NEQ32 0 tmp749 alreadylaunched749
    OBJECT_START TTH_UP
  alreadylaunched749:
    MOVEF_F 500.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB750:
  while751:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile751
  whilebody751:
    WRITE32 ENDSUB_LINE3:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB753:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody751
  endwhile751:
    CALL MOTOR.STOP 'BC' 'true'
    JR_NEQF VRED_M 1.0 else756_1
    MOVEF_F 115.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB757:
    DATA32 tmp758
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp758
    JR_NEQ32 0 tmp758 alreadylaunched758
    OBJECT_START TTH_DOWN
  alreadylaunched758:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F 30.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB759:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB760:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB761:
    WRITE32 ENDSUB_RIGHT:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB762:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf764
    DATA8 flag764
    DIVF VMM_M 194.68 tmpf764
    CP_EQF 0.0 194.68 flag764
    SELECTF flag764 0.0 tmpf764 F.0

    MULF F.0 360.0 VL_M
  while766:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile766
  whilebody766:
    WRITE32 ENDSUB_LINE3:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB768:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody766
  endwhile766:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 450.0 VMM_M
    DATAF tmpf771
    DATA8 flag771
    DIVF VMM_M 194.68 tmpf771
    CP_EQF 0.0 194.68 flag771
    SELECTF flag771 0.0 tmpf771 F.0

    MULF F.0 360.0 VL_M
  while773:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile773
  whilebody773:
    WRITE32 ENDSUB_LINE2:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB775:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody773
  endwhile773:
    JR endif756
  else756_1:
    JR_NEQF VRED_M 4.0 else756_2
    MOVEF_F 110.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB777:
    DATA32 tmp778
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp778
    JR_NEQ32 0 tmp778 alreadylaunched778
    OBJECT_START TTH_DOWN
  alreadylaunched778:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB779:
    MOVEF_F 120.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB780:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB781:
    MOVEF_F 70.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB782:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB783:
    WRITE32 ENDSUB_RIGHT:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB784:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf786
    DATA8 flag786
    DIVF VMM_M 194.68 tmpf786
    CP_EQF 0.0 194.68 flag786
    SELECTF flag786 0.0 tmpf786 F.0

    MULF F.0 360.0 VL_M
  while788:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile788
  whilebody788:
    WRITE32 ENDSUB_LINE3:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB790:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody788
  endwhile788:
    JR endif756
  else756_2:
    WRITE32 ENDSUB_RIGHT:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB792:
    DATA32 tmp793
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp793
    JR_NEQ32 0 tmp793 alreadylaunched793
    OBJECT_START TTH_DOWN
  alreadylaunched793:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 255.0 VMM_M
    DATAF tmpf795
    DATA8 flag795
    DIVF VMM_M 194.68 tmpf795
    CP_EQF 0.0 194.68 flag795
    SELECTF flag795 0.0 tmpf795 F.0

    MULF F.0 360.0 VL_M
  while797:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile797
  whilebody797:
    WRITE32 ENDSUB_LINE3:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB799:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody797
  endwhile797:
    WRITE32 ENDSUB_HSV:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB801:
    JR_LTEQF VRGB_M 18.0 else802_1
    MOVEF_F 2.0 VRED_M
    CALL SPEAKER.TONE 40.0 600.0 200.0
    MOVEF_F 90.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB804:
    MOVEF_F 180.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB805:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB806:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB807:
    MOVEF_F 370.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB808:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB809:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB810:
    WRITE32 ENDSUB_RIGHT:CALLSUB811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB811:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf813
    DATA8 flag813
    DIVF VMM_M 194.68 tmpf813
    CP_EQF 0.0 194.68 flag813
    SELECTF flag813 0.0 tmpf813 F.0

    MULF F.0 360.0 VL_M
  while815:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile815
  whilebody815:
    WRITE32 ENDSUB_LINE3:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB817:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody815
  endwhile815:
    JR endif802
  else802_1:
    MOVEF_F 3.0 VRED_M
    MOVEF_F 5.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB819:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB820:
    MOVEF_F 190.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB821:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 20.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB822:
    MOVEF_F 170.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB823:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F 60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB824:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB825:
    WRITE32 ENDSUB_LEFT:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB826:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf828
    DATA8 flag828
    DIVF VMM_M 194.68 tmpf828
    CP_EQF 0.0 194.68 flag828
    SELECTF flag828 0.0 tmpf828 F.0

    MULF F.0 360.0 VL_M
  while830:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile830
  whilebody830:
    WRITE32 ENDSUB_LINE3:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB832:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody830
  endwhile830:
  else802_2:
  endif802:
  else756_3:
  endif756:
    MOVEF_F 200.0 VMM_M
    DATAF tmpf834
    DATA8 flag834
    DIVF VMM_M 194.68 tmpf834
    CP_EQF 0.0 194.68 flag834
    SELECTF flag834 0.0 tmpf834 F.0

    MULF F.0 360.0 VL_M
  while836:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile836
  whilebody836:
    WRITE32 ENDSUB_LINE2:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB838:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody836
  endwhile836:
  while840:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile840
  whilebody840:
    WRITE32 ENDSUB_LINE2:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB842:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody840
  endwhile840:
    WRITE32 ENDSUB_RIGHT:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB844:
    MOVEF_F 80.0 VMM_M
    DATAF tmpf845
    DATA8 flag845
    DIVF VMM_M 194.68 tmpf845
    CP_EQF 0.0 194.68 flag845
    SELECTF flag845 0.0 tmpf845 F.0

    MULF F.0 360.0 VL_M
  while847:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile847
  whilebody847:
    WRITE32 ENDSUB_LINE3:CALLSUB849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB849:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody847
  endwhile847:
  while851:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile851
  whilebody851:
    WRITE32 ENDSUB_LINE2:CALLSUB853 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB853:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody851
  endwhile851:
    JR_EQF VRED_M 1.0 or856
    JR_NEQF VRED_M 3.0 else855_1
  or856:
    MOVEF_F 310.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB857:
    STRINGS DUPLICATE 'AD' VMOTOR_9
    MOVEF_F 40.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB858:
    MOVEF_F 50.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB859:
    MOVEF_F 150.0 VMM_3
    MOVEF_F -50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB860:
    JR endif855
  else855_1:
    MOVEF_F 130.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB861 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB861:
    MOVEF_F 45.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB862 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB862:
    STRINGS DUPLICATE 'AD' VMOTOR_9
    MOVEF_F 40.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB863:
    MOVEF_F 70.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB864:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB865:
    MOVEF_F 30.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB866:
    MOVEF_F 170.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB867:
    MOVEF_F 170.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB868:
  else855_2:
  endif855:
    DATA32 tmp869
    CALL GETANDINC32 RUNCOUNTER_TH_UP 1  RUNCOUNTER_TH_UP tmp869
    JR_NEQ32 0 tmp869 alreadylaunched869
    OBJECT_START TTH_UP
  alreadylaunched869:
    MOVEF_F -40.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB870 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB870:
    MOVEF_F 35.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB871:
    MOVEF_F 40.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB872:
    CALL MOTOR.STARTPOWER 'B' 30.0
    CALL MOTOR.STARTPOWER 'C' -30.0
  while875:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 30.0 endwhile875
  whilebody875:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 30.0 whilebody875
  endwhile875:
  while878:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile878
  whilebody878:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody878
  endwhile878:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 20.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB882:
    MOVEF_F 150.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB883:
  while884:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile884
  whilebody884:
    WRITE32 ENDSUB_LINE2:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB886:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody884
  endwhile884:
    MOVEF_F 50.0 VGRAD_4
    MOVEF_F 45.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB888:
    MOVEF_F 47.0 VGRAD_5
    MOVEF_F 45.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB889:
    MOVEF_F 600.0 VMM_3
    MOVEF_F 80.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB890:
    MOVEF_F 100.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB891:
    MOVEF_F 90.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB892:
    MOVEF_F 50.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB893:
    MOVEF_F 20.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB894:
    MOVEF_F 25.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB895:
    CALL MOTOR.START 'AD' 40.0
    DATA32 milliseconds897
	MOVEF_32 300.0 milliseconds897
	DATA32 timer897
	TIMER_WAIT milliseconds897 timer897
	TIMER_READY timer897
    MOVEF_F 70.0 VMM_3
    MOVEF_F -50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB898:
    CALL MOTOR.STOP 'AD' 'false'
    CALL SPEAKER.TONE 40.0 700.0 200.0
    MOVEF_F 150.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB901:
    DATA32 milliseconds902
	MOVEF_32 100.0 milliseconds902
	DATA32 timer902
	TIMER_WAIT milliseconds902 timer902
	TIMER_READY timer902
    DATA32 tmp903
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp903
    JR_NEQ32 0 tmp903 alreadylaunched903
    OBJECT_START TTH_DOWN
  alreadylaunched903:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB904:
    MOVEF_F 300.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB905:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB906:
    WRITE32 ENDSUB_RIGHT:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB907:
    MOVEF_F 100.0 VMM_M
    DATAF tmpf908
    DATA8 flag908
    DIVF VMM_M 194.68 tmpf908
    CP_EQF 0.0 194.68 flag908
    SELECTF flag908 0.0 tmpf908 F.0

    MULF F.0 360.0 VL_M
  while910:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile910
  whilebody910:
    WRITE32 ENDSUB_LINE3:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB912:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody910
  endwhile910:
  while914:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile914
  whilebody914:
    WRITE32 ENDSUB_LINE2:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB916:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody914
  endwhile914:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB918:
    MOVEF_F 150.0 VMM_M
    DATAF tmpf919
    DATA8 flag919
    DIVF VMM_M 194.68 tmpf919
    CP_EQF 0.0 194.68 flag919
    SELECTF flag919 0.0 tmpf919 F.0

    MULF F.0 360.0 VL_M
  while921:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile921
  whilebody921:
    WRITE32 ENDSUB_LINE2:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB923:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody921
  endwhile921:
    CALL MOTOR.RESETCOUNT 'BC'
  while926:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M or927
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VRD_M endwhile926
  or927:
  whilebody926:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M whilebody926
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VRD_M whilebody926
  endwhile926:
    MOVEF_F 100.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB941:
    MOVEF_F 10.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB942:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 50.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB943:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB944:
    MOVEF_F 30.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB945:
    MOVEF_F 150.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB946:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB947:
    WRITE32 ENDSUB_RIGHT:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB948:
    MOVEF_F 900.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB949:
  while950:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile950
  whilebody950:
    WRITE32 ENDSUB_LINE3:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB952:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody950
  endwhile950:
    MOVEF_F 0.0 VN_M
    JR_NEQF VWC2_M 3.0 else954_1
    MOVEF_F 2.0 VN_14
    MOVEF_F VN_M VI_14
    WRITE32 ENDSUB_W3_2:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W3_2
CALLSUB955:
    ADDF VN_M 1.0 VN_M
  else954_1:
  endif954:
    JR_NEQF VBC2_M 3.0 else957_1
    MOVEF_F 2.0 VN_15
    MOVEF_F VN_M VI_15
    WRITE32 ENDSUB_B3_2:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B3_2
CALLSUB958:
    ADDF VN_M 1.0 VN_M
  else957_1:
  endif957:
    JR_NEQF VBC2_M 2.0 else960_1
    MOVEF_F 2.0 VN_13
    MOVEF_F VN_M VI_13
    WRITE32 ENDSUB_B2_2:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B2_2
CALLSUB961:
    ADDF VN_M 1.0 VN_M
  else960_1:
  endif960:
    JR_NEQF VWC2_M 2.0 else963_1
    MOVEF_F 2.0 VN_12
    MOVEF_F VN_M VI_12
    WRITE32 ENDSUB_W2_2:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W2_2
CALLSUB964:
    ADDF VN_M 1.0 VN_M
  else963_1:
  endif963:
    JR_NEQF VWC2_M 4.0 else966_1
    MOVEF_F 2.0 VN_16
    MOVEF_F VN_M VI_16
    WRITE32 ENDSUB_W4_2:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W4_2
CALLSUB967:
    ADDF VN_M 1.0 VN_M
  else966_1:
  endif966:
    JR_NEQF VBC2_M 4.0 else969_1
    MOVEF_F 2.0 VN_17
    MOVEF_F VN_M VI_17
    WRITE32 ENDSUB_B4_2:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B4_2
CALLSUB970:
    ADDF VN_M 1.0 VN_M
  else969_1:
  endif969:
    JR_NEQF VWC2_M 1.0 else972_1
    MOVEF_F 2.0 VN_10
    MOVEF_F VN_M VI_10
    WRITE32 ENDSUB_W1_2:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W1_2
CALLSUB973:
    ADDF VN_M 1.0 VN_M
  else972_1:
  endif972:
    JR_NEQF VBC2_M 1.0 else975_1
    MOVEF_F 2.0 VN_11
    MOVEF_F VN_M VI_11
    WRITE32 ENDSUB_B1_2:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B1_2
CALLSUB976:
    ADDF VN_M 1.0 VN_M
  else975_1:
  endif975:
    MOVEF_F 650.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB978:
  while979:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile979
  whilebody979:
    WRITE32 ENDSUB_LINE2:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB981:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody979
  endwhile979:
    WRITE32 ENDSUB_LEFT:CALLSUB983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB983:
    MOVEF_F 50.0 VMM_M
    DATAF tmpf984
    DATA8 flag984
    DIVF VMM_M 194.68 tmpf984
    CP_EQF 0.0 194.68 flag984
    SELECTF flag984 0.0 tmpf984 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while987:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf991
    DATA8 flag991
    DIVF F.1 2.0 tmpf991
    CP_EQF 0.0 2.0 flag991
    SELECTF flag991 0.0 tmpf991 F.0

    JR_GTEQF F.0 VL_M endwhile987
  whilebody987:
    WRITE32 ENDSUB_LINE3:CALLSUB992 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB992:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf996
    DATA8 flag996
    DIVF F.1 2.0 tmpf996
    CP_EQF 0.0 2.0 flag996
    SELECTF flag996 0.0 tmpf996 F.0

    JR_LTF F.0 VL_M whilebody987
  endwhile987:
    MOVEF_F 300.0 VMM_M
    DATAF tmpf997
    DATA8 flag997
    DIVF VMM_M 194.68 tmpf997
    CP_EQF 0.0 194.68 flag997
    SELECTF flag997 0.0 tmpf997 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while1000:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1004
    DATA8 flag1004
    DIVF F.1 2.0 tmpf1004
    CP_EQF 0.0 2.0 flag1004
    SELECTF flag1004 0.0 tmpf1004 F.0

    JR_GTEQF F.0 VL_M endwhile1000
  whilebody1000:
    WRITE32 ENDSUB_LINE2:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1005:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1009
    DATA8 flag1009
    DIVF F.1 2.0 tmpf1009
    CP_EQF 0.0 2.0 flag1009
    SELECTF flag1009 0.0 tmpf1009 F.0

    JR_LTF F.0 VL_M whilebody1000
  endwhile1000:
  while1010:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 or1011
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile1010
  or1011:
  whilebody1010:
    WRITE32 ENDSUB_LINE3:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1014:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody1010
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody1010
  endwhile1010:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1017:
    MOVEF_F 40.0 VGRAD_5
    MOVEF_F 50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB1018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB1018:
    MOVEF_F 100.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1019:
    CALL MOTOR.STOP 'AD' 'true'
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp VTIME_M
    CALL LCD.CLEAR
    DATAF tmpf1023
    DATA8 flag1023
    DIVF VTIME_M 1000.0 tmpf1023
    CP_EQF 0.0 1000.0 flag1023
    SELECTF flag1023 0.0 tmpf1023 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    WRITE32 ENDSUB_FRZ:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_FRZ
CALLSUB1026:
ENDTHREAD:
    RETURN
SUB_SEN1:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN1_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX1_M VMIN1_M F.1
    DATAF tmpf11
    DATA8 flag11
    DIVF F.0 F.1 tmpf11
    CP_EQF 0.0 F.1 flag11
    SELECTF flag11 0.0 tmpf11 VS1_M

RETSUB_SEN1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SEN1:
SUB_SEN2:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf16
    DATA8 flag16
    DIVF F.0 F.1 tmpf16
    CP_EQF 0.0 F.1 flag16
    SELECTF flag16 0.0 tmpf16 VS2_M

RETSUB_SEN2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SEN2:
SUB_LINE1:
    WRITE32 ENDSUB_SEN1:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB17:
    WRITE32 ENDSUB_SEN2:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB18:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK1_M F.1
    ADDF VV1_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK1_M F.1
    SUBF VV1_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE1:
SUB_LINE2:
    WRITE32 ENDSUB_SEN1:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB26:
    WRITE32 ENDSUB_SEN2:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB27:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK2_M F.1
    ADDF VV2_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK2_M F.1
    SUBF VV2_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE2:
SUB_LINE3:
    WRITE32 ENDSUB_SEN1:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB35:
    WRITE32 ENDSUB_SEN2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB36:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK3_M F.1
    ADDF VV3_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK3_M F.1
    SUBF VV3_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE3:
SUB_LINE21:
    WRITE32 ENDSUB_SEN2:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB44:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 30.0 VU_M
    MULF VU_M VK21_M F.1
    ADDF VV21_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VU_M VK21_M F.1
    SUBF VV21_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_LINE21:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE21:
SUB_LINE31:
    WRITE32 ENDSUB_SEN2:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB53:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 30.0 VU_M
    MULF VU_M VK31_M F.1
    ADDF VV31_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VU_M VK31_M F.1
    SUBF VV31_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_LINE31:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE31:
SUB_LINE_TOMM:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 184.918841175262 VL_M
  while63:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile63
  whilebody63:
    WRITE32 ENDSUB_LINE3:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB65:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody63
  endwhile63:
    MOVEF_F 20.0 VV_M
    MOVEF_F 0.55 VK_M
    SUBF VMM_M 100.0 F.1
    DATAF tmpf68
    DATA8 flag68
    DIVF F.1 194.68 tmpf68
    CP_EQF 0.0 194.68 flag68
    SELECTF flag68 0.0 tmpf68 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while71:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf75
    DATA8 flag75
    DIVF F.1 2.0 tmpf75
    CP_EQF 0.0 2.0 flag75
    SELECTF flag75 0.0 tmpf75 F.0

    JR_GTEQF F.0 VL_M endwhile71
  whilebody71:
    WRITE32 ENDSUB_SEN1:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB76:
    WRITE32 ENDSUB_SEN2:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB77:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK_M F.1
    ADDF VV_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK_M F.1
    SUBF VV_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.1
    CALL MOTOR.GETCOUNT 'C' F.2
    ADDF F.1 F.2 F.0
    DATAF tmpf88
    DATA8 flag88
    DIVF F.0 2.0 tmpf88
    CP_EQF 0.0 2.0 flag88
    SELECTF flag88 0.0 tmpf88 VDIS_M

    DATAF tmpf89
    DATA8 flag89
    DIVF VDIS_M 360.0 tmpf89
    CP_EQF 0.0 360.0 flag89
    SELECTF flag89 0.0 tmpf89 F.0

    MULF F.0 194.68 VDIS_M
    JR_LTEQF VMM_M 1150.0 else91_1
    MOVEF_F 0.8 VT_M
    JR endif91
  else91_1:
    JR_LTEQF VMM_M 350.0 else91_2
    MOVEF_F 0.6 VT_M
    JR endif91
  else91_2:
    MOVEF_F 0.4 VT_M
    MOVEF_F 40.0 VV_M
  else91_3:
  endif91:
    MULF VMM_M 0.4 F.0
    JR_GTEQF VDIS_M F.0 else92_1
    JR_GTEQF VV_M 95.0 else92_1
    ADDF VV_M 0.5 VV_M
    JR endif92
  else92_1:
    MULF VMM_M VT_M F.0
    JR_LTEQF VDIS_M F.0 else92_2
    JR_LTEQF VV_M 15.0 else92_2
    SUBF VV_M 0.5 VV_M
  else92_2:
  endif92:
    JR_GTEQF VV_M 35.0 else97_1
    MOVEF_F 0.9 VK_M
    JR endif97
  else97_1:
    JR_GTEQF VV_M 55.0 else97_2
    MOVEF_F 0.7 VK_M
    JR endif97
  else97_2:
    JR_GTEQF VV_M 100.0 else97_3
    MOVEF_F 0.75 VK_M
  else97_3:
  endif97:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf101
    DATA8 flag101
    DIVF F.1 2.0 tmpf101
    CP_EQF 0.0 2.0 flag101
    SELECTF flag101 0.0 tmpf101 F.0

    JR_LTF F.0 VL_M whilebody71
  endwhile71:
RETSUB_LINE_TOMM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE_TOMM:
SUB_LEFT:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB102:
    MOVEF_F 60.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB103:
    CALL MOTOR.STARTPOWER 'B' -30.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while106:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 30.0 endwhile106
  whilebody106:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 30.0 whilebody106
  endwhile106:
  while109:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile109
  whilebody109:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody109
  endwhile109:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 20.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB113:
RETSUB_LEFT:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT:
SUB_RIGHT:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB114:
    MOVEF_F 60.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB115:
    CALL MOTOR.STARTPOWER 'B' 30.0
    CALL MOTOR.STARTPOWER 'C' -30.0
  while118:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 30.0 endwhile118
  whilebody118:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 30.0 whilebody118
  endwhile118:
  while121:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile121
  whilebody121:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody121
  endwhile121:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 20.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB125:
RETSUB_RIGHT:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT:
SUB_AROUND:
    MOVEF_F 140.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB126:
    CALL MOTOR.STARTPOWER 'B' -40.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 30.0 endwhile129
  whilebody129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 30.0 whilebody129
  endwhile129:
  while132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile132
  whilebody132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody132
  endwhile132:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 30.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB136:
RETSUB_AROUND:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_AROUND:
SUB_TOLINE_1:
    CALL MOTOR.RESETCOUNT 'BC'
    DATA8 layer138
	DATA8 no138
	DATA8 mode8138
	
	MOVEF_8 2.0 no138
	SUB8 no138 1 no138
	DIV8 no138 4 layer138
	MATH MOD8 no138 4 no138

	MOVEF_8 2.0 mode8138
	
	INPUT_DEVICE READY_RAW layer138 no138 0 mode8138 0
    DATA8 layer139
	DATA8 no139
	DATA8 mode8139
	
	MOVEF_8 3.0 no139
	SUB8 no139 1 no139
	DIV8 no139 4 layer139
	MATH MOD8 no139 4 no139

	MOVEF_8 2.0 mode8139
	
	INPUT_DEVICE READY_RAW layer139 no139 0 mode8139 0
  while140:
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_NEQF F.0 6.0 or141
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_EQF F.0 6.0 endwhile140
  or141:
  whilebody140:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_NEQF F.0 6.0 whilebody140
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 whilebody140
  endwhile140:
    DATA8 layer155
	DATA8 no155
	DATA8 mode8155
	
	MOVEF_8 2.0 no155
	SUB8 no155 1 no155
	DIV8 no155 4 layer155
	MATH MOD8 no155 4 no155

	MOVEF_8 0.0 mode8155
	
	INPUT_DEVICE READY_RAW layer155 no155 0 mode8155 0
    DATA8 layer156
	DATA8 no156
	DATA8 mode8156
	
	MOVEF_8 3.0 no156
	SUB8 no156 1 no156
	DIV8 no156 4 layer156
	MATH MOD8 no156 4 no156

	MOVEF_8 0.0 mode8156
	
	INPUT_DEVICE READY_RAW layer156 no156 0 mode8156 0
  while157:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile157
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile157
  whilebody157:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 and169
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody157
  and169:
  endwhile157:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_TOLINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOLINE_1:
SUB_MOVE_2:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 15.0 VV_2
    JR_GTEQF VSP_2 0.0 else174_1
    MULF VV_2 -1.0 VV_2
  else174_1:
  endif174:
  while176:
    JR_GTF VDIS_2 VL_2 endwhile176
  whilebody176:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_2
    MULF VU_2 0.8 F.1
    ADDF VV_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_2 0.8 F.1
    SUBF VV_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf189
    DATA8 flag189
    DIVF F.1 2.0 tmpf189
    CP_EQF 0.0 2.0 flag189
    SELECTF flag189 0.0 tmpf189 F.0

    MATH ABS F.0 VDIS_2
    MATH ABS VV_2 F.0
    MATH ABS VSP_2 F.1
    JR_GTEQF F.0 F.1 else191_1
    JR_LTEQF VSP_2 0.0 else194_1
    ADDF VV_2 0.2 VV_2
    JR endif194
  else194_1:
    SUBF VV_2 0.2 VV_2
  else194_2:
  endif194:
  else191_1:
  endif191:
    JR_LTEQF VDIS_2 VL_2 whilebody176
  endwhile176:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_MOVE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_MOVE_2:
SUB_TOMM_2:
    DATAF tmpf198
    DATA8 flag198
    DIVF VMM_3 194.68 tmpf198
    CP_EQF 0.0 194.68 flag198
    SELECTF flag198 0.0 tmpf198 F.0

    MULF F.0 360.0 VL_3
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F VL_3 VL_2
    MOVEF_F VSP_3 VSP_2
    WRITE32 ENDSUB_MOVE_2:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_MOVE_2
CALLSUB201:
    MOVEF_F 0.0 VSP_3
RETSUB_TOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOMM_2:
SUB_LEFT1_2:
    MULF 1092.72 VGRAD_4 F.0
    DATAF tmpf203
    DATA8 flag203
    DIVF F.0 360.0 tmpf203
    CP_EQF 0.0 360.0 flag203
    SELECTF flag203 0.0 tmpf203 VL_4

    DATAF tmpf204
    DATA8 flag204
    DIVF VL_4 200.96 tmpf204
    CP_EQF 0.0 200.96 flag204
    SELECTF flag204 0.0 tmpf204 F.0

    MULF F.0 360.0 VL_4
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'C' VSP_4
  while208:
    CALL MOTOR.GETCOUNT 'C' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 VL_4 endwhile208
  whilebody208:
    CALL MOTOR.STOP 'B' 'true'
    CALL MOTOR.GETCOUNT 'C' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 VL_4 whilebody208
  endwhile208:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_LEFT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT1_2:
SUB_RIGHT1_2:
    MULF 1092.72 VGRAD_5 F.0
    DATAF tmpf216
    DATA8 flag216
    DIVF F.0 360.0 tmpf216
    CP_EQF 0.0 360.0 flag216
    SELECTF flag216 0.0 tmpf216 VL_5

    DATAF tmpf217
    DATA8 flag217
    DIVF VL_5 200.96 tmpf217
    CP_EQF 0.0 200.96 flag217
    SELECTF flag217 0.0 tmpf217 F.0

    MULF F.0 360.0 VL_5
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' VSP_5
  while221:
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 VL_5 endwhile221
  whilebody221:
    CALL MOTOR.STOP 'C' 'true'
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 VL_5 whilebody221
  endwhile221:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_RIGHT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT1_2:
SUB_LEFT2_1:
    MULF 1092.72 VGRAD_6 F.0
    DATAF tmpf229
    DATA8 flag229
    DIVF F.0 360.0 tmpf229
    CP_EQF 0.0 360.0 flag229
    SELECTF flag229 0.0 tmpf229 VL_6

    DATAF tmpf230
    DATA8 flag230
    DIVF VL_6 200.96 tmpf230
    CP_EQF 0.0 200.96 flag230
    SELECTF flag230 0.0 tmpf230 F.0

    MULF F.0 360.0 VL_6
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' -30.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while235:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf241
    DATA8 flag241
    DIVF F.1 2.0 tmpf241
    CP_EQF 0.0 2.0 flag241
    SELECTF flag241 0.0 tmpf241 F.0

    DATAF tmpf242
    DATA8 flag242
    DIVF VL_6 2.0 tmpf242
    CP_EQF 0.0 2.0 flag242
    SELECTF flag242 0.0 tmpf242 F.1

    JR_GTF F.0 F.1 endwhile235
  whilebody235:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf248
    DATA8 flag248
    DIVF F.1 2.0 tmpf248
    CP_EQF 0.0 2.0 flag248
    SELECTF flag248 0.0 tmpf248 F.0

    DATAF tmpf249
    DATA8 flag249
    DIVF VL_6 2.0 tmpf249
    CP_EQF 0.0 2.0 flag249
    SELECTF flag249 0.0 tmpf249 F.1

    JR_LTEQF F.0 F.1 whilebody235
  endwhile235:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_LEFT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT2_1:
SUB_RIGHT2_1:
    MULF 1092.72 VGRAD_7 F.0
    DATAF tmpf252
    DATA8 flag252
    DIVF F.0 360.0 tmpf252
    CP_EQF 0.0 360.0 flag252
    SELECTF flag252 0.0 tmpf252 VL_7

    DATAF tmpf253
    DATA8 flag253
    DIVF VL_7 200.96 tmpf253
    CP_EQF 0.0 200.96 flag253
    SELECTF flag253 0.0 tmpf253 F.0

    MULF F.0 360.0 VL_7
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' 40.0
    CALL MOTOR.STARTPOWER 'C' -40.0
  while258:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf264
    DATA8 flag264
    DIVF F.1 2.0 tmpf264
    CP_EQF 0.0 2.0 flag264
    SELECTF flag264 0.0 tmpf264 F.0

    DATAF tmpf265
    DATA8 flag265
    DIVF VL_7 2.0 tmpf265
    CP_EQF 0.0 2.0 flag265
    SELECTF flag265 0.0 tmpf265 F.1

    JR_GTF F.0 F.1 endwhile258
  whilebody258:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf271
    DATA8 flag271
    DIVF F.1 2.0 tmpf271
    CP_EQF 0.0 2.0 flag271
    SELECTF flag271 0.0 tmpf271 F.0

    DATAF tmpf272
    DATA8 flag272
    DIVF VL_7 2.0 tmpf272
    CP_EQF 0.0 2.0 flag272
    SELECTF flag272 0.0 tmpf272 F.1

    JR_LTEQF F.0 F.1 whilebody258
  endwhile258:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_RIGHT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT2_1:
SUB_FRZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_FRZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_FRZ:
SUB_UP_2:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.RESETCOUNT 'AD'
    SUBF 0.0 VSPEED_8 F.0
    CALL MOTOR.SCHEDULE VMOTOR_8 F.0 0.0 165.0 0.0 'true' 

	DATA8 layer280
	DATA8 nos280
	DATA8 busy280
	CALL MOTORDECODEPORTSDESCRIPTOR VMOTOR_8 layer280 nos280
	JR_EQ8 0 nos280 motornotbusy280
  motorwaiting280:
	OUTPUT_TEST layer280 nos280 busy280
	JR_EQ8 busy280 0 motornotbusy280
	SLEEP
	JR motorwaiting280
  motornotbusy280:
    CALL MOTOR.STOP 'BC' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_UP_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_UP_2:
SUB_DOWN_2:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.STARTPOWER VMOTOR_9 VSPEED_9
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds286
	MOVEF_32 600.0 milliseconds286
	DATA32 timer286
	TIMER_WAIT milliseconds286 timer286
	TIMER_READY timer286
    CALL MOTOR.STOP 'BC' 'true'
  while288:
    CALL MOTOR.GETSPEED VMOTOR_9 F.0
    MULF VSPEED_9 0.6 F.1
    JR_LTEQF F.0 F.1 endwhile288
  whilebody288:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.GETSPEED VMOTOR_9 F.0
    MULF VSPEED_9 0.6 F.1
    JR_GTF F.0 F.1 whilebody288
  endwhile288:
    CALL MOTOR.SCHEDULE VMOTOR_9 -20.0 0.0 20.0 0.0 'true' 

	DATA8 layer294
	DATA8 nos294
	DATA8 busy294
	CALL MOTORDECODEPORTSDESCRIPTOR VMOTOR_9 layer294 nos294
	JR_EQ8 0 nos294 motornotbusy294
  motorwaiting294:
	OUTPUT_TEST layer294 nos294 busy294
	JR_EQ8 busy294 0 motornotbusy294
	SLEEP
	JR motorwaiting294
  motornotbusy294:
    CALL MOTOR.STOP 'BC' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_DOWN_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_DOWN_2:
SUB_HSV:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C 1.0 1.0 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VR_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VG_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VB_M VRECVARRAY_M
    ADDF VR_M VG_M F.0
    ADDF F.0 VB_M VRGB_M
    JR_LTEQF VR_M VG_M else305_1
    JR_LTEQF VR_M VB_M else305_1
    MOVEF_F VR_M VMAX_M
    JR endif305
  else305_1:
    JR_LTEQF VG_M VR_M else305_2
    JR_LTEQF VG_M VB_M else305_2
    MOVEF_F VG_M VMAX_M
    JR endif305
  else305_2:
    JR_LTEQF VB_M VR_M else305_3
    JR_LTEQF VB_M VG_M else305_3
    MOVEF_F VB_M VMAX_M
  else305_3:
  endif305:
    JR_GTEQF VR_M VG_M else306_1
    JR_GTEQF VR_M VB_M else306_1
    MOVEF_F VR_M VMIN_M
    JR endif306
  else306_1:
    JR_GTEQF VG_M VR_M else306_2
    JR_GTEQF VG_M VB_M else306_2
    MOVEF_F VG_M VMIN_M
    JR endif306
  else306_2:
    JR_GTEQF VB_M VR_M else306_3
    JR_GTEQF VB_M VG_M else306_3
    MOVEF_F VB_M VMIN_M
  else306_3:
  endif306:
    JR_NEQF VMAX_M VMIN_M else307_1
    MOVEF_F 0.0 VH_M
    JR endif307
  else307_1:
    JR_NEQF VR_M VMAX_M else308_1
    JR_LTF VG_M VB_M else309_1
    SUBF VG_M VB_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf313
    DATA8 flag313
    DIVF F.0 F.1 tmpf313
    CP_EQF 0.0 F.1 flag313
    SELECTF flag313 0.0 tmpf313 VH_M

    JR endif309
  else309_1:
    SUBF VG_M VB_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf317
    DATA8 flag317
    DIVF F.1 F.2 tmpf317
    CP_EQF 0.0 F.2 flag317
    SELECTF flag317 0.0 tmpf317 F.0

    ADDF F.0 360.0 VH_M
  else309_2:
  endif309:
    JR endif308
  else308_1:
    JR_NEQF VMAX_M VG_M else319_1
    SUBF VB_M VR_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf323
    DATA8 flag323
    DIVF F.1 F.2 tmpf323
    CP_EQF 0.0 F.2 flag323
    SELECTF flag323 0.0 tmpf323 F.0

    ADDF F.0 120.0 VH_M
    JR endif319
  else319_1:
    SUBF VR_M VG_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf328
    DATA8 flag328
    DIVF F.1 F.2 tmpf328
    CP_EQF 0.0 F.2 flag328
    SELECTF flag328 0.0 tmpf328 F.0

    ADDF F.0 240.0 VH_M
  else319_2:
  endif319:
  else308_2:
  endif308:
  else307_2:
  endif307:
    JR_NEQF VMAX_M 0.0 else330_1
    MOVEF_F 0.0 VS_M
    JR endif330
  else330_1:
    DATAF tmpf331
    DATA8 flag331
    DIVF VMIN_M VMAX_M tmpf331
    CP_EQF 0.0 VMAX_M flag331
    SELECTF flag331 0.0 tmpf331 F.0

    SUBF 1.0 F.0 VS_M
  else330_2:
  endif330:
    MOVEF_F VMAX_M VV_M
    MULF VS_M 100.0 VS_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 100.0 VMIN_M
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_COL:
    WRITE32 ENDSUB_HSV:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB334:
    JR_LTEQF VV_M 22.0 else335_1
    JR_LTEQF VRGB_M 100.0 else336_1
    MOVEF_F 6.0 VCOL_M
    JR endif336
  else336_1:
    MOVEF_F 1.0 VCOL_M
  else336_2:
  endif336:
    JR endif335
  else335_1:
    MOVEF_F 0.0 VCOL_M
  else335_2:
  endif335:
RETSUB_COL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_COL:
SUB_TOBASE:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 100.0 VMM_M
    DATAF tmpf338
    DATA8 flag338
    DIVF VMM_M 194.68 tmpf338
    CP_EQF 0.0 194.68 flag338
    SELECTF flag338 0.0 tmpf338 F.0

    MULF F.0 360.0 VL_M
  while340:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile340
  whilebody340:
    WRITE32 ENDSUB_LINE3:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB342:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody340
  endwhile340:
  while344:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile344
  whilebody344:
    WRITE32 ENDSUB_SEN1:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB346:
    WRITE32 ENDSUB_SEN2:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB347:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M 0.55 F.1
    ADDF 40.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.55 F.1
    SUBF 40.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody344
  endwhile344:
RETSUB_TOBASE:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOBASE:
SUB_W1_2:
    MOVEF_F 275.0 VMM_3
    MOVEF_F -25.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB356:
    MOVEF_F 90.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB357:
    MOVEF_F 130.0 VL_10
    JR_NEQF VN_10 2.0 else358_1
    SUBF VL_10 40.0 VL_10
  else358_1:
  endif358:
    MOVEF_F VL_10 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB360:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB361:
    SUBF VL_10 30.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB363:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB364:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB365:
    JR_NEQF VI_10 1.0 else366_1
    WRITE32 ENDSUB_LEFT:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB367:
    JR endif366
  else366_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB368:
    WRITE32 ENDSUB_TOBASE:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB369:
  else366_2:
  endif366:
RETSUB_W1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W1_2:
SUB_B1_2:
    MOVEF_F 90.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB370:
    MOVEF_F 95.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB371:
    MOVEF_F 120.0 VL_11
    JR_NEQF VN_11 2.0 else372_1
    SUBF VL_11 45.0 VL_11
  else372_1:
  endif372:
    MOVEF_F VL_11 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB374:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB375:
    SUBF VL_11 30.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB377:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB378:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB379:
    JR_NEQF VI_11 1.0 else380_1
    WRITE32 ENDSUB_LEFT:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB381:
    JR endif380
  else380_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB382:
    WRITE32 ENDSUB_TOBASE:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB383:
  else380_2:
  endif380:
RETSUB_B1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B1_2:
SUB_W2_2:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB384:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB385:
    CALL MOTOR.START 'BC' -20.0
    DATA32 milliseconds387
	MOVEF_32 1000.0 milliseconds387
	DATA32 timer387
	TIMER_WAIT milliseconds387 timer387
	TIMER_READY timer387
    MOVEF_F 0.0 VL_12
    JR_NEQF VN_12 2.0 else388_1
    ADDF VL_12 40.0 VL_12
  else388_1:
  endif388:
    MOVEF_F VL_12 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB390:
    MOVEF_F 95.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB391:
    MOVEF_F -25.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB392:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB393:
    MOVEF_F 200.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB394:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB395:
    MOVEF_F 160.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB396:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB397:
    MOVEF_F 45.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB398:
    MOVEF_F 70.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB399:
    MOVEF_F 50.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB400:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB401:
    JR_NEQF VI_12 1.0 else402_1
    WRITE32 ENDSUB_LEFT:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB403:
    JR endif402
  else402_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB404:
    WRITE32 ENDSUB_TOBASE:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB405:
  else402_2:
  endif402:
RETSUB_W2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W2_2:
SUB_B2_2:
    MOVEF_F 25.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB406:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB407:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB408:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds410
	MOVEF_32 1300.0 milliseconds410
	DATA32 timer410
	TIMER_WAIT milliseconds410 timer410
	TIMER_READY timer410
    MOVEF_F 30.0 VL_13
    JR_NEQF VN_13 2.0 else411_1
    ADDF VL_13 45.0 VL_13
  else411_1:
  endif411:
    MOVEF_F VL_13 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB413:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB414:
    MOVEF_F 40.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB415:
    MOVEF_F 290.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB416:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB417:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB418:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB419:
    MOVEF_F 130.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB420:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB421:
    JR_NEQF VI_13 1.0 else422_1
    WRITE32 ENDSUB_LEFT:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB423:
    JR endif422
  else422_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB424:
    WRITE32 ENDSUB_TOBASE:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB425:
  else422_2:
  endif422:
RETSUB_B2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B2_2:
SUB_W3_2:
    MOVEF_F 320.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB426:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB427:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB428:
    CALL MOTOR.START 'BC' -20.0
    DATA32 milliseconds430
	MOVEF_32 1000.0 milliseconds430
	DATA32 timer430
	TIMER_WAIT milliseconds430 timer430
	TIMER_READY timer430
    MOVEF_F 15.0 VL_14
    JR_NEQF VN_14 2.0 else431_1
    ADDF VL_14 25.0 VL_14
  else431_1:
  endif431:
    MOVEF_F VL_14 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB433:
    MOVEF_F 93.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB434:
    MOVEF_F 30.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB435:
    MOVEF_F 25.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB436:
    MOVEF_F 290.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB437:
    DATA32 milliseconds438
	MOVEF_32 100.0 milliseconds438
	DATA32 timer438
	TIMER_WAIT milliseconds438 timer438
	TIMER_READY timer438
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB439:
    MOVEF_F 190.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB440:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB441:
    MOVEF_F 500.0 VMM_3
    MOVEF_F -70.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB442:
    MOVEF_F 100.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB443:
    MOVEF_F 50.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB444:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB445:
    JR_NEQF VI_14 1.0 else446_1
    WRITE32 ENDSUB_LEFT:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB447:
    JR endif446
  else446_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB448:
    WRITE32 ENDSUB_TOBASE:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB449:
  else446_2:
  endif446:
RETSUB_W3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W3_2:
SUB_B3_2:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB450:
    DATA32 milliseconds451
	MOVEF_32 100.0 milliseconds451
	DATA32 timer451
	TIMER_WAIT milliseconds451 timer451
	TIMER_READY timer451
    MOVEF_F 90.0 VL_15
    JR_NEQF VN_15 2.0 else452_1
    SUBF VL_15 50.0 VL_15
  else452_1:
  endif452:
    DATA32 milliseconds454
	MOVEF_32 100.0 milliseconds454
	DATA32 timer454
	TIMER_WAIT milliseconds454 timer454
	TIMER_READY timer454
    MOVEF_F VL_15 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB455:
    DATA32 milliseconds456
	MOVEF_32 100.0 milliseconds456
	DATA32 timer456
	TIMER_WAIT milliseconds456 timer456
	TIMER_READY timer456
    MOVEF_F 95.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB457:
    DATA32 milliseconds458
	MOVEF_32 100.0 milliseconds458
	DATA32 timer458
	TIMER_WAIT milliseconds458 timer458
	TIMER_READY timer458
    MOVEF_F 45.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB459:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB460:
    MOVEF_F 310.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB461:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB462:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB463:
    MOVEF_F 120.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB464:
    MOVEF_F -20.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB465:
    JR_NEQF VI_15 1.0 else466_1
    WRITE32 ENDSUB_LEFT:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB467:
    JR endif466
  else466_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB468:
    WRITE32 ENDSUB_TOBASE:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB469:
  else466_2:
  endif466:
RETSUB_B3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B3_2:
SUB_W4_2:
    MOVEF_F 130.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB470:
    MOVEF_F 93.0 VGRAD_4
    MOVEF_F 50.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB471:
    JR_NEQF VN_16 2.0 else472_1
    MOVEF_F 15.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB473:
    JR endif472
  else472_1:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB474:
  else472_2:
  endif472:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB475:
    MOVEF_F 45.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB476:
    MOVEF_F 105.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB477:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB478:
    MOVEF_F 280.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB479:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB480:
    JR_NEQF VN_16 2.0 else481_1
    MOVEF_F 50.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB482:
    JR endif481
  else481_1:
    MOVEF_F 30.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB483:
  else481_2:
  endif481:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB484:
    JR_NEQF VI_16 1.0 else485_1
    WRITE32 ENDSUB_LEFT:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB486:
    JR endif485
  else485_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB487:
    WRITE32 ENDSUB_TOBASE:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB488:
  else485_2:
  endif485:
RETSUB_W4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W4_2:
SUB_B4_2:
    MOVEF_F 280.0 VMM_3
    MOVEF_F 60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB489:
    MOVEF_F 100.0 VGRAD_4
    MOVEF_F 50.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB490:
    JR_NEQF VN_17 2.0 else491_1
    MOVEF_F 10.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB492:
    JR endif491
  else491_1:
    MOVEF_F 25.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB493:
  else491_2:
  endif491:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB494:
    MOVEF_F 60.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB495:
    MOVEF_F 110.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB496:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB497:
    MOVEF_F 500.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB498:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB499:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB500:
    JR_NEQF VI_17 1.0 else501_1
    WRITE32 ENDSUB_LEFT:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB502:
    JR endif501
  else501_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB503:
    WRITE32 ENDSUB_TOBASE:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB504:
  else501_2:
  endif501:
RETSUB_B4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B4_2:
SUB_TH_UP:
    CALL MOTOR.SCHEDULE 'AD' -50.0 0.0 170.0 0.0 'true' 

	DATA8 layer505
	DATA8 nos505
	DATA8 busy505
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer505 nos505
	JR_EQ8 0 nos505 motornotbusy505
  motorwaiting505:
	OUTPUT_TEST layer505 nos505 busy505
	JR_EQ8 busy505 0 motornotbusy505
	SLEEP
	JR motorwaiting505
  motornotbusy505:
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_TH_UP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TH_UP:
SUB_TH_DOWN:
    CALL MOTOR.STARTPOWER 'AD' 50.0
    DATA32 milliseconds508
	MOVEF_32 600.0 milliseconds508
	DATA32 timer508
	TIMER_WAIT milliseconds508 timer508
	TIMER_READY timer508
  while509:
    CALL MOTOR.GETSPEED 'AD' F.0
    JR_LTEQF F.0 35.0 endwhile509
  whilebody509:
    CALL MOTOR.GETSPEED 'AD' F.0
    JR_GTF F.0 35.0 whilebody509
  endwhile509:
    CALL MOTOR.STARTPOWER 'AD' 10.0
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_TH_DOWN:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TH_DOWN:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
