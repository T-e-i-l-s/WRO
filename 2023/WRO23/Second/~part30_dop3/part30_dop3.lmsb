DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_DEG_5
DATAF VLV_SP_5
DATAF VLV_MM_2
DATAF VLV_V_2
DATAF VLV_DEG_3
DATAF VLV_SP_3
DATAF VLV_DEG_4
DATAF VLV_SP_4
DATAS VLV_MOTOR_12 252
DATAF VLV_SP_12
DATAF VLV_SP_10
DATAF VLV_DEG_6
DATAF VLV_SP_6
DATAF VLV_SP_11
DATAS VLV_MOTOR_13 252
DATAF VLV_SP_13
DATAF VGV_K
DATAF VGV_V
DATAF VGV_MM
DATAF VGV_K_ACCEL
DATAF VGV_MAX1
DATAF VGV_MIN1
DATAF VGV_MAX2
DATAF VGV_MIN2
DATAS VGV_FLAG 252
DATAF VGV_W
DATAF VGV_B
DATAF VGV_U
DATAF VGV_L
ARRAY16 VGV_RES 2
DATAF VGV_I
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_NUM
DATAF VGV_R
DATAF VGV_G
DATAF VGV_RGB
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_S
DATAF VGV_W2
DATAF VGV_B2
DATAF VGV_W1
DATAF VGV_B1
DATAF VGV_COL
DATAF VGV_ZONE1
DATAF VGV_SP
DATAF VGV_ZONE2
DATAF VGV_TIME
DATAF VGV_S1
DATAF VGV_S2
DATAF VLV_L_2
DATAF VLV_SP_2
DATAF VLV_DEG_2
DATAF VLV_U_2
DATAF VLV_L_3
DATAF VLV_V_3
DATAF VLV_L_4
DATAF VLV_V_4
DATAF VLV_L_5
DATAF VLV_V_5
DATAF VLV_L_6
DATAF VLV_V_6
DATAF VLV_U_10
DATAF VLV_WHITE_11
DATAF VLV_U_11
DATAF VLV_L_11
DATA32 RUNCOUNTER_F_TH_DOWN_0
DATA32 RUNCOUNTER_F_BEEP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_SP_5
    MOVEF_F 0.0 VLV_MM_2
    MOVEF_F 0.0 VLV_V_2
    MOVEF_F 0.0 VLV_DEG_3
    MOVEF_F 0.0 VLV_SP_3
    MOVEF_F 0.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_SP_4
    STRINGS DUPLICATE '' VLV_MOTOR_12
    MOVEF_F 0.0 VLV_SP_12
    MOVEF_F 0.0 VLV_SP_10
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_SP_6
    MOVEF_F 0.0 VLV_SP_11
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_SP_13
    MOVEF_F 0.0 VGV_K
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_MM
    MOVEF_F 0.0 VGV_K_ACCEL
    MOVEF_F 0.0 VGV_MAX1
    MOVEF_F 0.0 VGV_MIN1
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MIN2
    STRINGS DUPLICATE '' VGV_FLAG
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_L
    CALL ARRAYCREATE_FLOAT VGV_RES
    MOVEF_F 0.0 VGV_I
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_NUM
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_RGB
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_W2
    MOVEF_F 0.0 VGV_B2
    MOVEF_F 0.0 VGV_W1
    MOVEF_F 0.0 VGV_B1
    MOVEF_F 0.0 VGV_COL
    MOVEF_F 0.0 VGV_ZONE1
    MOVEF_F 0.0 VGV_SP
    MOVEF_F 0.0 VGV_ZONE2
    MOVEF_F 0.0 VGV_TIME
    MOVEF_F 0.0 VGV_S1
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VLV_L_2
    MOVEF_F 0.0 VLV_SP_2
    MOVEF_F 0.0 VLV_DEG_2
    MOVEF_F 0.0 VLV_U_2
    MOVEF_F 0.0 VLV_L_3
    MOVEF_F 0.0 VLV_V_3
    MOVEF_F 0.0 VLV_L_4
    MOVEF_F 0.0 VLV_V_4
    MOVEF_F 0.0 VLV_L_5
    MOVEF_F 0.0 VLV_V_5
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_V_6
    MOVEF_F 0.0 VLV_U_10
    MOVEF_F 0.0 VLV_WHITE_11
    MOVEF_F 0.0 VLV_U_11
    MOVEF_F 0.0 VLV_L_11
    MOVE32_32 0 RUNCOUNTER_F_TH_DOWN_0
    MOVE32_32 0 RUNCOUNTER_F_BEEP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_TH_DOWN_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_TH_DOWN_0 0
    CALL GETANDINC32 RUNCOUNTER_F_TH_DOWN_0 -1 RUNCOUNTER_F_TH_DOWN_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_BEEP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_BEEP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_BEEP_0 -1 RUNCOUNTER_F_BEEP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_TH_DOWN_0
subcall PROGRAM_F_BEEP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch941
    WRITE32 ENDSUB_F_TH_DOWN_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TH_DOWN_0
  dispatch941:
    JR_NEQ32 SUBPROGRAM 1 dispatch942
    WRITE32 ENDSUB_F_BEEP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
  dispatch942:
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_SP_5
    MOVEF_F 0.0 VLV_MM_2
    MOVEF_F 0.0 VLV_V_2
    MOVEF_F 0.0 VLV_DEG_3
    MOVEF_F 0.0 VLV_SP_3
    MOVEF_F 0.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_SP_4
    STRINGS DUPLICATE '' VLV_MOTOR_12
    MOVEF_F 0.0 VLV_SP_12
    MOVEF_F 0.0 VLV_SP_10
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_SP_6
    MOVEF_F 0.0 VLV_SP_11
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_SP_13
    MOVEF_F 0.0 VGV_K
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_MM
    MOVEF_F 0.0 VGV_K_ACCEL
    MOVEF_F 0.0 VGV_MAX1
    MOVEF_F 0.0 VGV_MIN1
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MIN2
    STRINGS DUPLICATE '' VGV_FLAG
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RES
    MOVEF_F 0.0 VGV_I
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_NUM
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_RGB
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_W2
    MOVEF_F 0.0 VGV_B2
    MOVEF_F 0.0 VGV_W1
    MOVEF_F 0.0 VGV_B1
    MOVEF_F 0.0 VGV_COL
    MOVEF_F 0.0 VGV_ZONE1
    MOVEF_F 0.0 VGV_SP
    MOVEF_F 0.0 VGV_ZONE2
    MOVEF_F 0.0 VGV_TIME
    TIMER_READ timeMC1
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 2.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    CALL MOTOR.INVERT 'AB'
    MOVEF_F 1.17 VGV_K
    MOVEF_F 30.0 VGV_V
    MOVEF_F 0.0 VGV_MM
    MOVEF_F 0.0 VGV_K_ACCEL
    MOVEF_F 0.0 VGV_MAX1
    MOVEF_F 100.0 VGV_MIN1
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 100.0 VGV_MIN2
    STRINGS DUPLICATE 'false' VGV_FLAG
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_B
    DATA32 tmp8
    CALL GETANDINC32 RUNCOUNTER_F_TH_DOWN_0 1  RUNCOUNTER_F_TH_DOWN_0 tmp8
    JR_NEQ32 0 tmp8 alreadylaunched8
    OBJECT_START TF_TH_DOWN_0
  alreadylaunched8:
    MOVEF_F 15.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB9:
    MOVEF_F 85.0 VLV_MM_2
    MOVEF_F 60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB10:
    CALL MOTOR.RESETCOUNT 'BC'
  while12:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile12
  whilebody12:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VGV_U
    MULF VGV_U 0.8 F.1
    ADDF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VGV_U 0.8 F.1
    SUBF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody12
  endwhile12:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 258.886377645367 VGV_L
  while25:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf29
    DATA8 flag29
    DIVF F.1 2.0 tmpf29
    CP_EQF 0.0 2.0 flag29
    SELECTF flag29 0.0 tmpf29 F.0

    JR_GTEQF F.0 VGV_L endwhile25
  whilebody25:
    WRITE32 ENDSUB_F_LINE3_1SENS_0:CALLSUB30 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE3_1SENS_0
CALLSUB30:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf34
    DATA8 flag34
    DIVF F.1 2.0 tmpf34
    CP_EQF 0.0 2.0 flag34
    SELECTF flag34 0.0 tmpf34 F.0

    JR_LTF F.0 VGV_L whilebody25
  endwhile25:
    CALL MOTOR.RESETCOUNT 'BC'
  while36:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 or37
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile36
  or37:
  whilebody36:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VGV_U
    MULF VGV_U 0.8 F.1
    ADDF -30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VGV_U 0.8 F.1
    SUBF -30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody36
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody36
  endwhile36:
    MOVEF_F 40.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB51:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 110.951304705157 VGV_L
  while53:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf57
    DATA8 flag57
    DIVF F.1 2.0 tmpf57
    CP_EQF 0.0 2.0 flag57
    SELECTF flag57 0.0 tmpf57 F.0

    JR_GTEQF F.0 VGV_L endwhile53
  whilebody53:
    WRITE32 ENDSUB_F_LINE3_1SENS_0:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE3_1SENS_0
CALLSUB58:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf62
    DATA8 flag62
    DIVF F.1 2.0 tmpf62
    CP_EQF 0.0 2.0 flag62
    SELECTF flag62 0.0 tmpf62 F.0

    JR_LTF F.0 VGV_L whilebody53
  endwhile53:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 184.918841175262 VGV_L
  while64:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf68
    DATA8 flag68
    DIVF F.1 2.0 tmpf68
    CP_EQF 0.0 2.0 flag68
    SELECTF flag68 0.0 tmpf68 F.0

    JR_GTEQF F.0 VGV_L endwhile64
  whilebody64:
    WRITE32 ENDSUB_F_LINE2_1SENS_0:CALLSUB69 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE2_1SENS_0
CALLSUB69:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf73
    DATA8 flag73
    DIVF F.1 2.0 tmpf73
    CP_EQF 0.0 2.0 flag73
    SELECTF flag73 0.0 tmpf73 F.0

    JR_LTF F.0 VGV_L whilebody64
  endwhile64:
    CALL VECTOR.INIT 4.0 0.0 VGV_RES
    MOVEF_F 0.0 VGV_I
  for75:
    JR_GTF VGV_I 3.0 endfor75
  forbody75:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB76:
    CALL ARRAYSTORE_FLOAT VGV_I VGV_RGB VGV_RES
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 83.2134785288679 VGV_L
  while79:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf83
    DATA8 flag83
    DIVF F.1 2.0 tmpf83
    CP_EQF 0.0 2.0 flag83
    SELECTF flag83 0.0 tmpf83 F.0

    JR_GTEQF F.0 VGV_L endwhile79
  whilebody79:
    WRITE32 ENDSUB_F_LINE2_1SENS_0:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE2_1SENS_0
CALLSUB84:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf88
    DATA8 flag88
    DIVF F.1 2.0 tmpf88
    CP_EQF 0.0 2.0 flag88
    SELECTF flag88 0.0 tmpf88 F.0

    JR_LTF F.0 VGV_L whilebody79
  endwhile79:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody75
  endfor75:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 0.0 VGV_W2
    MOVEF_F 0.0 VGV_B2
    MOVEF_F 0.0 VGV_MAX1
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_I
  for91:
    JR_GTF VGV_I 3.0 endfor91
  forbody91:
    CALL ARRAYGET_FLOAT VGV_I VGV_NUM VGV_RES
    JR_LTEQF VGV_NUM VGV_MAX1 else93_1
    MOVEF_F VGV_MAX1 VGV_MAX2
    MOVEF_F VGV_W2 VGV_B2
    MOVEF_F VGV_NUM VGV_MAX1
    MOVEF_F VGV_I VGV_W2
    JR endif93
  else93_1:
    JR_LTEQF VGV_NUM VGV_MAX2 else93_2
    MOVEF_F VGV_NUM VGV_MAX2
    MOVEF_F VGV_I VGV_B2
  else93_2:
  endif93:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody91
  endfor91:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 147.93507294021 VGV_L
  while96:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf100
    DATA8 flag100
    DIVF F.1 2.0 tmpf100
    CP_EQF 0.0 2.0 flag100
    SELECTF flag100 0.0 tmpf100 F.0

    JR_GTEQF F.0 VGV_L endwhile96
  whilebody96:
    WRITE32 ENDSUB_F_LINE2_1SENS_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE2_1SENS_0
CALLSUB101:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf105
    DATA8 flag105
    DIVF F.1 2.0 tmpf105
    CP_EQF 0.0 2.0 flag105
    SELECTF flag105 0.0 tmpf105 F.0

    JR_LTF F.0 VGV_L whilebody96
  endwhile96:
    MOVEF_F 0.0 VGV_W1
    MOVEF_F 0.0 VGV_B1
    MOVEF_F 0.0 VGV_I
  for106:
    JR_GTF VGV_I 3.0 endfor106
  forbody106:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB107:
    CALL ARRAYSTORE_FLOAT VGV_I VGV_RGB VGV_RES
    JR_GTEQF VGV_I 2.0 else109_1
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 83.2134785288679 VGV_L
  while111:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf115
    DATA8 flag115
    DIVF F.1 2.0 tmpf115
    CP_EQF 0.0 2.0 flag115
    SELECTF flag115 0.0 tmpf115 F.0

    JR_GTEQF F.0 VGV_L endwhile111
  whilebody111:
    WRITE32 ENDSUB_F_LINE2_1SENS_0:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE2_1SENS_0
CALLSUB116:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf120
    DATA8 flag120
    DIVF F.1 2.0 tmpf120
    CP_EQF 0.0 2.0 flag120
    SELECTF flag120 0.0 tmpf120 F.0

    JR_LTF F.0 VGV_L whilebody111
  endwhile111:
    JR endif109
  else109_1:
    JR_NEQF VGV_I 2.0 else109_2
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 83.2134785288679 VGV_L
  while122:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf126
    DATA8 flag126
    DIVF F.1 2.0 tmpf126
    CP_EQF 0.0 2.0 flag126
    SELECTF flag126 0.0 tmpf126 F.0

    JR_GTEQF F.0 VGV_L endwhile122
  whilebody122:
    WRITE32 ENDSUB_F_LINE3_1SENS_0:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE3_1SENS_0
CALLSUB127:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf131
    DATA8 flag131
    DIVF F.1 2.0 tmpf131
    CP_EQF 0.0 2.0 flag131
    SELECTF flag131 0.0 tmpf131 F.0

    JR_LTF F.0 VGV_L whilebody122
  endwhile122:
  else109_2:
  endif109:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody106
  endfor106:
    MOVEF_F 120.0 VLV_MM_2
    MOVEF_F -50.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB133:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 0.0 VGV_MAX1
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_I
  for135:
    JR_GTF VGV_I 3.0 endfor135
  forbody135:
    CALL ARRAYGET_FLOAT VGV_I VGV_NUM VGV_RES
    JR_LTEQF VGV_NUM VGV_MAX1 else137_1
    MOVEF_F VGV_MAX1 VGV_MAX2
    MOVEF_F VGV_W1 VGV_B1
    MOVEF_F VGV_NUM VGV_MAX1
    MOVEF_F VGV_I VGV_W1
    JR endif137
  else137_1:
    JR_LTEQF VGV_NUM VGV_MAX2 else137_2
    MOVEF_F VGV_NUM VGV_MAX2
    MOVEF_F VGV_I VGV_B1
  else137_2:
  endif137:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody135
  endfor135:
    ADDF VGV_B1 1.0 VGV_B1
    ADDF VGV_B2 1.0 VGV_B2
    ADDF VGV_W1 1.0 VGV_W1
    ADDF VGV_W2 1.0 VGV_W2
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_B2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_B1 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 80.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W1 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 110.0 2.0 S.0
    MOVEF_F 37.0 VLV_DEG_3
    MOVEF_F 40.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB152:
    MOVEF_F 40.0 VLV_DEG_4
    MOVEF_F 40.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB153:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 203.410725292788 VGV_L
  while155:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf159
    DATA8 flag159
    DIVF F.1 2.0 tmpf159
    CP_EQF 0.0 2.0 flag159
    SELECTF flag159 0.0 tmpf159 F.0

    JR_GTEQF F.0 VGV_L endwhile155
  whilebody155:
    MOVEF_F 1.5 VGV_K
    MOVEF_F 30.0 VGV_V
    CALL SENSOR.READPERCENT 3.0 F.0
    CALL SENSOR.READPERCENT 2.0 F.1
    SUBF F.0 F.1 VGV_U
    MULF VGV_U VGV_K F.1
    SUBF VGV_V F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VGV_U VGV_K F.1
    ADDF VGV_V F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf172
    DATA8 flag172
    DIVF F.1 2.0 tmpf172
    CP_EQF 0.0 2.0 flag172
    SELECTF flag172 0.0 tmpf172 F.0

    JR_LTF F.0 VGV_L whilebody155
  endwhile155:
    MOVEF_F 120.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB173:
    CALL MOTOR.STOP 'BC' 'true'
    STRINGS DUPLICATE 'AD' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB175:
    MOVEF_F 30.0 VLV_MM_2
    MOVEF_F -60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB176:
    MOVEF_F 90.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB177:
    MOVEF_F 60.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB178:
    MOVEF_F -30.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB179:
    MOVEF_F 780.0 VLV_MM_2
    MOVEF_F 95.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB180:
    MOVEF_F 100.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB181:
    MOVEF_F 40.0 VLV_MM_2
    MOVEF_F -50.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB182:
    MOVEF_F -30.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB183:
    MOVEF_F 70.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB184:
    MOVEF_F 91.0 VLV_DEG_6
    MOVEF_F 20.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB185:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB186:
    MOVEF_F 740.0 VLV_MM_2
    MOVEF_F 90.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB187:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB188:
    MOVEF_F 65.0 VLV_DEG_3
    MOVEF_F 70.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB189:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB190:
    MOVEF_F 40.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB191:
    MOVEF_F 90.0 VLV_DEG_5
    MOVEF_F 30.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB192:
    MOVEF_F 30.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB193:
    CALL MOTOR.STOP 'BC' 'true'
    WRITE32 ENDSUB_F_COL2_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COL2_0
CALLSUB195:
    MOVEF_F 30.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB196:
    CALL MOTOR.STOP 'BC' 'true'
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_COL '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    JR_NEQF VGV_COL 5.0 else201_1
    MOVEF_F 70.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB202:
    MOVEF_F 92.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB203:
    MOVEF_F 50.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB204:
    MOVEF_F 160.0 VLV_DEG_3
    MOVEF_F 60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB205:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F 40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB206:
    MOVEF_F 35.0 VLV_DEG_4
    MOVEF_F 60.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB207:
    MOVEF_F 1400.0 VLV_MM_2
    MOVEF_F 90.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB208:
    MOVEF_F 80.0 VLV_DEG_3
    MOVEF_F 60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB209:
    MOVEF_F 50.0 VLV_MM_2
    MOVEF_F 40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB210:
    MOVEF_F 50.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB211:
    MOVEF_F 85.0 VLV_DEG_3
    MOVEF_F -60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB212:
    MOVEF_F 1100.0 VLV_MM_2
    MOVEF_F -90.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB213:
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB214:
    MOVEF_F -30.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB215:
    JR endif201
  else201_1:
    MOVEF_F 20.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB216:
    MOVEF_F 92.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB217:
    MOVEF_F 50.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB218:
    MOVEF_F 270.0 VLV_MM_2
    MOVEF_F 80.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB219:
    MOVEF_F 34.0 VLV_DEG_3
    MOVEF_F 60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB220:
    MOVEF_F 320.0 VLV_MM_2
    MOVEF_F 70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB221:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB222:
    MOVEF_F 20.0 VLV_DEG_3
    MOVEF_F 30.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB223:
    MOVEF_F 20.0 VLV_DEG_3
    MOVEF_F -30.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB224:
    MOVEF_F 450.0 VLV_MM_2
    MOVEF_F -80.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB225:
    MOVEF_F 45.0 VLV_DEG_3
    MOVEF_F -60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB226:
    MOVEF_F 150.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB227:
    MOVEF_F 60.0 VLV_DEG_3
    MOVEF_F -60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB228:
    MOVEF_F 250.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB229:
    MOVEF_F 95.0 VLV_DEG_5
    MOVEF_F 50.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB230:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB231:
    MOVEF_F -30.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB232:
  else201_2:
  endif201:
    TIMER_READ timeMC2
    MOVEF_F VGV_B1 VGV_B
    MOVEF_F VGV_W1 VGV_W
    JR_NEQF VGV_B 2.0 and236
    JR_EQF VGV_W 1.0 or235
  and236:
    JR_NEQF VGV_B 3.0 else234_1
    JR_NEQF VGV_W 4.0 else234_1
  or235:
    MOVEF_F 85.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB237:
    MOVEF_F 93.0 VLV_DEG_6
    MOVEF_F 20.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB238:
    MOVEF_F 70.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB239:
    MOVEF_F -30.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB240:
    JR_NEQF VGV_B 2.0 else241_1
    MOVEF_F 310.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB242:
    WRITE32 ENDSUB_F_W1B2_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1B2_0
CALLSUB243:
    MOVEF_F 10.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB244:
    MOVEF_F 600.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB245:
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB246:
    JR endif241
  else241_1:
    MOVEF_F 190.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB247:
    WRITE32 ENDSUB_F_W1B2_0:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1B2_0
CALLSUB248:
    MOVEF_F 10.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB249:
    MOVEF_F 250.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB250:
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB251:
  else241_2:
  endif241:
    JR endif234
  else234_1:
    MOVEF_F 110.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB252:
    MOVEF_F 89.0 VLV_DEG_5
    MOVEF_F 20.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB253:
    MOVEF_F 30.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB254:
    JR_EQF VGV_B 1.0 or256
    JR_NEQF VGV_W 2.0 else255_1
  or256:
    MOVEF_F 200.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB257:
    JR_NEQF VGV_W 2.0 else258_1
    WRITE32 ENDSUB_F_W2_0:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W2_0
CALLSUB259:
  else258_1:
  endif258:
    JR_NEQF VGV_B 1.0 else260_1
    WRITE32 ENDSUB_F_B1_0:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B1_0
CALLSUB261:
  else260_1:
  endif260:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB262:
    MOVEF_F -30.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB263:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds265
	MOVEF_32 300.0 milliseconds265
	DATA32 timer265
	TIMER_WAIT milliseconds265 timer265
	TIMER_READY timer265
    JR endif255
  else255_1:
    JR_EQF VGV_B 2.0 or266
    JR_NEQF VGV_W 1.0 else255_2
  or266:
    JR_NEQF VGV_B 2.0 else267_1
    MOVEF_F 20.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB268:
    WRITE32 ENDSUB_F_B2_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B2_0
CALLSUB269:
  else267_1:
  endif267:
    JR_NEQF VGV_W 1.0 else270_1
    WRITE32 ENDSUB_F_W1_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1_0
CALLSUB271:
  else270_1:
  endif270:
    MOVEF_F 110.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB272:
    MOVEF_F 89.0 VLV_DEG_5
    MOVEF_F 20.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB273:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds275
	MOVEF_32 300.0 milliseconds275
	DATA32 timer275
	TIMER_WAIT milliseconds275 timer275
	TIMER_READY timer275
    MOVEF_F 30.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB276:
  else255_2:
  endif255:
    JR_EQF VGV_W 3.0 or278
    JR_NEQF VGV_B 4.0 else277_1
  or278:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds280
	MOVEF_32 300.0 milliseconds280
	DATA32 timer280
	TIMER_WAIT milliseconds280 timer280
	TIMER_READY timer280
    MOVEF_F 300.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB281:
    JR_NEQF VGV_W 3.0 else282_1
    WRITE32 ENDSUB_F_W2_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W2_0
CALLSUB283:
  else282_1:
  endif282:
    JR_NEQF VGV_B 4.0 else284_1
    WRITE32 ENDSUB_F_B1_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B1_0
CALLSUB285:
  else284_1:
  endif284:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB286:
    JR endif277
  else277_1:
    JR_EQF VGV_W 4.0 or287
    JR_NEQF VGV_B 3.0 else277_2
  or287:
    MOVEF_F 510.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB288:
    JR_NEQF VGV_W 4.0 else289_1
    WRITE32 ENDSUB_F_W1_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1_0
CALLSUB290:
  else289_1:
  endif289:
    JR_NEQF VGV_B 3.0 else291_1
    WRITE32 ENDSUB_F_B2_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B2_0
CALLSUB292:
  else291_1:
  endif291:
    MOVEF_F 110.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB293:
    MOVEF_F 89.0 VLV_DEG_5
    MOVEF_F 20.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB294:
    JR endif277
  else277_2:
    MOVEF_F 400.0 VLV_MM_2
    MOVEF_F -60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB295:
  else277_3:
  endif277:
    MOVEF_F 90.0 VLV_DEG_4
    MOVEF_F -60.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB296:
    MOVEF_F 30.0 VLV_MM_2
    MOVEF_F -60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB297:
    MOVEF_F 90.0 VLV_DEG_3
    MOVEF_F -60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB298:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -80.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB299:
    CALL MOTOR.START 'AD' -30.0
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB301:
  else234_2:
  endif234:
    TIMER_READ timeMC2tmp
	SUB32 timeMC2tmp timeMC2 timeMC2tmp
	MOVE32_F timeMC2tmp VGV_ZONE1
    STRINGS DUPLICATE 'true' VGV_FLAG
    MOVEF_F 35.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB303:
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB304:
    MOVEF_F -35.0 VGV_SP
    TIMER_READ timeMC3
    CALL MOTOR.RESETCOUNT 'BC'
  while307:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 1000.0 endwhile307
  whilebody307:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VGV_U
    MULF VGV_U 2.0 F.1
    ADDF VGV_SP F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VGV_U 2.0 F.1
    SUBF VGV_SP F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 1000.0 whilebody307
  endwhile307:
    MOVEF_F 20.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB319:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds321
	MOVEF_32 400.0 milliseconds321
	DATA32 timer321
	TIMER_WAIT milliseconds321 timer321
	TIMER_READY timer321
    CALL MOTOR.START 'D' 20.0
    DATA32 milliseconds323
	MOVEF_32 700.0 milliseconds323
	DATA32 timer323
	TIMER_WAIT milliseconds323 timer323
	TIMER_READY timer323
    MOVEF_F -35.0 VGV_SP
    TIMER_READ timeMC3
    CALL MOTOR.RESETCOUNT 'BC'
  while326:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 1000.0 endwhile326
  whilebody326:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VGV_U
    MULF VGV_U 2.0 F.1
    ADDF VGV_SP F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VGV_U 2.0 F.1
    SUBF VGV_SP F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 1000.0 whilebody326
  endwhile326:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.START 'AD' -20.0
    MOVEF_F 60.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB340:
    CALL MOTOR.START 'AD' -20.0
    MOVEF_F 70.0 VLV_DEG_3
    MOVEF_F 70.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB342:
    MOVEF_F 67.0 VLV_DEG_4
    MOVEF_F 70.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB343:
    MOVEF_F 340.0 VLV_MM_2
    MOVEF_F 90.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB344:
    CALL MOTOR.STOP 'AD' 'true'
    MOVEF_F 105.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB346:
    MOVEF_F 570.0 VLV_MM_2
    MOVEF_F -90.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB347:
    MOVEF_F 80.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB348:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds350
	MOVEF_32 700.0 milliseconds350
	DATA32 timer350
	TIMER_WAIT milliseconds350 timer350
	TIMER_READY timer350
    STRINGS DUPLICATE 'AD' VLV_MOTOR_13
    MOVEF_F 20.0 VLV_SP_13
    WRITE32 ENDSUB_F_DOWN_2:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DOWN_2
CALLSUB351:
    MOVEF_F 13.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB352:
    CALL MOTOR.STOP 'BC' 'true'
    STRINGS DUPLICATE 'AD' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB354:
    MOVEF_F 180.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB355:
    MOVEF_F 105.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB356:
    MOVEF_F 50.0 VLV_MM_2
    MOVEF_F -50.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB357:
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB358:
    TIMER_READ timeMC2
    MOVEF_F VGV_B2 VGV_B
    MOVEF_F VGV_W2 VGV_W
    JR_NEQF VGV_B 2.0 and362
    JR_EQF VGV_W 1.0 or361
  and362:
    JR_NEQF VGV_B 3.0 else360_1
    JR_NEQF VGV_W 4.0 else360_1
  or361:
    MOVEF_F 60.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB363:
    MOVEF_F 93.0 VLV_DEG_6
    MOVEF_F 20.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB364:
    MOVEF_F 70.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB365:
    MOVEF_F -30.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB366:
    JR_NEQF VGV_B 2.0 else367_1
    MOVEF_F 180.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB368:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB369:
    WRITE32 ENDSUB_F_W1B2_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1B2_0
CALLSUB370:
    MOVEF_F 20.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB371:
    MOVEF_F 450.0 VLV_MM_2
    MOVEF_F -90.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB372:
    MOVEF_F 120.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB373:
    JR endif367
  else367_1:
    JR_NEQF VGV_B 3.0 else367_2
    MOVEF_F 200.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB374:
    WRITE32 ENDSUB_F_W1B2_0:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1B2_0
CALLSUB375:
    MOVEF_F 110.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB376:
  else367_2:
  endif367:
    STRINGS DUPLICATE 'AD' VLV_MOTOR_12
    MOVEF_F 30.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB377:
    MOVEF_F 150.0 VLV_MM_2
    MOVEF_F -60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB378:
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB379:
    JR endif360
  else360_1:
    MOVEF_F 65.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB380:
    MOVEF_F 89.0 VLV_DEG_5
    MOVEF_F 20.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB381:
    MOVEF_F 30.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB382:
    JR_EQF VGV_W 2.0 or384
    JR_NEQF VGV_B 1.0 else383_1
  or384:
    MOVEF_F 200.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB385:
    JR_NEQF VGV_W 2.0 else386_1
    WRITE32 ENDSUB_F_W2_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W2_0
CALLSUB387:
  else386_1:
  endif386:
    JR_NEQF VGV_B 1.0 else388_1
    WRITE32 ENDSUB_F_B1_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B1_0
CALLSUB389:
  else388_1:
  endif388:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB390:
    MOVEF_F -30.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB391:
  else383_1:
  endif383:
    JR_EQF VGV_W 1.0 or393
    JR_NEQF VGV_B 2.0 else392_1
  or393:
    JR_NEQF VGV_W 1.0 else394_1
    WRITE32 ENDSUB_F_W1_0:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1_0
CALLSUB395:
  else394_1:
  endif394:
    JR_NEQF VGV_B 2.0 else396_1
    MOVEF_F 10.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB397:
    WRITE32 ENDSUB_F_B2_0:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B2_0
CALLSUB398:
  else396_1:
  endif396:
    MOVEF_F 65.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB399:
    MOVEF_F 89.0 VLV_DEG_5
    MOVEF_F 20.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB400:
    MOVEF_F 20.0 VLV_SP_11
    WRITE32 ENDSUB_F_TOLINE_1:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TOLINE_1
CALLSUB401:
  else392_1:
  endif392:
    JR_EQF VGV_W 3.0 or403
    JR_NEQF VGV_B 4.0 else402_1
  or403:
    MOVEF_F 290.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB404:
    JR_NEQF VGV_W 3.0 else405_1
    WRITE32 ENDSUB_F_W2_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W2_0
CALLSUB406:
  else405_1:
  endif405:
    JR_NEQF VGV_B 4.0 else407_1
    WRITE32 ENDSUB_F_B1_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B1_0
CALLSUB408:
  else407_1:
  endif407:
    MOVEF_F 170.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB409:
    STRINGS DUPLICATE 'AD' VLV_MOTOR_12
    MOVEF_F 30.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB410:
    MOVEF_F 89.0 VLV_DEG_6
    MOVEF_F 50.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB411:
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB412:
    JR endif402
  else402_1:
    JR_EQF VGV_W 4.0 or413
    JR_NEQF VGV_B 3.0 else402_2
  or413:
    MOVEF_F 490.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB414:
    JR_NEQF VGV_W 4.0 else415_1
    MOVEF_F 10.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB416:
    WRITE32 ENDSUB_F_W1_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_W1_0
CALLSUB417:
  else415_1:
  endif415:
    JR_NEQF VGV_B 3.0 else418_1
    MOVEF_F 5.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB419:
    WRITE32 ENDSUB_F_B2_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_B2_0
CALLSUB420:
  else418_1:
  endif418:
    JR endif402
  else402_2:
    MOVEF_F 400.0 VLV_MM_2
    MOVEF_F -80.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB421:
    STRINGS DUPLICATE 'AD' VLV_MOTOR_12
    MOVEF_F 30.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB422:
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB423:
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB424:
  else402_3:
  endif402:
  else360_2:
  endif360:
    TIMER_READ timeMC2tmp
	SUB32 timeMC2tmp timeMC2 timeMC2tmp
	MOVE32_F timeMC2tmp VGV_ZONE2
    MOVEF_F 40.0 VLV_MM_2
    MOVEF_F 60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB426:
    MOVEF_F 95.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB427:
    CALL MOTOR.RESETCOUNT 'BC'
  while429:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 65.0 endwhile429
  whilebody429:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VGV_U
    MULF VGV_U 0.8 F.1
    ADDF 55.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VGV_U 0.8 F.1
    SUBF 55.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 65.0 whilebody429
  endwhile429:
    MOVEF_F 40.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB441:
    MOVEF_F 90.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB442:
    MOVEF_F -50.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB443:
    MOVEF_F 200.0 VLV_MM_2
    MOVEF_F 60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB444:
    MOVEF_F 95.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB445:
    MOVEF_F 190.0 VLV_MM_2
    MOVEF_F 40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB446:
    MOVEF_F 90.0 VLV_DEG_5
    MOVEF_F 30.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB447:
    MOVEF_F -35.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB448:
    CALL MOTOR.START 'AD' 20.0
    MOVEF_F 20.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB450:
    MOVEF_F 25.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB451:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.START 'AD' -50.0
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB454:
    CALL MOTOR.START 'AD' 30.0
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB456:
    MOVEF_F 450.0 VLV_MM_2
    MOVEF_F 90.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB457:
    MOVEF_F 90.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB458:
    MOVEF_F 200.0 VLV_MM_2
    MOVEF_F -95.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB459:
    MOVEF_F -30.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB460:
    CALL MOTOR.STOP 'AD' 'true'
    MOVEF_F 51.0 VLV_MM_2
    MOVEF_F 40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB462:
    MOVEF_F 90.0 VLV_DEG_5
    MOVEF_F 30.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB463:
    MOVEF_F 30.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB464:
    MOVEF_F -20.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB465:
    MOVEF_F 70.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB466:
    CALL MOTOR.STOP 'ABCD' 'true'
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp VGV_TIME
    CALL LCD.CLEAR
    DATAF tmpf470
    DATA8 flag470
    DIVF VGV_TIME 1000.0 tmpf470
    CP_EQF 0.0 1000.0 flag470
    SELECTF flag470 0.0 tmpf470 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 10.0 2.0 S.0
    DATAF tmpf473
    DATA8 flag473
    DIVF VGV_ZONE1 1000.0 tmpf473
    CP_EQF 0.0 1000.0 flag473
    SELECTF flag473 0.0 tmpf473 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 50.0 2.0 S.0
    DATAF tmpf476
    DATA8 flag476
    DIVF VGV_ZONE2 1000.0 tmpf476
    CP_EQF 0.0 1000.0 flag476
    SELECTF flag476 0.0 tmpf476 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 80.0 2.0 S.0
    WRITE32 ENDSUB_F_FRZ_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FRZ_0
CALLSUB479:
ENDTHREAD:
    RETURN
SUB_F_SEN1_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN1 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX1 VGV_MIN1 F.1
    DATAF tmpf484
    DATA8 flag484
    DIVF F.0 F.1 tmpf484
    CP_EQF 0.0 F.1 flag484
    SELECTF flag484 0.0 tmpf484 VGV_S1

RETSUB_F_SEN1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SEN1_0:
SUB_F_SEN2_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf489
    DATA8 flag489
    DIVF F.0 F.1 tmpf489
    CP_EQF 0.0 F.1 flag489
    SELECTF flag489 0.0 tmpf489 VGV_S2

RETSUB_F_SEN2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SEN2_0:
SUB_F_LINE_FOL_0:
    WRITE32 ENDSUB_F_SEN1_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SEN1_0
CALLSUB490:
    WRITE32 ENDSUB_F_SEN2_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SEN2_0
CALLSUB491:
    SUBF VGV_S1 VGV_S2 VGV_U
    MULF VGV_U VGV_K F.1
    SUBF VGV_V F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VGV_U VGV_K F.1
    ADDF VGV_V F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_F_LINE_FOL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_FOL_0:
SUB_F_LINE2_1SENS_0:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 45.0 VGV_U
    MULF VGV_U 1.3 F.1
    ADDF 45.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VGV_U 1.3 F.1
    SUBF 45.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_F_LINE2_1SENS_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE2_1SENS_0:
SUB_F_LINE3_1SENS_0:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 45.0 VGV_U
    MULF VGV_U 0.8 F.1
    ADDF 15.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VGV_U 0.8 F.1
    SUBF 15.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_F_LINE3_1SENS_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE3_1SENS_0:
SUB_F_TH_DOWN_0:
    CALL MOTOR.START 'AD' 50.0
    DATA32 milliseconds516
	MOVEF_32 500.0 milliseconds516
	DATA32 timer516
	TIMER_WAIT milliseconds516 timer516
	TIMER_READY timer516
  while517:
    CALL MOTOR.GETSPEED 'A' F.2
    CALL MOTOR.GETSPEED 'D' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf521
    DATA8 flag521
    DIVF F.1 2.0 tmpf521
    CP_EQF 0.0 2.0 flag521
    SELECTF flag521 0.0 tmpf521 F.0

    JR_LTEQF F.0 35.0 endwhile517
  whilebody517:
    CALL MOTOR.GETSPEED 'A' F.2
    CALL MOTOR.GETSPEED 'D' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf525
    DATA8 flag525
    DIVF F.1 2.0 tmpf525
    CP_EQF 0.0 2.0 flag525
    SELECTF flag525 0.0 tmpf525 F.0

    JR_GTF F.0 35.0 whilebody517
  endwhile517:
    CALL MOTOR.STOP 'ABCD' 'true'
    CALL MOTOR.SCHEDULE 'AD' -20.0 0.0 19.0 0.0 'true' 

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
RETSUB_F_TH_DOWN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TH_DOWN_0:
SUB_F_FRZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_FRZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FRZ_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 20.0 700.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_HSV_0:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C 1.0 1.0 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_NUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_R VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_G VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_B VGV_RECVARRAY
    ADDF VGV_R VGV_G F.0
    ADDF F.0 VGV_B VGV_RGB
    JR_LTEQF VGV_R VGV_G else540_1
    JR_LTEQF VGV_R VGV_B else540_1
    MOVEF_F VGV_R VGV_MAX
    JR endif540
  else540_1:
    JR_LTEQF VGV_G VGV_R else540_2
    JR_LTEQF VGV_G VGV_B else540_2
    MOVEF_F VGV_G VGV_MAX
    JR endif540
  else540_2:
    JR_LTEQF VGV_B VGV_R else540_3
    JR_LTEQF VGV_B VGV_G else540_3
    MOVEF_F VGV_B VGV_MAX
  else540_3:
  endif540:
    JR_GTEQF VGV_R VGV_G else541_1
    JR_GTEQF VGV_R VGV_B else541_1
    MOVEF_F VGV_R VGV_MIN
    JR endif541
  else541_1:
    JR_GTEQF VGV_G VGV_R else541_2
    JR_GTEQF VGV_G VGV_B else541_2
    MOVEF_F VGV_G VGV_MIN
    JR endif541
  else541_2:
    JR_GTEQF VGV_B VGV_R else541_3
    JR_GTEQF VGV_B VGV_G else541_3
    MOVEF_F VGV_B VGV_MIN
  else541_3:
  endif541:
    JR_NEQF VGV_MAX VGV_MIN else542_1
    MOVEF_F 0.0 VGV_H
    JR endif542
  else542_1:
    JR_NEQF VGV_R VGV_MAX else543_1
    JR_LTF VGV_G VGV_B else544_1
    SUBF VGV_G VGV_B F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf548
    DATA8 flag548
    DIVF F.0 F.1 tmpf548
    CP_EQF 0.0 F.1 flag548
    SELECTF flag548 0.0 tmpf548 VGV_H

    JR endif544
  else544_1:
    SUBF VGV_G VGV_B F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf552
    DATA8 flag552
    DIVF F.1 F.2 tmpf552
    CP_EQF 0.0 F.2 flag552
    SELECTF flag552 0.0 tmpf552 F.0

    ADDF F.0 360.0 VGV_H
  else544_2:
  endif544:
    JR endif543
  else543_1:
    JR_NEQF VGV_MAX VGV_G else554_1
    SUBF VGV_B VGV_R F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf558
    DATA8 flag558
    DIVF F.1 F.2 tmpf558
    CP_EQF 0.0 F.2 flag558
    SELECTF flag558 0.0 tmpf558 F.0

    ADDF F.0 120.0 VGV_H
    JR endif554
  else554_1:
    SUBF VGV_R VGV_G F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf563
    DATA8 flag563
    DIVF F.1 F.2 tmpf563
    CP_EQF 0.0 F.2 flag563
    SELECTF flag563 0.0 tmpf563 F.0

    ADDF F.0 240.0 VGV_H
  else554_2:
  endif554:
  else543_2:
  endif543:
  else542_2:
  endif542:
    JR_NEQF VGV_MAX 0.0 else565_1
    MOVEF_F 0.0 VGV_S
    JR endif565
  else565_1:
    DATAF tmpf566
    DATA8 flag566
    DIVF VGV_MIN VGV_MAX tmpf566
    CP_EQF 0.0 VGV_MAX flag566
    SELECTF flag566 0.0 tmpf566 VGV_S

  else565_2:
  endif565:
    MOVEF_F VGV_MAX VGV_V
    MULF VGV_S 100.0 VGV_S
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 100.0 VGV_MIN
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_COL2_0:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB568:
    JR_LTEQF VGV_R VGV_B else569_1
    MOVEF_F 5.0 VGV_COL
    JR endif569
  else569_1:
    JR_LTEQF VGV_B VGV_R else569_2
    MOVEF_F 2.0 VGV_COL
  else569_2:
  endif569:
RETSUB_F_COL2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COL2_0:
SUB_F_W1B2_0:
    STRINGS DUPLICATE 'A' VLV_MOTOR_13
    MOVEF_F 20.0 VLV_SP_13
    WRITE32 ENDSUB_F_DOWN_2:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DOWN_2
CALLSUB570:
    MOVEF_F 15.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB571:
    CALL MOTOR.STOP 'BC' 'true'
    CALL NE_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else573_1
    STRINGS DUPLICATE 'A' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB575:
  else573_1:
  endif573:
    MOVEF_F 65.0 VLV_MM_2
    MOVEF_F -50.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB576:
    MOVEF_F 180.0 VLV_DEG_3
    MOVEF_F -70.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB577:
    JR_NEQF VGV_B 2.0 else578_1
    CALL EQ_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else578_1
    MOVEF_F 20.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB580:
    JR endif578
  else578_1:
    MOVEF_F 60.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB581:
  else578_2:
  endif578:
    MOVEF_F 86.0 VLV_DEG_4
    MOVEF_F -50.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB582:
    CALL EQ_STRING VGV_FLAG 'false' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else583_1
    MOVEF_F 80.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB585:
    JR endif583
  else583_1:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB586:
  else583_2:
  endif583:
    CALL MOTOR.STOP 'BC' 'true'
    CALL EQ_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else588_1
    DATA32 milliseconds590
	MOVEF_32 500.0 milliseconds590
	DATA32 timer590
	TIMER_WAIT milliseconds590 timer590
	TIMER_READY timer590
  else588_1:
  endif588:
    STRINGS DUPLICATE 'D' VLV_MOTOR_13
    MOVEF_F 10.0 VLV_SP_13
    WRITE32 ENDSUB_F_DOWN_2:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DOWN_2
CALLSUB591:
    MOVEF_F 16.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB592:
    CALL NE_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else593_1
    STRINGS DUPLICATE 'D' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB595:
  else593_1:
  endif593:
    MOVEF_F 25.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB596:
    MOVEF_F 102.0 VLV_DEG_6
    MOVEF_F 30.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB597:
    MOVEF_F 300.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB598:
RETSUB_F_W1B2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_W1B2_0:
SUB_F_W1_0:
    MOVEF_F 50.0 VLV_DEG_4
    MOVEF_F 60.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB599:
    CALL NE_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else600_1
    MOVEF_F 50.0 VLV_DEG_3
    MOVEF_F 40.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB602:
    JR endif600
  else600_1:
    MOVEF_F 50.0 VLV_DEG_3
    MOVEF_F 40.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB603:
  else600_2:
  endif600:
    MOVEF_F 255.0 VLV_MM_2
    MOVEF_F 60.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB604:
    MOVEF_F 60.0 VLV_MM_2
    MOVEF_F 40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB605:
    MOVEF_F 90.0 VLV_DEG_4
    MOVEF_F -50.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB606:
    JR_NEQF VGV_W 1.0 else607_1
    CALL EQ_STRING VGV_FLAG 'false' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else607_1
    MOVEF_F 20.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB609:
    JR endif607
  else607_1:
    MOVEF_F 5.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB610:
  else607_2:
  endif607:
    CALL MOTOR.STOP 'BC' 'true'
    STRINGS DUPLICATE 'D' VLV_MOTOR_13
    MOVEF_F 20.0 VLV_SP_13
    WRITE32 ENDSUB_F_DOWN_2:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DOWN_2
CALLSUB612:
    MOVEF_F 30.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB613:
    CALL MOTOR.STOP 'BC' 'true'
    CALL NE_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else615_1
    STRINGS DUPLICATE 'D' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB617:
  else615_1:
  endif615:
    MOVEF_F 20.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB618:
    MOVEF_F 100.0 VLV_DEG_6
    MOVEF_F 25.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB619:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB620:
    MOVEF_F 300.0 VLV_MM_2
    MOVEF_F -70.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB621:
    MOVEF_F 100.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_SP_6
    WRITE32 ENDSUB_F_LEFT2_2:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT2_2
CALLSUB622:
    CALL EQ_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else623_1
    STRINGS DUPLICATE 'D' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB625:
  else623_1:
  endif623:
    MOVEF_F 50.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB626:
    MOVEF_F -40.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB627:
RETSUB_F_W1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_W1_0:
SUB_F_W2_0:
    CALL MOTOR.STOP 'BC' 'true'
    CALL EQ_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else629_1
    DATA32 milliseconds631
	MOVEF_32 1000.0 milliseconds631
	DATA32 timer631
	TIMER_WAIT milliseconds631 timer631
	TIMER_READY timer631
  else629_1:
  endif629:
    STRINGS DUPLICATE 'D' VLV_MOTOR_13
    MOVEF_F 20.0 VLV_SP_13
    WRITE32 ENDSUB_F_DOWN_2:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DOWN_2
CALLSUB632:
    CALL NE_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else633_1
    MOVEF_F 27.0 VLV_MM_2
    MOVEF_F -20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB635:
    CALL MOTOR.STOP 'BC' 'true'
    STRINGS DUPLICATE 'D' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB637:
  else633_1:
  endif633:
RETSUB_F_W2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_W2_0:
SUB_F_B1_0:
    CALL MOTOR.STOP 'BC' 'true'
    STRINGS DUPLICATE 'A' VLV_MOTOR_13
    MOVEF_F 20.0 VLV_SP_13
    WRITE32 ENDSUB_F_DOWN_2:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DOWN_2
CALLSUB639:
    MOVEF_F 25.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB640:
    CALL MOTOR.STOP 'BC' 'true'
    CALL NE_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else642_1
    STRINGS DUPLICATE 'A' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB644:
  else642_1:
  endif642:
RETSUB_F_B1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_B1_0:
SUB_F_B2_0:
    MOVEF_F 50.0 VLV_DEG_4
    MOVEF_F 60.0 VLV_SP_4
    WRITE32 ENDSUB_F_LEFT1_2:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEFT1_2
CALLSUB645:
    MOVEF_F 50.0 VLV_DEG_3
    MOVEF_F 60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB646:
    MOVEF_F 55.0 VLV_MM_2
    MOVEF_F 30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB647:
    MOVEF_F 90.0 VLV_DEG_5
    MOVEF_F 30.0 VLV_SP_5
    WRITE32 ENDSUB_F_RIGHT2_2:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT2_2
CALLSUB648:
    MOVEF_F 40.0 VLV_MM_2
    MOVEF_F 20.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB649:
    CALL MOTOR.STOP 'BC' 'true'
    STRINGS DUPLICATE 'A' VLV_MOTOR_13
    MOVEF_F 20.0 VLV_SP_13
    WRITE32 ENDSUB_F_DOWN_2:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DOWN_2
CALLSUB651:
    MOVEF_F 15.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB652:
    CALL MOTOR.STOP 'BC' 'true'
    CALL NE_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else654_1
    STRINGS DUPLICATE 'A' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB656:
  else654_1:
  endif654:
    MOVEF_F 60.0 VLV_MM_2
    MOVEF_F -30.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB657:
    MOVEF_F 90.0 VLV_DEG_3
    MOVEF_F -60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB658:
    MOVEF_F 100.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB659:
    MOVEF_F 105.0 VLV_DEG_3
    MOVEF_F -60.0 VLV_SP_3
    WRITE32 ENDSUB_F_RIGHT1_2:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RIGHT1_2
CALLSUB660:
    CALL EQ_STRING VGV_FLAG 'true' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else661_1
    STRINGS DUPLICATE 'AD' VLV_MOTOR_12
    MOVEF_F 20.0 VLV_SP_12
    WRITE32 ENDSUB_F_UP_2:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UP_2
CALLSUB663:
  else661_1:
  endif661:
    MOVEF_F 50.0 VLV_MM_2
    MOVEF_F -40.0 VLV_V_2
    WRITE32 ENDSUB_F_MOVE_2:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_2
CALLSUB664:
    MOVEF_F -30.0 VLV_SP_10
    WRITE32 ENDSUB_F_ALIGNMENT_1:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ALIGNMENT_1
CALLSUB665:
RETSUB_F_B2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_B2_0:
SUB_F_MOVE_2:
    MOVEF_F 3.1415926535897932384 F.2
    MULF 62.0 F.2 F.1
    DATAF tmpf668
    DATA8 flag668
    DIVF VLV_MM_2 F.1 tmpf668
    CP_EQF 0.0 F.1 flag668
    SELECTF flag668 0.0 tmpf668 F.0

    MULF F.0 360.0 VLV_L_2
    JR_GTEQF VLV_V_2 0.0 else670_1
    MOVEF_F -10.0 VLV_SP_2
    JR endif670
  else670_1:
    MOVEF_F 10.0 VLV_SP_2
  else670_2:
  endif670:
    MOVEF_F 0.0 VLV_DEG_2
    CALL MOTOR.RESETCOUNT 'BC'
  while672:
    JR_GTEQF VLV_DEG_2 VLV_L_2 endwhile672
  whilebody672:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    MATH ABS F.1 F.0
    DATAF tmpf677
    DATA8 flag677
    DIVF F.0 2.0 tmpf677
    CP_EQF 0.0 2.0 flag677
    SELECTF flag677 0.0 tmpf677 VLV_DEG_2

    MULF VLV_L_2 0.8 F.0
    JR_LTEQF VLV_DEG_2 F.0 else678_1
    MATH ABS VLV_SP_2 F.0
    JR_LTEQF F.0 20.0 else678_1
    JR_LTEQF VLV_V_2 0.0 else681_1
    SUBF VLV_SP_2 0.3 VLV_SP_2
    JR endif681
  else681_1:
    ADDF VLV_SP_2 0.3 VLV_SP_2
  else681_2:
  endif681:
    JR endif678
  else678_1:
    MATH ABS VLV_SP_2 F.0
    MATH ABS VLV_V_2 F.1
    JR_GTEQF F.0 F.1 else678_2
    JR_LTEQF VLV_V_2 0.0 else686_1
    ADDF VLV_SP_2 0.3 VLV_SP_2
    JR endif686
  else686_1:
    SUBF VLV_SP_2 0.3 VLV_SP_2
  else686_2:
  endif686:
  else678_2:
  endif678:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VLV_U_2
    MULF VLV_U_2 2.0 F.1
    ADDF VLV_SP_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VLV_U_2 2.0 F.1
    SUBF VLV_SP_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    JR_LTF VLV_DEG_2 VLV_L_2 whilebody672
  endwhile672:
RETSUB_F_MOVE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_2:
SUB_F_RIGHT1_2:
    MULF 1092.72 VLV_DEG_3 F.0
    DATAF tmpf699
    DATA8 flag699
    DIVF F.0 360.0 tmpf699
    CP_EQF 0.0 360.0 flag699
    SELECTF flag699 0.0 tmpf699 VLV_L_3

    DATAF tmpf700
    DATA8 flag700
    DIVF VLV_L_3 210.38 tmpf700
    CP_EQF 0.0 210.38 flag700
    SELECTF flag700 0.0 tmpf700 F.0

    MULF F.0 360.0 VLV_L_3
    MOVEF_F 30.0 VLV_V_3
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 0.0 VLV_DEG_3
  while703:
    JR_GTF VLV_DEG_3 VLV_L_3 endwhile703
  whilebody703:
    CALL MOTOR.GETCOUNT 'B' F.0
    MATH ABS F.0 VLV_DEG_3
    CALL MOTOR.STARTPOWER 'B' VLV_V_3
    MULF VLV_L_3 0.2 F.0
    JR_LTF VLV_DEG_3 F.0 or708
    MULF VLV_L_3 0.8 F.0
    JR_LTEQF VLV_DEG_3 F.0 else707_1
  or708:
    JR_GTEQF VLV_SP_3 0.0 else711_1
    MOVEF_F -30.0 VLV_V_3
    JR endif711
  else711_1:
    MOVEF_F 30.0 VLV_V_3
  else711_2:
  endif711:
    JR endif707
  else707_1:
    MOVEF_F VLV_SP_3 VLV_V_3
  else707_2:
  endif707:
    CALL MOTOR.STOP 'C' 'true'
    JR_LTEQF VLV_DEG_3 VLV_L_3 whilebody703
  endwhile703:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_F_RIGHT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RIGHT1_2:
SUB_F_LEFT1_2:
    MULF 1092.72 VLV_DEG_4 F.0
    DATAF tmpf715
    DATA8 flag715
    DIVF F.0 360.0 tmpf715
    CP_EQF 0.0 360.0 flag715
    SELECTF flag715 0.0 tmpf715 VLV_L_4

    DATAF tmpf716
    DATA8 flag716
    DIVF VLV_L_4 210.38 tmpf716
    CP_EQF 0.0 210.38 flag716
    SELECTF flag716 0.0 tmpf716 F.0

    MULF F.0 360.0 VLV_L_4
    MOVEF_F 30.0 VLV_V_4
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 0.0 VLV_DEG_4
  while719:
    JR_GTF VLV_DEG_4 VLV_L_4 endwhile719
  whilebody719:
    CALL MOTOR.GETCOUNT 'C' F.0
    MATH ABS F.0 VLV_DEG_4
    CALL MOTOR.STARTPOWER 'C' VLV_V_4
    MULF VLV_L_4 0.2 F.0
    JR_LTF VLV_DEG_4 F.0 or724
    MULF VLV_L_4 0.8 F.0
    JR_LTEQF VLV_DEG_4 F.0 else723_1
  or724:
    JR_GTEQF VLV_SP_4 0.0 else727_1
    MOVEF_F -30.0 VLV_V_4
    JR endif727
  else727_1:
    MOVEF_F 30.0 VLV_V_4
  else727_2:
  endif727:
    JR endif723
  else723_1:
    MOVEF_F VLV_SP_4 VLV_V_4
  else723_2:
  endif723:
    CALL MOTOR.STOP 'B' 'true'
    JR_LTEQF VLV_DEG_4 VLV_L_4 whilebody719
  endwhile719:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_F_LEFT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEFT1_2:
SUB_F_RIGHT2_2:
    MOVEF_F 3.1415926535897932384 F.3
    MULF 2.0 F.3 F.2
    MULF F.2 180.0 F.1
    MULF F.1 VLV_DEG_5 F.0
    DATAF tmpf734
    DATA8 flag734
    DIVF F.0 360.0 tmpf734
    CP_EQF 0.0 360.0 flag734
    SELECTF flag734 0.0 tmpf734 VLV_L_5

    MOVEF_F 3.1415926535897932384 F.3
    MULF F.3 68.0 F.2
    DATAF tmpf737
    DATA8 flag737
    DIVF VLV_L_5 F.2 tmpf737
    CP_EQF 0.0 F.2 flag737
    SELECTF flag737 0.0 tmpf737 F.1

    MULF F.1 360.0 F.0
    DATAF tmpf739
    DATA8 flag739
    DIVF F.0 2.0 tmpf739
    CP_EQF 0.0 2.0 flag739
    SELECTF flag739 0.0 tmpf739 VLV_L_5

    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 30.0 VLV_V_5
    MOVEF_F 0.0 VLV_DEG_5
  while741:
    JR_GTF VLV_DEG_5 VLV_L_5 endwhile741
  whilebody741:
    CALL MOTOR.GETCOUNT 'B' F.2
    MATH ABS F.2 F.1
    CALL MOTOR.GETCOUNT 'C' F.3
    MATH ABS F.3 F.2
    ADDF F.1 F.2 F.0
    DATAF tmpf747
    DATA8 flag747
    DIVF F.0 2.0 tmpf747
    CP_EQF 0.0 2.0 flag747
    SELECTF flag747 0.0 tmpf747 VLV_DEG_5

    MULF VLV_L_5 0.2 F.0
    JR_LTF VLV_DEG_5 F.0 or749
    MULF VLV_L_5 0.8 F.0
    JR_LTEQF VLV_DEG_5 F.0 else748_1
  or749:
    MOVEF_F 30.0 VLV_V_5
    JR endif748
  else748_1:
    MOVEF_F VLV_SP_5 VLV_V_5
  else748_2:
  endif748:
    CALL MOTOR.STARTPOWER 'B' VLV_V_5
    SUBF 0.0 VLV_V_5 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    JR_LTEQF VLV_DEG_5 VLV_L_5 whilebody741
  endwhile741:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_F_RIGHT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RIGHT2_2:
SUB_F_LEFT2_2:
    MOVEF_F 3.1415926535897932384 F.3
    MULF 2.0 F.3 F.2
    MULF F.2 180.0 F.1
    MULF F.1 VLV_DEG_6 F.0
    DATAF tmpf760
    DATA8 flag760
    DIVF F.0 360.0 tmpf760
    CP_EQF 0.0 360.0 flag760
    SELECTF flag760 0.0 tmpf760 VLV_L_6

    MOVEF_F 3.1415926535897932384 F.3
    MULF F.3 68.0 F.2
    DATAF tmpf763
    DATA8 flag763
    DIVF VLV_L_6 F.2 tmpf763
    CP_EQF 0.0 F.2 flag763
    SELECTF flag763 0.0 tmpf763 F.1

    MULF F.1 360.0 F.0
    DATAF tmpf765
    DATA8 flag765
    DIVF F.0 2.0 tmpf765
    CP_EQF 0.0 2.0 flag765
    SELECTF flag765 0.0 tmpf765 VLV_L_6

    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 30.0 VLV_V_6
    MOVEF_F 0.0 VLV_DEG_6
  while767:
    JR_GTF VLV_DEG_6 VLV_L_6 endwhile767
  whilebody767:
    CALL MOTOR.GETCOUNT 'B' F.2
    MATH ABS F.2 F.1
    CALL MOTOR.GETCOUNT 'C' F.3
    MATH ABS F.3 F.2
    ADDF F.1 F.2 F.0
    DATAF tmpf773
    DATA8 flag773
    DIVF F.0 2.0 tmpf773
    CP_EQF 0.0 2.0 flag773
    SELECTF flag773 0.0 tmpf773 VLV_DEG_6

    MULF VLV_L_6 0.2 F.0
    JR_LTF VLV_DEG_6 F.0 or775
    MULF VLV_L_6 0.8 F.0
    JR_LTEQF VLV_DEG_6 F.0 else774_1
  or775:
    MOVEF_F 30.0 VLV_V_6
    JR endif774
  else774_1:
    MOVEF_F VLV_SP_6 VLV_V_6
  else774_2:
  endif774:
    SUBF 0.0 VLV_V_6 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.STARTPOWER 'C' VLV_V_6
    JR_LTEQF VLV_DEG_6 VLV_L_6 whilebody767
  endwhile767:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_F_LEFT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEFT2_2:
SUB_F_ALIGNMENT_1:
    TIMER_READ timeMC3
    CALL MOTOR.RESETCOUNT 'BC'
  while784:
    CALL MOTOR.GETSPEED 'B' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.8 F.1
    JR_LTF F.0 F.1 or785
    CALL MOTOR.GETSPEED 'C' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.9 F.1
    JR_GTEQF F.0 F.1 endwhile784
  or785:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 1000.0 endwhile784
  whilebody784:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VLV_U_10
    MULF VLV_U_10 2.0 F.1
    ADDF VLV_SP_10 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VLV_U_10 2.0 F.1
    SUBF VLV_SP_10 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETSPEED 'B' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.8 F.1
    JR_LTF F.0 F.1 or805
    CALL MOTOR.GETSPEED 'C' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.9 F.1
    JR_GTEQF F.0 F.1 and804
  or805:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 1000.0 whilebody784
  and804:
  endwhile784:
    TIMER_READ timeMC3
    CALL MOTOR.RESETCOUNT 'BC'
  while817:
    CALL MOTOR.GETSPEED 'B' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.7 F.1
    JR_GTF F.0 F.1 or818
    CALL MOTOR.GETSPEED 'C' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.7 F.1
    JR_LTEQF F.0 F.1 endwhile817
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 5000.0 endwhile817
  or818:
  whilebody817:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VLV_U_10
    MULF VLV_U_10 2.0 F.1
    ADDF VLV_SP_10 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VLV_U_10 2.0 F.1
    SUBF VLV_SP_10 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETSPEED 'B' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.7 F.1
    JR_GTF F.0 F.1 whilebody817
    CALL MOTOR.GETSPEED 'C' F.1
    MATH ABS F.1 F.0
    MATH ABS VLV_SP_10 F.2
    MULF F.2 0.7 F.1
    JR_LTEQF F.0 F.1 and841
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 5000.0 whilebody817
  and841:
  endwhile817:
    JR_GTEQF VLV_SP_10 0.0 else847_1
    MOVEF_F -70.0 VLV_SP_10
    JR endif847
  else847_1:
    MOVEF_F 70.0 VLV_SP_10
  else847_2:
  endif847:
    CALL MOTOR.STARTPOWER 'BC' VLV_SP_10
    DATA32 milliseconds849
	MOVEF_32 300.0 milliseconds849
	DATA32 timer849
	TIMER_WAIT milliseconds849 timer849
	TIMER_READY timer849
    DATA32 tmp850
    CALL GETANDINC32 RUNCOUNTER_F_BEEP_0 1  RUNCOUNTER_F_BEEP_0 tmp850
    JR_NEQ32 0 tmp850 alreadylaunched850
    OBJECT_START TF_BEEP_0
  alreadylaunched850:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_F_ALIGNMENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ALIGNMENT_1:
SUB_F_TOLINE_1:
    MOVEF_F 0.0 VLV_WHITE_11
    DATA8 layer852
	DATA8 no852
	DATA8 mode8852
	
	MOVEF_8 2.0 no852
	SUB8 no852 1 no852
	DIV8 no852 4 layer852
	MATH MOD8 no852 4 no852

	MOVEF_8 2.0 mode8852
	
	INPUT_DEVICE READY_RAW layer852 no852 0 mode8852 0
    DATA8 layer853
	DATA8 no853
	DATA8 mode8853
	
	MOVEF_8 3.0 no853
	SUB8 no853 1 no853
	DIV8 no853 4 layer853
	MATH MOD8 no853 4 no853

	MOVEF_8 2.0 mode8853
	
	INPUT_DEVICE READY_RAW layer853 no853 0 mode8853 0
  while854:
    JR_EQF VLV_WHITE_11 1.0 endwhile854
  whilebody854:
    CALL MOTOR.RESETCOUNT 'BC'
  while856:
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_NEQF F.0 6.0 or857
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_EQF F.0 6.0 endwhile856
  or857:
  whilebody856:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VLV_U_11
    MULF VLV_U_11 2.0 F.1
    ADDF VLV_SP_11 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VLV_U_11 2.0 F.1
    SUBF VLV_SP_11 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_NEQF F.0 6.0 whilebody856
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 whilebody856
  endwhile856:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 12.9443188822683 VLV_L_11
  while872:
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VLV_L_11 endwhile872
  whilebody872:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VLV_U_11
    MULF VLV_U_11 2.0 F.1
    ADDF VLV_SP_11 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VLV_U_11 2.0 F.1
    SUBF VLV_SP_11 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 VLV_L_11 whilebody872
  endwhile872:
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_NEQF F.0 6.0 else886_1
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 else886_1
    MOVEF_F 1.0 VLV_WHITE_11
  else886_1:
  endif886:
    JR_NEQF VLV_WHITE_11 1.0 whilebody854
  endwhile854:
    CALL MOTOR.RESETCOUNT 'BC'
    DATA8 layer890
	DATA8 no890
	DATA8 mode8890
	
	MOVEF_8 2.0 no890
	SUB8 no890 1 no890
	DIV8 no890 4 layer890
	MATH MOD8 no890 4 no890

	MOVEF_8 0.0 mode8890
	
	INPUT_DEVICE READY_RAW layer890 no890 0 mode8890 0
    DATA8 layer891
	DATA8 no891
	DATA8 mode8891
	
	MOVEF_8 3.0 no891
	SUB8 no891 1 no891
	DIV8 no891 4 layer891
	MATH MOD8 no891 4 no891

	MOVEF_8 0.0 mode8891
	
	INPUT_DEVICE READY_RAW layer891 no891 0 mode8891 0
  while892:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile892
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile892
  whilebody892:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VLV_U_11
    MULF VLV_U_11 0.8 F.1
    ADDF VLV_SP_11 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VLV_U_11 0.8 F.1
    SUBF VLV_SP_11 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 and904
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody892
  and904:
  endwhile892:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_F_TOLINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TOLINE_1:
SUB_F_UP_2:
    SUBF 0.0 VLV_SP_12 F.0
    CALL MOTOR.START VLV_MOTOR_12 F.0
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds911
	MOVEF_32 500.0 milliseconds911
	DATA32 timer911
	TIMER_WAIT milliseconds911 timer911
	TIMER_READY timer911
  while912:
    CALL MOTOR.GETSPEED 'A' F.2
    CALL MOTOR.GETSPEED 'D' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf916
    DATA8 flag916
    DIVF F.1 2.0 tmpf916
    CP_EQF 0.0 2.0 flag916
    SELECTF flag916 0.0 tmpf916 F.0

    MULF VLV_SP_12 0.7 F.1
    JR_LTEQF F.0 F.1 endwhile912
  whilebody912:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.GETSPEED 'A' F.2
    CALL MOTOR.GETSPEED 'D' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf922
    DATA8 flag922
    DIVF F.1 2.0 tmpf922
    CP_EQF 0.0 2.0 flag922
    SELECTF flag922 0.0 tmpf922 F.0

    MULF VLV_SP_12 0.7 F.1
    JR_GTF F.0 F.1 whilebody912
  endwhile912:
    CALL MOTOR.STOP VLV_MOTOR_12 'true'
RETSUB_F_UP_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UP_2:
SUB_F_DOWN_2:
    CALL MOTOR.START VLV_MOTOR_13 VLV_SP_13
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds927
	MOVEF_32 500.0 milliseconds927
	DATA32 timer927
	TIMER_WAIT milliseconds927 timer927
	TIMER_READY timer927
  while928:
    CALL MOTOR.GETSPEED 'A' F.2
    CALL MOTOR.GETSPEED 'D' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf932
    DATA8 flag932
    DIVF F.1 2.0 tmpf932
    CP_EQF 0.0 2.0 flag932
    SELECTF flag932 0.0 tmpf932 F.0

    MULF VLV_SP_13 0.7 F.1
    JR_LTEQF F.0 F.1 endwhile928
  whilebody928:
    CALL MOTOR.GETSPEED 'A' F.2
    CALL MOTOR.GETSPEED 'D' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf937
    DATA8 flag937
    DIVF F.1 2.0 tmpf937
    CP_EQF 0.0 2.0 flag937
    SELECTF flag937 0.0 tmpf937 F.0

    MULF VLV_SP_13 0.7 F.1
    JR_GTF F.0 F.1 whilebody928
  endwhile928:
    CALL MOTOR.STOP 'ABCD' 'true'
    CALL MOTOR.SCHEDULE VLV_MOTOR_13 -20.0 0.0 19.0 0.0 'true' 

	DATA8 layer940
	DATA8 nos940
	DATA8 busy940
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_13 layer940 nos940
	JR_EQ8 0 nos940 motornotbusy940
  motorwaiting940:
	OUTPUT_TEST layer940 nos940 busy940
	JR_EQ8 busy940 0 motornotbusy940
	SLEEP
	JR motorwaiting940
  motornotbusy940:
RETSUB_F_DOWN_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DOWN_2:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall VECTOR.INIT       // FFA
{
	IN_F size
	IN_F value
	IN_16 a

	DATA32 size32
	MOVEF_32 size size32
	JR_LTEQ32 size32 0 empty

	ARRAY RESIZE a size32
	ARRAY FILL a value
	RETURN

empty:
    ARRAY RESIZE a 0
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
