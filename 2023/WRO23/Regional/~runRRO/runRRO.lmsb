DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VMAX1_M
DATAF VMIN1_M
DATAF VMAX2_M
DATAF VMIN2_M
DATAF VK1_M
DATAF VV1_M
DATAF VK2_M
DATAF VV2_M
DATAF VK3_M
DATAF VV3_M
DATAF VK21_M
DATAF VV21_M
DATAF VK31_M
DATAF VV31_M
DATAF VRD_M
DATAF VBLACK_M
DATAF VBC1_M
DATAF VWC1_M
DATAF VBC2_M
DATAF VWC2_M
DATAF VRED_M
DATAF VMM_M
DATAF VS1_M
DATAF VS2_M
DATAF VU_M
DATAF VL_M
DATAF VV_M
DATAF VK_M
DATAF VDIS_M
DATAF VT_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VNUM_M
DATAF VR_M
DATAF VG_M
DATAF VB_M
DATAF VRGB_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VS_M
DATAF VCOL_M
DATAF VI_M
DATAF VN_M
DATAF VSP_M
DATAF VTIME_M
DATAF VSP_1
DATAF VWHITE_1
DATAF VU_1
DATAF VL_1
DATAF VL_2
DATAF VSP_2
DATAF VDIS_2
DATAF VV_2
DATAF VU_2
DATAF VMM_3
DATAF VSP_3
DATAF VL_3
DATAF VGRAD_4
DATAF VSP_4
DATAF VL_4
DATAF VGRAD_5
DATAF VSP_5
DATAF VL_5
DATAF VGRAD_6
DATAF VL_6
DATAF VGRAD_7
DATAF VL_7
DATAS VMOTOR_8 252
DATAF VSPEED_8
DATAS VMOTOR_9 252
DATAF VSPEED_9
DATAF VN_10
DATAF VI_10
DATAF VL_10
DATAF VN_11
DATAF VI_11
DATAF VL_11
DATAF VN_12
DATAF VI_12
DATAF VL_12
DATAF VN_13
DATAF VI_13
DATAF VL_13
DATAF VN_14
DATAF VI_14
DATAF VL_14
DATAF VN_15
DATAF VI_15
DATAF VL_15
DATAF VN_16
DATAF VI_16
DATAF VN_17
DATAF VI_17
DATA32 RUNCOUNTER_TH_DOWN
DATA32 RUNCOUNTER_TH_UP

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 0.0 VMIN1_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VV1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VV2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VV3_M
    MOVEF_F 0.0 VK21_M
    MOVEF_F 0.0 VV21_M
    MOVEF_F 0.0 VK31_M
    MOVEF_F 0.0 VV31_M
    MOVEF_F 0.0 VRD_M
    MOVEF_F 0.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    MOVEF_F 0.0 VS1_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VU_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VK_M
    MOVEF_F 0.0 VDIS_M
    MOVEF_F 0.0 VT_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VNUM_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VB_M
    MOVEF_F 0.0 VRGB_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VCOL_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VSP_M
    MOVEF_F 0.0 VTIME_M
    MOVEF_F 0.0 VSP_1
    MOVEF_F 0.0 VWHITE_1
    MOVEF_F 0.0 VU_1
    MOVEF_F 0.0 VL_1
    MOVEF_F 0.0 VL_2
    MOVEF_F 0.0 VSP_2
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 0.0 VV_2
    MOVEF_F 0.0 VU_2
    MOVEF_F 0.0 VMM_3
    MOVEF_F 0.0 VSP_3
    MOVEF_F 0.0 VL_3
    MOVEF_F 0.0 VGRAD_4
    MOVEF_F 0.0 VSP_4
    MOVEF_F 0.0 VL_4
    MOVEF_F 0.0 VGRAD_5
    MOVEF_F 0.0 VSP_5
    MOVEF_F 0.0 VL_5
    MOVEF_F 0.0 VGRAD_6
    MOVEF_F 0.0 VL_6
    MOVEF_F 0.0 VGRAD_7
    MOVEF_F 0.0 VL_7
    STRINGS DUPLICATE '' VMOTOR_8
    MOVEF_F 0.0 VSPEED_8
    STRINGS DUPLICATE '' VMOTOR_9
    MOVEF_F 0.0 VSPEED_9
    MOVEF_F 0.0 VN_10
    MOVEF_F 0.0 VI_10
    MOVEF_F 0.0 VL_10
    MOVEF_F 0.0 VN_11
    MOVEF_F 0.0 VI_11
    MOVEF_F 0.0 VL_11
    MOVEF_F 0.0 VN_12
    MOVEF_F 0.0 VI_12
    MOVEF_F 0.0 VL_12
    MOVEF_F 0.0 VN_13
    MOVEF_F 0.0 VI_13
    MOVEF_F 0.0 VL_13
    MOVEF_F 0.0 VN_14
    MOVEF_F 0.0 VI_14
    MOVEF_F 0.0 VL_14
    MOVEF_F 0.0 VN_15
    MOVEF_F 0.0 VI_15
    MOVEF_F 0.0 VL_15
    MOVEF_F 0.0 VN_16
    MOVEF_F 0.0 VI_16
    MOVEF_F 0.0 VN_17
    MOVEF_F 0.0 VI_17
    MOVE32_32 0 RUNCOUNTER_TH_DOWN
    MOVE32_32 0 RUNCOUNTER_TH_UP
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TTH_DOWN
{
    DATA32 tmp
  launch:
    CALL PROGRAM_TH_DOWN 0
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN -1 RUNCOUNTER_TH_DOWN tmp
    JR_GT32 tmp 1 launch
}
vmthread TTH_UP
{
    DATA32 tmp
  launch:
    CALL PROGRAM_TH_UP 1
    CALL GETANDINC32 RUNCOUNTER_TH_UP -1 RUNCOUNTER_TH_UP tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_TH_DOWN
subcall PROGRAM_TH_UP
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1180
    WRITE32 ENDSUB_TH_DOWN:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TH_DOWN
  dispatch1180:
    JR_NEQ32 SUBPROGRAM 1 dispatch1181
    WRITE32 ENDSUB_TH_UP:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TH_UP
  dispatch1181:
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 0.0 VMIN1_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VV1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VV2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VV3_M
    MOVEF_F 0.0 VK21_M
    MOVEF_F 0.0 VV21_M
    MOVEF_F 0.0 VK31_M
    MOVEF_F 0.0 VV31_M
    MOVEF_F 0.0 VRD_M
    MOVEF_F 0.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
    MOVEF_F 0.0 VS1_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VU_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VK_M
    MOVEF_F 0.0 VDIS_M
    MOVEF_F 0.0 VT_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VNUM_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VB_M
    MOVEF_F 0.0 VRGB_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VCOL_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VSP_M
    MOVEF_F 0.0 VTIME_M
    MOVEF_F 0.0 VSP_1
    MOVEF_F 0.0 VWHITE_1
    MOVEF_F 0.0 VU_1
    MOVEF_F 0.0 VL_1
    MOVEF_F 0.0 VL_2
    MOVEF_F 0.0 VSP_2
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 0.0 VV_2
    MOVEF_F 0.0 VU_2
    MOVEF_F 0.0 VMM_3
    MOVEF_F 0.0 VSP_3
    MOVEF_F 0.0 VL_3
    MOVEF_F 0.0 VGRAD_4
    MOVEF_F 0.0 VSP_4
    MOVEF_F 0.0 VL_4
    MOVEF_F 0.0 VGRAD_5
    MOVEF_F 0.0 VSP_5
    MOVEF_F 0.0 VL_5
    MOVEF_F 0.0 VGRAD_6
    MOVEF_F 0.0 VL_6
    MOVEF_F 0.0 VGRAD_7
    MOVEF_F 0.0 VL_7
    STRINGS DUPLICATE '' VMOTOR_8
    MOVEF_F 0.0 VSPEED_8
    STRINGS DUPLICATE '' VMOTOR_9
    MOVEF_F 0.0 VSPEED_9
    MOVEF_F 0.0 VN_10
    MOVEF_F 0.0 VI_10
    MOVEF_F 0.0 VL_10
    MOVEF_F 0.0 VN_11
    MOVEF_F 0.0 VI_11
    MOVEF_F 0.0 VL_11
    MOVEF_F 0.0 VN_12
    MOVEF_F 0.0 VI_12
    MOVEF_F 0.0 VL_12
    MOVEF_F 0.0 VN_13
    MOVEF_F 0.0 VI_13
    MOVEF_F 0.0 VL_13
    MOVEF_F 0.0 VN_14
    MOVEF_F 0.0 VI_14
    MOVEF_F 0.0 VL_14
    MOVEF_F 0.0 VN_15
    MOVEF_F 0.0 VI_15
    MOVEF_F 0.0 VL_15
    MOVEF_F 0.0 VN_16
    MOVEF_F 0.0 VI_16
    MOVEF_F 0.0 VN_17
    MOVEF_F 0.0 VI_17
    TIMER_READ timeMC1
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    CALL MOTOR.INVERT 'B'
    MOVEF_F 0.0 VMAX1_M
    MOVEF_F 100.0 VMIN1_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 100.0 VMIN2_M
    MOVEF_F 1.3 VK1_M
    MOVEF_F 75.0 VV1_M
    MOVEF_F 0.74 VK2_M
    MOVEF_F 55.0 VV2_M
    MOVEF_F 1.17 VK3_M
    MOVEF_F 30.0 VV3_M
    MOVEF_F 1.7 VK21_M
    MOVEF_F 45.0 VV21_M
    MOVEF_F 1.3 VK31_M
    MOVEF_F 20.0 VV31_M
    MOVEF_F 45.0 VRD_M
    MOVEF_F 20.0 VBLACK_M
    MOVEF_F 0.0 VBC1_M
    MOVEF_F 0.0 VWC1_M
    MOVEF_F 0.0 VBC2_M
    MOVEF_F 0.0 VWC2_M
    MOVEF_F 0.0 VRED_M
    MOVEF_F 0.0 VMM_M
  while369:
  whilebody369:
    WRITE32 ENDSUB_COL_BW:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_COL_BW
CALLSUB370:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VRGB_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 80.0 2.0 S.0
    WRITE32 ENDSUB_FRZ:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_FRZ
CALLSUB376:
    JR whilebody369
  endwhile369:
    DATA32 tmp574
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp574
    JR_NEQ32 0 tmp574 alreadylaunched574
    OBJECT_START TTH_DOWN
  alreadylaunched574:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds576
	MOVEF_32 300.0 milliseconds576
	DATA32 timer576
	TIMER_WAIT milliseconds576 timer576
	TIMER_READY timer576
    MOVEF_F 35.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB577:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 40.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB578:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds580
	MOVEF_32 1000.0 milliseconds580
	DATA32 timer580
	TIMER_WAIT milliseconds580 timer580
	TIMER_READY timer580
    MOVEF_F 175.0 VMM_3
    MOVEF_F 35.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB581:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 77.0 VMM_M
    DATAF tmpf583
    DATA8 flag583
    DIVF VMM_M 194.68 tmpf583
    CP_EQF 0.0 194.68 flag583
    SELECTF flag583 0.0 tmpf583 F.0

    MULF F.0 360.0 VL_M
  while585:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile585
  whilebody585:
    WRITE32 ENDSUB_LINE31:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE31
CALLSUB587:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody585
  endwhile585:
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB590:
    MOVEF_F 1.0 VI_M
  for591:
    JR_GTF VI_M 4.0 endfor591
  forbody591:
    WRITE32 ENDSUB_COL_BW:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_COL_BW
CALLSUB592:
    JR_NEQF VCOL_M 1.0 else593_1
    MOVEF_F VI_M VBC1_M
    CALL SPEAKER.TONE 40.0 250.0 200.0
    JR endif593
  else593_1:
    JR_NEQF VCOL_M 6.0 else593_2
    MOVEF_F VI_M VWC1_M
    CALL SPEAKER.TONE 40.0 1200.0 200.0
  else593_2:
  endif593:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf597
    DATA8 flag597
    DIVF VMM_M 194.68 tmpf597
    CP_EQF 0.0 194.68 flag597
    SELECTF flag597 0.0 tmpf597 F.0

    MULF F.0 360.0 VL_M
  while599:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile599
  whilebody599:
    WRITE32 ENDSUB_LINE21:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB601:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody599
  endwhile599:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 4.0 forbody591
  endfor591:
    STRINGS VALUE_FORMATTED VBC1_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 20.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VWC1_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 20.0 70.0 2.0 S.0
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 55.0 VMM_M
    DATAF tmpf609
    DATA8 flag609
    DIVF VMM_M 194.68 tmpf609
    CP_EQF 0.0 194.68 flag609
    SELECTF flag609 0.0 tmpf609 F.0

    MULF F.0 360.0 VL_M
  while611:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile611
  whilebody611:
    WRITE32 ENDSUB_LINE21:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB613:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody611
  endwhile611:
    MOVEF_F 1.0 VI_M
  for615:
    JR_GTF VI_M 4.0 endfor615
  forbody615:
    WRITE32 ENDSUB_COL_BW:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_COL_BW
CALLSUB616:
    JR_NEQF VCOL_M 1.0 else617_1
    MOVEF_F VI_M VBC2_M
    CALL SPEAKER.TONE 40.0 250.0 200.0
    JR endif617
  else617_1:
    JR_NEQF VCOL_M 6.0 else617_2
    MOVEF_F VI_M VWC2_M
    CALL SPEAKER.TONE 40.0 1200.0 200.0
  else617_2:
  endif617:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf621
    DATA8 flag621
    DIVF VMM_M 194.68 tmpf621
    CP_EQF 0.0 194.68 flag621
    SELECTF flag621 0.0 tmpf621 F.0

    MULF F.0 360.0 VL_M
  while623:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile623
  whilebody623:
    WRITE32 ENDSUB_LINE21:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB625:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody623
  endwhile623:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 4.0 forbody615
  endfor615:
    JR_NEQF VWC1_M 0.0 else628_1
    JR_EQF VBC1_M 1.0 else629_1
    MOVEF_F 1.0 VWC1_M
    JR endif629
  else629_1:
    MOVEF_F 2.0 VWC1_M
  else629_2:
  endif629:
  else628_1:
  endif628:
    JR_NEQF VWC2_M 0.0 else630_1
    JR_EQF VBC2_M 1.0 else631_1
    MOVEF_F 1.0 VWC2_M
    JR endif631
  else631_1:
    MOVEF_F 2.0 VWC2_M
  else631_2:
  endif631:
  else630_1:
  endif630:
    JR_NEQF VBC1_M 0.0 else632_1
    JR_EQF VWC1_M 1.0 else633_1
    MOVEF_F 1.0 VBC1_M
    JR endif633
  else633_1:
    MOVEF_F 2.0 VBC1_M
  else633_2:
  endif633:
  else632_1:
  endif632:
    JR_NEQF VBC2_M 0.0 else634_1
    JR_EQF VWC2_M 4.0 else635_1
    MOVEF_F 1.0 VBC2_M
    JR endif635
  else635_1:
    MOVEF_F 2.0 VBC2_M
  else635_2:
  endif635:
  else634_1:
  endif634:
    STRINGS VALUE_FORMATTED VBC2_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 70.0 20.0 2.0 S.0
    STRINGS VALUE_FORMATTED VWC2_M '%g' 99 S.0
    CALL LCD.TEXT 2.0 70.0 70.0 2.0 S.0
    MOVEF_F 15.0 VV21_M
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 50.0 VMM_M
    DATAF tmpf641
    DATA8 flag641
    DIVF VMM_M 194.68 tmpf641
    CP_EQF 0.0 194.68 flag641
    SELECTF flag641 0.0 tmpf641 F.0

    MULF F.0 360.0 VL_M
  while643:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile643
  whilebody643:
    WRITE32 ENDSUB_LINE21:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE21
CALLSUB645:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody643
  endwhile643:
    MOVEF_F 30.0 VV21_M
    MOVEF_F 150.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB647:
    MOVEF_F 30.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB648:
    MOVEF_F 30.0 VGRAD_4
    MOVEF_F 40.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB649:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 120.0 VMM_M
    DATAF tmpf651
    DATA8 flag651
    DIVF VMM_M 194.68 tmpf651
    CP_EQF 0.0 194.68 flag651
    SELECTF flag651 0.0 tmpf651 F.0

    MULF F.0 360.0 VL_M
  while653:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile653
  whilebody653:
    WRITE32 ENDSUB_LINE3:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB655:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody653
  endwhile653:
    CALL MOTOR.RESETCOUNT 'BC'
  while658:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M or659
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VRD_M endwhile658
  or659:
  whilebody658:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M whilebody658
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VRD_M whilebody658
  endwhile658:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB673:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB674:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB675:
    MOVEF_F 35.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB676:
    MOVEF_F 120.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB677:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB678:
    WRITE32 ENDSUB_RIGHT:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB679:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 150.0 VMM_M
    DATAF tmpf681
    DATA8 flag681
    DIVF VMM_M 194.68 tmpf681
    CP_EQF 0.0 194.68 flag681
    SELECTF flag681 0.0 tmpf681 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while684:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf688
    DATA8 flag688
    DIVF F.1 2.0 tmpf688
    CP_EQF 0.0 2.0 flag688
    SELECTF flag688 0.0 tmpf688 F.0

    JR_GTEQF F.0 VL_M endwhile684
  whilebody684:
    WRITE32 ENDSUB_LINE3:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB689:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf693
    DATA8 flag693
    DIVF F.1 2.0 tmpf693
    CP_EQF 0.0 2.0 flag693
    SELECTF flag693 0.0 tmpf693 F.0

    JR_LTF F.0 VL_M whilebody684
  endwhile684:
    MOVEF_F 670.0 VMM_M
    DATAF tmpf694
    DATA8 flag694
    DIVF VMM_M 194.68 tmpf694
    CP_EQF 0.0 194.68 flag694
    SELECTF flag694 0.0 tmpf694 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while697:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf701
    DATA8 flag701
    DIVF F.1 2.0 tmpf701
    CP_EQF 0.0 2.0 flag701
    SELECTF flag701 0.0 tmpf701 F.0

    JR_GTEQF F.0 VL_M endwhile697
  whilebody697:
    WRITE32 ENDSUB_LINE1:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE1
CALLSUB702:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf706
    DATA8 flag706
    DIVF F.1 2.0 tmpf706
    CP_EQF 0.0 2.0 flag706
    SELECTF flag706 0.0 tmpf706 F.0

    JR_LTF F.0 VL_M whilebody697
  endwhile697:
    WRITE32 ENDSUB_OBJECT_YN:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_OBJECT_YN
CALLSUB707:
    JR_NEQF VCOL_M 1.0 else708_1
    MOVEF_F 1.0 VRED_M
    CALL SPEAKER.NOTE 50.0 'C#5' 300.0
  else708_1:
  endif708:
  while710:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 30.0 endwhile710
  whilebody710:
    WRITE32 ENDSUB_LINE2:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB712:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 30.0 whilebody710
  endwhile710:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 90.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB714:
    MOVEF_F 200.0 VMM_M
    DATAF tmpf715
    DATA8 flag715
    DIVF VMM_M 194.68 tmpf715
    CP_EQF 0.0 194.68 flag715
    SELECTF flag715 0.0 tmpf715 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while718:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf722
    DATA8 flag722
    DIVF F.1 2.0 tmpf722
    CP_EQF 0.0 2.0 flag722
    SELECTF flag722 0.0 tmpf722 F.0

    JR_GTEQF F.0 VL_M endwhile718
  whilebody718:
    WRITE32 ENDSUB_LINE2:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB723:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf727
    DATA8 flag727
    DIVF F.1 2.0 tmpf727
    CP_EQF 0.0 2.0 flag727
    SELECTF flag727 0.0 tmpf727 F.0

    JR_LTF F.0 VL_M whilebody718
  endwhile718:
    WRITE32 ENDSUB_OBJECT_YN:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_OBJECT_YN
CALLSUB728:
    JR_NEQF VCOL_M 1.0 else729_1
    MOVEF_F 4.0 VRED_M
    CALL SPEAKER.NOTE 50.0 'C#5' 300.0
  else729_1:
  endif729:
    MOVEF_F 300.0 VMM_M
    DATAF tmpf731
    DATA8 flag731
    DIVF VMM_M 194.68 tmpf731
    CP_EQF 0.0 194.68 flag731
    SELECTF flag731 0.0 tmpf731 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while734:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf738
    DATA8 flag738
    DIVF F.1 2.0 tmpf738
    CP_EQF 0.0 2.0 flag738
    SELECTF flag738 0.0 tmpf738 F.0

    JR_GTEQF F.0 VL_M endwhile734
  whilebody734:
    WRITE32 ENDSUB_LINE2:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB739:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf743
    DATA8 flag743
    DIVF F.1 2.0 tmpf743
    CP_EQF 0.0 2.0 flag743
    SELECTF flag743 0.0 tmpf743 F.0

    JR_LTF F.0 VL_M whilebody734
  endwhile734:
  while744:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile744
  whilebody744:
    WRITE32 ENDSUB_LINE2:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB746:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody744
  endwhile744:
    WRITE32 ENDSUB_RIGHT:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB748:
    MOVEF_F 50.0 VMM_M
    DATAF tmpf749
    DATA8 flag749
    DIVF VMM_M 194.68 tmpf749
    CP_EQF 0.0 194.68 flag749
    SELECTF flag749 0.0 tmpf749 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while752:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf756
    DATA8 flag756
    DIVF F.1 2.0 tmpf756
    CP_EQF 0.0 2.0 flag756
    SELECTF flag756 0.0 tmpf756 F.0

    JR_GTEQF F.0 VL_M endwhile752
  whilebody752:
    WRITE32 ENDSUB_LINE3:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB757:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf761
    DATA8 flag761
    DIVF F.1 2.0 tmpf761
    CP_EQF 0.0 2.0 flag761
    SELECTF flag761 0.0 tmpf761 F.0

    JR_LTF F.0 VL_M whilebody752
  endwhile752:
    MOVEF_F 100.0 VMM_M
    DATAF tmpf762
    DATA8 flag762
    DIVF VMM_M 194.68 tmpf762
    CP_EQF 0.0 194.68 flag762
    SELECTF flag762 0.0 tmpf762 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while765:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf769
    DATA8 flag769
    DIVF F.1 2.0 tmpf769
    CP_EQF 0.0 2.0 flag769
    SELECTF flag769 0.0 tmpf769 F.0

    JR_GTEQF F.0 VL_M endwhile765
  whilebody765:
    WRITE32 ENDSUB_LINE2:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB770:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf774
    DATA8 flag774
    DIVF F.1 2.0 tmpf774
    CP_EQF 0.0 2.0 flag774
    SELECTF flag774 0.0 tmpf774 F.0

    JR_LTF F.0 VL_M whilebody765
  endwhile765:
  while775:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile775
  whilebody775:
    WRITE32 ENDSUB_LINE3:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB777:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody775
  endwhile775:
    WRITE32 ENDSUB_RIGHT:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB779:
    MOVEF_F 450.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB780:
  while781:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile781
  whilebody781:
    WRITE32 ENDSUB_LINE3:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB783:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody781
  endwhile781:
    MOVEF_F 0.0 VN_M
    JR_NEQF VWC1_M 3.0 else785_1
    MOVEF_F 1.0 VN_14
    MOVEF_F VN_M VI_14
    WRITE32 ENDSUB_W3_2:CALLSUB786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W3_2
CALLSUB786:
    ADDF VN_M 1.0 VN_M
  else785_1:
  endif785:
    JR_NEQF VBC1_M 3.0 else788_1
    MOVEF_F 1.0 VN_15
    MOVEF_F VN_M VI_15
    WRITE32 ENDSUB_B3_2:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B3_2
CALLSUB789:
    ADDF VN_M 1.0 VN_M
  else788_1:
  endif788:
    JR_NEQF VBC1_M 2.0 else791_1
    MOVEF_F 1.0 VN_13
    MOVEF_F VN_M VI_13
    WRITE32 ENDSUB_B2_2:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B2_2
CALLSUB792:
    ADDF VN_M 1.0 VN_M
  else791_1:
  endif791:
    JR_NEQF VWC1_M 2.0 else794_1
    MOVEF_F 1.0 VN_12
    MOVEF_F VN_M VI_12
    WRITE32 ENDSUB_W2_2:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W2_2
CALLSUB795:
    ADDF VN_M 1.0 VN_M
  else794_1:
  endif794:
    JR_NEQF VWC1_M 4.0 else797_1
    MOVEF_F 1.0 VN_16
    MOVEF_F VN_M VI_16
    WRITE32 ENDSUB_W4_2:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W4_2
CALLSUB798:
    ADDF VN_M 1.0 VN_M
  else797_1:
  endif797:
    JR_NEQF VBC1_M 4.0 else800_1
    MOVEF_F 1.0 VN_17
    MOVEF_F VN_M VI_17
    WRITE32 ENDSUB_B4_2:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B4_2
CALLSUB801:
    ADDF VN_M 1.0 VN_M
  else800_1:
  endif800:
    JR_NEQF VWC1_M 1.0 else803_1
    MOVEF_F 1.0 VN_10
    MOVEF_F VN_M VI_10
    WRITE32 ENDSUB_W1_2:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W1_2
CALLSUB804:
    ADDF VN_M 1.0 VN_M
  else803_1:
  endif803:
    JR_NEQF VBC1_M 1.0 else806_1
    MOVEF_F 1.0 VN_11
    MOVEF_F VN_M VI_11
    WRITE32 ENDSUB_B1_2:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B1_2
CALLSUB807:
    ADDF VN_M 1.0 VN_M
  else806_1:
  endif806:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf810
    DATA8 flag810
    DIVF VMM_M 194.68 tmpf810
    CP_EQF 0.0 194.68 flag810
    SELECTF flag810 0.0 tmpf810 F.0

    MULF F.0 360.0 VL_M
  while812:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile812
  whilebody812:
    WRITE32 ENDSUB_LINE3:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB814:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody812
  endwhile812:
  while816:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile816
  whilebody816:
    WRITE32 ENDSUB_LINE2:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB818:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody816
  endwhile816:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB820:
    MOVEF_F 50.0 VMM_3
    MOVEF_F 60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB821:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB822:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds824
	MOVEF_32 1500.0 milliseconds824
	DATA32 timer824
	TIMER_WAIT milliseconds824 timer824
	TIMER_READY timer824
    MOVEF_F 55.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB825:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB826:
    MOVEF_F 50.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB827:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB828:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB829:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.START 'AD' 60.0
    DATA32 milliseconds832
	MOVEF_32 300.0 milliseconds832
	DATA32 timer832
	TIMER_WAIT milliseconds832 timer832
	TIMER_READY timer832
    MOVEF_F 70.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB833:
    CALL MOTOR.STOP 'AD' 'false'
    CALL SPEAKER.TONE 40.0 700.0 200.0
    MOVEF_F 80.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB836:
    MOVEF_F 80.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB837:
    MOVEF_F 70.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB838:
    DATA32 tmp839
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp839
    JR_NEQ32 0 tmp839 alreadylaunched839
    OBJECT_START TTH_DOWN
  alreadylaunched839:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB840:
    WRITE32 ENDSUB_LEFT:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB841:
    DATA32 tmp842
    CALL GETANDINC32 RUNCOUNTER_TH_UP 1  RUNCOUNTER_TH_UP tmp842
    JR_NEQ32 0 tmp842 alreadylaunched842
    OBJECT_START TTH_UP
  alreadylaunched842:
    MOVEF_F 100.0 VMM_M
    DATAF tmpf843
    DATA8 flag843
    DIVF VMM_M 194.68 tmpf843
    CP_EQF 0.0 194.68 flag843
    SELECTF flag843 0.0 tmpf843 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while846:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf850
    DATA8 flag850
    DIVF F.1 2.0 tmpf850
    CP_EQF 0.0 2.0 flag850
    SELECTF flag850 0.0 tmpf850 F.0

    JR_GTEQF F.0 VL_M endwhile846
  whilebody846:
    WRITE32 ENDSUB_LINE3:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB851:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf855
    DATA8 flag855
    DIVF F.1 2.0 tmpf855
    CP_EQF 0.0 2.0 flag855
    SELECTF flag855 0.0 tmpf855 F.0

    JR_LTF F.0 VL_M whilebody846
  endwhile846:
    MOVEF_F 250.0 VMM_M
    DATAF tmpf856
    DATA8 flag856
    DIVF VMM_M 194.68 tmpf856
    CP_EQF 0.0 194.68 flag856
    SELECTF flag856 0.0 tmpf856 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while859:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf863
    DATA8 flag863
    DIVF F.1 2.0 tmpf863
    CP_EQF 0.0 2.0 flag863
    SELECTF flag863 0.0 tmpf863 F.0

    JR_GTEQF F.0 VL_M endwhile859
  whilebody859:
    WRITE32 ENDSUB_LINE2:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB864:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf868
    DATA8 flag868
    DIVF F.1 2.0 tmpf868
    CP_EQF 0.0 2.0 flag868
    SELECTF flag868 0.0 tmpf868 F.0

    JR_LTF F.0 VL_M whilebody859
  endwhile859:
  while869:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile869
  whilebody869:
    WRITE32 ENDSUB_LINE3:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB871:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody869
  endwhile869:
    CALL MOTOR.STOP 'BC' 'true'
    JR_NEQF VRED_M 1.0 else874_1
    MOVEF_F 115.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB875:
    DATA32 tmp876
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp876
    JR_NEQ32 0 tmp876 alreadylaunched876
    OBJECT_START TTH_DOWN
  alreadylaunched876:
    MOVEF_F 95.0 VGRAD_5
    MOVEF_F 30.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB877:
    MOVEF_F 10.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB878:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB879:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB880:
    WRITE32 ENDSUB_RIGHT:CALLSUB881 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB881:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf883
    DATA8 flag883
    DIVF VMM_M 194.68 tmpf883
    CP_EQF 0.0 194.68 flag883
    SELECTF flag883 0.0 tmpf883 F.0

    MULF F.0 360.0 VL_M
  while885:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile885
  whilebody885:
    WRITE32 ENDSUB_LINE3:CALLSUB887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB887:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody885
  endwhile885:
  while889:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 30.0 endwhile889
  whilebody889:
    WRITE32 ENDSUB_LINE2:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB891:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 30.0 whilebody889
  endwhile889:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB893:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 300.0 VMM_M
    DATAF tmpf895
    DATA8 flag895
    DIVF VMM_M 194.68 tmpf895
    CP_EQF 0.0 194.68 flag895
    SELECTF flag895 0.0 tmpf895 F.0

    MULF F.0 360.0 VL_M
  while897:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile897
  whilebody897:
    WRITE32 ENDSUB_LINE2:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB899:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody897
  endwhile897:
    JR endif874
  else874_1:
    JR_NEQF VRED_M 4.0 else874_2
    MOVEF_F 110.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB901:
    DATA32 tmp902
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp902
    JR_NEQ32 0 tmp902 alreadylaunched902
    OBJECT_START TTH_DOWN
  alreadylaunched902:
    MOVEF_F 92.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB903:
    MOVEF_F 115.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB904:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB905:
    MOVEF_F 70.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB906:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB907:
    WRITE32 ENDSUB_RIGHT:CALLSUB908 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB908:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf910
    DATA8 flag910
    DIVF VMM_M 194.68 tmpf910
    CP_EQF 0.0 194.68 flag910
    SELECTF flag910 0.0 tmpf910 F.0

    MULF F.0 360.0 VL_M
  while912:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile912
  whilebody912:
    WRITE32 ENDSUB_LINE3:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB914:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody912
  endwhile912:
    JR endif874
  else874_2:
    MOVEF_F 160.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB916:
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB917:
    MOVEF_F 250.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB918:
    CALL MOTOR.START 'BC' 30.0
    DATA32 milliseconds920
	MOVEF_32 1000.0 milliseconds920
	DATA32 timer920
	TIMER_WAIT milliseconds920 timer920
	TIMER_READY timer920
    MOVEF_F -30.0 VSP_M
    CALL MOTOR.RESETCOUNT 'BC'
    DATA8 layer922
	DATA8 no922
	DATA8 mode8922
	
	MOVEF_8 2.0 no922
	SUB8 no922 1 no922
	DIV8 no922 4 layer922
	MATH MOD8 no922 4 no922

	MOVEF_8 2.0 mode8922
	
	INPUT_DEVICE READY_RAW layer922 no922 0 mode8922 0
    DATA8 layer923
	DATA8 no923
	DATA8 mode8923
	
	MOVEF_8 3.0 no923
	SUB8 no923 1 no923
	DIV8 no923 4 layer923
	MATH MOD8 no923 4 no923

	MOVEF_8 2.0 mode8923
	
	INPUT_DEVICE READY_RAW layer923 no923 0 mode8923 0
  while924:
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_EQF F.0 6.0 endwhile924
  whilebody924:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF VSP_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF VSP_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 whilebody924
  endwhile924:
    DATA8 layer936
	DATA8 no936
	DATA8 mode8936
	
	MOVEF_8 2.0 no936
	SUB8 no936 1 no936
	DIV8 no936 4 layer936
	MATH MOD8 no936 4 no936

	MOVEF_8 0.0 mode8936
	
	INPUT_DEVICE READY_RAW layer936 no936 0 mode8936 0
    DATA8 layer937
	DATA8 no937
	DATA8 mode8937
	
	MOVEF_8 3.0 no937
	SUB8 no937 1 no937
	DIV8 no937 4 layer937
	MATH MOD8 no937 4 no937

	MOVEF_8 0.0 mode8937
	
	INPUT_DEVICE READY_RAW layer937 no937 0 mode8937 0
  while938:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile938
  whilebody938:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF VSP_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF VSP_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody938
  endwhile938:
    MOVEF_F 30.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB950:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 tmp952
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp952
    JR_NEQ32 0 tmp952 alreadylaunched952
    OBJECT_START TTH_DOWN
  alreadylaunched952:
    CALL MOTOR.STOP 'BC' 'true'
    WRITE32 ENDSUB_OBJECT_YN:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_OBJECT_YN
CALLSUB954:
    JR_NEQF VCOL_M 1.0 else955_1
    MOVEF_F 2.0 VRED_M
    CALL SPEAKER.TONE 40.0 600.0 200.0
    MOVEF_F 95.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB957:
    MOVEF_F 100.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB958:
    MOVEF_F 10.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB959:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 30.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB960:
    MOVEF_F 520.0 VMM_3
    MOVEF_F -70.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB961:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB962:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB963:
    WRITE32 ENDSUB_RIGHT:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB964:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf966
    DATA8 flag966
    DIVF VMM_M 194.68 tmpf966
    CP_EQF 0.0 194.68 flag966
    SELECTF flag966 0.0 tmpf966 F.0

    MULF F.0 360.0 VL_M
  while968:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile968
  whilebody968:
    WRITE32 ENDSUB_LINE3:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB970:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody968
  endwhile968:
    JR endif955
  else955_1:
    MOVEF_F 3.0 VRED_M
    MOVEF_F 90.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB972:
    MOVEF_F 190.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB973:
    MOVEF_F 150.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB974:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 20.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB975:
    MOVEF_F 170.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB976:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F 60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB977:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB978:
    WRITE32 ENDSUB_LEFT:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB979:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 80.0 VMM_M
    DATAF tmpf981
    DATA8 flag981
    DIVF VMM_M 194.68 tmpf981
    CP_EQF 0.0 194.68 flag981
    SELECTF flag981 0.0 tmpf981 F.0

    MULF F.0 360.0 VL_M
  while983:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile983
  whilebody983:
    WRITE32 ENDSUB_LINE3:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB985:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody983
  endwhile983:
  else955_2:
  endif955:
  else874_3:
  endif874:
    MOVEF_F 200.0 VMM_M
    DATAF tmpf987
    DATA8 flag987
    DIVF VMM_M 194.68 tmpf987
    CP_EQF 0.0 194.68 flag987
    SELECTF flag987 0.0 tmpf987 F.0

    MULF F.0 360.0 VL_M
  while989:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile989
  whilebody989:
    WRITE32 ENDSUB_LINE2:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB991:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody989
  endwhile989:
  while993:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile993
  whilebody993:
    WRITE32 ENDSUB_LINE2:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB995:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody993
  endwhile993:
    WRITE32 ENDSUB_RIGHT:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB997:
    MOVEF_F 80.0 VMM_M
    DATAF tmpf998
    DATA8 flag998
    DIVF VMM_M 194.68 tmpf998
    CP_EQF 0.0 194.68 flag998
    SELECTF flag998 0.0 tmpf998 F.0

    MULF F.0 360.0 VL_M
  while1000:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile1000
  whilebody1000:
    WRITE32 ENDSUB_LINE3:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1002:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody1000
  endwhile1000:
  while1004:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1004
  whilebody1004:
    WRITE32 ENDSUB_LINE2:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1006:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1004
  endwhile1004:
    JR_EQF VRED_M 1.0 or1009
    JR_NEQF VRED_M 3.0 else1008_1
  or1009:
    MOVEF_F 310.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1010:
    STRINGS DUPLICATE 'AD' VMOTOR_9
    MOVEF_F 40.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB1011:
    MOVEF_F 50.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1012:
    MOVEF_F 220.0 VMM_3
    MOVEF_F -50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1013:
    JR endif1008
  else1008_1:
    MOVEF_F 130.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1014:
    MOVEF_F 45.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB1015:
    STRINGS DUPLICATE 'AD' VMOTOR_9
    MOVEF_F 40.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB1016 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB1016:
    MOVEF_F 70.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1017:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1018:
    MOVEF_F 30.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB1019:
    MOVEF_F 170.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1020:
    MOVEF_F 220.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1021 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1021:
  else1008_2:
  endif1008:
    DATA32 tmp1022
    CALL GETANDINC32 RUNCOUNTER_TH_UP 1  RUNCOUNTER_TH_UP tmp1022
    JR_NEQ32 0 tmp1022 alreadylaunched1022
    OBJECT_START TTH_UP
  alreadylaunched1022:
    MOVEF_F -40.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB1023:
    MOVEF_F 35.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1024:
    MOVEF_F 60.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB1025:
    CALL MOTOR.STARTPOWER 'B' 30.0
    CALL MOTOR.STARTPOWER 'C' -30.0
  while1028:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 30.0 endwhile1028
  whilebody1028:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 30.0 whilebody1028
  endwhile1028:
  while1031:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile1031
  whilebody1031:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody1031
  endwhile1031:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 20.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB1035:
    MOVEF_F 150.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB1036:
  while1037:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1037
  whilebody1037:
    WRITE32 ENDSUB_LINE2:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1039:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1037
  endwhile1037:
    MOVEF_F 40.0 VGRAD_4
    MOVEF_F 45.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB1041:
    MOVEF_F 37.0 VGRAD_5
    MOVEF_F 45.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB1042:
    MOVEF_F 600.0 VMM_3
    MOVEF_F 80.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1043:
    MOVEF_F 110.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1044:
    MOVEF_F 90.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB1045:
    MOVEF_F 75.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1046 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1046:
    MOVEF_F 20.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB1047:
    MOVEF_F 25.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1048:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.START 'AD' 40.0
    DATA32 milliseconds1051
	MOVEF_32 300.0 milliseconds1051
	DATA32 timer1051
	TIMER_WAIT milliseconds1051 timer1051
	TIMER_READY timer1051
    MOVEF_F 70.0 VMM_3
    MOVEF_F -50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1052 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1052:
    CALL MOTOR.STOP 'AD' 'false'
    CALL SPEAKER.TONE 40.0 700.0 200.0
    MOVEF_F 130.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1055:
    DATA32 tmp1056
    CALL GETANDINC32 RUNCOUNTER_TH_DOWN 1  RUNCOUNTER_TH_DOWN tmp1056
    JR_NEQ32 0 tmp1056 alreadylaunched1056
    OBJECT_START TTH_DOWN
  alreadylaunched1056:
    MOVEF_F 98.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB1057 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB1057:
    MOVEF_F 300.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1058:
    MOVEF_F 30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB1059:
    WRITE32 ENDSUB_RIGHT:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB1060:
    MOVEF_F 100.0 VMM_M
    DATAF tmpf1061
    DATA8 flag1061
    DIVF VMM_M 194.68 tmpf1061
    CP_EQF 0.0 194.68 flag1061
    SELECTF flag1061 0.0 tmpf1061 F.0

    MULF F.0 360.0 VL_M
  while1063:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile1063
  whilebody1063:
    WRITE32 ENDSUB_LINE3:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1065:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody1063
  endwhile1063:
  while1067:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1067
  whilebody1067:
    WRITE32 ENDSUB_LINE2:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1069:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1067
  endwhile1067:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1071:
    MOVEF_F 150.0 VMM_M
    DATAF tmpf1072
    DATA8 flag1072
    DIVF VMM_M 194.68 tmpf1072
    CP_EQF 0.0 194.68 flag1072
    SELECTF flag1072 0.0 tmpf1072 F.0

    MULF F.0 360.0 VL_M
  while1074:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile1074
  whilebody1074:
    WRITE32 ENDSUB_LINE2:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1076:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody1074
  endwhile1074:
    CALL MOTOR.RESETCOUNT 'BC'
  while1079:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M or1080
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VRD_M endwhile1079
  or1080:
  whilebody1079:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_M
    MULF VU_M 0.8 F.1
    ADDF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.8 F.1
    SUBF 30.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VRD_M whilebody1079
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 VRD_M whilebody1079
  endwhile1079:
    MOVEF_F 100.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1094:
    MOVEF_F 10.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1095:
    STRINGS DUPLICATE 'AD' VMOTOR_8
    MOVEF_F 50.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB1096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB1096:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1097:
    MOVEF_F 30.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB1098:
    MOVEF_F 150.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1099:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB1100:
    WRITE32 ENDSUB_RIGHT:CALLSUB1101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB1101:
    MOVEF_F 900.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB1102:
  while1103:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1103
  whilebody1103:
    WRITE32 ENDSUB_LINE3:CALLSUB1105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1105:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1103
  endwhile1103:
    MOVEF_F 0.0 VN_M
    JR_NEQF VWC2_M 3.0 else1107_1
    MOVEF_F 2.0 VN_14
    MOVEF_F VN_M VI_14
    WRITE32 ENDSUB_W3_2:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W3_2
CALLSUB1108:
    ADDF VN_M 1.0 VN_M
  else1107_1:
  endif1107:
    JR_NEQF VBC2_M 3.0 else1110_1
    MOVEF_F 2.0 VN_15
    MOVEF_F VN_M VI_15
    WRITE32 ENDSUB_B3_2:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B3_2
CALLSUB1111:
    ADDF VN_M 1.0 VN_M
  else1110_1:
  endif1110:
    JR_NEQF VBC2_M 2.0 else1113_1
    MOVEF_F 2.0 VN_13
    MOVEF_F VN_M VI_13
    WRITE32 ENDSUB_B2_2:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B2_2
CALLSUB1114:
    ADDF VN_M 1.0 VN_M
  else1113_1:
  endif1113:
    JR_NEQF VWC2_M 2.0 else1116_1
    MOVEF_F 2.0 VN_12
    MOVEF_F VN_M VI_12
    WRITE32 ENDSUB_W2_2:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W2_2
CALLSUB1117:
    ADDF VN_M 1.0 VN_M
  else1116_1:
  endif1116:
    JR_NEQF VWC2_M 4.0 else1119_1
    MOVEF_F 2.0 VN_16
    MOVEF_F VN_M VI_16
    WRITE32 ENDSUB_W4_2:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W4_2
CALLSUB1120:
    ADDF VN_M 1.0 VN_M
  else1119_1:
  endif1119:
    JR_NEQF VBC2_M 4.0 else1122_1
    MOVEF_F 2.0 VN_17
    MOVEF_F VN_M VI_17
    WRITE32 ENDSUB_B4_2:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B4_2
CALLSUB1123:
    ADDF VN_M 1.0 VN_M
  else1122_1:
  endif1122:
    JR_NEQF VWC2_M 1.0 else1125_1
    MOVEF_F 2.0 VN_10
    MOVEF_F VN_M VI_10
    WRITE32 ENDSUB_W1_2:CALLSUB1126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_W1_2
CALLSUB1126:
    ADDF VN_M 1.0 VN_M
  else1125_1:
  endif1125:
    JR_NEQF VBC2_M 1.0 else1128_1
    MOVEF_F 2.0 VN_11
    MOVEF_F VN_M VI_11
    WRITE32 ENDSUB_B1_2:CALLSUB1129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_B1_2
CALLSUB1129:
    ADDF VN_M 1.0 VN_M
  else1128_1:
  endif1128:
    MOVEF_F 650.0 VMM_M
    WRITE32 ENDSUB_LINE_TOMM:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE_TOMM
CALLSUB1131:
  while1132:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile1132
  whilebody1132:
    WRITE32 ENDSUB_LINE2:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1134:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody1132
  endwhile1132:
    WRITE32 ENDSUB_LEFT:CALLSUB1136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB1136:
    MOVEF_F 50.0 VMM_M
    DATAF tmpf1137
    DATA8 flag1137
    DIVF VMM_M 194.68 tmpf1137
    CP_EQF 0.0 194.68 flag1137
    SELECTF flag1137 0.0 tmpf1137 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while1140:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1144
    DATA8 flag1144
    DIVF F.1 2.0 tmpf1144
    CP_EQF 0.0 2.0 flag1144
    SELECTF flag1144 0.0 tmpf1144 F.0

    JR_GTEQF F.0 VL_M endwhile1140
  whilebody1140:
    WRITE32 ENDSUB_LINE3:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB1145:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1149
    DATA8 flag1149
    DIVF F.1 2.0 tmpf1149
    CP_EQF 0.0 2.0 flag1149
    SELECTF flag1149 0.0 tmpf1149 F.0

    JR_LTF F.0 VL_M whilebody1140
  endwhile1140:
    MOVEF_F 300.0 VMM_M
    DATAF tmpf1150
    DATA8 flag1150
    DIVF VMM_M 194.68 tmpf1150
    CP_EQF 0.0 194.68 flag1150
    SELECTF flag1150 0.0 tmpf1150 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while1153:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1157
    DATA8 flag1157
    DIVF F.1 2.0 tmpf1157
    CP_EQF 0.0 2.0 flag1157
    SELECTF flag1157 0.0 tmpf1157 F.0

    JR_GTEQF F.0 VL_M endwhile1153
  whilebody1153:
    WRITE32 ENDSUB_LINE2:CALLSUB1158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1158:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1162
    DATA8 flag1162
    DIVF F.1 2.0 tmpf1162
    CP_EQF 0.0 2.0 flag1162
    SELECTF flag1162 0.0 tmpf1162 F.0

    JR_LTF F.0 VL_M whilebody1153
  endwhile1153:
  while1163:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 or1164
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile1163
  or1164:
  whilebody1163:
    WRITE32 ENDSUB_LINE2:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE2
CALLSUB1167:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody1163
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody1163
  endwhile1163:
    MOVEF_F 20.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1170:
    MOVEF_F 50.0 VGRAD_5
    MOVEF_F 50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB1171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB1171:
    MOVEF_F 80.0 VMM_3
    MOVEF_F 50.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB1172:
    CALL MOTOR.STOP 'ABCD' 'true'
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp VTIME_M
    CALL LCD.CLEAR
    DATAF tmpf1176
    DATA8 flag1176
    DIVF VTIME_M 1000.0 tmpf1176
    CP_EQF 0.0 1000.0 flag1176
    SELECTF flag1176 0.0 tmpf1176 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 2.0 S.0
    WRITE32 ENDSUB_FRZ:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_FRZ
CALLSUB1179:
ENDTHREAD:
    RETURN
SUB_SEN1:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN1_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX1_M VMIN1_M F.1
    DATAF tmpf11
    DATA8 flag11
    DIVF F.0 F.1 tmpf11
    CP_EQF 0.0 F.1 flag11
    SELECTF flag11 0.0 tmpf11 VS1_M

RETSUB_SEN1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SEN1:
SUB_SEN2:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf16
    DATA8 flag16
    DIVF F.0 F.1 tmpf16
    CP_EQF 0.0 F.1 flag16
    SELECTF flag16 0.0 tmpf16 VS2_M

RETSUB_SEN2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SEN2:
SUB_LINE1:
    WRITE32 ENDSUB_SEN1:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB17:
    WRITE32 ENDSUB_SEN2:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB18:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK1_M F.1
    ADDF VV1_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK1_M F.1
    SUBF VV1_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE1:
SUB_LINE2:
    WRITE32 ENDSUB_SEN1:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB26:
    WRITE32 ENDSUB_SEN2:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB27:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK2_M F.1
    ADDF VV2_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK2_M F.1
    SUBF VV2_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE2:
SUB_LINE3:
    WRITE32 ENDSUB_SEN1:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB35:
    WRITE32 ENDSUB_SEN2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB36:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK3_M F.1
    ADDF VV3_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK3_M F.1
    SUBF VV3_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
RETSUB_LINE3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE3:
SUB_LINE21:
    WRITE32 ENDSUB_SEN2:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB44:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 30.0 VU_M
    MULF VU_M VK21_M F.1
    ADDF VV21_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VU_M VK21_M F.1
    SUBF VV21_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_LINE21:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE21:
SUB_LINE31:
    WRITE32 ENDSUB_SEN2:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB53:
    CALL SENSOR.READPERCENT 3.0 F.0
    SUBF F.0 30.0 VU_M
    MULF VU_M VK31_M F.1
    ADDF VV31_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    MULF VU_M VK31_M F.1
    SUBF VV31_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
RETSUB_LINE31:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE31:
SUB_LINE_TOMM:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 184.918841175262 VL_M
  while63:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile63
  whilebody63:
    WRITE32 ENDSUB_LINE3:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB65:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody63
  endwhile63:
    MOVEF_F 20.0 VV_M
    MOVEF_F 0.55 VK_M
    SUBF VMM_M 100.0 F.1
    DATAF tmpf68
    DATA8 flag68
    DIVF F.1 194.68 tmpf68
    CP_EQF 0.0 194.68 flag68
    SELECTF flag68 0.0 tmpf68 F.0

    MULF F.0 360.0 VL_M
    CALL MOTOR.RESETCOUNT 'BC'
  while71:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf75
    DATA8 flag75
    DIVF F.1 2.0 tmpf75
    CP_EQF 0.0 2.0 flag75
    SELECTF flag75 0.0 tmpf75 F.0

    JR_GTEQF F.0 VL_M endwhile71
  whilebody71:
    WRITE32 ENDSUB_SEN1:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB76:
    WRITE32 ENDSUB_SEN2:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB77:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M VK_M F.1
    ADDF VV_M F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M VK_M F.1
    SUBF VV_M F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.1
    CALL MOTOR.GETCOUNT 'C' F.2
    ADDF F.1 F.2 F.0
    DATAF tmpf88
    DATA8 flag88
    DIVF F.0 2.0 tmpf88
    CP_EQF 0.0 2.0 flag88
    SELECTF flag88 0.0 tmpf88 VDIS_M

    DATAF tmpf89
    DATA8 flag89
    DIVF VDIS_M 360.0 tmpf89
    CP_EQF 0.0 360.0 flag89
    SELECTF flag89 0.0 tmpf89 F.0

    MULF F.0 194.68 VDIS_M
    JR_LTEQF VMM_M 1150.0 else91_1
    MOVEF_F 0.8 VT_M
    JR endif91
  else91_1:
    JR_LTEQF VMM_M 350.0 else91_2
    MOVEF_F 0.55 VT_M
    JR endif91
  else91_2:
    MOVEF_F 0.4 VT_M
    MOVEF_F 40.0 VV_M
  else91_3:
  endif91:
    MULF VMM_M 0.4 F.0
    JR_GTEQF VDIS_M F.0 else92_1
    JR_GTEQF VV_M 95.0 else92_1
    ADDF VV_M 0.6 VV_M
    JR endif92
  else92_1:
    MULF VMM_M VT_M F.0
    JR_LTEQF VDIS_M F.0 else92_2
    JR_LTEQF VV_M 15.0 else92_2
    SUBF VV_M 0.6 VV_M
  else92_2:
  endif92:
    JR_GTEQF VV_M 35.0 else97_1
    MOVEF_F 1.2 VK_M
    JR endif97
  else97_1:
    JR_GTEQF VV_M 55.0 else97_2
    MOVEF_F 0.8 VK_M
    JR endif97
  else97_2:
    JR_GTEQF VV_M 100.0 else97_3
    MOVEF_F 1.2 VK_M
  else97_3:
  endif97:
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf101
    DATA8 flag101
    DIVF F.1 2.0 tmpf101
    CP_EQF 0.0 2.0 flag101
    SELECTF flag101 0.0 tmpf101 F.0

    JR_LTF F.0 VL_M whilebody71
  endwhile71:
RETSUB_LINE_TOMM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LINE_TOMM:
SUB_LEFT:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB102:
    MOVEF_F 60.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB103:
    CALL MOTOR.STARTPOWER 'B' -30.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while106:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 30.0 endwhile106
  whilebody106:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 30.0 whilebody106
  endwhile106:
  while109:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile109
  whilebody109:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody109
  endwhile109:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 10.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB113:
RETSUB_LEFT:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT:
SUB_RIGHT:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB114:
    MOVEF_F 60.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB115:
    CALL MOTOR.STARTPOWER 'B' 30.0
    CALL MOTOR.STARTPOWER 'C' -30.0
  while118:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 30.0 endwhile118
  whilebody118:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 30.0 whilebody118
  endwhile118:
  while121:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile121
  whilebody121:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 25.0 whilebody121
  endwhile121:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 10.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB125:
RETSUB_RIGHT:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT:
SUB_AROUND:
    MOVEF_F 140.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB126:
    CALL MOTOR.STARTPOWER 'B' -40.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 30.0 endwhile129
  whilebody129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 30.0 whilebody129
  endwhile129:
  while132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile132
  whilebody132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody132
  endwhile132:
    CALL MOTOR.STOP 'BC' 'true'
    MOVEF_F 10.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB136:
RETSUB_AROUND:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_AROUND:
SUB_TOLINE_1:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 0.0 VWHITE_1
    DATA8 layer138
	DATA8 no138
	DATA8 mode8138
	
	MOVEF_8 2.0 no138
	SUB8 no138 1 no138
	DIV8 no138 4 layer138
	MATH MOD8 no138 4 no138

	MOVEF_8 2.0 mode8138
	
	INPUT_DEVICE READY_RAW layer138 no138 0 mode8138 0
    DATA8 layer139
	DATA8 no139
	DATA8 mode8139
	
	MOVEF_8 3.0 no139
	SUB8 no139 1 no139
	DIV8 no139 4 layer139
	MATH MOD8 no139 4 no139

	MOVEF_8 2.0 mode8139
	
	INPUT_DEVICE READY_RAW layer139 no139 0 mode8139 0
  while140:
    JR_EQF VWHITE_1 1.0 endwhile140
  whilebody140:
  while141:
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_EQF F.0 6.0 endwhile141
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_EQF F.0 6.0 endwhile141
  whilebody141:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_EQF F.0 6.0 and153
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 whilebody141
  and153:
  endwhile141:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 12.9443188822683 VL_1
  while157:
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VL_1 endwhile157
  whilebody157:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 VL_1 whilebody157
  endwhile157:
    CALL SENSOR.READRAWVALUE 2.0 0.0 F.0
    JR_NEQF F.0 6.0 else171_1
    CALL SENSOR.READRAWVALUE 3.0 0.0 F.0
    JR_NEQF F.0 6.0 else171_1
    MOVEF_F 1.0 VWHITE_1
  else171_1:
  endif171:
    JR_NEQF VWHITE_1 1.0 whilebody140
  endwhile140:
    DATA8 layer174
	DATA8 no174
	DATA8 mode8174
	
	MOVEF_8 2.0 no174
	SUB8 no174 1 no174
	DIV8 no174 4 layer174
	MATH MOD8 no174 4 no174

	MOVEF_8 0.0 mode8174
	
	INPUT_DEVICE READY_RAW layer174 no174 0 mode8174 0
    DATA8 layer175
	DATA8 no175
	DATA8 mode8175
	
	MOVEF_8 3.0 no175
	SUB8 no175 1 no175
	DIV8 no175 4 layer175
	MATH MOD8 no175 4 no175

	MOVEF_8 0.0 mode8175
	
	INPUT_DEVICE READY_RAW layer175 no175 0 mode8175 0
  while176:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 endwhile176
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 25.0 endwhile176
  whilebody176:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_1
    MULF VU_1 0.8 F.1
    ADDF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_1 0.8 F.1
    SUBF VSP_1 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 25.0 and188
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 25.0 whilebody176
  and188:
  endwhile176:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_TOLINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOLINE_1:
SUB_MOVE_2:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 0.0 VDIS_2
    MOVEF_F 15.0 VV_2
    JR_GTEQF VSP_2 0.0 else193_1
    MULF VV_2 -1.0 VV_2
  else193_1:
  endif193:
  while195:
    JR_GTF VDIS_2 VL_2 endwhile195
  whilebody195:
    CALL MOTOR.GETCOUNT 'B' F.0
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.0 F.1 VU_2
    MULF VU_2 0.8 F.1
    ADDF VV_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_2 0.8 F.1
    SUBF VV_2 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL MOTOR.GETCOUNT 'B' F.2
    CALL MOTOR.GETCOUNT 'C' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf208
    DATA8 flag208
    DIVF F.1 2.0 tmpf208
    CP_EQF 0.0 2.0 flag208
    SELECTF flag208 0.0 tmpf208 F.0

    MATH ABS F.0 VDIS_2
    MATH ABS VV_2 F.0
    MATH ABS VSP_2 F.1
    JR_GTEQF F.0 F.1 else210_1
    JR_LTEQF VSP_2 0.0 else213_1
    ADDF VV_2 0.2 VV_2
    JR endif213
  else213_1:
    SUBF VV_2 0.2 VV_2
  else213_2:
  endif213:
  else210_1:
  endif210:
    JR_LTEQF VDIS_2 VL_2 whilebody195
  endwhile195:
RETSUB_MOVE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_MOVE_2:
SUB_TOMM_2:
    DATAF tmpf216
    DATA8 flag216
    DIVF VMM_3 194.68 tmpf216
    CP_EQF 0.0 194.68 flag216
    SELECTF flag216 0.0 tmpf216 F.0

    MULF F.0 360.0 VL_3
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F VL_3 VL_2
    MOVEF_F VSP_3 VSP_2
    WRITE32 ENDSUB_MOVE_2:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_MOVE_2
CALLSUB219:
    MOVEF_F 0.0 VSP_3
RETSUB_TOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOMM_2:
SUB_LEFT1_2:
    MULF 1092.72 VGRAD_4 F.0
    DATAF tmpf221
    DATA8 flag221
    DIVF F.0 360.0 tmpf221
    CP_EQF 0.0 360.0 flag221
    SELECTF flag221 0.0 tmpf221 VL_4

    DATAF tmpf222
    DATA8 flag222
    DIVF VL_4 200.96 tmpf222
    CP_EQF 0.0 200.96 flag222
    SELECTF flag222 0.0 tmpf222 F.0

    MULF F.0 360.0 VL_4
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'C' VSP_4
  while226:
    CALL MOTOR.GETCOUNT 'C' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 VL_4 endwhile226
  whilebody226:
    CALL MOTOR.STOP 'B' 'true'
    CALL MOTOR.GETCOUNT 'C' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 VL_4 whilebody226
  endwhile226:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_LEFT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT1_2:
SUB_RIGHT1_2:
    MULF 1092.72 VGRAD_5 F.0
    DATAF tmpf234
    DATA8 flag234
    DIVF F.0 360.0 tmpf234
    CP_EQF 0.0 360.0 flag234
    SELECTF flag234 0.0 tmpf234 VL_5

    DATAF tmpf235
    DATA8 flag235
    DIVF VL_5 200.96 tmpf235
    CP_EQF 0.0 200.96 flag235
    SELECTF flag235 0.0 tmpf235 F.0

    MULF F.0 360.0 VL_5
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' VSP_5
  while239:
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 VL_5 endwhile239
  whilebody239:
    CALL MOTOR.STOP 'C' 'true'
    CALL MOTOR.GETCOUNT 'B' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 VL_5 whilebody239
  endwhile239:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_RIGHT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT1_2:
SUB_LEFT2_1:
    MULF 1092.72 VGRAD_6 F.0
    DATAF tmpf247
    DATA8 flag247
    DIVF F.0 360.0 tmpf247
    CP_EQF 0.0 360.0 flag247
    SELECTF flag247 0.0 tmpf247 VL_6

    DATAF tmpf248
    DATA8 flag248
    DIVF VL_6 200.96 tmpf248
    CP_EQF 0.0 200.96 flag248
    SELECTF flag248 0.0 tmpf248 F.0

    MULF F.0 360.0 VL_6
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' -30.0
    CALL MOTOR.STARTPOWER 'C' 30.0
  while253:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf259
    DATA8 flag259
    DIVF F.1 2.0 tmpf259
    CP_EQF 0.0 2.0 flag259
    SELECTF flag259 0.0 tmpf259 F.0

    DATAF tmpf260
    DATA8 flag260
    DIVF VL_6 2.0 tmpf260
    CP_EQF 0.0 2.0 flag260
    SELECTF flag260 0.0 tmpf260 F.1

    JR_GTF F.0 F.1 endwhile253
  whilebody253:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf266
    DATA8 flag266
    DIVF F.1 2.0 tmpf266
    CP_EQF 0.0 2.0 flag266
    SELECTF flag266 0.0 tmpf266 F.0

    DATAF tmpf267
    DATA8 flag267
    DIVF VL_6 2.0 tmpf267
    CP_EQF 0.0 2.0 flag267
    SELECTF flag267 0.0 tmpf267 F.1

    JR_LTEQF F.0 F.1 whilebody253
  endwhile253:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_LEFT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_LEFT2_1:
SUB_RIGHT2_1:
    MULF 1092.72 VGRAD_7 F.0
    DATAF tmpf270
    DATA8 flag270
    DIVF F.0 360.0 tmpf270
    CP_EQF 0.0 360.0 flag270
    SELECTF flag270 0.0 tmpf270 VL_7

    DATAF tmpf271
    DATA8 flag271
    DIVF VL_7 200.96 tmpf271
    CP_EQF 0.0 200.96 flag271
    SELECTF flag271 0.0 tmpf271 F.0

    MULF F.0 360.0 VL_7
    CALL MOTOR.RESETCOUNT 'BC'
    CALL MOTOR.STARTPOWER 'B' 40.0
    CALL MOTOR.STARTPOWER 'C' -40.0
  while276:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf282
    DATA8 flag282
    DIVF F.1 2.0 tmpf282
    CP_EQF 0.0 2.0 flag282
    SELECTF flag282 0.0 tmpf282 F.0

    DATAF tmpf283
    DATA8 flag283
    DIVF VL_7 2.0 tmpf283
    CP_EQF 0.0 2.0 flag283
    SELECTF flag283 0.0 tmpf283 F.1

    JR_GTF F.0 F.1 endwhile276
  whilebody276:
    CALL MOTOR.GETCOUNT 'B' F.3
    MATH ABS F.3 F.2
    CALL MOTOR.GETCOUNT 'C' F.4
    MATH ABS F.4 F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf289
    DATA8 flag289
    DIVF F.1 2.0 tmpf289
    CP_EQF 0.0 2.0 flag289
    SELECTF flag289 0.0 tmpf289 F.0

    DATAF tmpf290
    DATA8 flag290
    DIVF VL_7 2.0 tmpf290
    CP_EQF 0.0 2.0 flag290
    SELECTF flag290 0.0 tmpf290 F.1

    JR_LTEQF F.0 F.1 whilebody276
  endwhile276:
    CALL MOTOR.STOP 'BC' 'true'
RETSUB_RIGHT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RIGHT2_1:
SUB_FRZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_FRZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_FRZ:
SUB_UP_2:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.RESETCOUNT 'AD'
    SUBF 0.0 VSPEED_8 F.0
    CALL MOTOR.START VMOTOR_8 F.0
    DATA32 milliseconds299
	MOVEF_32 200.0 milliseconds299
	DATA32 timer299
	TIMER_WAIT milliseconds299 timer299
	TIMER_READY timer299
  while300:
    CALL MOTOR.GETCOUNT VMOTOR_8 F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 endwhile300
    CALL MOTOR.GETSPEED VMOTOR_8 F.1
    MATH ABS F.1 F.0
    MULF VSPEED_8 0.3 F.1
    JR_LTEQF F.0 F.1 endwhile300
  whilebody300:
    CALL MOTOR.GETCOUNT VMOTOR_8 F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 and306
    CALL MOTOR.GETSPEED VMOTOR_8 F.1
    MATH ABS F.1 F.0
    MULF VSPEED_8 0.3 F.1
    JR_GTF F.0 F.1 whilebody300
  and306:
  endwhile300:
    CALL MOTOR.STOP 'ADBC' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_UP_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_UP_2:
SUB_DOWN_2:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.STARTPOWER VMOTOR_9 VSPEED_9
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds317
	MOVEF_32 600.0 milliseconds317
	DATA32 timer317
	TIMER_WAIT milliseconds317 timer317
	TIMER_READY timer317
    CALL MOTOR.STOP 'BC' 'true'
  while319:
    CALL MOTOR.GETSPEED VMOTOR_9 F.0
    MULF VSPEED_9 0.4 F.1
    JR_LTEQF F.0 F.1 endwhile319
  whilebody319:
    CALL MOTOR.STOP 'BC' 'true'
    CALL MOTOR.GETSPEED VMOTOR_9 F.0
    MULF VSPEED_9 0.4 F.1
    JR_GTF F.0 F.1 whilebody319
  endwhile319:
    CALL MOTOR.SCHEDULE VMOTOR_9 -20.0 0.0 20.0 0.0 'true' 

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR VMOTOR_9 layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    CALL MOTOR.STOP 'BC' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_DOWN_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_DOWN_2:
SUB_HSV:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C 1.0 1.0 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VR_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VG_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VB_M VRECVARRAY_M
    ADDF VR_M VG_M F.0
    ADDF F.0 VB_M VRGB_M
    JR_LTEQF VR_M VG_M else336_1
    JR_LTEQF VR_M VB_M else336_1
    MOVEF_F VR_M VMAX_M
    JR endif336
  else336_1:
    JR_LTEQF VG_M VR_M else336_2
    JR_LTEQF VG_M VB_M else336_2
    MOVEF_F VG_M VMAX_M
    JR endif336
  else336_2:
    JR_LTEQF VB_M VR_M else336_3
    JR_LTEQF VB_M VG_M else336_3
    MOVEF_F VB_M VMAX_M
  else336_3:
  endif336:
    JR_GTEQF VR_M VG_M else337_1
    JR_GTEQF VR_M VB_M else337_1
    MOVEF_F VR_M VMIN_M
    JR endif337
  else337_1:
    JR_GTEQF VG_M VR_M else337_2
    JR_GTEQF VG_M VB_M else337_2
    MOVEF_F VG_M VMIN_M
    JR endif337
  else337_2:
    JR_GTEQF VB_M VR_M else337_3
    JR_GTEQF VB_M VG_M else337_3
    MOVEF_F VB_M VMIN_M
  else337_3:
  endif337:
    JR_NEQF VMAX_M VMIN_M else338_1
    MOVEF_F 0.0 VH_M
    JR endif338
  else338_1:
    JR_NEQF VR_M VMAX_M else339_1
    JR_LTF VG_M VB_M else340_1
    SUBF VG_M VB_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf344
    DATA8 flag344
    DIVF F.0 F.1 tmpf344
    CP_EQF 0.0 F.1 flag344
    SELECTF flag344 0.0 tmpf344 VH_M

    JR endif340
  else340_1:
    SUBF VG_M VB_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf348
    DATA8 flag348
    DIVF F.1 F.2 tmpf348
    CP_EQF 0.0 F.2 flag348
    SELECTF flag348 0.0 tmpf348 F.0

    ADDF F.0 360.0 VH_M
  else340_2:
  endif340:
    JR endif339
  else339_1:
    JR_NEQF VMAX_M VG_M else350_1
    SUBF VB_M VR_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf354
    DATA8 flag354
    DIVF F.1 F.2 tmpf354
    CP_EQF 0.0 F.2 flag354
    SELECTF flag354 0.0 tmpf354 F.0

    ADDF F.0 120.0 VH_M
    JR endif350
  else350_1:
    SUBF VR_M VG_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf359
    DATA8 flag359
    DIVF F.1 F.2 tmpf359
    CP_EQF 0.0 F.2 flag359
    SELECTF flag359 0.0 tmpf359 F.0

    ADDF F.0 240.0 VH_M
  else350_2:
  endif350:
  else339_2:
  endif339:
  else338_2:
  endif338:
    JR_NEQF VMAX_M 0.0 else361_1
    MOVEF_F 0.0 VS_M
    JR endif361
  else361_1:
    DATAF tmpf362
    DATA8 flag362
    DIVF VMIN_M VMAX_M tmpf362
    CP_EQF 0.0 VMAX_M flag362
    SELECTF flag362 0.0 tmpf362 F.0

    SUBF 1.0 F.0 VS_M
  else361_2:
  endif361:
    MOVEF_F VMAX_M VV_M
    MULF VS_M 100.0 VS_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 100.0 VMIN_M
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_COL_BW:
    WRITE32 ENDSUB_HSV:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB365:
    JR_LTF VH_M 150.0 or367
    JR_LTEQF VRGB_M 80.0 else366_1
  or367:
    JR_LTEQF VRGB_M 110.0 else368_1
    MOVEF_F 6.0 VCOL_M
    JR endif368
  else368_1:
    MOVEF_F 1.0 VCOL_M
  else368_2:
  endif368:
    JR endif366
  else366_1:
    MOVEF_F 0.0 VCOL_M
  else366_2:
  endif366:
RETSUB_COL_BW:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_COL_BW:
SUB_OBJECT_YN:
    WRITE32 ENDSUB_HSV:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB377:
    JR_LTEQF VRGB_M 65.0 else378_1
    JR_GTEQF VRGB_M 500.0 else378_1
    MOVEF_F 1.0 VCOL_M
    JR endif378
  else378_1:
    MOVEF_F 0.0 VCOL_M
  else378_2:
  endif378:
RETSUB_OBJECT_YN:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_OBJECT_YN:
SUB_TOBASE:
    CALL MOTOR.RESETCOUNT 'BC'
    MOVEF_F 100.0 VMM_M
    DATAF tmpf380
    DATA8 flag380
    DIVF VMM_M 194.68 tmpf380
    CP_EQF 0.0 194.68 flag380
    SELECTF flag380 0.0 tmpf380 F.0

    MULF F.0 360.0 VL_M
  while382:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_GTEQF F.0 VL_M endwhile382
  whilebody382:
    WRITE32 ENDSUB_LINE3:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LINE3
CALLSUB384:
    CALL MOTOR.GETCOUNT 'B' F.0
    JR_LTF F.0 VL_M whilebody382
  endwhile382:
  while386:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VBLACK_M endwhile386
  whilebody386:
    WRITE32 ENDSUB_SEN1:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN1
CALLSUB388:
    WRITE32 ENDSUB_SEN2:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SEN2
CALLSUB389:
    SUBF VS1_M VS2_M VU_M
    MULF VU_M 0.55 F.1
    ADDF 40.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'C' F.0
    MULF VU_M 0.55 F.1
    SUBF 40.0 F.1 F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 VBLACK_M whilebody386
  endwhile386:
RETSUB_TOBASE:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TOBASE:
SUB_W1_2:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds399
	MOVEF_32 100.0 milliseconds399
	DATA32 timer399
	TIMER_WAIT milliseconds399 timer399
	TIMER_READY timer399
    MOVEF_F 278.0 VMM_3
    MOVEF_F -25.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB400:
    MOVEF_F 90.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB401:
    MOVEF_F 120.0 VL_10
    JR_NEQF VN_10 2.0 else402_1
    SUBF VL_10 40.0 VL_10
  else402_1:
  endif402:
    MOVEF_F VL_10 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB404:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB405:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB406:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB407:
    JR_NEQF VI_10 1.0 else408_1
    WRITE32 ENDSUB_LEFT:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB409:
    JR endif408
  else408_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB410:
    WRITE32 ENDSUB_TOBASE:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB411:
  else408_2:
  endif408:
RETSUB_W1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W1_2:
SUB_B1_2:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds413
	MOVEF_32 100.0 milliseconds413
	DATA32 timer413
	TIMER_WAIT milliseconds413 timer413
	TIMER_READY timer413
    MOVEF_F 90.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB414:
    MOVEF_F 95.0 VGRAD_6
    WRITE32 ENDSUB_LEFT2_1:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT2_1
CALLSUB415:
    MOVEF_F 120.0 VL_11
    JR_NEQF VN_11 2.0 else416_1
    SUBF VL_11 45.0 VL_11
  else416_1:
  endif416:
    MOVEF_F VL_11 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB418:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB419:
    SUBF VL_11 30.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB421:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB422:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB423:
    JR_NEQF VI_11 1.0 else424_1
    WRITE32 ENDSUB_LEFT:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB425:
    JR endif424
  else424_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB426:
    WRITE32 ENDSUB_TOBASE:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB427:
  else424_2:
  endif424:
RETSUB_B1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B1_2:
SUB_W2_2:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB428:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB429:
    CALL MOTOR.START 'BC' -20.0
    DATA32 milliseconds431
	MOVEF_32 1000.0 milliseconds431
	DATA32 timer431
	TIMER_WAIT milliseconds431 timer431
	TIMER_READY timer431
    MOVEF_F 30.0 VL_12
    JR_NEQF VN_12 2.0 else432_1
    ADDF VL_12 20.0 VL_12
    MOVEF_F VL_12 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB434:
  else432_1:
  endif432:
    MOVEF_F 94.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB435:
    MOVEF_F 40.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB436:
    MOVEF_F -25.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB437:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds439
	MOVEF_32 100.0 milliseconds439
	DATA32 timer439
	TIMER_WAIT milliseconds439 timer439
	TIMER_READY timer439
    MOVEF_F 20.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB440:
    MOVEF_F 185.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB441:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB442:
    MOVEF_F 160.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB443:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB444:
    MOVEF_F 70.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB445:
    MOVEF_F 40.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB446:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB447:
    JR_NEQF VI_12 1.0 else448_1
    WRITE32 ENDSUB_LEFT:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB449:
    JR endif448
  else448_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB450:
    WRITE32 ENDSUB_TOBASE:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB451:
  else448_2:
  endif448:
RETSUB_W2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W2_2:
SUB_B2_2:
    MOVEF_F 70.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB452:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB453:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB454:
    CALL MOTOR.START 'BC' -30.0
    DATA32 milliseconds456
	MOVEF_32 1300.0 milliseconds456
	DATA32 timer456
	TIMER_WAIT milliseconds456 timer456
	TIMER_READY timer456
    MOVEF_F 30.0 VL_13
    JR_NEQF VN_13 2.0 else457_1
    ADDF VL_13 45.0 VL_13
  else457_1:
  endif457:
    MOVEF_F VL_13 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB459:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB460:
    MOVEF_F 40.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB461:
    MOVEF_F 280.0 VMM_3
    MOVEF_F -40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB462:
    DATA32 milliseconds463
	MOVEF_32 30.0 milliseconds463
	DATA32 timer463
	TIMER_WAIT milliseconds463 timer463
	TIMER_READY timer463
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB464:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB465:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB466:
    MOVEF_F 60.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB467:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB468:
    JR_NEQF VI_13 1.0 else469_1
    WRITE32 ENDSUB_LEFT:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB470:
    JR endif469
  else469_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB471:
    WRITE32 ENDSUB_TOBASE:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB472:
  else469_2:
  endif469:
RETSUB_B2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B2_2:
SUB_W3_2:
    MOVEF_F 315.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB473:
    MOVEF_F 92.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB474:
    MOVEF_F 200.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB475:
    CALL MOTOR.START 'BC' -20.0
    DATA32 milliseconds477
	MOVEF_32 1000.0 milliseconds477
	DATA32 timer477
	TIMER_WAIT milliseconds477 timer477
	TIMER_READY timer477
    MOVEF_F 5.0 VL_14
    JR_NEQF VN_14 2.0 else478_1
    ADDF VL_14 45.0 VL_14
  else478_1:
  endif478:
    MOVEF_F VL_14 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB480:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB481:
    MOVEF_F 30.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB482:
    MOVEF_F 25.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB483:
    MOVEF_F 265.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB484:
    DATA32 milliseconds485
	MOVEF_32 100.0 milliseconds485
	DATA32 timer485
	TIMER_WAIT milliseconds485 timer485
	TIMER_READY timer485
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB486:
    JR_NEQF VN_14 1.0 else487_1
    MOVEF_F 187.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB488:
    JR endif487
  else487_1:
    MOVEF_F 193.0 VGRAD_4
    MOVEF_F -60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB489:
  else487_2:
  endif487:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB490:
    MOVEF_F 500.0 VMM_3
    MOVEF_F -70.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB491:
    MOVEF_F 120.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB492:
    MOVEF_F 50.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB493:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB494:
    JR_NEQF VI_14 1.0 else495_1
    WRITE32 ENDSUB_LEFT:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB496:
    JR endif495
  else495_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB497:
    WRITE32 ENDSUB_TOBASE:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB498:
  else495_2:
  endif495:
RETSUB_W3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W3_2:
SUB_B3_2:
    MOVEF_F 90.0 VGRAD_4
    MOVEF_F 60.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB499:
    MOVEF_F 90.0 VL_15
    JR_NEQF VN_15 2.0 else500_1
    SUBF VL_15 50.0 VL_15
  else500_1:
  endif500:
    MOVEF_F VL_15 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB502:
    MOVEF_F 95.0 VGRAD_5
    MOVEF_F 40.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB503:
    MOVEF_F 35.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB504:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB505:
    MOVEF_F 310.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB506:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB507:
    MOVEF_F 90.0 VGRAD_5
    MOVEF_F -60.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB508:
    MOVEF_F 50.0 VMM_3
    MOVEF_F -30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB509:
    MOVEF_F -20.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB510:
    JR_NEQF VI_15 1.0 else511_1
    WRITE32 ENDSUB_LEFT:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB512:
    JR endif511
  else511_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB513:
    WRITE32 ENDSUB_TOBASE:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB514:
  else511_2:
  endif511:
RETSUB_B3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B3_2:
SUB_W4_2:
    MOVEF_F 129.0 VMM_3
    MOVEF_F 40.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB515:
    MOVEF_F 95.0 VGRAD_4
    MOVEF_F 50.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB516:
    JR_NEQF VN_16 2.0 else517_1
    MOVEF_F 15.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB518:
    JR endif517
  else517_1:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB519:
  else517_2:
  endif517:
    STRINGS DUPLICATE 'D' VMOTOR_9
    MOVEF_F 15.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB520:
    MOVEF_F 45.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB521:
    MOVEF_F 115.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB522:
    STRINGS DUPLICATE 'D' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB523:
    MOVEF_F 280.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB524:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB525:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB526:
    JR_NEQF VI_16 1.0 else527_1
    WRITE32 ENDSUB_LEFT:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB528:
    JR endif527
  else527_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB529:
    WRITE32 ENDSUB_TOBASE:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB530:
  else527_2:
  endif527:
RETSUB_W4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_W4_2:
SUB_B4_2:
    CALL MOTOR.STOP 'BC' 'true'
    DATA32 milliseconds532
	MOVEF_32 100.0 milliseconds532
	DATA32 timer532
	TIMER_WAIT milliseconds532 timer532
	TIMER_READY timer532
    MOVEF_F 280.0 VMM_3
    MOVEF_F 60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB533:
    MOVEF_F 93.0 VGRAD_4
    MOVEF_F 50.0 VSP_4
    WRITE32 ENDSUB_LEFT1_2:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT1_2
CALLSUB534:
    JR_NEQF VN_17 2.0 else535_1
    MOVEF_F 10.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB536:
    JR endif535
  else535_1:
    MOVEF_F 30.0 VMM_3
    MOVEF_F 20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB537:
  else535_2:
  endif535:
    STRINGS DUPLICATE 'A' VMOTOR_9
    MOVEF_F 20.0 VSPEED_9
    WRITE32 ENDSUB_DOWN_2:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_DOWN_2
CALLSUB538:
    MOVEF_F 50.0 VMM_3
    MOVEF_F -20.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB539:
    JR_NEQF VN_17 1.0 else540_1
    MOVEF_F 98.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB541:
    JR endif540
  else540_1:
    MOVEF_F 98.0 VGRAD_7
    WRITE32 ENDSUB_RIGHT2_1:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT2_1
CALLSUB542:
  else540_2:
  endif540:
    STRINGS DUPLICATE 'A' VMOTOR_8
    MOVEF_F 60.0 VSPEED_8
    WRITE32 ENDSUB_UP_2:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_UP_2
CALLSUB543:
    MOVEF_F 500.0 VMM_3
    MOVEF_F -60.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB544:
    MOVEF_F 110.0 VGRAD_5
    MOVEF_F -50.0 VSP_5
    WRITE32 ENDSUB_RIGHT1_2:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT1_2
CALLSUB545:
    MOVEF_F 60.0 VMM_3
    MOVEF_F 30.0 VSP_3
    WRITE32 ENDSUB_TOMM_2:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOMM_2
CALLSUB546:
    MOVEF_F -30.0 VSP_1
    WRITE32 ENDSUB_TOLINE_1:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOLINE_1
CALLSUB547:
    JR_NEQF VI_17 1.0 else548_1
    WRITE32 ENDSUB_LEFT:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_LEFT
CALLSUB549:
    JR endif548
  else548_1:
    WRITE32 ENDSUB_RIGHT:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RIGHT
CALLSUB550:
    WRITE32 ENDSUB_TOBASE:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_TOBASE
CALLSUB551:
  else548_2:
  endif548:
RETSUB_B4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_B4_2:
SUB_TH_UP:
    CALL MOTOR.RESETCOUNT 'AD'
    CALL MOTOR.START 'AD' -90.0
    DATA32 milliseconds554
	MOVEF_32 200.0 milliseconds554
	DATA32 timer554
	TIMER_WAIT milliseconds554 timer554
	TIMER_READY timer554
  while555:
    CALL MOTOR.GETCOUNT 'AD' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 endwhile555
    CALL MOTOR.GETSPEED 'AD' F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 27.0 endwhile555
  whilebody555:
    CALL MOTOR.GETCOUNT 'AD' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 180.0 and560
    CALL MOTOR.GETSPEED 'AD' F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 27.0 whilebody555
  and560:
  endwhile555:
    CALL MOTOR.STOP 'AD' 'true'
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_TH_UP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TH_UP:
SUB_TH_DOWN:
    CALL MOTOR.STARTPOWER 'AD' 90.0
    DATA32 milliseconds568
	MOVEF_32 600.0 milliseconds568
	DATA32 timer568
	TIMER_WAIT milliseconds568 timer568
	TIMER_READY timer568
  while569:
    CALL MOTOR.GETSPEED 'AD' F.0
    JR_LTEQF F.0 63.0 endwhile569
  whilebody569:
    CALL MOTOR.GETSPEED 'AD' F.0
    JR_GTF F.0 63.0 whilebody569
  endwhile569:
    CALL MOTOR.SCHEDULE 'AD' -20.0 0.0 25.0 0.0 'true' 

	DATA8 layer572
	DATA8 nos572
	DATA8 busy572
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer572 nos572
	JR_EQ8 0 nos572 motornotbusy572
  motorwaiting572:
	OUTPUT_TEST layer572 nos572 busy572
	JR_EQ8 busy572 0 motornotbusy572
	SLEEP
	JR motorwaiting572
  motornotbusy572:
    CALL SPEAKER.TONE 40.0 700.0 200.0
RETSUB_TH_DOWN:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_TH_DOWN:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
