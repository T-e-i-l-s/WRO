DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VG_M
DATAF VR_M
DATAF VY_M
DATAF VW_M
DATAF VCOLOR_M
DATAF VX_M
DATAF VC_M
DATAF VS_M
DATAF VMAX2_M
DATAF VMAX3_M
DATAF VMIN2_M
DATAF VMIN3_M
DATAF VK1_M
DATAF VK2_M
DATAF VK3_M
DATAF VS3_M
DATAF VS2_M
DATAF VSPEED_M
DATAF VSPEEDL_M
DATAF VSPEEDR_M
DATAF VEOLD_M
DATAF VN_M
DATAF VP_M
DATAF VI_M
DATAF VI2CPORT_M
DATAF VI2CSLVADDR_M
DATAF VL_M
DATAF VJ_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VSNUM_M
DATAF VSRED_M
DATAF VSGREEN_M
DATAF VSBLUE_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VV_M
DATAF VD_M
DATAF VZ_M
DATAF VE_M
DATAF VU_M
ARRAY16 VA_M 2
DATAF VF_M
DATAF VCOLOR1_M
DATAF VCOLOR2_M
DATAF VCOLOR3_M
DATAF VCOLOR4_M
DATAF VCOLOR5_M
DATA32 RUNCOUNTER_ZADVIG
DATA32 RUNCOUNTER_VIDVIG

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYCREATE_FLOAT VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVE32_32 0 RUNCOUNTER_ZADVIG
    MOVE32_32 0 RUNCOUNTER_VIDVIG
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TZADVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_ZADVIG 0
    CALL GETANDINC32 RUNCOUNTER_ZADVIG -1 RUNCOUNTER_ZADVIG tmp
    JR_GT32 tmp 1 launch
}
vmthread TVIDVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_VIDVIG 1
    CALL GETANDINC32 RUNCOUNTER_VIDVIG -1 RUNCOUNTER_VIDVIG tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_ZADVIG
subcall PROGRAM_VIDVIG
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1873
    WRITE32 ENDSUB_ZADVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZADVIG
  dispatch1873:
    JR_NEQ32 SUBPROGRAM 1 dispatch1874
    WRITE32 ENDSUB_VIDVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_VIDVIG
  dispatch1874:
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.2 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.2 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL EV3FILE.OPENREAD 'WRO2021/colib.dat' VF_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN3_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX3_M
    CALL EV3FILE.CLOSE VF_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VMIN2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMIN3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds1039
	MOVEF_32 100.0 milliseconds1039
	DATA32 timer1039
	TIMER_WAIT milliseconds1039 timer1039
	TIMER_READY timer1039
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    WRITE32 ENDSUB_HSV:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1040:
    JR_LTEQF VH_M 120.0 else1041_1
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1041
  else1041_1:
    JR_LTEQF VH_M 20.0 else1041_2
    JR_GTEQF VH_M 120.0 else1041_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1041
  else1041_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else1041_3:
  endif1041:
    DATA32 tmp1045
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1045
    JR_NEQ32 0 tmp1045 alreadylaunched1045
    OBJECT_START TVIDVIG
  alreadylaunched1045:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while1048:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1052
    DATA8 flag1052
    DIVF F.1 2.0 tmpf1052
    CP_EQF 0.0 2.0 flag1052
    SELECTF flag1052 0.0 tmpf1052 F.0

    JR_GTEQF F.0 500.0 endwhile1048
  whilebody1048:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VMAX2_M else1053_1
    CALL SENSOR.READPERCENT 2.0 VMAX2_M
  else1053_1:
  endif1053:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VMIN2_M else1056_1
    CALL SENSOR.READPERCENT 2.0 VMIN2_M
  else1056_1:
  endif1056:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VMAX3_M else1059_1
    CALL SENSOR.READPERCENT 3.0 VMAX3_M
  else1059_1:
  endif1059:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VMIN3_M else1062_1
    CALL SENSOR.READPERCENT 3.0 VMIN3_M
  else1062_1:
  endif1062:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1068
    DATA8 flag1068
    DIVF F.1 2.0 tmpf1068
    CP_EQF 0.0 2.0 flag1068
    SELECTF flag1068 0.0 tmpf1068 F.0

    JR_LTF F.0 500.0 whilebody1048
  endwhile1048:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1070:
    WRITE32 ENDSUB_A2:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1071:
  while1072:
    JR_LTEQF VS3_M 10.0 and1074
    JR_GTF VS2_M 10.0 or1073
  and1074:
    JR_GTEQF VS3_M 10.0 endwhile1072
    JR_GTEQF VS2_M 10.0 endwhile1072
  or1073:
  whilebody1072:
    WRITE32 ENDSUB_A3:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1075:
    WRITE32 ENDSUB_A2:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1076:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1077:
    JR_LTEQF VS3_M 10.0 and1078
    JR_GTF VS2_M 10.0 whilebody1072
  and1078:
    JR_GTEQF VS3_M 10.0 and1079
    JR_LTF VS2_M 10.0 whilebody1072
  and1079:
  endwhile1072:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_HSV:CALLSUB1081 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1081:
    JR_GTF VH_M 120.0 or1083
    JR_EQF VH_M 0.0 or1083
    JR_LTF VH_M 0.0 else1082_1
    JR_GTF VH_M 20.0 else1082_1
  or1083:
    MOVEF_F 5.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1082
  else1082_1:
    JR_GTEQF VH_M 120.0 else1082_2
    MOVEF_F 4.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1082
  else1082_2:
    MOVEF_F 5.0 VCOLOR1_M
  else1082_3:
  endif1082:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1086
	DATA8 nos1086
	DATA8 busy1086
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1086 nos1086
	JR_EQ8 0 nos1086 motornotbusy1086
  motorwaiting1086:
	OUTPUT_TEST layer1086 nos1086 busy1086
	JR_EQ8 busy1086 0 motornotbusy1086
	SLEEP
	JR motorwaiting1086
  motornotbusy1086:
    JR_NEQF VCOLOR_M 4.0 else1087_1
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1088:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1089
	DATA8 nos1089
	DATA8 busy1089
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1089 nos1089
	JR_EQ8 0 nos1089 motornotbusy1089
  motorwaiting1089:
	OUTPUT_TEST layer1089 nos1089 busy1089
	JR_EQ8 busy1089 0 motornotbusy1089
	SLEEP
	JR motorwaiting1089
  motornotbusy1089:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1091
	DATA8 nos1091
	DATA8 busy1091
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1091 nos1091
	JR_EQ8 0 nos1091 motornotbusy1091
  motorwaiting1091:
	OUTPUT_TEST layer1091 nos1091 busy1091
	JR_EQ8 busy1091 0 motornotbusy1091
	SLEEP
	JR motorwaiting1091
  motornotbusy1091:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while1095:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 720.0 endwhile1095
  whilebody1095:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1097:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 720.0 whilebody1095
  endwhile1095:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_SB1:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1100:
    JR_NEQF VCOLOR1_M 4.0 else1101_1
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1102
	DATA8 nos1102
	DATA8 busy1102
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1102 nos1102
	JR_EQ8 0 nos1102 motornotbusy1102
  motorwaiting1102:
	OUTPUT_TEST layer1102 nos1102 busy1102
	JR_EQ8 busy1102 0 motornotbusy1102
	SLEEP
	JR motorwaiting1102
  motornotbusy1102:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1104:
    WRITE32 ENDSUB_A2:CALLSUB1105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1105:
  while1106:
    JR_LTEQF VS2_M 6.0 endwhile1106
  whilebody1106:
    WRITE32 ENDSUB_A3:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1107:
    WRITE32 ENDSUB_A2:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1108:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 6.0 whilebody1106
  endwhile1106:
    WRITE32 ENDSUB_A3:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1110:
    WRITE32 ENDSUB_A2:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1111:
  while1112:
    JR_GTEQF VS2_M 15.0 endwhile1112
  whilebody1112:
    WRITE32 ENDSUB_A3:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1113:
    WRITE32 ENDSUB_A2:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1114:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody1112
  endwhile1112:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1118:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1122
    DATA8 flag1122
    DIVF F.1 2.0 tmpf1122
    CP_EQF 0.0 2.0 flag1122
    SELECTF flag1122 0.0 tmpf1122 F.0

    JR_GTEQF F.0 100.0 endwhile1118
  whilebody1118:
    WRITE32 ENDSUB_A3:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1123:
    WRITE32 ENDSUB_A2:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1124:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1125:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1129
    DATA8 flag1129
    DIVF F.1 2.0 tmpf1129
    CP_EQF 0.0 2.0 flag1129
    SELECTF flag1129 0.0 tmpf1129 F.0

    JR_LTF F.0 100.0 whilebody1118
  endwhile1118:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1131:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1133
	DATA8 nos1133
	DATA8 busy1133
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1133 nos1133
	JR_EQ8 0 nos1133 motornotbusy1133
  motorwaiting1133:
	OUTPUT_TEST layer1133 nos1133 busy1133
	JR_EQ8 busy1133 0 motornotbusy1133
	SLEEP
	JR motorwaiting1133
  motornotbusy1133:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer1134
	DATA8 nos1134
	DATA8 busy1134
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1134 nos1134
	JR_EQ8 0 nos1134 motornotbusy1134
  motorwaiting1134:
	OUTPUT_TEST layer1134 nos1134 busy1134
	JR_EQ8 busy1134 0 motornotbusy1134
	SLEEP
	JR motorwaiting1134
  motornotbusy1134:
  while1135:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1137
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or1136
  and1137:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1140
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or1136
  and1140:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile1135
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile1135
  or1136:
  whilebody1135:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1146
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1135
  and1146:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1149
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody1135
  and1149:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and1152
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1135
  and1152:
  endwhile1135:
    WRITE32 ENDSUB_A3:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1155:
    WRITE32 ENDSUB_A2:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1156:
  while1157:
    JR_LTEQF VS3_M 10.0 and1159
    JR_GTF VS2_M 10.0 or1158
  and1159:
    JR_GTEQF VS3_M 10.0 endwhile1157
    JR_GTEQF VS2_M 10.0 endwhile1157
  or1158:
  whilebody1157:
    WRITE32 ENDSUB_A3:CALLSUB1160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1160:
    WRITE32 ENDSUB_A2:CALLSUB1161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1161:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1162:
    JR_LTEQF VS3_M 10.0 and1163
    JR_GTF VS2_M 10.0 whilebody1157
  and1163:
    JR_GTEQF VS3_M 10.0 and1164
    JR_LTF VS2_M 10.0 whilebody1157
  and1164:
  endwhile1157:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1165
	DATA8 nos1165
	DATA8 busy1165
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1165 nos1165
	JR_EQ8 0 nos1165 motornotbusy1165
  motorwaiting1165:
	OUTPUT_TEST layer1165 nos1165 busy1165
	JR_EQ8 busy1165 0 motornotbusy1165
	SLEEP
	JR motorwaiting1165
  motornotbusy1165:
    WRITE32 ENDSUB_A3:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1166:
    WRITE32 ENDSUB_A2:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1167:
  while1168:
    JR_LTEQF VS3_M 10.0 and1170
    JR_GTF VS2_M 10.0 or1169
  and1170:
    JR_GTEQF VS3_M 10.0 endwhile1168
    JR_GTEQF VS2_M 10.0 endwhile1168
  or1169:
  whilebody1168:
    WRITE32 ENDSUB_A3:CALLSUB1171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1171:
    WRITE32 ENDSUB_A2:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1172:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1173:
    JR_LTEQF VS3_M 10.0 and1174
    JR_GTF VS2_M 10.0 whilebody1168
  and1174:
    JR_GTEQF VS3_M 10.0 and1175
    JR_LTF VS2_M 10.0 whilebody1168
  and1175:
  endwhile1168:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif1101
  else1101_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1177
	DATA8 nos1177
	DATA8 busy1177
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1177 nos1177
	JR_EQ8 0 nos1177 motornotbusy1177
  motorwaiting1177:
	OUTPUT_TEST layer1177 nos1177 busy1177
	JR_EQ8 busy1177 0 motornotbusy1177
	SLEEP
	JR motorwaiting1177
  motornotbusy1177:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1179:
    WRITE32 ENDSUB_A2:CALLSUB1180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1180:
  while1181:
    JR_LTEQF VS3_M 6.0 endwhile1181
  whilebody1181:
    WRITE32 ENDSUB_A3:CALLSUB1182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1182:
    WRITE32 ENDSUB_A2:CALLSUB1183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1183:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody1181
  endwhile1181:
    WRITE32 ENDSUB_A3:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1185:
    WRITE32 ENDSUB_A2:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1186:
  while1187:
    JR_GTEQF VS3_M 15.0 endwhile1187
  whilebody1187:
    WRITE32 ENDSUB_A3:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1188:
    WRITE32 ENDSUB_A2:CALLSUB1189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1189:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody1187
  endwhile1187:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1193:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1197
    DATA8 flag1197
    DIVF F.1 2.0 tmpf1197
    CP_EQF 0.0 2.0 flag1197
    SELECTF flag1197 0.0 tmpf1197 F.0

    JR_GTEQF F.0 100.0 endwhile1193
  whilebody1193:
    WRITE32 ENDSUB_A3:CALLSUB1198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1198:
    WRITE32 ENDSUB_A2:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1199:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1200:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1204
    DATA8 flag1204
    DIVF F.1 2.0 tmpf1204
    CP_EQF 0.0 2.0 flag1204
    SELECTF flag1204 0.0 tmpf1204 F.0

    JR_LTF F.0 100.0 whilebody1193
  endwhile1193:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 500.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1206:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1208
	MOVEF_32 100.0 milliseconds1208
	DATA32 timer1208
	TIMER_WAIT milliseconds1208 timer1208
	TIMER_READY timer1208
    WRITE32 ENDSUB_RED_1:CALLSUB1209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1209:
    ADDF VC_M 1.0 VC_M
  else1101_2:
  endif1101:
    JR endif1087
  else1087_1:
    DATA32 tmp1211
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp1211
    JR_NEQ32 0 tmp1211 alreadylaunched1211
    OBJECT_START TZADVIG
  alreadylaunched1211:
    WRITE32 ENDSUB_A3:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1212:
    WRITE32 ENDSUB_A2:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1213:
  while1214:
    JR_LTEQF VS3_M 10.0 and1216
    JR_GTF VS2_M 10.0 or1215
  and1216:
    JR_GTEQF VS3_M 10.0 endwhile1214
    JR_GTEQF VS2_M 10.0 endwhile1214
  or1215:
  whilebody1214:
    WRITE32 ENDSUB_A3:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1217:
    WRITE32 ENDSUB_A2:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1218:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1219:
    JR_LTEQF VS3_M 10.0 and1220
    JR_GTF VS2_M 10.0 whilebody1214
  and1220:
    JR_GTEQF VS3_M 10.0 and1221
    JR_LTF VS2_M 10.0 whilebody1214
  and1221:
  endwhile1214:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1223
	DATA8 nos1223
	DATA8 busy1223
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1223 nos1223
	JR_EQ8 0 nos1223 motornotbusy1223
  motorwaiting1223:
	OUTPUT_TEST layer1223 nos1223 busy1223
	JR_EQ8 busy1223 0 motornotbusy1223
	SLEEP
	JR motorwaiting1223
  motornotbusy1223:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1224
	DATA8 nos1224
	DATA8 busy1224
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1224 nos1224
	JR_EQ8 0 nos1224 motornotbusy1224
  motorwaiting1224:
	OUTPUT_TEST layer1224 nos1224 busy1224
	JR_EQ8 busy1224 0 motornotbusy1224
	SLEEP
	JR motorwaiting1224
  motornotbusy1224:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1227
	MOVEF_32 500.0 milliseconds1227
	DATA32 timer1227
	TIMER_WAIT milliseconds1227 timer1227
	TIMER_READY timer1227
    CALL MOTOR.STOP 'd' 'true'
    MOVEF_F 90.0 VSPEED_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1230:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 720.0 endwhile1230
  whilebody1230:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1232:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 720.0 whilebody1230
  endwhile1230:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VCOLOR1_M 5.0 else1235_1
    WRITE32 ENDSUB_SB1:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1236:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1237
	DATA8 nos1237
	DATA8 busy1237
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1237 nos1237
	JR_EQ8 0 nos1237 motornotbusy1237
  motorwaiting1237:
	OUTPUT_TEST layer1237 nos1237 busy1237
	JR_EQ8 busy1237 0 motornotbusy1237
	SLEEP
	JR motorwaiting1237
  motornotbusy1237:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1238
	DATA8 nos1238
	DATA8 busy1238
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1238 nos1238
	JR_EQ8 0 nos1238 motornotbusy1238
  motorwaiting1238:
	OUTPUT_TEST layer1238 nos1238 busy1238
	JR_EQ8 busy1238 0 motornotbusy1238
	SLEEP
	JR motorwaiting1238
  motornotbusy1238:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1240
	MOVEF_32 100.0 milliseconds1240
	DATA32 timer1240
	TIMER_WAIT milliseconds1240 timer1240
	TIMER_READY timer1240
    CALL MOTOR.RESETCOUNT 'bc'
  while1242:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1246
    DATA8 flag1246
    DIVF F.1 2.0 tmpf1246
    CP_EQF 0.0 2.0 flag1246
    SELECTF flag1246 0.0 tmpf1246 F.0

    JR_GTEQF F.0 100.0 endwhile1242
  whilebody1242:
    WRITE32 ENDSUB_A3:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1247:
    WRITE32 ENDSUB_A2:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1248:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1249:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1253
    DATA8 flag1253
    DIVF F.1 2.0 tmpf1253
    CP_EQF 0.0 2.0 flag1253
    SELECTF flag1253 0.0 tmpf1253 F.0

    JR_LTF F.0 100.0 whilebody1242
  endwhile1242:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1220.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1255:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1257
	MOVEF_32 100.0 milliseconds1257
	DATA32 timer1257
	TIMER_WAIT milliseconds1257 timer1257
	TIMER_READY timer1257
    WRITE32 ENDSUB_RED_1:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1258:
    ADDF VC_M 1.0 VC_M
    JR endif1235
  else1235_1:
    DATA32 tmp1260
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1260
    JR_NEQ32 0 tmp1260 alreadylaunched1260
    OBJECT_START TVIDVIG
  alreadylaunched1260:
    WRITE32 ENDSUB_SB1:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1261:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1262
	DATA8 nos1262
	DATA8 busy1262
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1262 nos1262
	JR_EQ8 0 nos1262 motornotbusy1262
  motorwaiting1262:
	OUTPUT_TEST layer1262 nos1262 busy1262
	JR_EQ8 busy1262 0 motornotbusy1262
	SLEEP
	JR motorwaiting1262
  motornotbusy1262:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1263
	DATA8 nos1263
	DATA8 busy1263
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1263 nos1263
	JR_EQ8 0 nos1263 motornotbusy1263
  motorwaiting1263:
	OUTPUT_TEST layer1263 nos1263 busy1263
	JR_EQ8 busy1263 0 motornotbusy1263
	SLEEP
	JR motorwaiting1263
  motornotbusy1263:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1265:
    WRITE32 ENDSUB_A2:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1266:
  while1267:
    JR_LTEQF VS3_M 10.0 and1269
    JR_GTF VS2_M 10.0 or1268
  and1269:
    JR_GTEQF VS3_M 10.0 endwhile1267
    JR_GTEQF VS2_M 10.0 endwhile1267
  or1268:
  whilebody1267:
    WRITE32 ENDSUB_A3:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1270:
    WRITE32 ENDSUB_A2:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1271:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1272:
    JR_LTEQF VS3_M 10.0 and1273
    JR_GTF VS2_M 10.0 whilebody1267
  and1273:
    JR_GTEQF VS3_M 10.0 and1274
    JR_LTF VS2_M 10.0 whilebody1267
  and1274:
  endwhile1267:
    CALL MOTOR.STOP 'bc' 'true'
  else1235_2:
  endif1235:
  else1087_2:
  endif1087:
    WRITE32 ENDSUB_HSV_100:CALLSUB1276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1276:
    JR_GTEQF VV_M 0.019 else1277_1
    MOVEF_F 5.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1277
  else1277_1:
    MOVEF_F 4.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    CALL MOTOR.STOP 'bc' 'true'
  else1277_2:
  endif1277:
    JR_NEQF VCOLOR2_M 4.0 else1281_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1282
	DATA8 nos1282
	DATA8 busy1282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1282 nos1282
	JR_EQ8 0 nos1282 motornotbusy1282
  motorwaiting1282:
	OUTPUT_TEST layer1282 nos1282 busy1282
	JR_EQ8 busy1282 0 motornotbusy1282
	SLEEP
	JR motorwaiting1282
  motornotbusy1282:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1283:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif1281
  else1281_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1285
	DATA8 nos1285
	DATA8 busy1285
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1285 nos1285
	JR_EQ8 0 nos1285 motornotbusy1285
  motorwaiting1285:
	OUTPUT_TEST layer1285 nos1285 busy1285
	JR_EQ8 busy1285 0 motornotbusy1285
	SLEEP
	JR motorwaiting1285
  motornotbusy1285:
    MOVEF_F 1000.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1286:
    JR_NEQF VC_M 1.0 else1287_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1288:
    JR endif1287
  else1287_1:
    JR_NEQF VC_M 0.0 else1287_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1289:
  else1287_2:
  endif1287:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1290:
    WRITE32 ENDSUB_A3:CALLSUB1291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1291:
    WRITE32 ENDSUB_A2:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1292:
  while1293:
    JR_LTEQF VS3_M 6.0 and1295
    JR_GTF VS2_M 6.0 or1294
  and1295:
    JR_GTEQF VS3_M 6.0 endwhile1293
    JR_GTEQF VS2_M 6.0 endwhile1293
  or1294:
  whilebody1293:
    WRITE32 ENDSUB_A3:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1296:
    WRITE32 ENDSUB_A2:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1297:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1298:
    JR_LTEQF VS3_M 6.0 and1299
    JR_GTF VS2_M 6.0 whilebody1293
  and1299:
    JR_GTEQF VS3_M 6.0 and1300
    JR_LTF VS2_M 6.0 whilebody1293
  and1300:
  endwhile1293:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1302
	DATA8 nos1302
	DATA8 busy1302
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1302 nos1302
	JR_EQ8 0 nos1302 motornotbusy1302
  motorwaiting1302:
	OUTPUT_TEST layer1302 nos1302 busy1302
	JR_EQ8 busy1302 0 motornotbusy1302
	SLEEP
	JR motorwaiting1302
  motornotbusy1302:
    WRITE32 ENDSUB_A3:CALLSUB1303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1303:
    WRITE32 ENDSUB_A2:CALLSUB1304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1304:
  while1305:
    JR_LTEQF VS3_M 6.0 and1307
    JR_GTF VS2_M 6.0 or1306
  and1307:
    JR_GTEQF VS3_M 6.0 endwhile1305
    JR_GTEQF VS2_M 6.0 endwhile1305
  or1306:
  whilebody1305:
    WRITE32 ENDSUB_A3:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1308:
    WRITE32 ENDSUB_A2:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1309:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1310:
    JR_LTEQF VS3_M 6.0 and1311
    JR_GTF VS2_M 6.0 whilebody1305
  and1311:
    JR_GTEQF VS3_M 6.0 and1312
    JR_LTF VS2_M 6.0 whilebody1305
  and1312:
  endwhile1305:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1314:
    CALL MOTOR.RESETCOUNT 'bc'
  while1316:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1320
    DATA8 flag1320
    DIVF F.1 2.0 tmpf1320
    CP_EQF 0.0 2.0 flag1320
    SELECTF flag1320 0.0 tmpf1320 F.0

    JR_GTEQF F.0 400.0 endwhile1316
  whilebody1316:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1321:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1325
    DATA8 flag1325
    DIVF F.1 2.0 tmpf1325
    CP_EQF 0.0 2.0 flag1325
    SELECTF flag1325 0.0 tmpf1325 F.0

    JR_LTF F.0 400.0 whilebody1316
  endwhile1316:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1328
	MOVEF_32 500.0 milliseconds1328
	DATA32 timer1328
	TIMER_WAIT milliseconds1328 timer1328
	TIMER_READY timer1328
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1330
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1330
    JR_NEQ32 0 tmp1330 alreadylaunched1330
    OBJECT_START TVIDVIG
  alreadylaunched1330:
    WRITE32 ENDSUB_NPL:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1331:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1332:
    ADDF VC_M 1.0 VC_M
  else1281_2:
  endif1281:
    WRITE32 ENDSUB_HSV:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1334:
    JR_GTF VH_M 120.0 or1336
    JR_EQF VH_M 0.0 or1336
    JR_LTF VH_M 0.0 else1335_1
    JR_GTF VH_M 20.0 else1335_1
  or1336:
    MOVEF_F 5.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1335
  else1335_1:
    MOVEF_F 4.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1335_2:
  endif1335:
    JR_NEQF VCOLOR3_M 4.0 else1339_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1340
	DATA8 nos1340
	DATA8 busy1340
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1340 nos1340
	JR_EQ8 0 nos1340 motornotbusy1340
  motorwaiting1340:
	OUTPUT_TEST layer1340 nos1340 busy1340
	JR_EQ8 busy1340 0 motornotbusy1340
	SLEEP
	JR motorwaiting1340
  motornotbusy1340:
    MOVEF_F 360.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1341:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 0.0 else1343_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1344
	DATA8 nos1344
	DATA8 busy1344
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1344 nos1344
	JR_EQ8 0 nos1344 motornotbusy1344
  motorwaiting1344:
	OUTPUT_TEST layer1344 nos1344 busy1344
	JR_EQ8 busy1344 0 motornotbusy1344
	SLEEP
	JR motorwaiting1344
  motornotbusy1344:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1345:
    WRITE32 ENDSUB_BELLAM:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1346:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1347:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1349:
    CALL MOTOR.RESETCOUNT 'bc'
  while1351:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1355
    DATA8 flag1355
    DIVF F.1 2.0 tmpf1355
    CP_EQF 0.0 2.0 flag1355
    SELECTF flag1355 0.0 tmpf1355 F.0

    JR_GTEQF F.0 400.0 endwhile1351
  whilebody1351:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1356:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1360
    DATA8 flag1360
    DIVF F.1 2.0 tmpf1360
    CP_EQF 0.0 2.0 flag1360
    SELECTF flag1360 0.0 tmpf1360 F.0

    JR_LTF F.0 400.0 whilebody1351
  endwhile1351:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1363
	MOVEF_32 500.0 milliseconds1363
	DATA32 timer1363
	TIMER_WAIT milliseconds1363 timer1363
	TIMER_READY timer1363
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1365:
    WRITE32 ENDSUB_A3:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1366:
    WRITE32 ENDSUB_A2:CALLSUB1367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1367:
  while1368:
    JR_LTEQF VS3_M 10.0 and1370
    JR_GTF VS2_M 10.0 or1369
  and1370:
    JR_GTEQF VS3_M 10.0 endwhile1368
    JR_GTEQF VS2_M 10.0 endwhile1368
  or1369:
  whilebody1368:
    WRITE32 ENDSUB_A3:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1371:
    WRITE32 ENDSUB_A2:CALLSUB1372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1372:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1373:
    JR_LTEQF VS3_M 10.0 and1374
    JR_GTF VS2_M 10.0 whilebody1368
  and1374:
    JR_GTEQF VS3_M 10.0 and1375
    JR_LTF VS2_M 10.0 whilebody1368
  and1375:
  endwhile1368:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_BELLAM2:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1377:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1378:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1380
	DATA8 nos1380
	DATA8 busy1380
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1380 nos1380
	JR_EQ8 0 nos1380 motornotbusy1380
  motorwaiting1380:
	OUTPUT_TEST layer1380 nos1380 busy1380
	JR_EQ8 busy1380 0 motornotbusy1380
	SLEEP
	JR motorwaiting1380
  motornotbusy1380:
    WRITE32 ENDSUB_A3:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1381:
    WRITE32 ENDSUB_A2:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1382:
  while1383:
    JR_LTEQF VS3_M 10.0 and1385
    JR_GTF VS2_M 10.0 or1384
  and1385:
    JR_GTEQF VS3_M 10.0 endwhile1383
    JR_GTEQF VS2_M 10.0 endwhile1383
  or1384:
  whilebody1383:
    WRITE32 ENDSUB_A3:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1386:
    WRITE32 ENDSUB_A2:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1387:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1388:
    JR_LTEQF VS3_M 10.0 and1389
    JR_GTF VS2_M 10.0 whilebody1383
  and1389:
    JR_GTEQF VS3_M 10.0 and1390
    JR_LTF VS2_M 10.0 whilebody1383
  and1390:
  endwhile1383:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1392:
    CALL MOTOR.RESETCOUNT 'bc'
  while1394:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1398
    DATA8 flag1398
    DIVF F.1 2.0 tmpf1398
    CP_EQF 0.0 2.0 flag1398
    SELECTF flag1398 0.0 tmpf1398 F.0

    JR_GTEQF F.0 470.0 endwhile1394
  whilebody1394:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1399:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1403
    DATA8 flag1403
    DIVF F.1 2.0 tmpf1403
    CP_EQF 0.0 2.0 flag1403
    SELECTF flag1403 0.0 tmpf1403 F.0

    JR_LTF F.0 470.0 whilebody1394
  endwhile1394:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1406
	MOVEF_32 500.0 milliseconds1406
	DATA32 timer1406
	TIMER_WAIT milliseconds1406 timer1406
	TIMER_READY timer1406
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1408:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1409:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1410:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1411:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1413:
    CALL MOTOR.RESETCOUNT 'bc'
  while1415:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1419
    DATA8 flag1419
    DIVF F.1 2.0 tmpf1419
    CP_EQF 0.0 2.0 flag1419
    SELECTF flag1419 0.0 tmpf1419 F.0

    JR_GTEQF F.0 270.0 endwhile1415
  whilebody1415:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1420:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1424
    DATA8 flag1424
    DIVF F.1 2.0 tmpf1424
    CP_EQF 0.0 2.0 flag1424
    SELECTF flag1424 0.0 tmpf1424 F.0

    JR_LTF F.0 270.0 whilebody1415
  endwhile1415:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1427
	MOVEF_32 500.0 milliseconds1427
	DATA32 timer1427
	TIMER_WAIT milliseconds1427 timer1427
	TIMER_READY timer1427
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1429:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1430:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1431
	DATA8 nos1431
	DATA8 busy1431
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1431 nos1431
	JR_EQ8 0 nos1431 motornotbusy1431
  motorwaiting1431:
	OUTPUT_TEST layer1431 nos1431 busy1431
	JR_EQ8 busy1431 0 motornotbusy1431
	SLEEP
	JR motorwaiting1431
  motornotbusy1431:
    PROGRAM_STOP -1
  else1343_1:
  endif1343:
  else1339_1:
  endif1339:
    JR_NEQF VCOLOR3_M 5.0 else1433_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1434
	DATA8 nos1434
	DATA8 busy1434
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1434 nos1434
	JR_EQ8 0 nos1434 motornotbusy1434
  motorwaiting1434:
	OUTPUT_TEST layer1434 nos1434 busy1434
	JR_EQ8 busy1434 0 motornotbusy1434
	SLEEP
	JR motorwaiting1434
  motornotbusy1434:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1435:
    JR_NEQF VC_M 1.0 else1436_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1437:
    JR endif1436
  else1436_1:
    JR_NEQF VC_M 0.0 else1436_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1438:
    JR endif1436
  else1436_2:
    JR_NEQF VC_M 2.0 else1436_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1439:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1440:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1442
	MOVEF_32 100.0 milliseconds1442
	DATA32 timer1442
	TIMER_WAIT milliseconds1442 timer1442
	TIMER_READY timer1442
    WRITE32 ENDSUB_PL:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1443:
    CALL MOTOR.RESETCOUNT 'bc'
  while1445:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1449
    DATA8 flag1449
    DIVF F.1 2.0 tmpf1449
    CP_EQF 0.0 2.0 flag1449
    SELECTF flag1449 0.0 tmpf1449 F.0

    JR_GTEQF F.0 270.0 endwhile1445
  whilebody1445:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1450:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1454
    DATA8 flag1454
    DIVF F.1 2.0 tmpf1454
    CP_EQF 0.0 2.0 flag1454
    SELECTF flag1454 0.0 tmpf1454 F.0

    JR_LTF F.0 270.0 whilebody1445
  endwhile1445:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1457
	MOVEF_32 500.0 milliseconds1457
	DATA32 timer1457
	TIMER_WAIT milliseconds1457 timer1457
	TIMER_READY timer1457
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1459:
    CALL MOTOR.RESETCOUNT 'bc'
  while1461:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1465
    DATA8 flag1465
    DIVF F.1 2.0 tmpf1465
    CP_EQF 0.0 2.0 flag1465
    SELECTF flag1465 0.0 tmpf1465 F.0

    JR_GTEQF F.0 100.0 endwhile1461
  whilebody1461:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1466:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1470
    DATA8 flag1470
    DIVF F.1 2.0 tmpf1470
    CP_EQF 0.0 2.0 flag1470
    SELECTF flag1470 0.0 tmpf1470 F.0

    JR_LTF F.0 100.0 whilebody1461
  endwhile1461:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1472:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1474
	DATA8 nos1474
	DATA8 busy1474
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1474 nos1474
	JR_EQ8 0 nos1474 motornotbusy1474
  motorwaiting1474:
	OUTPUT_TEST layer1474 nos1474 busy1474
	JR_EQ8 busy1474 0 motornotbusy1474
	SLEEP
	JR motorwaiting1474
  motornotbusy1474:
    PROGRAM_STOP -1
  else1436_3:
  endif1436:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1476:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1478:
    CALL MOTOR.RESETCOUNT 'bc'
  while1480:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1484
    DATA8 flag1484
    DIVF F.1 2.0 tmpf1484
    CP_EQF 0.0 2.0 flag1484
    SELECTF flag1484 0.0 tmpf1484 F.0

    JR_GTEQF F.0 270.0 endwhile1480
  whilebody1480:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1485:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1489
    DATA8 flag1489
    DIVF F.1 2.0 tmpf1489
    CP_EQF 0.0 2.0 flag1489
    SELECTF flag1489 0.0 tmpf1489 F.0

    JR_LTF F.0 270.0 whilebody1480
  endwhile1480:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1492
	MOVEF_32 500.0 milliseconds1492
	DATA32 timer1492
	TIMER_WAIT milliseconds1492 timer1492
	TIMER_READY timer1492
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1494
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1494
    JR_NEQ32 0 tmp1494 alreadylaunched1494
    OBJECT_START TVIDVIG
  alreadylaunched1494:
    WRITE32 ENDSUB_NPL:CALLSUB1495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1495:
    MOVEF_F 370.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1496:
    ADDF VC_M 1.0 VC_M
  else1433_1:
  endif1433:
    WRITE32 ENDSUB_HSV_100:CALLSUB1498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1498:
    JR_GTEQF VV_M 0.022 else1499_1
    MOVEF_F 5.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1499
  else1499_1:
    MOVEF_F 4.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1499_2:
  endif1499:
    JR_NEQF VCOLOR4_M 4.0 else1502_1
    JR_NEQF VC_M 1.0 else1503_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1504
	DATA8 nos1504
	DATA8 busy1504
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1504 nos1504
	JR_EQ8 0 nos1504 motornotbusy1504
  motorwaiting1504:
	OUTPUT_TEST layer1504 nos1504 busy1504
	JR_EQ8 busy1504 0 motornotbusy1504
	SLEEP
	JR motorwaiting1504
  motornotbusy1504:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1505:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_BELLAM2:CALLSUB1507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1507:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1508:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1510
	DATA8 nos1510
	DATA8 busy1510
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1510 nos1510
	JR_EQ8 0 nos1510 motornotbusy1510
  motorwaiting1510:
	OUTPUT_TEST layer1510 nos1510 busy1510
	JR_EQ8 busy1510 0 motornotbusy1510
	SLEEP
	JR motorwaiting1510
  motornotbusy1510:
    WRITE32 ENDSUB_A3:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1511:
    WRITE32 ENDSUB_A2:CALLSUB1512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1512:
  while1513:
    JR_LTEQF VS3_M 10.0 and1515
    JR_GTF VS2_M 10.0 or1514
  and1515:
    JR_GTEQF VS3_M 10.0 endwhile1513
    JR_GTEQF VS2_M 10.0 endwhile1513
  or1514:
  whilebody1513:
    WRITE32 ENDSUB_A3:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1516:
    WRITE32 ENDSUB_A2:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1517:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1518:
    JR_LTEQF VS3_M 10.0 and1519
    JR_GTF VS2_M 10.0 whilebody1513
  and1519:
    JR_GTEQF VS3_M 10.0 and1520
    JR_LTF VS2_M 10.0 whilebody1513
  and1520:
  endwhile1513:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1522:
    CALL MOTOR.RESETCOUNT 'bc'
  while1524:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1528
    DATA8 flag1528
    DIVF F.1 2.0 tmpf1528
    CP_EQF 0.0 2.0 flag1528
    SELECTF flag1528 0.0 tmpf1528 F.0

    JR_GTEQF F.0 470.0 endwhile1524
  whilebody1524:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1529:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1533
    DATA8 flag1533
    DIVF F.1 2.0 tmpf1533
    CP_EQF 0.0 2.0 flag1533
    SELECTF flag1533 0.0 tmpf1533 F.0

    JR_LTF F.0 470.0 whilebody1524
  endwhile1524:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1536
	MOVEF_32 500.0 milliseconds1536
	DATA32 timer1536
	TIMER_WAIT milliseconds1536 timer1536
	TIMER_READY timer1536
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1538:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1539:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1540:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1541:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1543:
    CALL MOTOR.RESETCOUNT 'bc'
  while1545:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1549
    DATA8 flag1549
    DIVF F.1 2.0 tmpf1549
    CP_EQF 0.0 2.0 flag1549
    SELECTF flag1549 0.0 tmpf1549 F.0

    JR_GTEQF F.0 270.0 endwhile1545
  whilebody1545:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1550:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1554
    DATA8 flag1554
    DIVF F.1 2.0 tmpf1554
    CP_EQF 0.0 2.0 flag1554
    SELECTF flag1554 0.0 tmpf1554 F.0

    JR_LTF F.0 270.0 whilebody1545
  endwhile1545:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1557
	MOVEF_32 500.0 milliseconds1557
	DATA32 timer1557
	TIMER_WAIT milliseconds1557 timer1557
	TIMER_READY timer1557
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1559:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1560:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1561
	DATA8 nos1561
	DATA8 busy1561
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1561 nos1561
	JR_EQ8 0 nos1561 motornotbusy1561
  motorwaiting1561:
	OUTPUT_TEST layer1561 nos1561 busy1561
	JR_EQ8 busy1561 0 motornotbusy1561
	SLEEP
	JR motorwaiting1561
  motornotbusy1561:
    PROGRAM_STOP -1
  else1503_1:
  endif1503:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1563
	DATA8 nos1563
	DATA8 busy1563
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1563 nos1563
	JR_EQ8 0 nos1563 motornotbusy1563
  motorwaiting1563:
	OUTPUT_TEST layer1563 nos1563 busy1563
	JR_EQ8 busy1563 0 motornotbusy1563
	SLEEP
	JR motorwaiting1563
  motornotbusy1563:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 400.0 'true'

	DATA8 layer1564
	DATA8 nos1564
	DATA8 busy1564
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1564 nos1564
	JR_EQ8 0 nos1564 motornotbusy1564
  motorwaiting1564:
	OUTPUT_TEST layer1564 nos1564 busy1564
	JR_EQ8 busy1564 0 motornotbusy1564
	SLEEP
	JR motorwaiting1564
  motornotbusy1564:
    WRITE32 ENDSUB_A3:CALLSUB1565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1565:
    WRITE32 ENDSUB_A2:CALLSUB1566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1566:
  while1567:
    JR_LTEQF VS3_M 60.0 endwhile1567
  whilebody1567:
    WRITE32 ENDSUB_A3:CALLSUB1568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1568:
    WRITE32 ENDSUB_A2:CALLSUB1569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1569:
    CALL MOTOR.STARTSYNC 'bc' 0.0 20.0
    JR_GTF VS3_M 60.0 whilebody1567
  endwhile1567:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1572:
    WRITE32 ENDSUB_A2:CALLSUB1573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1573:
  while1574:
    JR_LTEQF VS3_M 6.0 and1576
    JR_GTF VS2_M 6.0 or1575
  and1576:
    JR_GTEQF VS3_M 6.0 endwhile1574
    JR_GTEQF VS2_M 6.0 endwhile1574
  or1575:
  whilebody1574:
    WRITE32 ENDSUB_A3:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1577:
    WRITE32 ENDSUB_A2:CALLSUB1578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1578:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1579:
    JR_LTEQF VS3_M 6.0 and1580
    JR_GTF VS2_M 6.0 whilebody1574
  and1580:
    JR_GTEQF VS3_M 6.0 and1581
    JR_LTF VS2_M 6.0 whilebody1574
  and1581:
  endwhile1574:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1583
	DATA8 nos1583
	DATA8 busy1583
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1583 nos1583
	JR_EQ8 0 nos1583 motornotbusy1583
  motorwaiting1583:
	OUTPUT_TEST layer1583 nos1583 busy1583
	JR_EQ8 busy1583 0 motornotbusy1583
	SLEEP
	JR motorwaiting1583
  motornotbusy1583:
    WRITE32 ENDSUB_A3:CALLSUB1584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1584:
    WRITE32 ENDSUB_A2:CALLSUB1585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1585:
  while1586:
    JR_LTEQF VS3_M 6.0 and1588
    JR_GTF VS2_M 6.0 or1587
  and1588:
    JR_GTEQF VS3_M 6.0 endwhile1586
    JR_GTEQF VS2_M 6.0 endwhile1586
  or1587:
  whilebody1586:
    WRITE32 ENDSUB_A3:CALLSUB1589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1589:
    WRITE32 ENDSUB_A2:CALLSUB1590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1590:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1591:
    JR_LTEQF VS3_M 6.0 and1592
    JR_GTF VS2_M 6.0 whilebody1586
  and1592:
    JR_GTEQF VS3_M 6.0 and1593
    JR_LTF VS2_M 6.0 whilebody1586
  and1593:
  endwhile1586:
    CALL MOTOR.STOP 'bc' 'true'
  else1502_1:
  endif1502:
    JR_NEQF VCOLOR4_M 5.0 else1595_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1596
	DATA8 nos1596
	DATA8 busy1596
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1596 nos1596
	JR_EQ8 0 nos1596 motornotbusy1596
  motorwaiting1596:
	OUTPUT_TEST layer1596 nos1596 busy1596
	JR_EQ8 busy1596 0 motornotbusy1596
	SLEEP
	JR motorwaiting1596
  motornotbusy1596:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1597:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 1.0 else1599_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1600:
    JR endif1599
  else1599_1:
    JR_NEQF VC_M 0.0 else1599_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1601:
    JR endif1599
  else1599_2:
    JR_NEQF VC_M 2.0 else1599_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1602:
    MOVEF_F 160.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1603:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1605:
    CALL MOTOR.RESETCOUNT 'bc'
  while1607:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1611
    DATA8 flag1611
    DIVF F.1 2.0 tmpf1611
    CP_EQF 0.0 2.0 flag1611
    SELECTF flag1611 0.0 tmpf1611 F.0

    JR_GTEQF F.0 400.0 endwhile1607
  whilebody1607:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1612:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1616
    DATA8 flag1616
    DIVF F.1 2.0 tmpf1616
    CP_EQF 0.0 2.0 flag1616
    SELECTF flag1616 0.0 tmpf1616 F.0

    JR_LTF F.0 400.0 whilebody1607
  endwhile1607:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1619
	MOVEF_32 500.0 milliseconds1619
	DATA32 timer1619
	TIMER_WAIT milliseconds1619 timer1619
	TIMER_READY timer1619
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1621:
    CALL MOTOR.RESETCOUNT 'bc'
  while1623:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1627
    DATA8 flag1627
    DIVF F.1 2.0 tmpf1627
    CP_EQF 0.0 2.0 flag1627
    SELECTF flag1627 0.0 tmpf1627 F.0

    JR_GTEQF F.0 100.0 endwhile1623
  whilebody1623:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1628:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1632
    DATA8 flag1632
    DIVF F.1 2.0 tmpf1632
    CP_EQF 0.0 2.0 flag1632
    SELECTF flag1632 0.0 tmpf1632 F.0

    JR_LTF F.0 100.0 whilebody1623
  endwhile1623:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1634:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1636
	DATA8 nos1636
	DATA8 busy1636
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1636 nos1636
	JR_EQ8 0 nos1636 motornotbusy1636
  motorwaiting1636:
	OUTPUT_TEST layer1636 nos1636 busy1636
	JR_EQ8 busy1636 0 motornotbusy1636
	SLEEP
	JR motorwaiting1636
  motornotbusy1636:
    PROGRAM_STOP -1
  else1599_3:
  endif1599:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1638:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1640:
    CALL MOTOR.RESETCOUNT 'bc'
  while1642:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1646
    DATA8 flag1646
    DIVF F.1 2.0 tmpf1646
    CP_EQF 0.0 2.0 flag1646
    SELECTF flag1646 0.0 tmpf1646 F.0

    JR_GTEQF F.0 400.0 endwhile1642
  whilebody1642:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1647:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1651
    DATA8 flag1651
    DIVF F.1 2.0 tmpf1651
    CP_EQF 0.0 2.0 flag1651
    SELECTF flag1651 0.0 tmpf1651 F.0

    JR_LTF F.0 400.0 whilebody1642
  endwhile1642:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1654
	MOVEF_32 500.0 milliseconds1654
	DATA32 timer1654
	TIMER_WAIT milliseconds1654 timer1654
	TIMER_READY timer1654
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1656
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1656
    JR_NEQ32 0 tmp1656 alreadylaunched1656
    OBJECT_START TVIDVIG
  alreadylaunched1656:
    WRITE32 ENDSUB_NPP:CALLSUB1657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1657:
    WRITE32 ENDSUB_A3:CALLSUB1658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1658:
    WRITE32 ENDSUB_A2:CALLSUB1659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1659:
  while1660:
    JR_LTEQF VS3_M 6.0 and1662
    JR_GTF VS2_M 6.0 or1661
  and1662:
    JR_GTEQF VS3_M 6.0 endwhile1660
    JR_GTEQF VS2_M 6.0 endwhile1660
  or1661:
  whilebody1660:
    WRITE32 ENDSUB_A3:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1663:
    WRITE32 ENDSUB_A2:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1664:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1665:
    JR_LTEQF VS3_M 6.0 and1666
    JR_GTF VS2_M 6.0 whilebody1660
  and1666:
    JR_GTEQF VS3_M 6.0 and1667
    JR_LTF VS2_M 6.0 whilebody1660
  and1667:
  endwhile1660:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1595_1:
  endif1595:
    WRITE32 ENDSUB_HSV_100:CALLSUB1670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1670:
    JR_GTEQF VV_M 0.01178 else1671_1
    MOVEF_F 5.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1671
  else1671_1:
    MOVEF_F 4.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1671_2:
  endif1671:
    JR_NEQF VCOLOR5_M 4.0 else1674_1
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1675
	DATA8 nos1675
	DATA8 busy1675
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1675 nos1675
	JR_EQ8 0 nos1675 motornotbusy1675
  motorwaiting1675:
	OUTPUT_TEST layer1675 nos1675 busy1675
	JR_EQ8 busy1675 0 motornotbusy1675
	SLEEP
	JR motorwaiting1675
  motornotbusy1675:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 400.0 'true'

	DATA8 layer1676
	DATA8 nos1676
	DATA8 busy1676
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1676 nos1676
	JR_EQ8 0 nos1676 motornotbusy1676
  motorwaiting1676:
	OUTPUT_TEST layer1676 nos1676 busy1676
	JR_EQ8 busy1676 0 motornotbusy1676
	SLEEP
	JR motorwaiting1676
  motornotbusy1676:
    WRITE32 ENDSUB_A3:CALLSUB1677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1677:
    WRITE32 ENDSUB_A2:CALLSUB1678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1678:
  while1679:
    JR_LTEQF VS3_M 60.0 endwhile1679
  whilebody1679:
    WRITE32 ENDSUB_A3:CALLSUB1680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1680:
    WRITE32 ENDSUB_A2:CALLSUB1681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1681:
    CALL MOTOR.STARTSYNC 'bc' 0.0 20.0
    JR_GTF VS3_M 60.0 whilebody1679
  endwhile1679:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1684:
    WRITE32 ENDSUB_A2:CALLSUB1685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1685:
  while1686:
    JR_LTEQF VS3_M 6.0 and1688
    JR_GTF VS2_M 6.0 or1687
  and1688:
    JR_GTEQF VS3_M 6.0 endwhile1686
    JR_GTEQF VS2_M 6.0 endwhile1686
  or1687:
  whilebody1686:
    WRITE32 ENDSUB_A3:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1689:
    WRITE32 ENDSUB_A2:CALLSUB1690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1690:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1691:
    JR_LTEQF VS3_M 6.0 and1692
    JR_GTF VS2_M 6.0 whilebody1686
  and1692:
    JR_GTEQF VS3_M 6.0 and1693
    JR_LTF VS2_M 6.0 whilebody1686
  and1693:
  endwhile1686:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1695
	DATA8 nos1695
	DATA8 busy1695
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1695 nos1695
	JR_EQ8 0 nos1695 motornotbusy1695
  motorwaiting1695:
	OUTPUT_TEST layer1695 nos1695 busy1695
	JR_EQ8 busy1695 0 motornotbusy1695
	SLEEP
	JR motorwaiting1695
  motornotbusy1695:
    WRITE32 ENDSUB_A3:CALLSUB1696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1696:
    WRITE32 ENDSUB_A2:CALLSUB1697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1697:
  while1698:
    JR_LTEQF VS3_M 6.0 and1700
    JR_GTF VS2_M 6.0 or1699
  and1700:
    JR_GTEQF VS3_M 6.0 endwhile1698
    JR_GTEQF VS2_M 6.0 endwhile1698
  or1699:
  whilebody1698:
    WRITE32 ENDSUB_A3:CALLSUB1701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1701:
    WRITE32 ENDSUB_A2:CALLSUB1702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1702:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1703:
    JR_LTEQF VS3_M 6.0 and1704
    JR_GTF VS2_M 6.0 whilebody1698
  and1704:
    JR_GTEQF VS3_M 6.0 and1705
    JR_LTF VS2_M 6.0 whilebody1698
  and1705:
  endwhile1698:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_BELLAM3:CALLSUB1707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1707:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1708:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1710:
    CALL MOTOR.RESETCOUNT 'bc'
  while1712:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1716
    DATA8 flag1716
    DIVF F.1 2.0 tmpf1716
    CP_EQF 0.0 2.0 flag1716
    SELECTF flag1716 0.0 tmpf1716 F.0

    JR_GTEQF F.0 270.0 endwhile1712
  whilebody1712:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1717:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1721
    DATA8 flag1721
    DIVF F.1 2.0 tmpf1721
    CP_EQF 0.0 2.0 flag1721
    SELECTF flag1721 0.0 tmpf1721 F.0

    JR_LTF F.0 270.0 whilebody1712
  endwhile1712:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1724
	MOVEF_32 500.0 milliseconds1724
	DATA32 timer1724
	TIMER_WAIT milliseconds1724 timer1724
	TIMER_READY timer1724
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1726:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1727:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1728
	DATA8 nos1728
	DATA8 busy1728
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1728 nos1728
	JR_EQ8 0 nos1728 motornotbusy1728
  motorwaiting1728:
	OUTPUT_TEST layer1728 nos1728 busy1728
	JR_EQ8 busy1728 0 motornotbusy1728
	SLEEP
	JR motorwaiting1728
  motornotbusy1728:
    PROGRAM_STOP -1
  else1674_1:
  endif1674:
    JR_NEQF VCOLOR5_M 5.0 else1730_1
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1731
	DATA8 nos1731
	DATA8 busy1731
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1731 nos1731
	JR_EQ8 0 nos1731 motornotbusy1731
  motorwaiting1731:
	OUTPUT_TEST layer1731 nos1731 busy1731
	JR_EQ8 busy1731 0 motornotbusy1731
	SLEEP
	JR motorwaiting1731
  motornotbusy1731:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 400.0 'true'

	DATA8 layer1732
	DATA8 nos1732
	DATA8 busy1732
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1732 nos1732
	JR_EQ8 0 nos1732 motornotbusy1732
  motorwaiting1732:
	OUTPUT_TEST layer1732 nos1732 busy1732
	JR_EQ8 busy1732 0 motornotbusy1732
	SLEEP
	JR motorwaiting1732
  motornotbusy1732:
    WRITE32 ENDSUB_A3:CALLSUB1733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1733:
    WRITE32 ENDSUB_A2:CALLSUB1734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1734:
  while1735:
    JR_LTEQF VS3_M 60.0 endwhile1735
  whilebody1735:
    WRITE32 ENDSUB_A3:CALLSUB1736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1736:
    WRITE32 ENDSUB_A2:CALLSUB1737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1737:
    CALL MOTOR.STARTSYNC 'bc' 0.0 20.0
    JR_GTF VS3_M 60.0 whilebody1735
  endwhile1735:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1740:
    WRITE32 ENDSUB_A2:CALLSUB1741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1741:
  while1742:
    JR_LTEQF VS3_M 6.0 and1744
    JR_GTF VS2_M 6.0 or1743
  and1744:
    JR_GTEQF VS3_M 6.0 endwhile1742
    JR_GTEQF VS2_M 6.0 endwhile1742
  or1743:
  whilebody1742:
    WRITE32 ENDSUB_A3:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1745:
    WRITE32 ENDSUB_A2:CALLSUB1746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1746:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1747:
    JR_LTEQF VS3_M 6.0 and1748
    JR_GTF VS2_M 6.0 whilebody1742
  and1748:
    JR_GTEQF VS3_M 6.0 and1749
    JR_LTF VS2_M 6.0 whilebody1742
  and1749:
  endwhile1742:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1751
	DATA8 nos1751
	DATA8 busy1751
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1751 nos1751
	JR_EQ8 0 nos1751 motornotbusy1751
  motorwaiting1751:
	OUTPUT_TEST layer1751 nos1751 busy1751
	JR_EQ8 busy1751 0 motornotbusy1751
	SLEEP
	JR motorwaiting1751
  motornotbusy1751:
    WRITE32 ENDSUB_A3:CALLSUB1752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1752:
    WRITE32 ENDSUB_A2:CALLSUB1753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1753:
  while1754:
    JR_LTEQF VS3_M 6.0 and1756
    JR_GTF VS2_M 6.0 or1755
  and1756:
    JR_GTEQF VS3_M 6.0 endwhile1754
    JR_GTEQF VS2_M 6.0 endwhile1754
  or1755:
  whilebody1754:
    WRITE32 ENDSUB_A3:CALLSUB1757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1757:
    WRITE32 ENDSUB_A2:CALLSUB1758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1758:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1759:
    JR_LTEQF VS3_M 6.0 and1760
    JR_GTF VS2_M 6.0 whilebody1754
  and1760:
    JR_GTEQF VS3_M 6.0 and1761
    JR_LTF VS2_M 6.0 whilebody1754
  and1761:
  endwhile1754:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 1.0 else1763_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1764:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1765:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1767
	DATA8 nos1767
	DATA8 busy1767
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1767 nos1767
	JR_EQ8 0 nos1767 motornotbusy1767
  motorwaiting1767:
	OUTPUT_TEST layer1767 nos1767 busy1767
	JR_EQ8 busy1767 0 motornotbusy1767
	SLEEP
	JR motorwaiting1767
  motornotbusy1767:
    WRITE32 ENDSUB_A3:CALLSUB1768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1768:
    WRITE32 ENDSUB_A2:CALLSUB1769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1769:
  while1770:
    JR_LTEQF VS3_M 10.0 and1772
    JR_GTF VS2_M 10.0 or1771
  and1772:
    JR_GTEQF VS3_M 10.0 endwhile1770
    JR_GTEQF VS2_M 10.0 endwhile1770
  or1771:
  whilebody1770:
    WRITE32 ENDSUB_A3:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1773:
    WRITE32 ENDSUB_A2:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1774:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1775:
    JR_LTEQF VS3_M 10.0 and1776
    JR_GTF VS2_M 10.0 whilebody1770
  and1776:
    JR_GTEQF VS3_M 10.0 and1777
    JR_LTF VS2_M 10.0 whilebody1770
  and1777:
  endwhile1770:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1779:
    CALL MOTOR.RESETCOUNT 'bc'
  while1781:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1785
    DATA8 flag1785
    DIVF F.1 2.0 tmpf1785
    CP_EQF 0.0 2.0 flag1785
    SELECTF flag1785 0.0 tmpf1785 F.0

    JR_GTEQF F.0 470.0 endwhile1781
  whilebody1781:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1786:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1790
    DATA8 flag1790
    DIVF F.1 2.0 tmpf1790
    CP_EQF 0.0 2.0 flag1790
    SELECTF flag1790 0.0 tmpf1790 F.0

    JR_LTF F.0 470.0 whilebody1781
  endwhile1781:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1793
	MOVEF_32 500.0 milliseconds1793
	DATA32 timer1793
	TIMER_WAIT milliseconds1793 timer1793
	TIMER_READY timer1793
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1795:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1796:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1797:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1798:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1800:
    CALL MOTOR.RESETCOUNT 'bc'
  while1802:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1806
    DATA8 flag1806
    DIVF F.1 2.0 tmpf1806
    CP_EQF 0.0 2.0 flag1806
    SELECTF flag1806 0.0 tmpf1806 F.0

    JR_GTEQF F.0 270.0 endwhile1802
  whilebody1802:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1807:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1811
    DATA8 flag1811
    DIVF F.1 2.0 tmpf1811
    CP_EQF 0.0 2.0 flag1811
    SELECTF flag1811 0.0 tmpf1811 F.0

    JR_LTF F.0 270.0 whilebody1802
  endwhile1802:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1814
	MOVEF_32 500.0 milliseconds1814
	DATA32 timer1814
	TIMER_WAIT milliseconds1814 timer1814
	TIMER_READY timer1814
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1816 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1816:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1817:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1818
	DATA8 nos1818
	DATA8 busy1818
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1818 nos1818
	JR_EQ8 0 nos1818 motornotbusy1818
  motorwaiting1818:
	OUTPUT_TEST layer1818 nos1818 busy1818
	JR_EQ8 busy1818 0 motornotbusy1818
	SLEEP
	JR motorwaiting1818
  motornotbusy1818:
    PROGRAM_STOP -1
    JR endif1763
  else1763_1:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1820:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1821:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1823
	DATA8 nos1823
	DATA8 busy1823
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1823 nos1823
	JR_EQ8 0 nos1823 motornotbusy1823
  motorwaiting1823:
	OUTPUT_TEST layer1823 nos1823 busy1823
	JR_EQ8 busy1823 0 motornotbusy1823
	SLEEP
	JR motorwaiting1823
  motornotbusy1823:
    WRITE32 ENDSUB_A3:CALLSUB1824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1824:
    WRITE32 ENDSUB_A2:CALLSUB1825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1825:
  while1826:
    JR_LTEQF VS3_M 10.0 and1828
    JR_GTF VS2_M 10.0 or1827
  and1828:
    JR_GTEQF VS3_M 10.0 endwhile1826
    JR_GTEQF VS2_M 10.0 endwhile1826
  or1827:
  whilebody1826:
    WRITE32 ENDSUB_A3:CALLSUB1829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1829:
    WRITE32 ENDSUB_A2:CALLSUB1830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1830:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1831:
    JR_LTEQF VS3_M 10.0 and1832
    JR_GTF VS2_M 10.0 whilebody1826
  and1832:
    JR_GTEQF VS3_M 10.0 and1833
    JR_LTF VS2_M 10.0 whilebody1826
  and1833:
  endwhile1826:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1835:
    CALL MOTOR.RESETCOUNT 'bc'
  while1837:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1841
    DATA8 flag1841
    DIVF F.1 2.0 tmpf1841
    CP_EQF 0.0 2.0 flag1841
    SELECTF flag1841 0.0 tmpf1841 F.0

    JR_GTEQF F.0 470.0 endwhile1837
  whilebody1837:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1842:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1846
    DATA8 flag1846
    DIVF F.1 2.0 tmpf1846
    CP_EQF 0.0 2.0 flag1846
    SELECTF flag1846 0.0 tmpf1846 F.0

    JR_LTF F.0 470.0 whilebody1837
  endwhile1837:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1849
	MOVEF_32 500.0 milliseconds1849
	DATA32 timer1849
	TIMER_WAIT milliseconds1849 timer1849
	TIMER_READY timer1849
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1851:
    MOVEF_F 1200.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1852:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1853
	DATA8 nos1853
	DATA8 busy1853
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1853 nos1853
	JR_EQ8 0 nos1853 motornotbusy1853
  motorwaiting1853:
	OUTPUT_TEST layer1853 nos1853 busy1853
	JR_EQ8 busy1853 0 motornotbusy1853
	SLEEP
	JR motorwaiting1853
  motornotbusy1853:
    PROGRAM_STOP -1
  else1763_2:
  endif1763:
  else1730_1:
  endif1730:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1856
	DATA8 nos1856
	DATA8 busy1856
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1856 nos1856
	JR_EQ8 0 nos1856 motornotbusy1856
  motorwaiting1856:
	OUTPUT_TEST layer1856 nos1856 busy1856
	JR_EQ8 busy1856 0 motornotbusy1856
	SLEEP
	JR motorwaiting1856
  motornotbusy1856:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1857
	DATA8 nos1857
	DATA8 busy1857
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1857 nos1857
	JR_EQ8 0 nos1857 motornotbusy1857
  motorwaiting1857:
	OUTPUT_TEST layer1857 nos1857 busy1857
	JR_EQ8 busy1857 0 motornotbusy1857
	SLEEP
	JR motorwaiting1857
  motornotbusy1857:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1859
	DATA8 nos1859
	DATA8 busy1859
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1859 nos1859
	JR_EQ8 0 nos1859 motornotbusy1859
  motorwaiting1859:
	OUTPUT_TEST layer1859 nos1859 busy1859
	JR_EQ8 busy1859 0 motornotbusy1859
	SLEEP
	JR motorwaiting1859
  motornotbusy1859:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1860
	DATA8 nos1860
	DATA8 busy1860
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1860 nos1860
	JR_EQ8 0 nos1860 motornotbusy1860
  motorwaiting1860:
	OUTPUT_TEST layer1860 nos1860 busy1860
	JR_EQ8 busy1860 0 motornotbusy1860
	SLEEP
	JR motorwaiting1860
  motornotbusy1860:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1862
    DATA8 flag1862
    DIVF 360.0 VL_M tmpf1862
    CP_EQF 0.0 VL_M flag1862
    SELECTF flag1862 0.0 tmpf1862 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1865:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1865
  whilebody1865:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1867:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1865
  endwhile1865:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1870 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1870:
    ADDF VC_M 1.0 VC_M
    DATA32 tmp1872
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1872
    JR_NEQ32 0 tmp1872 alreadylaunched1872
    OBJECT_START TVIDVIG
  alreadylaunched1872:
ENDTHREAD:
    RETURN
SUB_US:
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf6
    DATA8 flag6
    DIVF 360.0 VL_M tmpf6
    CP_EQF 0.0 VL_M flag6
    SELECTF flag6 0.0 tmpf6 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while9:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf13
    DATA8 flag13
    DIVF F.1 2.0 tmpf13
    CP_EQF 0.0 2.0 flag13
    SELECTF flag13 0.0 tmpf13 F.0

    JR_GTEQF F.0 VX_M endwhile9
  whilebody9:
    WRITE32 ENDSUB_A3:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB14:
    WRITE32 ENDSUB_A2:CALLSUB15 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB15:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB16:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf20
    DATA8 flag20
    DIVF F.1 2.0 tmpf20
    CP_EQF 0.0 2.0 flag20
    SELECTF flag20 0.0 tmpf20 F.0

    JR_LTF F.0 VX_M whilebody9
  endwhile9:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB22:
    WRITE32 ENDSUB_A2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB23:
  while24:
    JR_LTEQF VS3_M 7.0 and26
    JR_GTF VS2_M 7.0 or25
  and26:
    JR_GTEQF VS3_M 7.0 endwhile24
    JR_GTEQF VS2_M 7.0 endwhile24
  or25:
  whilebody24:
    WRITE32 ENDSUB_A3:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB27:
    WRITE32 ENDSUB_A2:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB28:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB29:
    JR_LTEQF VS3_M 7.0 and30
    JR_GTF VS2_M 7.0 whilebody24
  and30:
    JR_GTEQF VS3_M 7.0 and31
    JR_LTF VS2_M 7.0 whilebody24
  and31:
  endwhile24:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_US:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_US:
SUB_PL:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer33
	DATA8 nos33
	DATA8 busy33
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer33 nos33
	JR_EQ8 0 nos33 motornotbusy33
  motorwaiting33:
	OUTPUT_TEST layer33 nos33 busy33
	JR_EQ8 busy33 0 motornotbusy33
	SLEEP
	JR motorwaiting33
  motornotbusy33:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB35:
    WRITE32 ENDSUB_A2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB36:
  while37:
    JR_LTEQF VS2_M 6.0 endwhile37
  whilebody37:
    WRITE32 ENDSUB_A3:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB38:
    WRITE32 ENDSUB_A2:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB39:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 6.0 whilebody37
  endwhile37:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB42:
    WRITE32 ENDSUB_A2:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB43:
  while44:
    JR_GTEQF VS2_M 15.0 endwhile44
  whilebody44:
    WRITE32 ENDSUB_A3:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB45:
    WRITE32 ENDSUB_A2:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB46:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody44
  endwhile44:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PL:
SUB_PR:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 80.0 'true'

	DATA8 layer49
	DATA8 nos49
	DATA8 busy49
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer49 nos49
	JR_EQ8 0 nos49 motornotbusy49
  motorwaiting49:
	OUTPUT_TEST layer49 nos49 busy49
	JR_EQ8 busy49 0 motornotbusy49
	SLEEP
	JR motorwaiting49
  motornotbusy49:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB51:
    WRITE32 ENDSUB_A2:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB52:
  while53:
    JR_LTEQF VS3_M 6.0 endwhile53
  whilebody53:
    WRITE32 ENDSUB_A3:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB54:
    WRITE32 ENDSUB_A2:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB55:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody53
  endwhile53:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB58:
    WRITE32 ENDSUB_A2:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB59:
  while60:
    JR_GTEQF VS3_M 15.0 endwhile60
  whilebody60:
    WRITE32 ENDSUB_A3:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB61:
    WRITE32 ENDSUB_A2:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB62:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody60
  endwhile60:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PR:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PR:
SUB_NPL:
    WRITE32 ENDSUB_A2:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB65:
    WRITE32 ENDSUB_A3:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB66:
  while67:
    JR_LTEQF VS3_M 6.0 and69
    JR_GTF VS2_M 6.0 or68
  and69:
    JR_GTEQF VS3_M 6.0 and70
    JR_GTF VS2_M 6.0 or68
  and70:
    JR_LTEQF VS3_M 6.0 endwhile67
    JR_GTEQF VS2_M 6.0 endwhile67
  or68:
  whilebody67:
    WRITE32 ENDSUB_A2:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB71:
    WRITE32 ENDSUB_A3:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB72:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 6.0 and74
    JR_GTF VS2_M 6.0 whilebody67
  and74:
    JR_GTEQF VS3_M 6.0 and75
    JR_GTF VS2_M 6.0 whilebody67
  and75:
    JR_LTEQF VS3_M 6.0 and76
    JR_LTF VS2_M 6.0 whilebody67
  and76:
  endwhile67:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer78
	DATA8 nos78
	DATA8 busy78
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer78 nos78
	JR_EQ8 0 nos78 motornotbusy78
  motorwaiting78:
	OUTPUT_TEST layer78 nos78 busy78
	JR_EQ8 busy78 0 motornotbusy78
	SLEEP
	JR motorwaiting78
  motornotbusy78:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 90.0 'true'

	DATA8 layer80
	DATA8 nos80
	DATA8 busy80
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer80 nos80
	JR_EQ8 0 nos80 motornotbusy80
  motorwaiting80:
	OUTPUT_TEST layer80 nos80 busy80
	JR_EQ8 busy80 0 motornotbusy80
	SLEEP
	JR motorwaiting80
  motornotbusy80:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB82:
    WRITE32 ENDSUB_A2:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB83:
  while84:
    JR_LTEQF VS2_M 6.0 endwhile84
  whilebody84:
    WRITE32 ENDSUB_A3:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB85:
    WRITE32 ENDSUB_A2:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB86:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 6.0 whilebody84
  endwhile84:
    WRITE32 ENDSUB_A3:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB88:
    WRITE32 ENDSUB_A2:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB89:
  while90:
    JR_GTEQF VS2_M 60.0 endwhile90
  whilebody90:
    WRITE32 ENDSUB_A3:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB91:
    WRITE32 ENDSUB_A2:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB92:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 60.0 whilebody90
  endwhile90:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPL:
SUB_NPP:
    WRITE32 ENDSUB_A2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB95:
    WRITE32 ENDSUB_A3:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB96:
  while97:
    JR_LTEQF VS3_M 6.0 and99
    JR_GTF VS2_M 6.0 or98
  and99:
    JR_GTEQF VS3_M 6.0 and100
    JR_GTF VS2_M 6.0 or98
  and100:
    JR_LTEQF VS3_M 6.0 endwhile97
    JR_GTEQF VS2_M 6.0 endwhile97
  or98:
  whilebody97:
    WRITE32 ENDSUB_A2:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB101:
    WRITE32 ENDSUB_A3:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB102:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 6.0 and104
    JR_GTF VS2_M 6.0 whilebody97
  and104:
    JR_GTEQF VS3_M 6.0 and105
    JR_GTF VS2_M 6.0 whilebody97
  and105:
    JR_LTEQF VS3_M 6.0 and106
    JR_LTF VS2_M 6.0 whilebody97
  and106:
  endwhile97:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer108
	DATA8 nos108
	DATA8 busy108
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer108 nos108
	JR_EQ8 0 nos108 motornotbusy108
  motorwaiting108:
	OUTPUT_TEST layer108 nos108 busy108
	JR_EQ8 busy108 0 motornotbusy108
	SLEEP
	JR motorwaiting108
  motornotbusy108:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB112:
    WRITE32 ENDSUB_A2:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB113:
  while114:
    JR_LTEQF VS3_M 6.0 endwhile114
  whilebody114:
    WRITE32 ENDSUB_A3:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB115:
    WRITE32 ENDSUB_A2:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB116:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody114
  endwhile114:
    WRITE32 ENDSUB_A3:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB118:
    WRITE32 ENDSUB_A2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB119:
  while120:
    JR_GTEQF VS3_M 60.0 endwhile120
  whilebody120:
    WRITE32 ENDSUB_A3:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB121:
    WRITE32 ENDSUB_A2:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB122:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody120
  endwhile120:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPP:
SUB_REDL:
    DATA32 tmp125
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp125
    JR_NEQ32 0 tmp125 alreadylaunched125
    OBJECT_START TZADVIG
  alreadylaunched125:
    WRITE32 ENDSUB_A3:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB126:
    WRITE32 ENDSUB_A2:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB127:
  while128:
    JR_LTEQF VS3_M 6.0 and130
    JR_GTF VS2_M 6.0 or129
  and130:
    JR_GTEQF VS3_M 6.0 and131
    JR_GTF VS2_M 6.0 or129
  and131:
    JR_LTEQF VS3_M 6.0 endwhile128
    JR_GTEQF VS2_M 6.0 endwhile128
  or129:
  whilebody128:
    WRITE32 ENDSUB_A3:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB132:
    WRITE32 ENDSUB_A2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB133:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB134:
    JR_LTEQF VS3_M 6.0 and135
    JR_GTF VS2_M 6.0 whilebody128
  and135:
    JR_GTEQF VS3_M 6.0 and136
    JR_GTF VS2_M 6.0 whilebody128
  and136:
    JR_LTEQF VS3_M 6.0 and137
    JR_LTF VS2_M 6.0 whilebody128
  and137:
  endwhile128:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer140
	DATA8 nos140
	DATA8 busy140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer140 nos140
	JR_EQ8 0 nos140 motornotbusy140
  motorwaiting140:
	OUTPUT_TEST layer140 nos140 busy140
	JR_EQ8 busy140 0 motornotbusy140
	SLEEP
	JR motorwaiting140
  motornotbusy140:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_A2:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB143:
    WRITE32 ENDSUB_A3:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB144:
  while145:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile145
  whilebody145:
    WRITE32 ENDSUB_A2:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB147:
    WRITE32 ENDSUB_A3:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB148:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB149:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody145
  endwhile145:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds153
	MOVEF_32 500.0 milliseconds153
	DATA32 timer153
	TIMER_WAIT milliseconds153 timer153
	TIMER_READY timer153
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer156
	DATA8 nos156
	DATA8 busy156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer156 nos156
	JR_EQ8 0 nos156 motornotbusy156
  motorwaiting156:
	OUTPUT_TEST layer156 nos156 busy156
	JR_EQ8 busy156 0 motornotbusy156
	SLEEP
	JR motorwaiting156
  motornotbusy156:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 300.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB159:
    WRITE32 ENDSUB_A2:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB160:
  while161:
    JR_LTEQF VS3_M 5.0 endwhile161
  whilebody161:
    WRITE32 ENDSUB_A3:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB162:
    WRITE32 ENDSUB_A2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB163:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 5.0 whilebody161
  endwhile161:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB166:
    WRITE32 ENDSUB_A2:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB167:
  while168:
    JR_GTEQF VS3_M 15.0 endwhile168
  whilebody168:
    WRITE32 ENDSUB_A3:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB169:
    WRITE32 ENDSUB_A2:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB170:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody168
  endwhile168:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds173
	MOVEF_32 100.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.RESETCOUNT 'bc'
  while175:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf179
    DATA8 flag179
    DIVF F.1 2.0 tmpf179
    CP_EQF 0.0 2.0 flag179
    SELECTF flag179 0.0 tmpf179 F.0

    JR_GTEQF F.0 100.0 endwhile175
  whilebody175:
    WRITE32 ENDSUB_A3:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB180:
    WRITE32 ENDSUB_A2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB181:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB182:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf186
    DATA8 flag186
    DIVF F.1 2.0 tmpf186
    CP_EQF 0.0 2.0 flag186
    SELECTF flag186 0.0 tmpf186 F.0

    JR_LTF F.0 100.0 whilebody175
  endwhile175:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB188:
    WRITE32 ENDSUB_A2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB189:
  while190:
    JR_LTEQF VS3_M 6.0 and192
    JR_GTF VS2_M 6.0 or191
  and192:
    JR_GTEQF VS3_M 6.0 endwhile190
    JR_GTEQF VS2_M 6.0 endwhile190
  or191:
  whilebody190:
    WRITE32 ENDSUB_A3:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB193:
    WRITE32 ENDSUB_A2:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB194:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB195:
    JR_LTEQF VS3_M 6.0 and196
    JR_GTF VS2_M 6.0 whilebody190
  and196:
    JR_GTEQF VS3_M 6.0 and197
    JR_LTF VS2_M 6.0 whilebody190
  and197:
  endwhile190:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_REDL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_REDL:
SUB_BELLAM:
    DATA32 tmp199
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp199
    JR_NEQ32 0 tmp199 alreadylaunched199
    OBJECT_START TZADVIG
  alreadylaunched199:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer200
	DATA8 nos200
	DATA8 busy200
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer200 nos200
	JR_EQ8 0 nos200 motornotbusy200
  motorwaiting200:
	OUTPUT_TEST layer200 nos200 busy200
	JR_EQ8 busy200 0 motornotbusy200
	SLEEP
	JR motorwaiting200
  motornotbusy200:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB202:
    WRITE32 ENDSUB_A2:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB203:
  while204:
    JR_LTEQF VS3_M 7.0 and206
    JR_GTF VS2_M 7.0 or205
  and206:
    JR_GTEQF VS3_M 7.0 endwhile204
    JR_GTEQF VS2_M 7.0 endwhile204
  or205:
  whilebody204:
    WRITE32 ENDSUB_A3:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB207:
    WRITE32 ENDSUB_A2:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB208:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB209:
    JR_LTEQF VS3_M 7.0 and210
    JR_GTF VS2_M 7.0 whilebody204
  and210:
    JR_GTEQF VS3_M 7.0 and211
    JR_LTF VS2_M 7.0 whilebody204
  and211:
  endwhile204:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 80.0 'true'

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer214
	DATA8 nos214
	DATA8 busy214
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer214 nos214
	JR_EQ8 0 nos214 motornotbusy214
  motorwaiting214:
	OUTPUT_TEST layer214 nos214 busy214
	JR_EQ8 busy214 0 motornotbusy214
	SLEEP
	JR motorwaiting214
  motornotbusy214:
    CALL MOTOR.RESETCOUNT 'bc'
  while216:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf220
    DATA8 flag220
    DIVF F.1 2.0 tmpf220
    CP_EQF 0.0 2.0 flag220
    SELECTF flag220 0.0 tmpf220 F.0

    JR_GTEQF F.0 100.0 endwhile216
  whilebody216:
    WRITE32 ENDSUB_A3:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB221:
    WRITE32 ENDSUB_A2:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB222:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB223:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf227
    DATA8 flag227
    DIVF F.1 2.0 tmpf227
    CP_EQF 0.0 2.0 flag227
    SELECTF flag227 0.0 tmpf227 F.0

    JR_LTF F.0 100.0 whilebody216
  endwhile216:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 60.0 'true'

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 125.0 'true'

	DATA8 layer229
	DATA8 nos229
	DATA8 busy229
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer229 nos229
	JR_EQ8 0 nos229 motornotbusy229
  motorwaiting229:
	OUTPUT_TEST layer229 nos229 busy229
	JR_EQ8 busy229 0 motornotbusy229
	SLEEP
	JR motorwaiting229
  motornotbusy229:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds231
	MOVEF_32 500.0 milliseconds231
	DATA32 timer231
	TIMER_WAIT milliseconds231 timer231
	TIMER_READY timer231
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 125.0 'true'

	DATA8 layer233
	DATA8 nos233
	DATA8 busy233
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer233 nos233
	JR_EQ8 0 nos233 motornotbusy233
  motorwaiting233:
	OUTPUT_TEST layer233 nos233 busy233
	JR_EQ8 busy233 0 motornotbusy233
	SLEEP
	JR motorwaiting233
  motornotbusy233:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 0.0 60.0 'true'

	DATA8 layer234
	DATA8 nos234
	DATA8 busy234
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer234 nos234
	JR_EQ8 0 nos234 motornotbusy234
  motorwaiting234:
	OUTPUT_TEST layer234 nos234 busy234
	JR_EQ8 busy234 0 motornotbusy234
	SLEEP
	JR motorwaiting234
  motornotbusy234:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 110.0 'true'

	DATA8 layer235
	DATA8 nos235
	DATA8 busy235
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer235 nos235
	JR_EQ8 0 nos235 motornotbusy235
  motorwaiting235:
	OUTPUT_TEST layer235 nos235 busy235
	JR_EQ8 busy235 0 motornotbusy235
	SLEEP
	JR motorwaiting235
  motornotbusy235:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 230.0 'true'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    WRITE32 ENDSUB_A2:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB237:
    WRITE32 ENDSUB_A3:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB238:
  while239:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 60.0 endwhile239
  whilebody239:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 60.0 whilebody239
  endwhile239:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while245:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf249
    DATA8 flag249
    DIVF F.1 2.0 tmpf249
    CP_EQF 0.0 2.0 flag249
    SELECTF flag249 0.0 tmpf249 F.0

    JR_GTEQF F.0 475.0 endwhile245
  whilebody245:
    WRITE32 ENDSUB_A3:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB250:
    WRITE32 ENDSUB_A2:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB251:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB252:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf256
    DATA8 flag256
    DIVF F.1 2.0 tmpf256
    CP_EQF 0.0 2.0 flag256
    SELECTF flag256 0.0 tmpf256 F.0

    JR_LTF F.0 475.0 whilebody245
  endwhile245:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds259
	MOVEF_32 500.0 milliseconds259
	DATA32 timer259
	TIMER_WAIT milliseconds259 timer259
	TIMER_READY timer259
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -50.0 -50.0 130.0 'true'

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    WRITE32 ENDSUB_A3:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB262:
    WRITE32 ENDSUB_A2:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB263:
  while264:
    JR_LTEQF VS3_M 6.0 endwhile264
  whilebody264:
    WRITE32 ENDSUB_A3:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB265:
    WRITE32 ENDSUB_A2:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB266:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody264
  endwhile264:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB269:
    WRITE32 ENDSUB_A2:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB270:
  while271:
    JR_GTEQF VS3_M 15.0 endwhile271
  whilebody271:
    WRITE32 ENDSUB_A3:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB272:
    WRITE32 ENDSUB_A2:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB273:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody271
  endwhile271:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while277:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile277
  whilebody277:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB279:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody277
  endwhile277:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB282:
    WRITE32 ENDSUB_A2:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB283:
    MOVEF_F 1.0 VI_M
  for284:
    JR_GTF VI_M 1.0 endfor284
  forbody284:
    WRITE32 ENDSUB_A3:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB285:
    WRITE32 ENDSUB_A2:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB286:
  while287:
    JR_LTEQF VS3_M 10.0 and289
    JR_GTF VS2_M 10.0 or288
  and289:
    JR_GTEQF VS3_M 10.0 endwhile287
    JR_GTEQF VS2_M 10.0 endwhile287
  or288:
  whilebody287:
    WRITE32 ENDSUB_A3:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB290:
    WRITE32 ENDSUB_A2:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB291:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB292:
    JR_LTEQF VS3_M 10.0 and293
    JR_GTF VS2_M 10.0 whilebody287
  and293:
    JR_GTEQF VS3_M 10.0 and294
    JR_LTF VS2_M 10.0 whilebody287
  and294:
  endwhile287:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer296
	DATA8 nos296
	DATA8 busy296
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer296 nos296
	JR_EQ8 0 nos296 motornotbusy296
  motorwaiting296:
	OUTPUT_TEST layer296 nos296 busy296
	JR_EQ8 busy296 0 motornotbusy296
	SLEEP
	JR motorwaiting296
  motornotbusy296:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody284
  endfor284:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer298
	DATA8 nos298
	DATA8 busy298
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer298 nos298
	JR_EQ8 0 nos298 motornotbusy298
  motorwaiting298:
	OUTPUT_TEST layer298 nos298 busy298
	JR_EQ8 busy298 0 motornotbusy298
	SLEEP
	JR motorwaiting298
  motornotbusy298:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB300:
    WRITE32 ENDSUB_A2:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB301:
    MOVEF_F 80.0 VJ_M
  while302:
    JR_LTEQF VS3_M 6.0 endwhile302
  whilebody302:
    WRITE32 ENDSUB_A3:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB303:
    WRITE32 ENDSUB_A2:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB304:
    JR_LTEQF VJ_M 30.0 else305_1
    SUBF VJ_M 0.1 VJ_M
  else305_1:
  endif305:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 6.0 whilebody302
  endwhile302:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB309:
    WRITE32 ENDSUB_A2:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB310:
    MOVEF_F 80.0 VJ_M
  while311:
    JR_GTEQF VS3_M 15.0 endwhile311
  whilebody311:
    WRITE32 ENDSUB_A3:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB312:
    WRITE32 ENDSUB_A2:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB313:
    JR_LTEQF VJ_M 30.0 else314_1
    SUBF VJ_M 0.1 VJ_M
  else314_1:
  endif314:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody311
  endwhile311:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while319:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf323
    DATA8 flag323
    DIVF F.1 2.0 tmpf323
    CP_EQF 0.0 2.0 flag323
    SELECTF flag323 0.0 tmpf323 F.0

    JR_GTEQF F.0 50.0 endwhile319
  whilebody319:
    WRITE32 ENDSUB_A3:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB324:
    WRITE32 ENDSUB_A2:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB325:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB326:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf330
    DATA8 flag330
    DIVF F.1 2.0 tmpf330
    CP_EQF 0.0 2.0 flag330
    SELECTF flag330 0.0 tmpf330 F.0

    JR_LTF F.0 50.0 whilebody319
  endwhile319:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer332
	DATA8 nos332
	DATA8 busy332
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer332 nos332
	JR_EQ8 0 nos332 motornotbusy332
  motorwaiting332:
	OUTPUT_TEST layer332 nos332 busy332
	JR_EQ8 busy332 0 motornotbusy332
	SLEEP
	JR motorwaiting332
  motornotbusy332:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds334
	MOVEF_32 500.0 milliseconds334
	DATA32 timer334
	TIMER_WAIT milliseconds334 timer334
	TIMER_READY timer334
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB336:
    WRITE32 ENDSUB_A3:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB337:
  while338:
    JR_LTEQF VS3_M 6.0 and340
    JR_GTF VS2_M 6.0 or339
  and340:
    JR_GTEQF VS3_M 6.0 and341
    JR_GTF VS2_M 6.0 or339
  and341:
    JR_LTEQF VS3_M 6.0 endwhile338
    JR_GTEQF VS2_M 6.0 endwhile338
  or339:
  whilebody338:
    WRITE32 ENDSUB_A2:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB342:
    WRITE32 ENDSUB_A3:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB343:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 6.0 and345
    JR_GTF VS2_M 6.0 whilebody338
  and345:
    JR_GTEQF VS3_M 6.0 and346
    JR_GTF VS2_M 6.0 whilebody338
  and346:
    JR_LTEQF VS3_M 6.0 and347
    JR_LTF VS2_M 6.0 whilebody338
  and347:
  endwhile338:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer349
	DATA8 nos349
	DATA8 busy349
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer349 nos349
	JR_EQ8 0 nos349 motornotbusy349
  motorwaiting349:
	OUTPUT_TEST layer349 nos349 busy349
	JR_EQ8 busy349 0 motornotbusy349
	SLEEP
	JR motorwaiting349
  motornotbusy349:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 90.0 'true'

	DATA8 layer351
	DATA8 nos351
	DATA8 busy351
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer351 nos351
	JR_EQ8 0 nos351 motornotbusy351
  motorwaiting351:
	OUTPUT_TEST layer351 nos351 busy351
	JR_EQ8 busy351 0 motornotbusy351
	SLEEP
	JR motorwaiting351
  motornotbusy351:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB353:
    WRITE32 ENDSUB_A2:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB354:
  while355:
    JR_LTEQF VS3_M 6.0 endwhile355
  whilebody355:
    WRITE32 ENDSUB_A3:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB356:
    WRITE32 ENDSUB_A2:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB357:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody355
  endwhile355:
    WRITE32 ENDSUB_A3:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB359:
    WRITE32 ENDSUB_A2:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB360:
  while361:
    JR_GTEQF VS3_M 60.0 endwhile361
  whilebody361:
    WRITE32 ENDSUB_A3:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB362:
    WRITE32 ENDSUB_A2:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB363:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody361
  endwhile361:
    CALL MOTOR.RESETCOUNT 'bc'
  while366:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 100.0 endwhile366
  whilebody366:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB368:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 100.0 whilebody366
  endwhile366:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB371:
    WRITE32 ENDSUB_A3:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB372:
  while373:
    JR_LTEQF VS3_M 6.0 and375
    JR_GTF VS2_M 6.0 or374
  and375:
    JR_LTEQF VS3_M 6.0 and376
    JR_LTF VS2_M 6.0 or374
  and376:
    JR_GTEQF VS3_M 6.0 endwhile373
    JR_LTEQF VS2_M 6.0 endwhile373
  or374:
  whilebody373:
    WRITE32 ENDSUB_A3:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB377:
    WRITE32 ENDSUB_A2:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB378:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB379:
    JR_LTEQF VS3_M 6.0 and380
    JR_GTF VS2_M 6.0 whilebody373
  and380:
    JR_LTEQF VS3_M 6.0 and381
    JR_LTF VS2_M 6.0 whilebody373
  and381:
    JR_GTEQF VS3_M 6.0 and382
    JR_GTF VS2_M 6.0 whilebody373
  and382:
  endwhile373:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer384
	DATA8 nos384
	DATA8 busy384
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer384 nos384
	JR_EQ8 0 nos384 motornotbusy384
  motorwaiting384:
	OUTPUT_TEST layer384 nos384 busy384
	JR_EQ8 busy384 0 motornotbusy384
	SLEEP
	JR motorwaiting384
  motornotbusy384:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB386:
    WRITE32 ENDSUB_A2:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB387:
  while388:
    JR_LTEQF VS3_M 6.0 endwhile388
  whilebody388:
    WRITE32 ENDSUB_A3:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB389:
    WRITE32 ENDSUB_A2:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB390:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody388
  endwhile388:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB393:
    WRITE32 ENDSUB_A2:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB394:
  while395:
    JR_GTEQF VS3_M 15.0 endwhile395
  whilebody395:
    WRITE32 ENDSUB_A3:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB396:
    WRITE32 ENDSUB_A2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB397:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VS3_M 15.0 whilebody395
  endwhile395:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds400
	MOVEF_32 100.0 milliseconds400
	DATA32 timer400
	TIMER_WAIT milliseconds400 timer400
	TIMER_READY timer400
    WRITE32 ENDSUB_A3:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB401:
    WRITE32 ENDSUB_A2:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB402:
  while403:
    JR_LTEQF VS2_M 70.0 endwhile403
  whilebody403:
    WRITE32 ENDSUB_A3:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB404:
    WRITE32 ENDSUB_A2:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB405:
    CALL MOTOR.STARTSYNC 'bc' 20.0 0.0
    JR_GTF VS2_M 70.0 whilebody403
  endwhile403:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds408
	MOVEF_32 100.0 milliseconds408
	DATA32 timer408
	TIMER_WAIT milliseconds408 timer408
	TIMER_READY timer408
RETSUB_BELLAM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM:
SUB_BELLAM2:
    DATA32 tmp409
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp409
    JR_NEQ32 0 tmp409 alreadylaunched409
    OBJECT_START TZADVIG
  alreadylaunched409:
    WRITE32 ENDSUB_PL:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB410:
    WRITE32 ENDSUB_A3:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB411:
    WRITE32 ENDSUB_A2:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB412:
    MOVEF_F 1.0 VI_M
  for413:
    JR_GTF VI_M 2.0 endfor413
  forbody413:
    WRITE32 ENDSUB_A3:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB414:
    WRITE32 ENDSUB_A2:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB415:
  while416:
    JR_LTEQF VS3_M 10.0 and418
    JR_GTF VS2_M 10.0 or417
  and418:
    JR_GTEQF VS3_M 10.0 endwhile416
    JR_GTEQF VS2_M 10.0 endwhile416
  or417:
  whilebody416:
    WRITE32 ENDSUB_A3:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB419:
    WRITE32 ENDSUB_A2:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB420:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB421:
    JR_LTEQF VS3_M 10.0 and422
    JR_GTF VS2_M 10.0 whilebody416
  and422:
    JR_GTEQF VS3_M 10.0 and423
    JR_LTF VS2_M 10.0 whilebody416
  and423:
  endwhile416:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer424
	DATA8 nos424
	DATA8 busy424
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer424 nos424
	JR_EQ8 0 nos424 motornotbusy424
  motorwaiting424:
	OUTPUT_TEST layer424 nos424 busy424
	JR_EQ8 busy424 0 motornotbusy424
	SLEEP
	JR motorwaiting424
  motornotbusy424:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 2.0 forbody413
  endfor413:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer426
	DATA8 nos426
	DATA8 busy426
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer426 nos426
	JR_EQ8 0 nos426 motornotbusy426
  motorwaiting426:
	OUTPUT_TEST layer426 nos426 busy426
	JR_EQ8 busy426 0 motornotbusy426
	SLEEP
	JR motorwaiting426
  motornotbusy426:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB428:
    WRITE32 ENDSUB_A2:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB429:
    MOVEF_F 80.0 VJ_M
  while430:
    JR_LTEQF VS3_M 6.0 endwhile430
  whilebody430:
    WRITE32 ENDSUB_A3:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB431:
    WRITE32 ENDSUB_A2:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB432:
    JR_LTEQF VJ_M 30.0 else433_1
    SUBF VJ_M 0.1 VJ_M
  else433_1:
  endif433:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 6.0 whilebody430
  endwhile430:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB437:
    WRITE32 ENDSUB_A2:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB438:
    MOVEF_F 80.0 VJ_M
  while439:
    JR_GTEQF VS3_M 15.0 endwhile439
  whilebody439:
    WRITE32 ENDSUB_A3:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB440:
    WRITE32 ENDSUB_A2:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB441:
    JR_LTEQF VJ_M 30.0 else442_1
    SUBF VJ_M 0.1 VJ_M
  else442_1:
  endif442:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody439
  endwhile439:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while447:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf451
    DATA8 flag451
    DIVF F.1 2.0 tmpf451
    CP_EQF 0.0 2.0 flag451
    SELECTF flag451 0.0 tmpf451 F.0

    JR_GTEQF F.0 50.0 endwhile447
  whilebody447:
    WRITE32 ENDSUB_A3:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB452:
    WRITE32 ENDSUB_A2:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB453:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB454:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf458
    DATA8 flag458
    DIVF F.1 2.0 tmpf458
    CP_EQF 0.0 2.0 flag458
    SELECTF flag458 0.0 tmpf458 F.0

    JR_LTF F.0 50.0 whilebody447
  endwhile447:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer460
	DATA8 nos460
	DATA8 busy460
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer460 nos460
	JR_EQ8 0 nos460 motornotbusy460
  motorwaiting460:
	OUTPUT_TEST layer460 nos460 busy460
	JR_EQ8 busy460 0 motornotbusy460
	SLEEP
	JR motorwaiting460
  motornotbusy460:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds462
	MOVEF_32 500.0 milliseconds462
	DATA32 timer462
	TIMER_WAIT milliseconds462 timer462
	TIMER_READY timer462
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while465:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf469
    DATA8 flag469
    DIVF F.1 2.0 tmpf469
    CP_EQF 0.0 2.0 flag469
    SELECTF flag469 0.0 tmpf469 F.0

    JR_LTEQF F.0 -200.0 endwhile465
  whilebody465:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf474
    DATA8 flag474
    DIVF F.1 2.0 tmpf474
    CP_EQF 0.0 2.0 flag474
    SELECTF flag474 0.0 tmpf474 F.0

    JR_GTF F.0 -200.0 whilebody465
  endwhile465:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer476
	DATA8 nos476
	DATA8 busy476
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer476 nos476
	JR_EQ8 0 nos476 motornotbusy476
  motorwaiting476:
	OUTPUT_TEST layer476 nos476 busy476
	JR_EQ8 busy476 0 motornotbusy476
	SLEEP
	JR motorwaiting476
  motornotbusy476:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB478:
    WRITE32 ENDSUB_A3:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB479:
  while480:
    JR_LTEQF VS3_M 6.0 and482
    JR_GTF VS2_M 6.0 or481
  and482:
    JR_LTEQF VS3_M 6.0 and483
    JR_LTF VS2_M 6.0 or481
  and483:
    JR_GTEQF VS3_M 6.0 endwhile480
    JR_LTEQF VS2_M 6.0 endwhile480
  or481:
  whilebody480:
    WRITE32 ENDSUB_A2:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB484:
    WRITE32 ENDSUB_A3:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB485:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 6.0 and487
    JR_GTF VS2_M 6.0 whilebody480
  and487:
    JR_LTEQF VS3_M 6.0 and488
    JR_LTF VS2_M 6.0 whilebody480
  and488:
    JR_GTEQF VS3_M 6.0 and489
    JR_GTF VS2_M 6.0 whilebody480
  and489:
  endwhile480:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer491
	DATA8 nos491
	DATA8 busy491
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer491 nos491
	JR_EQ8 0 nos491 motornotbusy491
  motorwaiting491:
	OUTPUT_TEST layer491 nos491 busy491
	JR_EQ8 busy491 0 motornotbusy491
	SLEEP
	JR motorwaiting491
  motornotbusy491:
    WRITE32 ENDSUB_A3:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB492:
    WRITE32 ENDSUB_A2:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB493:
  while494:
    JR_LTEQF VS3_M 6.0 endwhile494
  whilebody494:
    WRITE32 ENDSUB_A3:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB495:
    WRITE32 ENDSUB_A2:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB496:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody494
  endwhile494:
    WRITE32 ENDSUB_A3:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB498:
    WRITE32 ENDSUB_A2:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB499:
  while500:
    JR_GTEQF VS3_M 15.0 endwhile500
  whilebody500:
    WRITE32 ENDSUB_A3:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB501:
    WRITE32 ENDSUB_A2:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB502:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody500
  endwhile500:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM2:
SUB_BELLAM3:
    DATA32 tmp505
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp505
    JR_NEQ32 0 tmp505 alreadylaunched505
    OBJECT_START TZADVIG
  alreadylaunched505:
    WRITE32 ENDSUB_PL:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB506:
    WRITE32 ENDSUB_A3:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB507:
    WRITE32 ENDSUB_A2:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB508:
    MOVEF_F 1.0 VI_M
  for509:
    JR_GTF VI_M 3.0 endfor509
  forbody509:
    WRITE32 ENDSUB_A3:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB510:
    WRITE32 ENDSUB_A2:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB511:
  while512:
    JR_LTEQF VS3_M 10.0 and514
    JR_GTF VS2_M 10.0 or513
  and514:
    JR_GTEQF VS3_M 10.0 endwhile512
    JR_GTEQF VS2_M 10.0 endwhile512
  or513:
  whilebody512:
    WRITE32 ENDSUB_A3:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB515:
    WRITE32 ENDSUB_A2:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB516:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB517:
    JR_LTEQF VS3_M 10.0 and518
    JR_GTF VS2_M 10.0 whilebody512
  and518:
    JR_GTEQF VS3_M 10.0 and519
    JR_LTF VS2_M 10.0 whilebody512
  and519:
  endwhile512:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer520
	DATA8 nos520
	DATA8 busy520
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer520 nos520
	JR_EQ8 0 nos520 motornotbusy520
  motorwaiting520:
	OUTPUT_TEST layer520 nos520 busy520
	JR_EQ8 busy520 0 motornotbusy520
	SLEEP
	JR motorwaiting520
  motornotbusy520:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 3.0 forbody509
  endfor509:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 20.0 'true'

	DATA8 layer523
	DATA8 nos523
	DATA8 busy523
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer523 nos523
	JR_EQ8 0 nos523 motornotbusy523
  motorwaiting523:
	OUTPUT_TEST layer523 nos523 busy523
	JR_EQ8 busy523 0 motornotbusy523
	SLEEP
	JR motorwaiting523
  motornotbusy523:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 100.0 'true'

	DATA8 layer524
	DATA8 nos524
	DATA8 busy524
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer524 nos524
	JR_EQ8 0 nos524 motornotbusy524
  motorwaiting524:
	OUTPUT_TEST layer524 nos524 busy524
	JR_EQ8 busy524 0 motornotbusy524
	SLEEP
	JR motorwaiting524
  motornotbusy524:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -30.0 70.0 'true'

	DATA8 layer525
	DATA8 nos525
	DATA8 busy525
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer525 nos525
	JR_EQ8 0 nos525 motornotbusy525
  motorwaiting525:
	OUTPUT_TEST layer525 nos525 busy525
	JR_EQ8 busy525 0 motornotbusy525
	SLEEP
	JR motorwaiting525
  motornotbusy525:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 50.0 'true'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 30.0 'true'

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
    CALL MOTOR.RESETCOUNT 'bc'
  while529:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf533
    DATA8 flag533
    DIVF F.1 2.0 tmpf533
    CP_EQF 0.0 2.0 flag533
    SELECTF flag533 0.0 tmpf533 F.0

    JR_GTEQF F.0 50.0 endwhile529
  whilebody529:
    WRITE32 ENDSUB_A3:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB534:
    WRITE32 ENDSUB_A2:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB535:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB536:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf540
    DATA8 flag540
    DIVF F.1 2.0 tmpf540
    CP_EQF 0.0 2.0 flag540
    SELECTF flag540 0.0 tmpf540 F.0

    JR_LTF F.0 50.0 whilebody529
  endwhile529:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer542
	DATA8 nos542
	DATA8 busy542
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer542 nos542
	JR_EQ8 0 nos542 motornotbusy542
  motorwaiting542:
	OUTPUT_TEST layer542 nos542 busy542
	JR_EQ8 busy542 0 motornotbusy542
	SLEEP
	JR motorwaiting542
  motornotbusy542:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds544
	MOVEF_32 500.0 milliseconds544
	DATA32 timer544
	TIMER_WAIT milliseconds544 timer544
	TIMER_READY timer544
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 150.0 'true'

	DATA8 layer546
	DATA8 nos546
	DATA8 busy546
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer546 nos546
	JR_EQ8 0 nos546 motornotbusy546
  motorwaiting546:
	OUTPUT_TEST layer546 nos546 busy546
	JR_EQ8 busy546 0 motornotbusy546
	SLEEP
	JR motorwaiting546
  motornotbusy546:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 205.0 'true'

	DATA8 layer547
	DATA8 nos547
	DATA8 busy547
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer547 nos547
	JR_EQ8 0 nos547 motornotbusy547
  motorwaiting547:
	OUTPUT_TEST layer547 nos547 busy547
	JR_EQ8 busy547 0 motornotbusy547
	SLEEP
	JR motorwaiting547
  motornotbusy547:
    WRITE32 ENDSUB_A2:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB548:
    WRITE32 ENDSUB_A3:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB549:
  while550:
    JR_LTEQF VS3_M 5.0 and552
    JR_GTF VS2_M 5.0 or551
  and552:
    JR_GTEQF VS3_M 5.0 and553
    JR_GTF VS2_M 5.0 or551
  and553:
    JR_LTEQF VS3_M 5.0 endwhile550
    JR_GTEQF VS2_M 5.0 endwhile550
  or551:
  whilebody550:
    WRITE32 ENDSUB_A2:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB554:
    WRITE32 ENDSUB_A3:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB555:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 5.0 and557
    JR_GTF VS2_M 5.0 whilebody550
  and557:
    JR_GTEQF VS3_M 5.0 and558
    JR_GTF VS2_M 5.0 whilebody550
  and558:
    JR_LTEQF VS3_M 5.0 and559
    JR_LTF VS2_M 5.0 whilebody550
  and559:
  endwhile550:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer561
	DATA8 nos561
	DATA8 busy561
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer561 nos561
	JR_EQ8 0 nos561 motornotbusy561
  motorwaiting561:
	OUTPUT_TEST layer561 nos561 busy561
	JR_EQ8 busy561 0 motornotbusy561
	SLEEP
	JR motorwaiting561
  motornotbusy561:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB563:
    WRITE32 ENDSUB_A2:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB564:
  while565:
    JR_LTEQF VS3_M 6.0 endwhile565
  whilebody565:
    WRITE32 ENDSUB_A3:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB566:
    WRITE32 ENDSUB_A2:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB567:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VS3_M 6.0 whilebody565
  endwhile565:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB570:
    WRITE32 ENDSUB_A2:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB571:
  while572:
    JR_GTEQF VS3_M 15.0 endwhile572
  whilebody572:
    WRITE32 ENDSUB_A3:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB573:
    WRITE32 ENDSUB_A2:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB574:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VS3_M 15.0 whilebody572
  endwhile572:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VI_M
  for577:
    JR_GTF VI_M 1.0 endfor577
  forbody577:
    WRITE32 ENDSUB_A3:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB578:
    WRITE32 ENDSUB_A2:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB579:
  while580:
    JR_LTEQF VS3_M 10.0 and582
    JR_GTF VS2_M 10.0 or581
  and582:
    JR_GTEQF VS3_M 10.0 endwhile580
    JR_GTEQF VS2_M 10.0 endwhile580
  or581:
  whilebody580:
    WRITE32 ENDSUB_A3:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB583:
    WRITE32 ENDSUB_A2:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB584:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB585:
    JR_LTEQF VS3_M 10.0 and586
    JR_GTF VS2_M 10.0 whilebody580
  and586:
    JR_GTEQF VS3_M 10.0 and587
    JR_LTF VS2_M 10.0 whilebody580
  and587:
  endwhile580:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer589
	DATA8 nos589
	DATA8 busy589
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer589 nos589
	JR_EQ8 0 nos589 motornotbusy589
  motorwaiting589:
	OUTPUT_TEST layer589 nos589 busy589
	JR_EQ8 busy589 0 motornotbusy589
	SLEEP
	JR motorwaiting589
  motornotbusy589:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody577
  endfor577:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM3:
SUB_RED_1:
    WRITE32 ENDSUB_BELLAM:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB592:
    MOVEF_F 1250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB593:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB595:
    CALL MOTOR.RESETCOUNT 'bc'
  while597:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf601
    DATA8 flag601
    DIVF F.1 2.0 tmpf601
    CP_EQF 0.0 2.0 flag601
    SELECTF flag601 0.0 tmpf601 F.0

    JR_GTEQF F.0 270.0 endwhile597
  whilebody597:
    WRITE32 ENDSUB_A3:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB602:
    WRITE32 ENDSUB_A2:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB603:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB604:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf608
    DATA8 flag608
    DIVF F.1 2.0 tmpf608
    CP_EQF 0.0 2.0 flag608
    SELECTF flag608 0.0 tmpf608 F.0

    JR_LTF F.0 270.0 whilebody597
  endwhile597:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds611
	MOVEF_32 500.0 milliseconds611
	DATA32 timer611
	TIMER_WAIT milliseconds611 timer611
	TIMER_READY timer611
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp613
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp613
    JR_NEQ32 0 tmp613 alreadylaunched613
    OBJECT_START TVIDVIG
  alreadylaunched613:
    WRITE32 ENDSUB_NPL:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB614:
    WRITE32 ENDSUB_A3:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB615:
    WRITE32 ENDSUB_A2:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB616:
  while617:
    JR_LTEQF VS3_M 10.0 and619
    JR_GTF VS2_M 10.0 or618
  and619:
    JR_GTEQF VS3_M 10.0 endwhile617
    JR_GTEQF VS2_M 10.0 endwhile617
  or618:
  whilebody617:
    WRITE32 ENDSUB_A3:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB620:
    WRITE32 ENDSUB_A2:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB621:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB622:
    JR_LTEQF VS3_M 10.0 and623
    JR_GTF VS2_M 10.0 whilebody617
  and623:
    JR_GTEQF VS3_M 10.0 and624
    JR_LTF VS2_M 10.0 whilebody617
  and624:
  endwhile617:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer625
	DATA8 nos625
	DATA8 busy625
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer625 nos625
	JR_EQ8 0 nos625 motornotbusy625
  motorwaiting625:
	OUTPUT_TEST layer625 nos625 busy625
	JR_EQ8 busy625 0 motornotbusy625
	SLEEP
	JR motorwaiting625
  motornotbusy625:
    WRITE32 ENDSUB_A3:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB626:
    WRITE32 ENDSUB_A2:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB627:
  while628:
    JR_LTEQF VS3_M 10.0 and630
    JR_GTF VS2_M 10.0 or629
  and630:
    JR_GTEQF VS3_M 10.0 endwhile628
    JR_GTEQF VS2_M 10.0 endwhile628
  or629:
  whilebody628:
    WRITE32 ENDSUB_A3:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB631:
    WRITE32 ENDSUB_A2:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB632:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB633:
    JR_LTEQF VS3_M 10.0 and634
    JR_GTF VS2_M 10.0 whilebody628
  and634:
    JR_GTEQF VS3_M 10.0 and635
    JR_LTF VS2_M 10.0 whilebody628
  and635:
  endwhile628:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_RED_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RED_1:
SUB_SB1:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer637
	DATA8 nos637
	DATA8 busy637
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer637 nos637
	JR_EQ8 0 nos637 motornotbusy637
  motorwaiting637:
	OUTPUT_TEST layer637 nos637 busy637
	JR_EQ8 busy637 0 motornotbusy637
	SLEEP
	JR motorwaiting637
  motornotbusy637:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 300.0 'true'

	DATA8 layer638
	DATA8 nos638
	DATA8 busy638
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer638 nos638
	JR_EQ8 0 nos638 motornotbusy638
  motorwaiting638:
	OUTPUT_TEST layer638 nos638 busy638
	JR_EQ8 busy638 0 motornotbusy638
	SLEEP
	JR motorwaiting638
  motornotbusy638:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB640:
    WRITE32 ENDSUB_A2:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB641:
  while642:
    JR_LTEQF VS2_M 5.0 endwhile642
  whilebody642:
    WRITE32 ENDSUB_A3:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB643:
    WRITE32 ENDSUB_A2:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB644:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 5.0 whilebody642
  endwhile642:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB647:
    WRITE32 ENDSUB_A2:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB648:
  while649:
    JR_GTEQF VS2_M 15.0 endwhile649
  whilebody649:
    WRITE32 ENDSUB_A3:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB650:
    WRITE32 ENDSUB_A2:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB651:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody649
  endwhile649:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds654
	MOVEF_32 100.0 milliseconds654
	DATA32 timer654
	TIMER_WAIT milliseconds654 timer654
	TIMER_READY timer654
    CALL MOTOR.RESETCOUNT 'bc'
  while656:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf660
    DATA8 flag660
    DIVF F.1 2.0 tmpf660
    CP_EQF 0.0 2.0 flag660
    SELECTF flag660 0.0 tmpf660 F.0

    JR_GTEQF F.0 300.0 endwhile656
  whilebody656:
    WRITE32 ENDSUB_A3:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB661:
    WRITE32 ENDSUB_A2:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB662:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB663:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf667
    DATA8 flag667
    DIVF F.1 2.0 tmpf667
    CP_EQF 0.0 2.0 flag667
    SELECTF flag667 0.0 tmpf667 F.0

    JR_LTF F.0 300.0 whilebody656
  endwhile656:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB669:
    WRITE32 ENDSUB_A2:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB670:
  while671:
    JR_LTEQF VS3_M 6.0 and673
    JR_GTF VS2_M 6.0 or672
  and673:
    JR_GTEQF VS3_M 6.0 endwhile671
    JR_GTEQF VS2_M 6.0 endwhile671
  or672:
  whilebody671:
    WRITE32 ENDSUB_A3:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB674:
    WRITE32 ENDSUB_A2:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB675:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB676:
    JR_LTEQF VS3_M 6.0 and677
    JR_GTF VS2_M 6.0 whilebody671
  and677:
    JR_GTEQF VS3_M 6.0 and678
    JR_LTF VS2_M 6.0 whilebody671
  and678:
  endwhile671:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_SB1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SB1:
SUB_HSV:
    DATA8 layer680
	DATA8 no680
	DATA8 mode8680
	
	MOVEF_8 1.0 no680
	SUB8 no680 1 no680
	DIV8 no680 4 layer680
	MATH MOD8 no680 4 no680

	MOVEF_8 2.0 mode8680
	
	INPUT_DEVICE READY_RAW layer680 no680 0 mode8680 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf687
    DATA8 flag687
    DIVF VSRED_M 255.0 tmpf687
    CP_EQF 0.0 255.0 flag687
    SELECTF flag687 0.0 tmpf687 VSRED_M

    DATAF tmpf688
    DATA8 flag688
    DIVF VSGREEN_M 255.0 tmpf688
    CP_EQF 0.0 255.0 flag688
    SELECTF flag688 0.0 tmpf688 VSGREEN_M

    DATAF tmpf689
    DATA8 flag689
    DIVF VSBLUE_M 255.0 tmpf689
    CP_EQF 0.0 255.0 flag689
    SELECTF flag689 0.0 tmpf689 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else690_1
    JR_LTEQF VSRED_M VSBLUE_M else690_1
    MOVEF_F VSRED_M VMAX_M
    JR endif690
  else690_1:
    JR_LTEQF VSGREEN_M VSRED_M else690_2
    JR_LTEQF VSGREEN_M VSBLUE_M else690_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif690
  else690_2:
    JR_LTEQF VSBLUE_M VSRED_M else690_3
    JR_LTEQF VSBLUE_M VSGREEN_M else690_3
    MOVEF_F VSBLUE_M VMAX_M
  else690_3:
  endif690:
    JR_GTEQF VSRED_M VSGREEN_M else691_1
    JR_GTEQF VSRED_M VSBLUE_M else691_1
    MOVEF_F VSRED_M VMIN_M
    JR endif691
  else691_1:
    JR_GTEQF VSGREEN_M VSRED_M else691_2
    JR_GTEQF VSGREEN_M VSBLUE_M else691_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif691
  else691_2:
    JR_GTEQF VSBLUE_M VSRED_M else691_3
    JR_GTEQF VSBLUE_M VSGREEN_M else691_3
    MOVEF_F VSBLUE_M VMIN_M
  else691_3:
  endif691:
    JR_NEQF VMAX_M VMIN_M else692_1
    MOVEF_F 0.0 VH_M
    JR endif692
  else692_1:
    JR_NEQF VSRED_M VMAX_M else693_1
    JR_LTF VSGREEN_M VSBLUE_M else694_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf698
    DATA8 flag698
    DIVF F.0 F.1 tmpf698
    CP_EQF 0.0 F.1 flag698
    SELECTF flag698 0.0 tmpf698 VH_M

    JR endif694
  else694_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf702
    DATA8 flag702
    DIVF F.1 F.2 tmpf702
    CP_EQF 0.0 F.2 flag702
    SELECTF flag702 0.0 tmpf702 F.0

    ADDF F.0 360.0 VH_M
  else694_2:
  endif694:
    JR endif693
  else693_1:
    JR_NEQF VMAX_M VSGREEN_M else704_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf708
    DATA8 flag708
    DIVF F.1 F.2 tmpf708
    CP_EQF 0.0 F.2 flag708
    SELECTF flag708 0.0 tmpf708 F.0

    ADDF F.0 120.0 VH_M
    JR endif704
  else704_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf713
    DATA8 flag713
    DIVF F.1 F.2 tmpf713
    CP_EQF 0.0 F.2 flag713
    SELECTF flag713 0.0 tmpf713 F.0

    ADDF F.0 240.0 VH_M
  else704_2:
  endif704:
  else693_2:
  endif693:
  else692_2:
  endif692:
    JR_NEQF VMAX_M 0.0 else715_1
    MOVEF_F 0.0 VS_M
    JR endif715
  else715_1:
    DATAF tmpf716
    DATA8 flag716
    DIVF VMIN_M VMAX_M tmpf716
    CP_EQF 0.0 VMAX_M flag716
    SELECTF flag716 0.0 tmpf716 F.0

    SUBF 1.0 F.0 VS_M
  else715_2:
  endif715:
    MOVEF_F VMAX_M VV_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_HSV_100:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    DATA8 layer725
	DATA8 no725
	DATA8 mode8725
	
	MOVEF_8 1.0 no725
	SUB8 no725 1 no725
	DIV8 no725 4 layer725
	MATH MOD8 no725 4 no725

	MOVEF_8 2.0 mode8725
	
	INPUT_DEVICE READY_RAW layer725 no725 0 mode8725 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    MOVEF_F 1.0 VP_M
  for726:
    JR_GTF VP_M 100.0 endfor726
  forbody726:
    WRITE32 ENDSUB_HSV:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB727:
    ADDF VX_M VH_M VX_M
    ADDF VZ_M VS_M VZ_M
    ADDF VD_M VV_M VD_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody726
  endfor726:
    DATAF tmpf732
    DATA8 flag732
    DIVF VX_M 100.0 tmpf732
    CP_EQF 0.0 100.0 flag732
    SELECTF flag732 0.0 tmpf732 VH_M

    DATAF tmpf733
    DATA8 flag733
    DIVF VZ_M 100.0 tmpf733
    CP_EQF 0.0 100.0 flag733
    SELECTF flag733 0.0 tmpf733 VS_M

    DATAF tmpf734
    DATA8 flag734
    DIVF VD_M 100.0 tmpf734
    CP_EQF 0.0 100.0 flag734
    SELECTF flag734 0.0 tmpf734 VV_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV_100:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_100:
SUB_HSV_B:
    DATA8 layer742
	DATA8 no742
	DATA8 mode8742
	
	MOVEF_8 1.0 no742
	SUB8 no742 1 no742
	DIV8 no742 4 layer742
	MATH MOD8 no742 4 no742

	MOVEF_8 2.0 mode8742
	
	INPUT_DEVICE READY_RAW layer742 no742 0 mode8742 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf749
    DATA8 flag749
    DIVF VSRED_M 255.0 tmpf749
    CP_EQF 0.0 255.0 flag749
    SELECTF flag749 0.0 tmpf749 VSRED_M

    DATAF tmpf750
    DATA8 flag750
    DIVF VSGREEN_M 255.0 tmpf750
    CP_EQF 0.0 255.0 flag750
    SELECTF flag750 0.0 tmpf750 VSGREEN_M

    DATAF tmpf751
    DATA8 flag751
    DIVF VSBLUE_M 255.0 tmpf751
    CP_EQF 0.0 255.0 flag751
    SELECTF flag751 0.0 tmpf751 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else752_1
    JR_LTEQF VSRED_M VSBLUE_M else752_1
    MOVEF_F VSRED_M VMAX_M
    JR endif752
  else752_1:
    JR_LTEQF VSGREEN_M VSRED_M else752_2
    JR_LTEQF VSGREEN_M VSBLUE_M else752_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif752
  else752_2:
    JR_LTEQF VSBLUE_M VSRED_M else752_3
    JR_LTEQF VSBLUE_M VSGREEN_M else752_3
    MOVEF_F VSBLUE_M VMAX_M
  else752_3:
  endif752:
    JR_GTEQF VSRED_M VSGREEN_M else753_1
    JR_GTEQF VSRED_M VSBLUE_M else753_1
    MOVEF_F VSRED_M VMIN_M
    JR endif753
  else753_1:
    JR_GTEQF VSGREEN_M VSRED_M else753_2
    JR_GTEQF VSGREEN_M VSBLUE_M else753_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif753
  else753_2:
    JR_GTEQF VSBLUE_M VSRED_M else753_3
    JR_GTEQF VSBLUE_M VSGREEN_M else753_3
    MOVEF_F VSBLUE_M VMIN_M
  else753_3:
  endif753:
    JR_NEQF VMAX_M VMIN_M else754_1
    MOVEF_F 0.0 VH_M
    JR endif754
  else754_1:
    JR_NEQF VSRED_M VMAX_M else755_1
    JR_LTF VSGREEN_M VSBLUE_M else756_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf760
    DATA8 flag760
    DIVF F.0 F.1 tmpf760
    CP_EQF 0.0 F.1 flag760
    SELECTF flag760 0.0 tmpf760 VH_M

    JR endif756
  else756_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf764
    DATA8 flag764
    DIVF F.1 F.2 tmpf764
    CP_EQF 0.0 F.2 flag764
    SELECTF flag764 0.0 tmpf764 F.0

    ADDF F.0 360.0 VH_M
  else756_2:
  endif756:
    JR endif755
  else755_1:
    JR_NEQF VMAX_M VSGREEN_M else766_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf770
    DATA8 flag770
    DIVF F.1 F.2 tmpf770
    CP_EQF 0.0 F.2 flag770
    SELECTF flag770 0.0 tmpf770 F.0

    ADDF F.0 120.0 VH_M
    JR endif766
  else766_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf775
    DATA8 flag775
    DIVF F.1 F.2 tmpf775
    CP_EQF 0.0 F.2 flag775
    SELECTF flag775 0.0 tmpf775 F.0

    ADDF F.0 240.0 VH_M
  else766_2:
  endif766:
  else755_2:
  endif755:
  else754_2:
  endif754:
    JR_NEQF VMAX_M 0.0 else777_1
    MOVEF_F 0.0 VS_M
    JR endif777
  else777_1:
    DATAF tmpf778
    DATA8 flag778
    DIVF VMIN_M VMAX_M tmpf778
    CP_EQF 0.0 VMAX_M flag778
    SELECTF flag778 0.0 tmpf778 F.0

    SUBF 1.0 F.0 VS_M
  else777_2:
  endif777:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 300.0 and782
    JR_LTF VH_M 360.0 or781
  and782:
    JR_LTF VH_M 0.0 else780_1
    JR_GTF VH_M 20.0 else780_1
    JR_LTEQF VS_M 0.3 else780_1
    JR_GTF VS_M 1.0 else780_1
    JR_LTEQF VV_M 0.025 else780_1
    JR_GTEQF VV_M 0.1 else780_1
  or781:
    MOVEF_F 5.0 VCOLOR_M
    JR endif780
  else780_1:
    JR_LTF VH_M 20.0 else780_2
    JR_GTEQF VH_M 60.0 else780_2
    JR_LTF VS_M 0.4 else780_2
    JR_LTEQF VV_M 0.03 else780_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif780
  else780_2:
    MOVEF_F 6.0 VCOLOR_M
  else780_3:
  endif780:
RETSUB_HSV_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_B:
SUB_HSV_D:
    DATA8 layer783
	DATA8 no783
	DATA8 mode8783
	
	MOVEF_8 1.0 no783
	SUB8 no783 1 no783
	DIV8 no783 4 layer783
	MATH MOD8 no783 4 no783

	MOVEF_8 2.0 mode8783
	
	INPUT_DEVICE READY_RAW layer783 no783 0 mode8783 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf790
    DATA8 flag790
    DIVF VSRED_M 255.0 tmpf790
    CP_EQF 0.0 255.0 flag790
    SELECTF flag790 0.0 tmpf790 VSRED_M

    DATAF tmpf791
    DATA8 flag791
    DIVF VSGREEN_M 255.0 tmpf791
    CP_EQF 0.0 255.0 flag791
    SELECTF flag791 0.0 tmpf791 VSGREEN_M

    DATAF tmpf792
    DATA8 flag792
    DIVF VSBLUE_M 255.0 tmpf792
    CP_EQF 0.0 255.0 flag792
    SELECTF flag792 0.0 tmpf792 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else793_1
    JR_LTEQF VSRED_M VSBLUE_M else793_1
    MOVEF_F VSRED_M VMAX_M
    JR endif793
  else793_1:
    JR_LTEQF VSGREEN_M VSRED_M else793_2
    JR_LTEQF VSGREEN_M VSBLUE_M else793_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif793
  else793_2:
    JR_LTEQF VSBLUE_M VSRED_M else793_3
    JR_LTEQF VSBLUE_M VSGREEN_M else793_3
    MOVEF_F VSBLUE_M VMAX_M
  else793_3:
  endif793:
    JR_GTEQF VSRED_M VSGREEN_M else794_1
    JR_GTEQF VSRED_M VSBLUE_M else794_1
    MOVEF_F VSRED_M VMIN_M
    JR endif794
  else794_1:
    JR_GTEQF VSGREEN_M VSRED_M else794_2
    JR_GTEQF VSGREEN_M VSBLUE_M else794_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif794
  else794_2:
    JR_GTEQF VSBLUE_M VSRED_M else794_3
    JR_GTEQF VSBLUE_M VSGREEN_M else794_3
    MOVEF_F VSBLUE_M VMIN_M
  else794_3:
  endif794:
    JR_NEQF VMAX_M VMIN_M else795_1
    MOVEF_F 0.0 VH_M
    JR endif795
  else795_1:
    JR_NEQF VSRED_M VMAX_M else796_1
    JR_LTF VSGREEN_M VSBLUE_M else797_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf801
    DATA8 flag801
    DIVF F.0 F.1 tmpf801
    CP_EQF 0.0 F.1 flag801
    SELECTF flag801 0.0 tmpf801 VH_M

    JR endif797
  else797_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf805
    DATA8 flag805
    DIVF F.1 F.2 tmpf805
    CP_EQF 0.0 F.2 flag805
    SELECTF flag805 0.0 tmpf805 F.0

    ADDF F.0 360.0 VH_M
  else797_2:
  endif797:
    JR endif796
  else796_1:
    JR_NEQF VMAX_M VSGREEN_M else807_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf811
    DATA8 flag811
    DIVF F.1 F.2 tmpf811
    CP_EQF 0.0 F.2 flag811
    SELECTF flag811 0.0 tmpf811 F.0

    ADDF F.0 120.0 VH_M
    JR endif807
  else807_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf816
    DATA8 flag816
    DIVF F.1 F.2 tmpf816
    CP_EQF 0.0 F.2 flag816
    SELECTF flag816 0.0 tmpf816 F.0

    ADDF F.0 240.0 VH_M
  else807_2:
  endif807:
  else796_2:
  endif796:
  else795_2:
  endif795:
    JR_NEQF VMAX_M 0.0 else818_1
    MOVEF_F 0.0 VS_M
    JR endif818
  else818_1:
    DATAF tmpf819
    DATA8 flag819
    DIVF VMIN_M VMAX_M tmpf819
    CP_EQF 0.0 VMAX_M flag819
    SELECTF flag819 0.0 tmpf819 F.0

    SUBF 1.0 F.0 VS_M
  else818_2:
  endif818:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 200.0 and823
    JR_LTF VH_M 360.0 or822
  and823:
    JR_LTF VH_M 0.0 else821_1
    JR_GTF VH_M 30.0 else821_1
    JR_LTEQF VS_M 0.3 else821_1
    JR_GTF VS_M 1.0 else821_1
    JR_LTF VV_M 0.0 else821_1
    JR_GTEQF VV_M 0.02 else821_1
  or822:
    MOVEF_F 5.0 VCOLOR_M
    JR endif821
  else821_1:
    JR_LTF VH_M 0.0 else821_2
    JR_GTEQF VH_M 60.0 else821_2
    JR_LTF VS_M 0.4 else821_2
    JR_GTF VS_M 1.0 else821_2
    JR_LTEQF VV_M 0.003 else821_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif821
  else821_2:
    MOVEF_F 6.0 VCOLOR_M
  else821_3:
  endif821:
RETSUB_HSV_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_D:
SUB_HSV_RGB_B:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer824
	DATA8 no824
	DATA8 mode8824
	
	MOVEF_8 1.0 no824
	SUB8 no824 1 no824
	DIV8 no824 4 layer824
	MATH MOD8 no824 4 no824

	MOVEF_8 2.0 mode8824
	
	INPUT_DEVICE READY_RAW layer824 no824 0 mode8824 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB826:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    DATA32 milliseconds835
	MOVEF_32 100.0 milliseconds835
	DATA32 timer835
	TIMER_WAIT milliseconds835 timer835
	TIMER_READY timer835
    MOVEF_F 1.0 VP_M
  for836:
    JR_GTF VP_M 100.0 endfor836
  forbody836:
    WRITE32 ENDSUB_HSV_B:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_B
CALLSUB837:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody836
  endfor836:
    DATAF tmpf840
    DATA8 flag840
    DIVF VX_M 100.0 tmpf840
    CP_EQF 0.0 100.0 flag840
    SELECTF flag840 0.0 tmpf840 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds844
	MOVEF_32 100.0 milliseconds844
	DATA32 timer844
	TIMER_WAIT milliseconds844 timer844
	TIMER_READY timer844
    JR_LTEQF VH_M 100.0 and847
    JR_LTF VH_M 360.0 or846
  and847:
    JR_LTF VH_M 0.0 else845_1
    JR_GTF VH_M 20.0 else845_1
    JR_LTEQF VS_M 0.3 else845_1
    JR_GTF VS_M 1.0 else845_1
    JR_LTEQF VV_M 0.025 else845_1
    JR_GTEQF VV_M 0.1 else845_1
  or846:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif845
  else845_1:
    JR_LTF VH_M 20.0 else845_2
    JR_GTEQF VH_M 60.0 else845_2
    JR_LTF VS_M 0.4 else845_2
    JR_LTEQF VV_M 0.03 else845_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif845
  else845_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else845_3:
  endif845:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds857
	MOVEF_32 1000.0 milliseconds857
	DATA32 timer857
	TIMER_WAIT milliseconds857 timer857
	TIMER_READY timer857
RETSUB_HSV_RGB_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_B:
SUB_HSV_RGB_D:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer858
	DATA8 no858
	DATA8 mode8858
	
	MOVEF_8 1.0 no858
	SUB8 no858 1 no858
	DIV8 no858 4 layer858
	MATH MOD8 no858 4 no858

	MOVEF_8 2.0 mode8858
	
	INPUT_DEVICE READY_RAW layer858 no858 0 mode8858 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV_D:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB860:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    MOVEF_F 1.0 VP_M
  for869:
    JR_GTF VP_M 100.0 endfor869
  forbody869:
    WRITE32 ENDSUB_HSV_D:CALLSUB870 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB870:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody869
  endfor869:
    DATAF tmpf873
    DATA8 flag873
    DIVF VX_M 100.0 tmpf873
    CP_EQF 0.0 100.0 flag873
    SELECTF flag873 0.0 tmpf873 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    JR_LTEQF VH_M 200.0 and879
    JR_LTF VH_M 360.0 or878
  and879:
    JR_LTF VH_M 0.0 else877_1
    JR_GTF VH_M 40.0 else877_1
    JR_LTEQF VS_M 0.3 else877_1
    JR_GTF VS_M 1.0 else877_1
    JR_LTF VV_M 0.0 else877_1
    JR_GTEQF VV_M 0.02 else877_1
  or878:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif877
  else877_1:
    JR_LTF VH_M 0.0 else877_2
    JR_GTEQF VH_M 100.0 else877_2
    JR_LTF VS_M 0.4 else877_2
    JR_GTF VS_M 1.0 else877_2
    JR_LTEQF VV_M 0.003 else877_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif877
  else877_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else877_3:
  endif877:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds889
	MOVEF_32 1000.0 milliseconds889
	DATA32 timer889
	TIMER_WAIT milliseconds889 timer889
	TIMER_READY timer889
RETSUB_HSV_RGB_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_D:
SUB_A3:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN3_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX3_M VMIN3_M F.1
    DATAF tmpf894
    DATA8 flag894
    DIVF F.0 F.1 tmpf894
    CP_EQF 0.0 F.1 flag894
    SELECTF flag894 0.0 tmpf894 VS3_M

RETSUB_A3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A3:
SUB_A2:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf899
    DATA8 flag899
    DIVF F.0 F.1 tmpf899
    CP_EQF 0.0 F.1 flag899
    SELECTF flag899 0.0 tmpf899 VS2_M

RETSUB_A2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A2:
SUB_POLIN2D:
    WRITE32 ENDSUB_A3:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB900:
    WRITE32 ENDSUB_A2:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB901:
    SUBF VS2_M VS3_M VE_M
    MULF VK1_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2D:
SUB_POLIN2DUS:
    WRITE32 ENDSUB_A3:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB911:
    WRITE32 ENDSUB_A2:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB912:
    SUBF VS2_M VS3_M VE_M
    MULF VK3_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2DUS:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2DUS:
SUB_ZAMOROZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_ZAMOROZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZAMOROZ:
SUB_ZADVIG:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds926
	MOVEF_32 100.0 milliseconds926
	DATA32 timer926
	TIMER_WAIT milliseconds926 timer926
	TIMER_READY timer926
  while927:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile927
  whilebody927:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody927
  endwhile927:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_ZADVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZADVIG:
SUB_VIDVIG:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds933
	MOVEF_32 100.0 milliseconds933
	DATA32 timer933
	TIMER_WAIT milliseconds933 timer933
	TIMER_READY timer933
  while934:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTEQF F.0 -20.0 endwhile934
  whilebody934:
    CALL MOTOR.START 'a' -80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTF F.0 -20.0 whilebody934
  endwhile934:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_VIDVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIDVIG:
SUB_VIRAV_NAZ:
    DATA8 layer939
	DATA8 no939
	DATA8 mode8939
	
	MOVEF_8 2.0 no939
	SUB8 no939 1 no939
	DIV8 no939 4 layer939
	MATH MOD8 no939 4 no939

	MOVEF_8 0.0 mode8939
	
	INPUT_DEVICE READY_RAW layer939 no939 0 mode8939 0
    DATA8 layer940
	DATA8 no940
	DATA8 mode8940
	
	MOVEF_8 3.0 no940
	SUB8 no940 1 no940
	DIV8 no940 4 layer940
	MATH MOD8 no940 4 no940

	MOVEF_8 0.0 mode8940
	
	INPUT_DEVICE READY_RAW layer940 no940 0 mode8940 0
  while941:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile941
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile941
  whilebody941:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and945
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody941
  and945:
  endwhile941:
    CALL MOTOR.STOP 'BC' 'True'
  while949:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile949
  whilebody949:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody949
  endwhile949:
    CALL MOTOR.STOP 'B' 'True'
  while954:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile954
  whilebody954:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody954
  endwhile954:
    CALL MOTOR.STOP 'C' 'True'
  while959:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile959
  whilebody959:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody959
  endwhile959:
    CALL MOTOR.STOP 'B' 'True'
  while964:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile964
  whilebody964:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody964
  endwhile964:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV_NAZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV_NAZ:
SUB_VIRAV:
    DATA8 layer969
	DATA8 no969
	DATA8 mode8969
	
	MOVEF_8 2.0 no969
	SUB8 no969 1 no969
	DIV8 no969 4 layer969
	MATH MOD8 no969 4 no969

	MOVEF_8 0.0 mode8969
	
	INPUT_DEVICE READY_RAW layer969 no969 0 mode8969 0
    DATA8 layer970
	DATA8 no970
	DATA8 mode8970
	
	MOVEF_8 3.0 no970
	SUB8 no970 1 no970
	DIV8 no970 4 layer970
	MATH MOD8 no970 4 no970

	MOVEF_8 0.0 mode8970
	
	INPUT_DEVICE READY_RAW layer970 no970 0 mode8970 0
  while971:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile971
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile971
  whilebody971:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and975
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody971
  and975:
  endwhile971:
    CALL MOTOR.STOP 'BC' 'True'
  while979:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile979
  whilebody979:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody979
  endwhile979:
    CALL MOTOR.STOP 'B' 'True'
  while984:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile984
  whilebody984:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody984
  endwhile984:
    CALL MOTOR.STOP 'C' 'True'
  while989:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile989
  whilebody989:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody989
  endwhile989:
    CALL MOTOR.STOP 'B' 'True'
  while994:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile994
  whilebody994:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody994
  endwhile994:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV:
SUB_RGB:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 F.0 VRECVARRAY_M
    CALL ARRAYSTORE_FLOAT VI_M F.0 VA_M
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 5.0 or1004
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 14.0 or1004
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 6.0 else1003_1
  or1004:
    CALL SPEAKER.NOTE 100.0 'C#1' 500.0
    JR endif1003
  else1003_1:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 1.0 or1009
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 10.0 or1009
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 7.0 or1009
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 8.0 else1003_2
  or1009:
    CALL SPEAKER.NOTE 100.0 'C#5' 500.0
    JR endif1003
  else1003_2:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 3.0 or1015
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 2.0 or1015
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 4.0 else1003_3
  or1015:
    CALL SPEAKER.NOTE 50.0 'C#9' 1000.0
  else1003_3:
  endif1003:
RETSUB_RGB:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RGB:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
