DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2049
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2049:
    JR_NEQ32 SUBPROGRAM 1 dispatch2050
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2050:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 30.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB60:
    WRITE32 ENDSUB_F_A2_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB61:
  while62:
    JR_LTEQF VGV_S3 10.0 and64
    JR_GTF VGV_S2 10.0 or63
  and64:
    JR_GTEQF VGV_S3 10.0 endwhile62
    JR_GTEQF VGV_S2 10.0 endwhile62
  or63:
  whilebody62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB65:
    WRITE32 ENDSUB_F_A2_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB66:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB67:
    JR_LTEQF VGV_S3 10.0 and68
    JR_GTF VGV_S2 10.0 whilebody62
  and68:
    JR_GTEQF VGV_S3 10.0 and69
    JR_LTF VGV_S2 10.0 whilebody62
  and69:
  endwhile62:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB71:
    JR_GTF VGV_H 100.0 or73
    JR_LTF VGV_H 0.0 else72_1
    JR_GTF VGV_H 32.0 else72_1
  or73:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif72
  else72_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else72_2:
  endif72:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    JR_NEQF VGV_COLOR 4.0 else77_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB78:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer81
	DATA8 nos81
	DATA8 busy81
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer81 nos81
	JR_EQ8 0 nos81 motornotbusy81
  motorwaiting81:
	OUTPUT_TEST layer81 nos81 busy81
	JR_EQ8 busy81 0 motornotbusy81
	SLEEP
	JR motorwaiting81
  motornotbusy81:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while85:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 625.0 endwhile85
  whilebody85:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB87:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 625.0 whilebody85
  endwhile85:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB90:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer91
	DATA8 nos91
	DATA8 busy91
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer91 nos91
	JR_EQ8 0 nos91 motornotbusy91
  motorwaiting91:
	OUTPUT_TEST layer91 nos91 busy91
	JR_EQ8 busy91 0 motornotbusy91
	SLEEP
	JR motorwaiting91
  motornotbusy91:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer93
	DATA8 nos93
	DATA8 busy93
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer93 nos93
	JR_EQ8 0 nos93 motornotbusy93
  motorwaiting93:
	OUTPUT_TEST layer93 nos93 busy93
	JR_EQ8 busy93 0 motornotbusy93
	SLEEP
	JR motorwaiting93
  motornotbusy93:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while96:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf100
    DATA8 flag100
    DIVF F.1 2.0 tmpf100
    CP_EQF 0.0 2.0 flag100
    SELECTF flag100 0.0 tmpf100 F.0

    JR_GTEQF F.0 100.0 endwhile96
  whilebody96:
    WRITE32 ENDSUB_F_A3_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB101:
    WRITE32 ENDSUB_F_A2_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB102:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB103:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf107
    DATA8 flag107
    DIVF F.1 2.0 tmpf107
    CP_EQF 0.0 2.0 flag107
    SELECTF flag107 0.0 tmpf107 F.0

    JR_LTF F.0 100.0 whilebody96
  endwhile96:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB109:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else111_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB112:
    ADDF VGV_C 1.0 VGV_C
    JR endif111
  else111_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer115
	DATA8 nos115
	DATA8 busy115
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer115 nos115
	JR_EQ8 0 nos115 motornotbusy115
  motorwaiting115:
	OUTPUT_TEST layer115 nos115 busy115
	JR_EQ8 busy115 0 motornotbusy115
	SLEEP
	JR motorwaiting115
  motornotbusy115:
  while116:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and118
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or117
  and118:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and121
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or117
  and121:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile116
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile116
  or117:
  whilebody116:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and130
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody116
  and130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and133
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and133:
  endwhile116:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB136:
    WRITE32 ENDSUB_F_A2_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB137:
  while138:
    JR_LTEQF VGV_S3 10.0 and140
    JR_GTF VGV_S2 10.0 or139
  and140:
    JR_GTEQF VGV_S3 10.0 endwhile138
    JR_GTEQF VGV_S2 10.0 endwhile138
  or139:
  whilebody138:
    WRITE32 ENDSUB_F_A3_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB141:
    WRITE32 ENDSUB_F_A2_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB142:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB143:
    JR_LTEQF VGV_S3 10.0 and144
    JR_GTF VGV_S2 10.0 whilebody138
  and144:
    JR_GTEQF VGV_S3 10.0 and145
    JR_LTF VGV_S2 10.0 whilebody138
  and145:
  endwhile138:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
  else111_2:
  endif111:
    JR endif77
  else77_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
  while160:
    JR_LTEQF VGV_S3 10.0 and162
    JR_GTF VGV_S2 10.0 or161
  and162:
    JR_GTEQF VGV_S3 10.0 endwhile160
    JR_GTEQF VGV_S2 10.0 endwhile160
  or161:
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB163:
    WRITE32 ENDSUB_F_A2_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB164:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB165:
    JR_LTEQF VGV_S3 10.0 and166
    JR_GTF VGV_S2 10.0 whilebody160
  and166:
    JR_GTEQF VGV_S3 10.0 and167
    JR_LTF VGV_S2 10.0 whilebody160
  and167:
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer170
	DATA8 nos170
	DATA8 busy170
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer170 nos170
	JR_EQ8 0 nos170 motornotbusy170
  motorwaiting170:
	OUTPUT_TEST layer170 nos170 busy170
	JR_EQ8 busy170 0 motornotbusy170
	SLEEP
	JR motorwaiting170
  motornotbusy170:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds173
	MOVEF_32 500.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB175:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while177:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile177
  whilebody177:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB179:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody177
  endwhile177:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else182_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB183:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB186:
    WRITE32 ENDSUB_F_A2_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB187:
  while188:
    JR_LTEQF VGV_S3 15.0 endwhile188
  whilebody188:
    WRITE32 ENDSUB_F_A3_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB189:
    WRITE32 ENDSUB_F_A2_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB190:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody188
  endwhile188:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB193:
    WRITE32 ENDSUB_F_A2_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB194:
  while195:
    JR_GTEQF VGV_S3 35.0 endwhile195
  whilebody195:
    WRITE32 ENDSUB_F_A3_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB196:
    WRITE32 ENDSUB_F_A2_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB197:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody195
  endwhile195:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB201:
    WRITE32 ENDSUB_F_A2_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB202:
  while203:
    JR_LTEQF VGV_S3 10.0 and205
    JR_GTF VGV_S2 10.0 or204
  and205:
    JR_GTEQF VGV_S3 10.0 endwhile203
    JR_GTEQF VGV_S2 10.0 endwhile203
  or204:
  whilebody203:
    WRITE32 ENDSUB_F_A3_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB207:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB208:
    JR_LTEQF VGV_S3 10.0 and209
    JR_GTF VGV_S2 10.0 whilebody203
  and209:
    JR_GTEQF VGV_S3 10.0 and210
    JR_LTF VGV_S2 10.0 whilebody203
  and210:
  endwhile203:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB212:
    ADDF VGV_C 1.0 VGV_C
    JR endif182
  else182_1:
    DATA32 tmp214
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp214
    JR_NEQ32 0 tmp214 alreadylaunched214
    OBJECT_START TF_VIDVIG_0
  alreadylaunched214:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB215:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer216
	DATA8 nos216
	DATA8 busy216
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer216 nos216
	JR_EQ8 0 nos216 motornotbusy216
  motorwaiting216:
	OUTPUT_TEST layer216 nos216 busy216
	JR_EQ8 busy216 0 motornotbusy216
	SLEEP
	JR motorwaiting216
  motornotbusy216:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB220:
  while221:
    JR_LTEQF VGV_S3 10.0 and223
    JR_GTF VGV_S2 10.0 or222
  and223:
    JR_GTEQF VGV_S3 10.0 endwhile221
    JR_GTEQF VGV_S2 10.0 endwhile221
  or222:
  whilebody221:
    WRITE32 ENDSUB_F_A3_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB225:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB226:
    JR_LTEQF VGV_S3 10.0 and227
    JR_GTF VGV_S2 10.0 whilebody221
  and227:
    JR_GTEQF VGV_S3 10.0 and228
    JR_LTF VGV_S2 10.0 whilebody221
  and228:
  endwhile221:
    CALL MOTOR.STOP 'bc' 'true'
  else182_2:
  endif182:
  else77_2:
  endif77:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB230:
    JR_LTF VGV_H 33.0 or232
    JR_LTEQF VGV_H 100.0 else231_1
  or232:
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif231
  else231_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else231_2:
  endif231:
    JR_NEQF VGV_COLOR2 4.0 else235_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB237:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif235
  else235_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB239:
    CALL MOTOR.RESETCOUNT 'bc'
  while241:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 210.0 endwhile241
  whilebody241:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB243:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 210.0 whilebody241
  endwhile241:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds248
	MOVEF_32 100.0 milliseconds248
	DATA32 timer248
	TIMER_WAIT milliseconds248 timer248
	TIMER_READY timer248
    CALL MOTOR.SCHEDULESYNC 'BC' -30.0 0.0 50.0 'true'

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    CALL MOTOR.SCHEDULESYNC 'BC' 0.0 -30.0 50.0 'true'

	DATA8 layer250
	DATA8 nos250
	DATA8 busy250
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer250 nos250
	JR_EQ8 0 nos250 motornotbusy250
  motorwaiting250:
	OUTPUT_TEST layer250 nos250 busy250
	JR_EQ8 busy250 0 motornotbusy250
	SLEEP
	JR motorwaiting250
  motornotbusy250:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB251:
    MOVEF_F 1230.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf252
    DATA8 flag252
    DIVF 360.0 VGV_L tmpf252
    CP_EQF 0.0 VGV_L flag252
    SELECTF flag252 0.0 tmpf252 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while256:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf260
    DATA8 flag260
    DIVF F.1 2.0 tmpf260
    CP_EQF 0.0 2.0 flag260
    SELECTF flag260 0.0 tmpf260 F.0

    JR_GTEQF F.0 VGV_X endwhile256
  whilebody256:
    WRITE32 ENDSUB_F_A3_0:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB261:
    WRITE32 ENDSUB_F_A2_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB262:
    JR_GTEQF VGV_SPEED 60.0 else263_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else263_1:
  endif263:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB265:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf269
    DATA8 flag269
    DIVF F.1 2.0 tmpf269
    CP_EQF 0.0 2.0 flag269
    SELECTF flag269 0.0 tmpf269 F.0

    JR_LTF F.0 VGV_X whilebody256
  endwhile256:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB271:
    JR_NEQF VGV_C 1.0 else272_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB273:
    JR endif272
  else272_1:
    JR_NEQF VGV_C 0.0 else272_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB274:
  else272_2:
  endif272:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB275:
    WRITE32 ENDSUB_F_A3_0:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB276:
    WRITE32 ENDSUB_F_A2_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB277:
  while278:
    JR_LTEQF VGV_S3 10.0 and280
    JR_GTF VGV_S2 10.0 or279
  and280:
    JR_GTEQF VGV_S3 10.0 endwhile278
    JR_GTEQF VGV_S2 10.0 endwhile278
  or279:
  whilebody278:
    WRITE32 ENDSUB_F_A3_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB281:
    WRITE32 ENDSUB_F_A2_0:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB282:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB283:
    JR_LTEQF VGV_S3 10.0 and284
    JR_GTF VGV_S2 10.0 whilebody278
  and284:
    JR_GTEQF VGV_S3 10.0 and285
    JR_LTF VGV_S2 10.0 whilebody278
  and285:
  endwhile278:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer287
	DATA8 nos287
	DATA8 busy287
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer287 nos287
	JR_EQ8 0 nos287 motornotbusy287
  motorwaiting287:
	OUTPUT_TEST layer287 nos287 busy287
	JR_EQ8 busy287 0 motornotbusy287
	SLEEP
	JR motorwaiting287
  motornotbusy287:
    WRITE32 ENDSUB_F_A3_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB288:
    WRITE32 ENDSUB_F_A2_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB289:
  while290:
    JR_LTEQF VGV_S3 10.0 and292
    JR_GTF VGV_S2 10.0 or291
  and292:
    JR_GTEQF VGV_S3 10.0 endwhile290
    JR_GTEQF VGV_S2 10.0 endwhile290
  or291:
  whilebody290:
    WRITE32 ENDSUB_F_A3_0:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB293:
    WRITE32 ENDSUB_F_A2_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB294:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB295:
    JR_LTEQF VGV_S3 10.0 and296
    JR_GTF VGV_S2 10.0 whilebody290
  and296:
    JR_GTEQF VGV_S3 10.0 and297
    JR_LTF VGV_S2 10.0 whilebody290
  and297:
  endwhile290:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB299:
    CALL MOTOR.RESETCOUNT 'bc'
  while301:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf305
    DATA8 flag305
    DIVF F.1 2.0 tmpf305
    CP_EQF 0.0 2.0 flag305
    SELECTF flag305 0.0 tmpf305 F.0

    JR_GTEQF F.0 160.0 endwhile301
  whilebody301:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB306:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf310
    DATA8 flag310
    DIVF F.1 2.0 tmpf310
    CP_EQF 0.0 2.0 flag310
    SELECTF flag310 0.0 tmpf310 F.0

    JR_LTF F.0 160.0 whilebody301
  endwhile301:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer312
	DATA8 nos312
	DATA8 busy312
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer312 nos312
	JR_EQ8 0 nos312 motornotbusy312
  motorwaiting312:
	OUTPUT_TEST layer312 nos312 busy312
	JR_EQ8 busy312 0 motornotbusy312
	SLEEP
	JR motorwaiting312
  motornotbusy312:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds314
	MOVEF_32 500.0 milliseconds314
	DATA32 timer314
	TIMER_WAIT milliseconds314 timer314
	TIMER_READY timer314
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    DATA32 tmp317
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp317
    JR_NEQ32 0 tmp317 alreadylaunched317
    OBJECT_START TF_VIDVIG_0
  alreadylaunched317:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB318:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB319:
    ADDF VGV_C 1.0 VGV_C
  else235_2:
  endif235:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB321:
    JR_GTF VGV_H 120.0 or323
    JR_LTF VGV_H 0.0 else322_1
    JR_GTF VGV_H 30.0 else322_1
  or323:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif322
  else322_1:
    JR_GTEQF VGV_H 120.0 else322_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif322
  else322_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else322_3:
  endif322:
    JR_NEQF VGV_COLOR3 4.0 else327_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer328
	DATA8 nos328
	DATA8 busy328
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer328 nos328
	JR_EQ8 0 nos328 motornotbusy328
  motorwaiting328:
	OUTPUT_TEST layer328 nos328 busy328
	JR_EQ8 busy328 0 motornotbusy328
	SLEEP
	JR motorwaiting328
  motornotbusy328:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB329:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else331_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB332:
    CALL MOTOR.RESETCOUNT 'bc'
  while334:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf338
    DATA8 flag338
    DIVF F.1 2.0 tmpf338
    CP_EQF 0.0 2.0 flag338
    SELECTF flag338 0.0 tmpf338 F.0

    JR_GTEQF F.0 210.0 endwhile334
  whilebody334:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB339:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf343
    DATA8 flag343
    DIVF F.1 2.0 tmpf343
    CP_EQF 0.0 2.0 flag343
    SELECTF flag343 0.0 tmpf343 F.0

    JR_LTF F.0 210.0 whilebody334
  endwhile334:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer345
	DATA8 nos345
	DATA8 busy345
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer345 nos345
	JR_EQ8 0 nos345 motornotbusy345
  motorwaiting345:
	OUTPUT_TEST layer345 nos345 busy345
	JR_EQ8 busy345 0 motornotbusy345
	SLEEP
	JR motorwaiting345
  motornotbusy345:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds347
	MOVEF_32 500.0 milliseconds347
	DATA32 timer347
	TIMER_WAIT milliseconds347 timer347
	TIMER_READY timer347
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB349:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf350
    DATA8 flag350
    DIVF 360.0 VGV_L tmpf350
    CP_EQF 0.0 VGV_L flag350
    SELECTF flag350 0.0 tmpf350 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while353:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf357
    DATA8 flag357
    DIVF F.1 2.0 tmpf357
    CP_EQF 0.0 2.0 flag357
    SELECTF flag357 0.0 tmpf357 F.0

    JR_GTEQF F.0 VGV_X endwhile353
  whilebody353:
    WRITE32 ENDSUB_F_A3_0:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB358:
    WRITE32 ENDSUB_F_A2_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB359:
    JR_GTEQF VGV_SPEED 80.0 else360_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else360_1:
  endif360:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB362:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf366
    DATA8 flag366
    DIVF F.1 2.0 tmpf366
    CP_EQF 0.0 2.0 flag366
    SELECTF flag366 0.0 tmpf366 F.0

    JR_LTF F.0 VGV_X whilebody353
  endwhile353:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB368:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB369:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB370:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB372:
    CALL MOTOR.RESETCOUNT 'bc'
  while374:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf378
    DATA8 flag378
    DIVF F.1 2.0 tmpf378
    CP_EQF 0.0 2.0 flag378
    SELECTF flag378 0.0 tmpf378 F.0

    JR_GTEQF F.0 210.0 endwhile374
  whilebody374:
    MOVEF_F 40.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB379:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf383
    DATA8 flag383
    DIVF F.1 2.0 tmpf383
    CP_EQF 0.0 2.0 flag383
    SELECTF flag383 0.0 tmpf383 F.0

    JR_LTF F.0 210.0 whilebody374
  endwhile374:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 160.0 'true'

	DATA8 layer385
	DATA8 nos385
	DATA8 busy385
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer385 nos385
	JR_EQ8 0 nos385 motornotbusy385
  motorwaiting385:
	OUTPUT_TEST layer385 nos385 busy385
	JR_EQ8 busy385 0 motornotbusy385
	SLEEP
	JR motorwaiting385
  motornotbusy385:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds387
	MOVEF_32 500.0 milliseconds387
	DATA32 timer387
	TIMER_WAIT milliseconds387 timer387
	TIMER_READY timer387
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB389:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB390:
    WRITE32 ENDSUB_F_PR_0:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB391:
    CALL MOTOR.RESETCOUNT 'bc'
  while393:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf397
    DATA8 flag397
    DIVF F.1 2.0 tmpf397
    CP_EQF 0.0 2.0 flag397
    SELECTF flag397 0.0 tmpf397 F.0

    JR_GTEQF F.0 400.0 endwhile393
  whilebody393:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB398:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf402
    DATA8 flag402
    DIVF F.1 2.0 tmpf402
    CP_EQF 0.0 2.0 flag402
    SELECTF flag402 0.0 tmpf402 F.0

    JR_LTF F.0 400.0 whilebody393
  endwhile393:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds405
	MOVEF_32 500.0 milliseconds405
	DATA32 timer405
	TIMER_WAIT milliseconds405 timer405
	TIMER_READY timer405
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB407:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf408
    DATA8 flag408
    DIVF 360.0 VGV_L tmpf408
    CP_EQF 0.0 VGV_L flag408
    SELECTF flag408 0.0 tmpf408 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while411:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf415
    DATA8 flag415
    DIVF F.1 2.0 tmpf415
    CP_EQF 0.0 2.0 flag415
    SELECTF flag415 0.0 tmpf415 F.0

    JR_GTEQF F.0 VGV_X endwhile411
  whilebody411:
    WRITE32 ENDSUB_F_A3_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB416:
    WRITE32 ENDSUB_F_A2_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB417:
    JR_GTEQF VGV_SPEED 80.0 else418_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else418_1:
  endif418:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB420:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf424
    DATA8 flag424
    DIVF F.1 2.0 tmpf424
    CP_EQF 0.0 2.0 flag424
    SELECTF flag424 0.0 tmpf424 F.0

    JR_LTF F.0 VGV_X whilebody411
  endwhile411:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB426:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB427:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB428:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB430:
    CALL MOTOR.RESETCOUNT 'bc'
  while432:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf436
    DATA8 flag436
    DIVF F.1 2.0 tmpf436
    CP_EQF 0.0 2.0 flag436
    SELECTF flag436 0.0 tmpf436 F.0

    JR_GTEQF F.0 160.0 endwhile432
  whilebody432:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB437:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf441
    DATA8 flag441
    DIVF F.1 2.0 tmpf441
    CP_EQF 0.0 2.0 flag441
    SELECTF flag441 0.0 tmpf441 F.0

    JR_LTF F.0 160.0 whilebody432
  endwhile432:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer443
	DATA8 nos443
	DATA8 busy443
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer443 nos443
	JR_EQ8 0 nos443 motornotbusy443
  motorwaiting443:
	OUTPUT_TEST layer443 nos443 busy443
	JR_EQ8 busy443 0 motornotbusy443
	SLEEP
	JR motorwaiting443
  motornotbusy443:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds445
	MOVEF_32 500.0 milliseconds445
	DATA32 timer445
	TIMER_WAIT milliseconds445 timer445
	TIMER_READY timer445
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB447:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB448:
    WRITE32 ENDSUB_F_PR_0:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB449:
    CALL MOTOR.RESETCOUNT 'bc'
  while451:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf455
    DATA8 flag455
    DIVF F.1 2.0 tmpf455
    CP_EQF 0.0 2.0 flag455
    SELECTF flag455 0.0 tmpf455 F.0

    JR_GTEQF F.0 80.0 endwhile451
  whilebody451:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB456:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf460
    DATA8 flag460
    DIVF F.1 2.0 tmpf460
    CP_EQF 0.0 2.0 flag460
    SELECTF flag460 0.0 tmpf460 F.0

    JR_LTF F.0 80.0 whilebody451
  endwhile451:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer462
	DATA8 nos462
	DATA8 busy462
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer462 nos462
	JR_EQ8 0 nos462 motornotbusy462
  motorwaiting462:
	OUTPUT_TEST layer462 nos462 busy462
	JR_EQ8 busy462 0 motornotbusy462
	SLEEP
	JR motorwaiting462
  motornotbusy462:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds464
	MOVEF_32 500.0 milliseconds464
	DATA32 timer464
	TIMER_WAIT milliseconds464 timer464
	TIMER_READY timer464
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB466:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf467
    DATA8 flag467
    DIVF 360.0 VGV_L tmpf467
    CP_EQF 0.0 VGV_L flag467
    SELECTF flag467 0.0 tmpf467 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while470:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf474
    DATA8 flag474
    DIVF F.1 2.0 tmpf474
    CP_EQF 0.0 2.0 flag474
    SELECTF flag474 0.0 tmpf474 F.0

    JR_GTEQF F.0 VGV_X endwhile470
  whilebody470:
    WRITE32 ENDSUB_F_A3_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB475:
    WRITE32 ENDSUB_F_A2_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB476:
    JR_GTEQF VGV_SPEED 80.0 else477_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else477_1:
  endif477:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB479:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf483
    DATA8 flag483
    DIVF F.1 2.0 tmpf483
    CP_EQF 0.0 2.0 flag483
    SELECTF flag483 0.0 tmpf483 F.0

    JR_LTF F.0 VGV_X whilebody470
  endwhile470:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB485:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB486:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB487:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB489:
    CALL MOTOR.RESETCOUNT 'bc'
  while491:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf495
    DATA8 flag495
    DIVF F.1 2.0 tmpf495
    CP_EQF 0.0 2.0 flag495
    SELECTF flag495 0.0 tmpf495 F.0

    JR_GTEQF F.0 100.0 endwhile491
  whilebody491:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB496:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf500
    DATA8 flag500
    DIVF F.1 2.0 tmpf500
    CP_EQF 0.0 2.0 flag500
    SELECTF flag500 0.0 tmpf500 F.0

    JR_LTF F.0 100.0 whilebody491
  endwhile491:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 70.0 'true'

	DATA8 layer502
	DATA8 nos502
	DATA8 busy502
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer502 nos502
	JR_EQ8 0 nos502 motornotbusy502
  motorwaiting502:
	OUTPUT_TEST layer502 nos502 busy502
	JR_EQ8 busy502 0 motornotbusy502
	SLEEP
	JR motorwaiting502
  motornotbusy502:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds504
	MOVEF_32 500.0 milliseconds504
	DATA32 timer504
	TIMER_WAIT milliseconds504 timer504
	TIMER_READY timer504
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB506:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB507:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB508:
  else331_1:
  endif331:
  else327_1:
  endif327:
    JR_NEQF VGV_COLOR3 5.0 else509_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB510:
    CALL MOTOR.RESETCOUNT 'bc'
  while512:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf516
    DATA8 flag516
    DIVF F.1 2.0 tmpf516
    CP_EQF 0.0 2.0 flag516
    SELECTF flag516 0.0 tmpf516 F.0

    JR_GTEQF F.0 180.0 endwhile512
  whilebody512:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB517:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf521
    DATA8 flag521
    DIVF F.1 2.0 tmpf521
    CP_EQF 0.0 2.0 flag521
    SELECTF flag521 0.0 tmpf521 F.0

    JR_LTF F.0 180.0 whilebody512
  endwhile512:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer523
	DATA8 nos523
	DATA8 busy523
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer523 nos523
	JR_EQ8 0 nos523 motornotbusy523
  motorwaiting523:
	OUTPUT_TEST layer523 nos523 busy523
	JR_EQ8 busy523 0 motornotbusy523
	SLEEP
	JR motorwaiting523
  motornotbusy523:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds525
	MOVEF_32 500.0 milliseconds525
	DATA32 timer525
	TIMER_WAIT milliseconds525 timer525
	TIMER_READY timer525
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB527:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf528
    DATA8 flag528
    DIVF 360.0 VGV_L tmpf528
    CP_EQF 0.0 VGV_L flag528
    SELECTF flag528 0.0 tmpf528 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while531:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf535
    DATA8 flag535
    DIVF F.1 2.0 tmpf535
    CP_EQF 0.0 2.0 flag535
    SELECTF flag535 0.0 tmpf535 F.0

    JR_GTEQF F.0 VGV_X endwhile531
  whilebody531:
    WRITE32 ENDSUB_F_A3_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB536:
    WRITE32 ENDSUB_F_A2_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB537:
    JR_GTEQF VGV_SPEED 80.0 else538_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else538_1:
  endif538:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB540:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf544
    DATA8 flag544
    DIVF F.1 2.0 tmpf544
    CP_EQF 0.0 2.0 flag544
    SELECTF flag544 0.0 tmpf544 F.0

    JR_LTF F.0 VGV_X whilebody531
  endwhile531:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB546:
    JR_NEQF VGV_C 1.0 else547_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB548:
    JR endif547
  else547_1:
    JR_NEQF VGV_C 0.0 else547_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB549:
    JR endif547
  else547_2:
    JR_NEQF VGV_C 2.0 else547_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB550:
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB551:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds553
	MOVEF_32 100.0 milliseconds553
	DATA32 timer553
	TIMER_WAIT milliseconds553 timer553
	TIMER_READY timer553
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer554
	DATA8 nos554
	DATA8 busy554
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer554 nos554
	JR_EQ8 0 nos554 motornotbusy554
  motorwaiting554:
	OUTPUT_TEST layer554 nos554 busy554
	JR_EQ8 busy554 0 motornotbusy554
	SLEEP
	JR motorwaiting554
  motornotbusy554:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer556
	DATA8 nos556
	DATA8 busy556
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer556 nos556
	JR_EQ8 0 nos556 motornotbusy556
  motorwaiting556:
	OUTPUT_TEST layer556 nos556 busy556
	JR_EQ8 busy556 0 motornotbusy556
	SLEEP
	JR motorwaiting556
  motornotbusy556:
    WRITE32 ENDSUB_F_A3_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB557:
    WRITE32 ENDSUB_F_A2_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB558:
  while559:
    JR_LTEQF VGV_S2 15.0 endwhile559
  whilebody559:
    WRITE32 ENDSUB_F_A3_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB560:
    WRITE32 ENDSUB_F_A2_0:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB561:
    CALL MOTOR.STARTSYNC 'bc' -15.0 30.0
    JR_GTF VGV_S2 15.0 whilebody559
  endwhile559:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB564:
    WRITE32 ENDSUB_F_A2_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB565:
  while566:
    JR_GTEQF VGV_S2 55.0 endwhile566
  whilebody566:
    WRITE32 ENDSUB_F_A3_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB567:
    WRITE32 ENDSUB_F_A2_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB568:
    CALL MOTOR.STARTSYNC 'bc' -15.0 30.0
    JR_LTF VGV_S2 55.0 whilebody566
  endwhile566:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while572:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf576
    DATA8 flag576
    DIVF F.1 2.0 tmpf576
    CP_EQF 0.0 2.0 flag576
    SELECTF flag576 0.0 tmpf576 F.0

    JR_GTEQF F.0 110.0 endwhile572
  whilebody572:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB577:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf581
    DATA8 flag581
    DIVF F.1 2.0 tmpf581
    CP_EQF 0.0 2.0 flag581
    SELECTF flag581 0.0 tmpf581 F.0

    JR_LTF F.0 110.0 whilebody572
  endwhile572:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 190.0 'true'

	DATA8 layer582
	DATA8 nos582
	DATA8 busy582
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer582 nos582
	JR_EQ8 0 nos582 motornotbusy582
  motorwaiting582:
	OUTPUT_TEST layer582 nos582 busy582
	JR_EQ8 busy582 0 motornotbusy582
	SLEEP
	JR motorwaiting582
  motornotbusy582:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds585
	MOVEF_32 500.0 milliseconds585
	DATA32 timer585
	TIMER_WAIT milliseconds585 timer585
	TIMER_READY timer585
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB587:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB588:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB590:
  else547_3:
  endif547:
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB591:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer593
	DATA8 nos593
	DATA8 busy593
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer593 nos593
	JR_EQ8 0 nos593 motornotbusy593
  motorwaiting593:
	OUTPUT_TEST layer593 nos593 busy593
	JR_EQ8 busy593 0 motornotbusy593
	SLEEP
	JR motorwaiting593
  motornotbusy593:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer595
	DATA8 nos595
	DATA8 busy595
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer595 nos595
	JR_EQ8 0 nos595 motornotbusy595
  motorwaiting595:
	OUTPUT_TEST layer595 nos595 busy595
	JR_EQ8 busy595 0 motornotbusy595
	SLEEP
	JR motorwaiting595
  motornotbusy595:
    WRITE32 ENDSUB_F_A3_0:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB596:
    WRITE32 ENDSUB_F_A2_0:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB597:
  while598:
    JR_LTEQF VGV_S2 15.0 endwhile598
  whilebody598:
    WRITE32 ENDSUB_F_A3_0:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB599:
    WRITE32 ENDSUB_F_A2_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB600:
    CALL MOTOR.STARTSYNC 'bc' -15.0 30.0
    JR_GTF VGV_S2 15.0 whilebody598
  endwhile598:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB603:
    WRITE32 ENDSUB_F_A2_0:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB604:
  while605:
    JR_GTEQF VGV_S2 55.0 endwhile605
  whilebody605:
    WRITE32 ENDSUB_F_A3_0:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB606:
    WRITE32 ENDSUB_F_A2_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB607:
    CALL MOTOR.STARTSYNC 'bc' -15.0 30.0
    JR_LTF VGV_S2 55.0 whilebody605
  endwhile605:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while611:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf615
    DATA8 flag615
    DIVF F.1 2.0 tmpf615
    CP_EQF 0.0 2.0 flag615
    SELECTF flag615 0.0 tmpf615 F.0

    JR_GTEQF F.0 10.0 endwhile611
  whilebody611:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB616:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf620
    DATA8 flag620
    DIVF F.1 2.0 tmpf620
    CP_EQF 0.0 2.0 flag620
    SELECTF flag620 0.0 tmpf620 F.0

    JR_LTF F.0 10.0 whilebody611
  endwhile611:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer621
	DATA8 nos621
	DATA8 busy621
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer621 nos621
	JR_EQ8 0 nos621 motornotbusy621
  motorwaiting621:
	OUTPUT_TEST layer621 nos621 busy621
	JR_EQ8 busy621 0 motornotbusy621
	SLEEP
	JR motorwaiting621
  motornotbusy621:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds624
	MOVEF_32 500.0 milliseconds624
	DATA32 timer624
	TIMER_WAIT milliseconds624 timer624
	TIMER_READY timer624
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB626:
    DATA32 tmp627
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp627
    JR_NEQ32 0 tmp627 alreadylaunched627
    OBJECT_START TF_VIDVIG_0
  alreadylaunched627:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB628:
    ADDF VGV_C 1.0 VGV_C
  else509_1:
  endif509:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB630:
    JR_GTEQF VGV_H 25.0 else631_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif631
  else631_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else631_2:
  endif631:
    JR_NEQF VGV_COLOR4 4.0 else634_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer635
	DATA8 nos635
	DATA8 busy635
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer635 nos635
	JR_EQ8 0 nos635 motornotbusy635
  motorwaiting635:
	OUTPUT_TEST layer635 nos635 busy635
	JR_EQ8 busy635 0 motornotbusy635
	SLEEP
	JR motorwaiting635
  motornotbusy635:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB636:
    JR_NEQF VGV_C 1.0 else637_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB638:
    CALL MOTOR.RESETCOUNT 'bc'
  while640:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf644
    DATA8 flag644
    DIVF F.1 2.0 tmpf644
    CP_EQF 0.0 2.0 flag644
    SELECTF flag644 0.0 tmpf644 F.0

    JR_GTEQF F.0 210.0 endwhile640
  whilebody640:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB645:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf649
    DATA8 flag649
    DIVF F.1 2.0 tmpf649
    CP_EQF 0.0 2.0 flag649
    SELECTF flag649 0.0 tmpf649 F.0

    JR_LTF F.0 210.0 whilebody640
  endwhile640:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer651
	DATA8 nos651
	DATA8 busy651
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer651 nos651
	JR_EQ8 0 nos651 motornotbusy651
  motorwaiting651:
	OUTPUT_TEST layer651 nos651 busy651
	JR_EQ8 busy651 0 motornotbusy651
	SLEEP
	JR motorwaiting651
  motornotbusy651:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds653
	MOVEF_32 500.0 milliseconds653
	DATA32 timer653
	TIMER_WAIT milliseconds653 timer653
	TIMER_READY timer653
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB655:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf656
    DATA8 flag656
    DIVF 360.0 VGV_L tmpf656
    CP_EQF 0.0 VGV_L flag656
    SELECTF flag656 0.0 tmpf656 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while659:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf663
    DATA8 flag663
    DIVF F.1 2.0 tmpf663
    CP_EQF 0.0 2.0 flag663
    SELECTF flag663 0.0 tmpf663 F.0

    JR_GTEQF F.0 VGV_X endwhile659
  whilebody659:
    WRITE32 ENDSUB_F_A3_0:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB664:
    WRITE32 ENDSUB_F_A2_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB665:
    JR_GTEQF VGV_SPEED 80.0 else666_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else666_1:
  endif666:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB668:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf672
    DATA8 flag672
    DIVF F.1 2.0 tmpf672
    CP_EQF 0.0 2.0 flag672
    SELECTF flag672 0.0 tmpf672 F.0

    JR_LTF F.0 VGV_X whilebody659
  endwhile659:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB674:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB675:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB676:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer678
	DATA8 nos678
	DATA8 busy678
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer678 nos678
	JR_EQ8 0 nos678 motornotbusy678
  motorwaiting678:
	OUTPUT_TEST layer678 nos678 busy678
	JR_EQ8 busy678 0 motornotbusy678
	SLEEP
	JR motorwaiting678
  motornotbusy678:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB679:
    WRITE32 ENDSUB_F_PR_0:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB680:
    CALL MOTOR.RESETCOUNT 'bc'
  while682:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf686
    DATA8 flag686
    DIVF F.1 2.0 tmpf686
    CP_EQF 0.0 2.0 flag686
    SELECTF flag686 0.0 tmpf686 F.0

    JR_GTEQF F.0 110.0 endwhile682
  whilebody682:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB687:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf691
    DATA8 flag691
    DIVF F.1 2.0 tmpf691
    CP_EQF 0.0 2.0 flag691
    SELECTF flag691 0.0 tmpf691 F.0

    JR_LTF F.0 110.0 whilebody682
  endwhile682:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer693
	DATA8 nos693
	DATA8 busy693
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer693 nos693
	JR_EQ8 0 nos693 motornotbusy693
  motorwaiting693:
	OUTPUT_TEST layer693 nos693 busy693
	JR_EQ8 busy693 0 motornotbusy693
	SLEEP
	JR motorwaiting693
  motornotbusy693:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds695
	MOVEF_32 500.0 milliseconds695
	DATA32 timer695
	TIMER_WAIT milliseconds695 timer695
	TIMER_READY timer695
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB697:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB698:
    WRITE32 ENDSUB_F_PR_0:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB699:
    CALL MOTOR.RESETCOUNT 'bc'
  while701:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf705
    DATA8 flag705
    DIVF F.1 2.0 tmpf705
    CP_EQF 0.0 2.0 flag705
    SELECTF flag705 0.0 tmpf705 F.0

    JR_GTEQF F.0 90.0 endwhile701
  whilebody701:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB706:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf710
    DATA8 flag710
    DIVF F.1 2.0 tmpf710
    CP_EQF 0.0 2.0 flag710
    SELECTF flag710 0.0 tmpf710 F.0

    JR_LTF F.0 90.0 whilebody701
  endwhile701:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer712
	DATA8 nos712
	DATA8 busy712
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer712 nos712
	JR_EQ8 0 nos712 motornotbusy712
  motorwaiting712:
	OUTPUT_TEST layer712 nos712 busy712
	JR_EQ8 busy712 0 motornotbusy712
	SLEEP
	JR motorwaiting712
  motornotbusy712:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds714
	MOVEF_32 500.0 milliseconds714
	DATA32 timer714
	TIMER_WAIT milliseconds714 timer714
	TIMER_READY timer714
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB716:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf717
    DATA8 flag717
    DIVF 360.0 VGV_L tmpf717
    CP_EQF 0.0 VGV_L flag717
    SELECTF flag717 0.0 tmpf717 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while720:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf724
    DATA8 flag724
    DIVF F.1 2.0 tmpf724
    CP_EQF 0.0 2.0 flag724
    SELECTF flag724 0.0 tmpf724 F.0

    JR_GTEQF F.0 VGV_X endwhile720
  whilebody720:
    WRITE32 ENDSUB_F_A3_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB725:
    WRITE32 ENDSUB_F_A2_0:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB726:
    JR_GTEQF VGV_SPEED 80.0 else727_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else727_1:
  endif727:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB729:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf733
    DATA8 flag733
    DIVF F.1 2.0 tmpf733
    CP_EQF 0.0 2.0 flag733
    SELECTF flag733 0.0 tmpf733 F.0

    JR_LTF F.0 VGV_X whilebody720
  endwhile720:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB735:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB736:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB737:
    WRITE32 ENDSUB_F_PR_0:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB738:
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while740:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf744
    DATA8 flag744
    DIVF F.1 2.0 tmpf744
    CP_EQF 0.0 2.0 flag744
    SELECTF flag744 0.0 tmpf744 F.0

    JR_GTEQF F.0 110.0 endwhile740
  whilebody740:
    WRITE32 ENDSUB_F_A3_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB745:
    WRITE32 ENDSUB_F_A2_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB746:
    JR_GTEQF VGV_SPEED 80.0 else747_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else747_1:
  endif747:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB749:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf753
    DATA8 flag753
    DIVF F.1 2.0 tmpf753
    CP_EQF 0.0 2.0 flag753
    SELECTF flag753 0.0 tmpf753 F.0

    JR_LTF F.0 110.0 whilebody740
  endwhile740:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer755
	DATA8 nos755
	DATA8 busy755
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer755 nos755
	JR_EQ8 0 nos755 motornotbusy755
  motorwaiting755:
	OUTPUT_TEST layer755 nos755 busy755
	JR_EQ8 busy755 0 motornotbusy755
	SLEEP
	JR motorwaiting755
  motornotbusy755:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds757
	MOVEF_32 500.0 milliseconds757
	DATA32 timer757
	TIMER_WAIT milliseconds757 timer757
	TIMER_READY timer757
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB759:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB760:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB761:
  else637_1:
  endif637:
  else634_1:
  endif634:
    JR_NEQF VGV_COLOR4 5.0 else762_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB763:
    CALL MOTOR.RESETCOUNT 'bc'
  while765:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf769
    DATA8 flag769
    DIVF F.1 2.0 tmpf769
    CP_EQF 0.0 2.0 flag769
    SELECTF flag769 0.0 tmpf769 F.0

    JR_GTEQF F.0 260.0 endwhile765
  whilebody765:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB770:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf774
    DATA8 flag774
    DIVF F.1 2.0 tmpf774
    CP_EQF 0.0 2.0 flag774
    SELECTF flag774 0.0 tmpf774 F.0

    JR_LTF F.0 260.0 whilebody765
  endwhile765:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer776
	DATA8 nos776
	DATA8 busy776
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer776 nos776
	JR_EQ8 0 nos776 motornotbusy776
  motorwaiting776:
	OUTPUT_TEST layer776 nos776 busy776
	JR_EQ8 busy776 0 motornotbusy776
	SLEEP
	JR motorwaiting776
  motornotbusy776:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds778
	MOVEF_32 500.0 milliseconds778
	DATA32 timer778
	TIMER_WAIT milliseconds778 timer778
	TIMER_READY timer778
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB780:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf781
    DATA8 flag781
    DIVF 360.0 VGV_L tmpf781
    CP_EQF 0.0 VGV_L flag781
    SELECTF flag781 0.0 tmpf781 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while784:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf788
    DATA8 flag788
    DIVF F.1 2.0 tmpf788
    CP_EQF 0.0 2.0 flag788
    SELECTF flag788 0.0 tmpf788 F.0

    JR_GTEQF F.0 VGV_X endwhile784
  whilebody784:
    WRITE32 ENDSUB_F_A3_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB789:
    WRITE32 ENDSUB_F_A2_0:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB790:
    JR_GTEQF VGV_SPEED 80.0 else791_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else791_1:
  endif791:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB793:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf797
    DATA8 flag797
    DIVF F.1 2.0 tmpf797
    CP_EQF 0.0 2.0 flag797
    SELECTF flag797 0.0 tmpf797 F.0

    JR_LTF F.0 VGV_X whilebody784
  endwhile784:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB799:
    JR_NEQF VGV_C 1.0 else800_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB801:
    JR endif800
  else800_1:
    JR_NEQF VGV_C 0.0 else800_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB802:
    JR endif800
  else800_2:
    JR_NEQF VGV_C 2.0 else800_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB803:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB804:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB806:
    CALL MOTOR.RESETCOUNT 'bc'
  while808:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf812
    DATA8 flag812
    DIVF F.1 2.0 tmpf812
    CP_EQF 0.0 2.0 flag812
    SELECTF flag812 0.0 tmpf812 F.0

    JR_GTEQF F.0 260.0 endwhile808
  whilebody808:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB813:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf817
    DATA8 flag817
    DIVF F.1 2.0 tmpf817
    CP_EQF 0.0 2.0 flag817
    SELECTF flag817 0.0 tmpf817 F.0

    JR_LTF F.0 260.0 whilebody808
  endwhile808:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer819
	DATA8 nos819
	DATA8 busy819
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer819 nos819
	JR_EQ8 0 nos819 motornotbusy819
  motorwaiting819:
	OUTPUT_TEST layer819 nos819 busy819
	JR_EQ8 busy819 0 motornotbusy819
	SLEEP
	JR motorwaiting819
  motornotbusy819:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds821
	MOVEF_32 500.0 milliseconds821
	DATA32 timer821
	TIMER_WAIT milliseconds821 timer821
	TIMER_READY timer821
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB823:
    CALL MOTOR.RESETCOUNT 'bc'
  while825:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf829
    DATA8 flag829
    DIVF F.1 2.0 tmpf829
    CP_EQF 0.0 2.0 flag829
    SELECTF flag829 0.0 tmpf829 F.0

    JR_GTEQF F.0 100.0 endwhile825
  whilebody825:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB830:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf834
    DATA8 flag834
    DIVF F.1 2.0 tmpf834
    CP_EQF 0.0 2.0 flag834
    SELECTF flag834 0.0 tmpf834 F.0

    JR_LTF F.0 100.0 whilebody825
  endwhile825:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB836:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB838:
  else800_3:
  endif800:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB839:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB841:
    CALL MOTOR.RESETCOUNT 'bc'
  while843:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf847
    DATA8 flag847
    DIVF F.1 2.0 tmpf847
    CP_EQF 0.0 2.0 flag847
    SELECTF flag847 0.0 tmpf847 F.0

    JR_GTEQF F.0 250.0 endwhile843
  whilebody843:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB848:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf852
    DATA8 flag852
    DIVF F.1 2.0 tmpf852
    CP_EQF 0.0 2.0 flag852
    SELECTF flag852 0.0 tmpf852 F.0

    JR_LTF F.0 250.0 whilebody843
  endwhile843:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds855
	MOVEF_32 500.0 milliseconds855
	DATA32 timer855
	TIMER_WAIT milliseconds855 timer855
	TIMER_READY timer855
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp857
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp857
    JR_NEQ32 0 tmp857 alreadylaunched857
    OBJECT_START TF_VIDVIG_0
  alreadylaunched857:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB858:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB859:
    ADDF VGV_C 1.0 VGV_C
  else762_1:
  endif762:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB861 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB861:
    JR_LTF VGV_H 30.0 or863
    JR_LTEQF VGV_H 100.0 else862_1
  or863:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif862
  else862_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else862_2:
  endif862:
    JR_NEQF VGV_COLOR5 4.0 else866_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer867
	DATA8 nos867
	DATA8 busy867
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer867 nos867
	JR_EQ8 0 nos867 motornotbusy867
  motorwaiting867:
	OUTPUT_TEST layer867 nos867 busy867
	JR_EQ8 busy867 0 motornotbusy867
	SLEEP
	JR motorwaiting867
  motornotbusy867:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB868:
    WRITE32 ENDSUB_F_PR_0:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB869:
    CALL MOTOR.RESETCOUNT 'bc'
  while871:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf875
    DATA8 flag875
    DIVF F.1 2.0 tmpf875
    CP_EQF 0.0 2.0 flag875
    SELECTF flag875 0.0 tmpf875 F.0

    JR_GTEQF F.0 270.0 endwhile871
  whilebody871:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB876:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf880
    DATA8 flag880
    DIVF F.1 2.0 tmpf880
    CP_EQF 0.0 2.0 flag880
    SELECTF flag880 0.0 tmpf880 F.0

    JR_LTF F.0 270.0 whilebody871
  endwhile871:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds883
	MOVEF_32 500.0 milliseconds883
	DATA32 timer883
	TIMER_WAIT milliseconds883 timer883
	TIMER_READY timer883
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB885:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB886:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf887
    DATA8 flag887
    DIVF 360.0 VGV_L tmpf887
    CP_EQF 0.0 VGV_L flag887
    SELECTF flag887 0.0 tmpf887 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while890:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf894
    DATA8 flag894
    DIVF F.1 2.0 tmpf894
    CP_EQF 0.0 2.0 flag894
    SELECTF flag894 0.0 tmpf894 F.0

    JR_GTEQF F.0 VGV_X endwhile890
  whilebody890:
    WRITE32 ENDSUB_F_A3_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB895:
    WRITE32 ENDSUB_F_A2_0:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB896:
    JR_GTEQF VGV_SPEED 80.0 else897_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else897_1:
  endif897:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB899:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf903
    DATA8 flag903
    DIVF F.1 2.0 tmpf903
    CP_EQF 0.0 2.0 flag903
    SELECTF flag903 0.0 tmpf903 F.0

    JR_LTF F.0 VGV_X whilebody890
  endwhile890:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB905:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB906:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB907:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer909
	DATA8 nos909
	DATA8 busy909
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer909 nos909
	JR_EQ8 0 nos909 motornotbusy909
  motorwaiting909:
	OUTPUT_TEST layer909 nos909 busy909
	JR_EQ8 busy909 0 motornotbusy909
	SLEEP
	JR motorwaiting909
  motornotbusy909:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer911
	DATA8 nos911
	DATA8 busy911
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer911 nos911
	JR_EQ8 0 nos911 motornotbusy911
  motorwaiting911:
	OUTPUT_TEST layer911 nos911 busy911
	JR_EQ8 busy911 0 motornotbusy911
	SLEEP
	JR motorwaiting911
  motornotbusy911:
    WRITE32 ENDSUB_F_A3_0:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB912:
    WRITE32 ENDSUB_F_A2_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB913:
  while914:
    JR_LTEQF VGV_S3 15.0 endwhile914
  whilebody914:
    WRITE32 ENDSUB_F_A3_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB915:
    WRITE32 ENDSUB_F_A2_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB916:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody914
  endwhile914:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB919:
    WRITE32 ENDSUB_F_A2_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB920:
  while921:
    JR_GTEQF VGV_S3 60.0 endwhile921
  whilebody921:
    WRITE32 ENDSUB_F_A3_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB922:
    WRITE32 ENDSUB_F_A2_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB923:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody921
  endwhile921:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while927:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf931
    DATA8 flag931
    DIVF F.1 2.0 tmpf931
    CP_EQF 0.0 2.0 flag931
    SELECTF flag931 0.0 tmpf931 F.0

    JR_GTEQF F.0 80.0 endwhile927
  whilebody927:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB932:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf936
    DATA8 flag936
    DIVF F.1 2.0 tmpf936
    CP_EQF 0.0 2.0 flag936
    SELECTF flag936 0.0 tmpf936 F.0

    JR_LTF F.0 80.0 whilebody927
  endwhile927:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer937
	DATA8 nos937
	DATA8 busy937
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer937 nos937
	JR_EQ8 0 nos937 motornotbusy937
  motorwaiting937:
	OUTPUT_TEST layer937 nos937 busy937
	JR_EQ8 busy937 0 motornotbusy937
	SLEEP
	JR motorwaiting937
  motornotbusy937:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds940
	MOVEF_32 500.0 milliseconds940
	DATA32 timer940
	TIMER_WAIT milliseconds940 timer940
	TIMER_READY timer940
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB942:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB943:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB944:
  else866_1:
  endif866:
    JR_NEQF VGV_COLOR5 5.0 else945_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB946:
    CALL MOTOR.RESETCOUNT 'bc'
  while948:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf952
    DATA8 flag952
    DIVF F.1 2.0 tmpf952
    CP_EQF 0.0 2.0 flag952
    SELECTF flag952 0.0 tmpf952 F.0

    JR_GTEQF F.0 210.0 endwhile948
  whilebody948:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB953:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf957
    DATA8 flag957
    DIVF F.1 2.0 tmpf957
    CP_EQF 0.0 2.0 flag957
    SELECTF flag957 0.0 tmpf957 F.0

    JR_LTF F.0 210.0 whilebody948
  endwhile948:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer959
	DATA8 nos959
	DATA8 busy959
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer959 nos959
	JR_EQ8 0 nos959 motornotbusy959
  motorwaiting959:
	OUTPUT_TEST layer959 nos959 busy959
	JR_EQ8 busy959 0 motornotbusy959
	SLEEP
	JR motorwaiting959
  motornotbusy959:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds961
	MOVEF_32 500.0 milliseconds961
	DATA32 timer961
	TIMER_WAIT milliseconds961 timer961
	TIMER_READY timer961
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB963:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf964
    DATA8 flag964
    DIVF 360.0 VGV_L tmpf964
    CP_EQF 0.0 VGV_L flag964
    SELECTF flag964 0.0 tmpf964 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while967:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf971
    DATA8 flag971
    DIVF F.1 2.0 tmpf971
    CP_EQF 0.0 2.0 flag971
    SELECTF flag971 0.0 tmpf971 F.0

    JR_GTEQF F.0 VGV_X endwhile967
  whilebody967:
    WRITE32 ENDSUB_F_A3_0:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB972:
    WRITE32 ENDSUB_F_A2_0:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB973:
    JR_GTEQF VGV_SPEED 80.0 else974_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else974_1:
  endif974:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB976:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf980
    DATA8 flag980
    DIVF F.1 2.0 tmpf980
    CP_EQF 0.0 2.0 flag980
    SELECTF flag980 0.0 tmpf980 F.0

    JR_LTF F.0 VGV_X whilebody967
  endwhile967:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB982:
    JR_NEQF VGV_C 1.0 else983_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB984:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB985:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB987:
    CALL MOTOR.RESETCOUNT 'bc'
  while989:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf993
    DATA8 flag993
    DIVF F.1 2.0 tmpf993
    CP_EQF 0.0 2.0 flag993
    SELECTF flag993 0.0 tmpf993 F.0

    JR_GTEQF F.0 160.0 endwhile989
  whilebody989:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB994:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf998
    DATA8 flag998
    DIVF F.1 2.0 tmpf998
    CP_EQF 0.0 2.0 flag998
    SELECTF flag998 0.0 tmpf998 F.0

    JR_LTF F.0 160.0 whilebody989
  endwhile989:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1001
	MOVEF_32 500.0 milliseconds1001
	DATA32 timer1001
	TIMER_WAIT milliseconds1001 timer1001
	TIMER_READY timer1001
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1003 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1003:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1004:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1005:
    CALL MOTOR.RESETCOUNT 'bc'
  while1007:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1011
    DATA8 flag1011
    DIVF F.1 2.0 tmpf1011
    CP_EQF 0.0 2.0 flag1011
    SELECTF flag1011 0.0 tmpf1011 F.0

    JR_GTEQF F.0 80.0 endwhile1007
  whilebody1007:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1012:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1016
    DATA8 flag1016
    DIVF F.1 2.0 tmpf1016
    CP_EQF 0.0 2.0 flag1016
    SELECTF flag1016 0.0 tmpf1016 F.0

    JR_LTF F.0 80.0 whilebody1007
  endwhile1007:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1018
	DATA8 nos1018
	DATA8 busy1018
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1018 nos1018
	JR_EQ8 0 nos1018 motornotbusy1018
  motorwaiting1018:
	OUTPUT_TEST layer1018 nos1018 busy1018
	JR_EQ8 busy1018 0 motornotbusy1018
	SLEEP
	JR motorwaiting1018
  motornotbusy1018:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1020
	MOVEF_32 500.0 milliseconds1020
	DATA32 timer1020
	TIMER_WAIT milliseconds1020 timer1020
	TIMER_READY timer1020
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1022
	DATA8 no1022
	DATA8 mode81022
	
	MOVEF_8 2.0 no1022
	SUB8 no1022 1 no1022
	DIV8 no1022 4 layer1022
	MATH MOD8 no1022 4 no1022

	MOVEF_8 0.0 mode81022
	
	INPUT_DEVICE READY_RAW layer1022 no1022 0 mode81022 0
    DATA8 layer1023
	DATA8 no1023
	DATA8 mode81023
	
	MOVEF_8 3.0 no1023
	SUB8 no1023 1 no1023
	DIV8 no1023 4 layer1023
	MATH MOD8 no1023 4 no1023

	MOVEF_8 0.0 mode81023
	
	INPUT_DEVICE READY_RAW layer1023 no1023 0 mode81023 0
  while1024:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1026
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1025
  and1026:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1029
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1025
  and1029:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1024
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1024
  or1025:
  whilebody1024:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1035
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1024
  and1035:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1038
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1024
  and1038:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1041
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1024
  and1041:
  endwhile1024:
  while1044:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1044
  whilebody1044:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1044
  endwhile1044:
    CALL MOTOR.STOP 'B' 'True'
  while1049:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1049
  whilebody1049:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1049
  endwhile1049:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1054
	DATA8 nos1054
	DATA8 busy1054
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1054 nos1054
	JR_EQ8 0 nos1054 motornotbusy1054
  motorwaiting1054:
	OUTPUT_TEST layer1054 nos1054 busy1054
	JR_EQ8 busy1054 0 motornotbusy1054
	SLEEP
	JR motorwaiting1054
  motornotbusy1054:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1056
	DATA8 nos1056
	DATA8 busy1056
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1056 nos1056
	JR_EQ8 0 nos1056 motornotbusy1056
  motorwaiting1056:
	OUTPUT_TEST layer1056 nos1056 busy1056
	JR_EQ8 busy1056 0 motornotbusy1056
	SLEEP
	JR motorwaiting1056
  motornotbusy1056:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1058:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1059:
  while1060:
    JR_LTEQF VGV_S3 10.0 endwhile1060
  whilebody1060:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1061:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1062:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1060
  endwhile1060:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1064:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1065:
  while1066:
    JR_GTEQF VGV_S3 55.0 endwhile1066
  whilebody1066:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1067 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1067:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1068:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1066
  endwhile1066:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1071
    DATA8 flag1071
    DIVF 360.0 VGV_L tmpf1071
    CP_EQF 0.0 VGV_L flag1071
    SELECTF flag1071 0.0 tmpf1071 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1074:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1078
    DATA8 flag1078
    DIVF F.1 2.0 tmpf1078
    CP_EQF 0.0 2.0 flag1078
    SELECTF flag1078 0.0 tmpf1078 F.0

    JR_GTEQF F.0 VGV_X endwhile1074
  whilebody1074:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1079:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1080:
    JR_GTEQF VGV_SPEED 80.0 else1081_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1081_1:
  endif1081:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1083:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1087
    DATA8 flag1087
    DIVF F.1 2.0 tmpf1087
    CP_EQF 0.0 2.0 flag1087
    SELECTF flag1087 0.0 tmpf1087 F.0

    JR_LTF F.0 VGV_X whilebody1074
  endwhile1074:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1089:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1090:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1091 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1091:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1093 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1093:
    CALL MOTOR.RESETCOUNT 'bc'
  while1095:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1099
    DATA8 flag1099
    DIVF F.1 2.0 tmpf1099
    CP_EQF 0.0 2.0 flag1099
    SELECTF flag1099 0.0 tmpf1099 F.0

    JR_GTEQF F.0 80.0 endwhile1095
  whilebody1095:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1100:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1104
    DATA8 flag1104
    DIVF F.1 2.0 tmpf1104
    CP_EQF 0.0 2.0 flag1104
    SELECTF flag1104 0.0 tmpf1104 F.0

    JR_LTF F.0 80.0 whilebody1095
  endwhile1095:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1106
	DATA8 nos1106
	DATA8 busy1106
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1106 nos1106
	JR_EQ8 0 nos1106 motornotbusy1106
  motorwaiting1106:
	OUTPUT_TEST layer1106 nos1106 busy1106
	JR_EQ8 busy1106 0 motornotbusy1106
	SLEEP
	JR motorwaiting1106
  motornotbusy1106:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1108
	MOVEF_32 500.0 milliseconds1108
	DATA32 timer1108
	TIMER_WAIT milliseconds1108 timer1108
	TIMER_READY timer1108
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1110:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1111:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1112:
    JR endif983
  else983_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1113:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1114:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1116:
    CALL MOTOR.RESETCOUNT 'bc'
  while1118:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1122
    DATA8 flag1122
    DIVF F.1 2.0 tmpf1122
    CP_EQF 0.0 2.0 flag1122
    SELECTF flag1122 0.0 tmpf1122 F.0

    JR_GTEQF F.0 160.0 endwhile1118
  whilebody1118:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1123:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1127
    DATA8 flag1127
    DIVF F.1 2.0 tmpf1127
    CP_EQF 0.0 2.0 flag1127
    SELECTF flag1127 0.0 tmpf1127 F.0

    JR_LTF F.0 160.0 whilebody1118
  endwhile1118:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1129
	DATA8 nos1129
	DATA8 busy1129
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1129 nos1129
	JR_EQ8 0 nos1129 motornotbusy1129
  motorwaiting1129:
	OUTPUT_TEST layer1129 nos1129 busy1129
	JR_EQ8 busy1129 0 motornotbusy1129
	SLEEP
	JR motorwaiting1129
  motornotbusy1129:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1131
	MOVEF_32 500.0 milliseconds1131
	DATA32 timer1131
	TIMER_WAIT milliseconds1131 timer1131
	TIMER_READY timer1131
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1133:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1134:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1135:
  else983_2:
  endif983:
  else945_1:
  endif945:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1137
	DATA8 nos1137
	DATA8 busy1137
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1137 nos1137
	JR_EQ8 0 nos1137 motornotbusy1137
  motorwaiting1137:
	OUTPUT_TEST layer1137 nos1137 busy1137
	JR_EQ8 busy1137 0 motornotbusy1137
	SLEEP
	JR motorwaiting1137
  motornotbusy1137:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1138
	DATA8 nos1138
	DATA8 busy1138
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1138 nos1138
	JR_EQ8 0 nos1138 motornotbusy1138
  motorwaiting1138:
	OUTPUT_TEST layer1138 nos1138 busy1138
	JR_EQ8 busy1138 0 motornotbusy1138
	SLEEP
	JR motorwaiting1138
  motornotbusy1138:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1140
	DATA8 nos1140
	DATA8 busy1140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1140 nos1140
	JR_EQ8 0 nos1140 motornotbusy1140
  motorwaiting1140:
	OUTPUT_TEST layer1140 nos1140 busy1140
	JR_EQ8 busy1140 0 motornotbusy1140
	SLEEP
	JR motorwaiting1140
  motornotbusy1140:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1141
	DATA8 nos1141
	DATA8 busy1141
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1141 nos1141
	JR_EQ8 0 nos1141 motornotbusy1141
  motorwaiting1141:
	OUTPUT_TEST layer1141 nos1141 busy1141
	JR_EQ8 busy1141 0 motornotbusy1141
	SLEEP
	JR motorwaiting1141
  motornotbusy1141:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1143
    DATA8 flag1143
    DIVF 360.0 VGV_L tmpf1143
    CP_EQF 0.0 VGV_L flag1143
    SELECTF flag1143 0.0 tmpf1143 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1146:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1150
    DATA8 flag1150
    DIVF F.1 2.0 tmpf1150
    CP_EQF 0.0 2.0 flag1150
    SELECTF flag1150 0.0 tmpf1150 F.0

    JR_GTEQF F.0 VGV_X endwhile1146
  whilebody1146:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1151:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1152:
    JR_GTEQF VGV_SPEED 80.0 else1153_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1153_1:
  endif1153:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1155:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1159
    DATA8 flag1159
    DIVF F.1 2.0 tmpf1159
    CP_EQF 0.0 2.0 flag1159
    SELECTF flag1159 0.0 tmpf1159 F.0

    JR_LTF F.0 VGV_X whilebody1146
  endwhile1146:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1161:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1163
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1163
    JR_NEQ32 0 tmp1163 alreadylaunched1163
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1163:
ENDTHREAD:
    RETURN
SUB_F_FINISH_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 143.0 'true'

	DATA8 layer1164
	DATA8 nos1164
	DATA8 busy1164
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1164 nos1164
	JR_EQ8 0 nos1164 motornotbusy1164
  motorwaiting1164:
	OUTPUT_TEST layer1164 nos1164 busy1164
	JR_EQ8 busy1164 0 motornotbusy1164
	SLEEP
	JR motorwaiting1164
  motornotbusy1164:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 143.0 'true'

	DATA8 layer1165
	DATA8 nos1165
	DATA8 busy1165
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1165 nos1165
	JR_EQ8 0 nos1165 motornotbusy1165
  motorwaiting1165:
	OUTPUT_TEST layer1165 nos1165 busy1165
	JR_EQ8 busy1165 0 motornotbusy1165
	SLEEP
	JR motorwaiting1165
  motornotbusy1165:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1166
	DATA8 nos1166
	DATA8 busy1166
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1166 nos1166
	JR_EQ8 0 nos1166 motornotbusy1166
  motorwaiting1166:
	OUTPUT_TEST layer1166 nos1166 busy1166
	JR_EQ8 busy1166 0 motornotbusy1166
	SLEEP
	JR motorwaiting1166
  motornotbusy1166:
    PROGRAM_STOP -1
RETSUB_F_FINISH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_0:
SUB_F_SB2_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1168:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1169:
  while1170:
    JR_LTEQF VGV_S3 10.0 and1172
    JR_GTF VGV_S2 10.0 or1171
  and1172:
    JR_GTEQF VGV_S3 10.0 endwhile1170
    JR_GTEQF VGV_S2 10.0 endwhile1170
  or1171:
  whilebody1170:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1173:
    JR_LTEQF VGV_S3 10.0 and1174
    JR_GTF VGV_S2 10.0 whilebody1170
  and1174:
    JR_GTEQF VGV_S3 10.0 and1175
    JR_LTF VGV_S2 10.0 whilebody1170
  and1175:
  endwhile1170:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1177
	DATA8 nos1177
	DATA8 busy1177
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1177 nos1177
	JR_EQ8 0 nos1177 motornotbusy1177
  motorwaiting1177:
	OUTPUT_TEST layer1177 nos1177 busy1177
	JR_EQ8 busy1177 0 motornotbusy1177
	SLEEP
	JR motorwaiting1177
  motornotbusy1177:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1178
	DATA8 nos1178
	DATA8 busy1178
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1178 nos1178
	JR_EQ8 0 nos1178 motornotbusy1178
  motorwaiting1178:
	OUTPUT_TEST layer1178 nos1178 busy1178
	JR_EQ8 busy1178 0 motornotbusy1178
	SLEEP
	JR motorwaiting1178
  motornotbusy1178:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer1179
	DATA8 nos1179
	DATA8 busy1179
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1179 nos1179
	JR_EQ8 0 nos1179 motornotbusy1179
  motorwaiting1179:
	OUTPUT_TEST layer1179 nos1179 busy1179
	JR_EQ8 busy1179 0 motornotbusy1179
	SLEEP
	JR motorwaiting1179
  motornotbusy1179:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1180:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1181:
  while1182:
    JR_LTEQF VGV_S3 10.0 endwhile1182
  whilebody1182:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1183:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1184:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S3 10.0 whilebody1182
  endwhile1182:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1187:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1188:
  while1189:
    JR_GTEQF VGV_S3 50.0 endwhile1189
  whilebody1189:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1190:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1191:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 50.0 whilebody1189
  endwhile1189:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1194
	DATA8 nos1194
	DATA8 busy1194
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1194 nos1194
	JR_EQ8 0 nos1194 motornotbusy1194
  motorwaiting1194:
	OUTPUT_TEST layer1194 nos1194 busy1194
	JR_EQ8 busy1194 0 motornotbusy1194
	SLEEP
	JR motorwaiting1194
  motornotbusy1194:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1195:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1196:
  while1197:
    JR_LTEQF VGV_S3 50.0 endwhile1197
  whilebody1197:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1198:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1199:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S3 50.0 whilebody1197
  endwhile1197:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1202:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1203
    DATA8 flag1203
    DIVF 360.0 VGV_L tmpf1203
    CP_EQF 0.0 VGV_L flag1203
    SELECTF flag1203 0.0 tmpf1203 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1206:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1210
    DATA8 flag1210
    DIVF F.1 2.0 tmpf1210
    CP_EQF 0.0 2.0 flag1210
    SELECTF flag1210 0.0 tmpf1210 F.0

    JR_GTEQF F.0 VGV_X endwhile1206
  whilebody1206:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1211:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1212:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1213:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1217
    DATA8 flag1217
    DIVF F.1 2.0 tmpf1217
    CP_EQF 0.0 2.0 flag1217
    SELECTF flag1217 0.0 tmpf1217 F.0

    JR_LTF F.0 VGV_X whilebody1206
  endwhile1206:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1220:
  while1221:
    JR_LTEQF VGV_S3 15.0 and1223
    JR_GTF VGV_S2 15.0 or1222
  and1223:
    JR_GTEQF VGV_S3 15.0 endwhile1221
    JR_GTEQF VGV_S2 15.0 endwhile1221
  or1222:
  whilebody1221:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1225:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1226:
    JR_LTEQF VGV_S3 15.0 and1227
    JR_GTF VGV_S2 15.0 whilebody1221
  and1227:
    JR_GTEQF VGV_S3 15.0 and1228
    JR_LTF VGV_S2 15.0 whilebody1221
  and1228:
  endwhile1221:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1230
	DATA8 nos1230
	DATA8 busy1230
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1230 nos1230
	JR_EQ8 0 nos1230 motornotbusy1230
  motorwaiting1230:
	OUTPUT_TEST layer1230 nos1230 busy1230
	JR_EQ8 busy1230 0 motornotbusy1230
	SLEEP
	JR motorwaiting1230
  motornotbusy1230:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1231:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1232:
  while1233:
    JR_GTEQF VGV_S2 60.0 endwhile1233
  whilebody1233:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1233
  endwhile1233:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1236:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1237:
  while1238:
    JR_LTEQF VGV_S3 10.0 and1240
    JR_GTF VGV_S2 10.0 or1239
  and1240:
    JR_GTEQF VGV_S3 10.0 endwhile1238
    JR_GTEQF VGV_S2 10.0 endwhile1238
  or1239:
  whilebody1238:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1241:
    JR_LTEQF VGV_S3 10.0 and1242
    JR_GTF VGV_S2 10.0 whilebody1238
  and1242:
    JR_GTEQF VGV_S3 10.0 and1243
    JR_LTF VGV_S2 10.0 whilebody1238
  and1243:
  endwhile1238:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1245
    DATA8 flag1245
    DIVF 360.0 VGV_L tmpf1245
    CP_EQF 0.0 VGV_L flag1245
    SELECTF flag1245 0.0 tmpf1245 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1248:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1252
    DATA8 flag1252
    DIVF F.1 2.0 tmpf1252
    CP_EQF 0.0 2.0 flag1252
    SELECTF flag1252 0.0 tmpf1252 F.0

    JR_GTEQF F.0 VGV_X endwhile1248
  whilebody1248:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1253:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1254:
    JR_GTEQF VGV_SPEED 80.0 else1255_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1255_1:
  endif1255:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB1257:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1261
    DATA8 flag1261
    DIVF F.1 2.0 tmpf1261
    CP_EQF 0.0 2.0 flag1261
    SELECTF flag1261 0.0 tmpf1261 F.0

    JR_LTF F.0 VGV_X whilebody1248
  endwhile1248:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1263:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1264:
  while1265:
    JR_LTEQF VGV_S3 15.0 and1267
    JR_GTF VGV_S2 15.0 or1266
  and1267:
    JR_GTEQF VGV_S3 15.0 endwhile1265
    JR_GTEQF VGV_S2 15.0 endwhile1265
  or1266:
  whilebody1265:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1268:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1269:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1270:
    JR_LTEQF VGV_S3 15.0 and1271
    JR_GTF VGV_S2 15.0 whilebody1265
  and1271:
    JR_GTEQF VGV_S3 15.0 and1272
    JR_LTF VGV_S2 15.0 whilebody1265
  and1272:
  endwhile1265:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 55.0 'true'

	DATA8 layer1274
	DATA8 nos1274
	DATA8 busy1274
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1274 nos1274
	JR_EQ8 0 nos1274 motornotbusy1274
  motorwaiting1274:
	OUTPUT_TEST layer1274 nos1274 busy1274
	JR_EQ8 busy1274 0 motornotbusy1274
	SLEEP
	JR motorwaiting1274
  motornotbusy1274:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1276
	DATA8 nos1276
	DATA8 busy1276
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1276 nos1276
	JR_EQ8 0 nos1276 motornotbusy1276
  motorwaiting1276:
	OUTPUT_TEST layer1276 nos1276 busy1276
	JR_EQ8 busy1276 0 motornotbusy1276
	SLEEP
	JR motorwaiting1276
  motornotbusy1276:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1277:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1278:
  while1279:
    JR_LTEQF VGV_S2 15.0 endwhile1279
  whilebody1279:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1280:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1281:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody1279
  endwhile1279:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1285:
  while1286:
    JR_GTEQF VGV_S2 55.0 endwhile1286
  whilebody1286:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1287:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1288:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody1286
  endwhile1286:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 45.0 'true'

	DATA8 layer1291
	DATA8 nos1291
	DATA8 busy1291
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1291 nos1291
	JR_EQ8 0 nos1291 motornotbusy1291
  motorwaiting1291:
	OUTPUT_TEST layer1291 nos1291 busy1291
	JR_EQ8 busy1291 0 motornotbusy1291
	SLEEP
	JR motorwaiting1291
  motornotbusy1291:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1293
	DATA8 nos1293
	DATA8 busy1293
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1293 nos1293
	JR_EQ8 0 nos1293 motornotbusy1293
  motorwaiting1293:
	OUTPUT_TEST layer1293 nos1293 busy1293
	JR_EQ8 busy1293 0 motornotbusy1293
	SLEEP
	JR motorwaiting1293
  motornotbusy1293:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1294:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1295:
  while1296:
    JR_LTEQF VGV_S3 15.0 endwhile1296
  whilebody1296:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1297:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1298:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1296
  endwhile1296:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1301:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1302:
  while1303:
    JR_GTEQF VGV_S3 60.0 endwhile1303
  whilebody1303:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1304:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1305:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1303
  endwhile1303:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1308:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer1309
	DATA8 nos1309
	DATA8 busy1309
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1309 nos1309
	JR_EQ8 0 nos1309 motornotbusy1309
  motorwaiting1309:
	OUTPUT_TEST layer1309 nos1309 busy1309
	JR_EQ8 busy1309 0 motornotbusy1309
	SLEEP
	JR motorwaiting1309
  motornotbusy1309:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1311
	DATA8 nos1311
	DATA8 busy1311
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1311 nos1311
	JR_EQ8 0 nos1311 motornotbusy1311
  motorwaiting1311:
	OUTPUT_TEST layer1311 nos1311 busy1311
	JR_EQ8 busy1311 0 motornotbusy1311
	SLEEP
	JR motorwaiting1311
  motornotbusy1311:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1313:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1314:
  while1315:
    JR_LTEQF VGV_S2 10.0 endwhile1315
  whilebody1315:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1316:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1317:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1315
  endwhile1315:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1319:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1320:
  while1321:
    JR_GTEQF VGV_S2 60.0 endwhile1321
  whilebody1321:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1322:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1323:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1321
  endwhile1321:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1326:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1327
	DATA8 nos1327
	DATA8 busy1327
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1327 nos1327
	JR_EQ8 0 nos1327 motornotbusy1327
  motorwaiting1327:
	OUTPUT_TEST layer1327 nos1327 busy1327
	JR_EQ8 busy1327 0 motornotbusy1327
	SLEEP
	JR motorwaiting1327
  motornotbusy1327:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1329
	DATA8 nos1329
	DATA8 busy1329
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1329 nos1329
	JR_EQ8 0 nos1329 motornotbusy1329
  motorwaiting1329:
	OUTPUT_TEST layer1329 nos1329 busy1329
	JR_EQ8 busy1329 0 motornotbusy1329
	SLEEP
	JR motorwaiting1329
  motornotbusy1329:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1331:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1332:
  while1333:
    JR_LTEQF VGV_S3 8.0 endwhile1333
  whilebody1333:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1334:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1335:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1333
  endwhile1333:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1337:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1338:
  while1339:
    JR_GTEQF VGV_S3 55.0 endwhile1339
  whilebody1339:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1340:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1341:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1339
  endwhile1339:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1344
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1344
    JR_NEQ32 0 tmp1344 alreadylaunched1344
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1344:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1345:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1346:
  while1347:
    JR_LTEQF VGV_S3 15.0 and1349
    JR_GTF VGV_S2 15.0 or1348
  and1349:
    JR_GTEQF VGV_S3 15.0 and1350
    JR_GTF VGV_S2 15.0 or1348
  and1350:
    JR_LTEQF VGV_S3 15.0 endwhile1347
    JR_GTEQF VGV_S2 15.0 endwhile1347
  or1348:
  whilebody1347:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1351:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1352:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1353:
    JR_LTEQF VGV_S3 15.0 and1354
    JR_GTF VGV_S2 15.0 whilebody1347
  and1354:
    JR_GTEQF VGV_S3 15.0 and1355
    JR_GTF VGV_S2 15.0 whilebody1347
  and1355:
    JR_LTEQF VGV_S3 15.0 and1356
    JR_LTF VGV_S2 15.0 whilebody1347
  and1356:
  endwhile1347:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1358
	DATA8 nos1358
	DATA8 busy1358
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1358 nos1358
	JR_EQ8 0 nos1358 motornotbusy1358
  motorwaiting1358:
	OUTPUT_TEST layer1358 nos1358 busy1358
	JR_EQ8 busy1358 0 motornotbusy1358
	SLEEP
	JR motorwaiting1358
  motornotbusy1358:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1359
	DATA8 nos1359
	DATA8 busy1359
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1359 nos1359
	JR_EQ8 0 nos1359 motornotbusy1359
  motorwaiting1359:
	OUTPUT_TEST layer1359 nos1359 busy1359
	JR_EQ8 busy1359 0 motornotbusy1359
	SLEEP
	JR motorwaiting1359
  motornotbusy1359:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1362:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1363:
  while1364:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1364
  whilebody1364:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1366:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1367:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1368:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1364
  endwhile1364:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -60.0
    DATA32 milliseconds1372
	MOVEF_32 250.0 milliseconds1372
	DATA32 timer1372
	TIMER_WAIT milliseconds1372 timer1372
	TIMER_READY timer1372
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1374
	DATA8 nos1374
	DATA8 busy1374
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1374 nos1374
	JR_EQ8 0 nos1374 motornotbusy1374
  motorwaiting1374:
	OUTPUT_TEST layer1374 nos1374 busy1374
	JR_EQ8 busy1374 0 motornotbusy1374
	SLEEP
	JR motorwaiting1374
  motornotbusy1374:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -100.0
    DATA32 milliseconds1376
	MOVEF_32 1400.0 milliseconds1376
	DATA32 timer1376
	TIMER_WAIT milliseconds1376 timer1376
	TIMER_READY timer1376
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1378
	DATA8 nos1378
	DATA8 busy1378
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1378 nos1378
	JR_EQ8 0 nos1378 motornotbusy1378
  motorwaiting1378:
	OUTPUT_TEST layer1378 nos1378 busy1378
	JR_EQ8 busy1378 0 motornotbusy1378
	SLEEP
	JR motorwaiting1378
  motornotbusy1378:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1379
	DATA8 nos1379
	DATA8 busy1379
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1379 nos1379
	JR_EQ8 0 nos1379 motornotbusy1379
  motorwaiting1379:
	OUTPUT_TEST layer1379 nos1379 busy1379
	JR_EQ8 busy1379 0 motornotbusy1379
	SLEEP
	JR motorwaiting1379
  motornotbusy1379:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1380
	DATA8 nos1380
	DATA8 busy1380
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1380 nos1380
	JR_EQ8 0 nos1380 motornotbusy1380
  motorwaiting1380:
	OUTPUT_TEST layer1380 nos1380 busy1380
	JR_EQ8 busy1380 0 motornotbusy1380
	SLEEP
	JR motorwaiting1380
  motornotbusy1380:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1381:
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 45.0 'true'

	DATA8 layer1382
	DATA8 nos1382
	DATA8 busy1382
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1382 nos1382
	JR_EQ8 0 nos1382 motornotbusy1382
  motorwaiting1382:
	OUTPUT_TEST layer1382 nos1382 busy1382
	JR_EQ8 busy1382 0 motornotbusy1382
	SLEEP
	JR motorwaiting1382
  motornotbusy1382:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1383
	DATA8 nos1383
	DATA8 busy1383
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1383 nos1383
	JR_EQ8 0 nos1383 motornotbusy1383
  motorwaiting1383:
	OUTPUT_TEST layer1383 nos1383 busy1383
	JR_EQ8 busy1383 0 motornotbusy1383
	SLEEP
	JR motorwaiting1383
  motornotbusy1383:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1385:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1386:
  while1387:
    JR_LTEQF VGV_S2 15.0 endwhile1387
  whilebody1387:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1388:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1389:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1387
  endwhile1387:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1392:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1393:
  while1394:
    JR_GTEQF VGV_S2 50.0 endwhile1394
  whilebody1394:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1395:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1396:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1394
  endwhile1394:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1399:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1400:
  while1401:
    JR_LTEQF VGV_S3 15.0 and1403
    JR_GTF VGV_S2 15.0 or1402
  and1403:
    JR_GTEQF VGV_S3 15.0 endwhile1401
    JR_GTEQF VGV_S2 15.0 endwhile1401
  or1402:
  whilebody1401:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1404:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1405:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1406:
    JR_LTEQF VGV_S3 15.0 and1407
    JR_GTF VGV_S2 15.0 whilebody1401
  and1407:
    JR_GTEQF VGV_S3 15.0 and1408
    JR_LTF VGV_S2 15.0 whilebody1401
  and1408:
  endwhile1401:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1410:
    CALL MOTOR.RESETCOUNT 'bc'
  while1412:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1416
    DATA8 flag1416
    DIVF F.1 2.0 tmpf1416
    CP_EQF 0.0 2.0 flag1416
    SELECTF flag1416 0.0 tmpf1416 F.0

    JR_GTEQF F.0 200.0 endwhile1412
  whilebody1412:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1417:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1421
    DATA8 flag1421
    DIVF F.1 2.0 tmpf1421
    CP_EQF 0.0 2.0 flag1421
    SELECTF flag1421 0.0 tmpf1421 F.0

    JR_LTF F.0 200.0 whilebody1412
  endwhile1412:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1423:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1424:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1425:
    JR_GTF VGV_I 1.0 endfor1425
  forbody1425:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1426:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1427:
  while1428:
    JR_LTEQF VGV_S3 15.0 and1430
    JR_GTF VGV_S2 15.0 or1429
  and1430:
    JR_GTEQF VGV_S3 15.0 endwhile1428
    JR_GTEQF VGV_S2 15.0 endwhile1428
  or1429:
  whilebody1428:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1431:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1432:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1433:
    JR_LTEQF VGV_S3 15.0 and1434
    JR_GTF VGV_S2 15.0 whilebody1428
  and1434:
    JR_GTEQF VGV_S3 15.0 and1435
    JR_LTF VGV_S2 15.0 whilebody1428
  and1435:
  endwhile1428:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1437
	DATA8 nos1437
	DATA8 busy1437
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1437 nos1437
	JR_EQ8 0 nos1437 motornotbusy1437
  motorwaiting1437:
	OUTPUT_TEST layer1437 nos1437 busy1437
	JR_EQ8 busy1437 0 motornotbusy1437
	SLEEP
	JR motorwaiting1437
  motornotbusy1437:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1425
  endfor1425:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 0.0 'true'

	DATA8 layer1440
	DATA8 nos1440
	DATA8 busy1440
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1440 nos1440
	JR_EQ8 0 nos1440 motornotbusy1440
  motorwaiting1440:
	OUTPUT_TEST layer1440 nos1440 busy1440
	JR_EQ8 busy1440 0 motornotbusy1440
	SLEEP
	JR motorwaiting1440
  motornotbusy1440:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 185.0 'true'

	DATA8 layer1441
	DATA8 nos1441
	DATA8 busy1441
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1441 nos1441
	JR_EQ8 0 nos1441 motornotbusy1441
  motorwaiting1441:
	OUTPUT_TEST layer1441 nos1441 busy1441
	JR_EQ8 busy1441 0 motornotbusy1441
	SLEEP
	JR motorwaiting1441
  motornotbusy1441:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 121.0 'true'

	DATA8 layer1442
	DATA8 nos1442
	DATA8 busy1442
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1442 nos1442
	JR_EQ8 0 nos1442 motornotbusy1442
  motorwaiting1442:
	OUTPUT_TEST layer1442 nos1442 busy1442
	JR_EQ8 busy1442 0 motornotbusy1442
	SLEEP
	JR motorwaiting1442
  motornotbusy1442:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1444
	MOVEF_32 500.0 milliseconds1444
	DATA32 timer1444
	TIMER_WAIT milliseconds1444 timer1444
	TIMER_READY timer1444
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 110.0 'true'

	DATA8 layer1446
	DATA8 nos1446
	DATA8 busy1446
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1446 nos1446
	JR_EQ8 0 nos1446 motornotbusy1446
  motorwaiting1446:
	OUTPUT_TEST layer1446 nos1446 busy1446
	JR_EQ8 busy1446 0 motornotbusy1446
	SLEEP
	JR motorwaiting1446
  motornotbusy1446:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 415.0 'true'

	DATA8 layer1447
	DATA8 nos1447
	DATA8 busy1447
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1447 nos1447
	JR_EQ8 0 nos1447 motornotbusy1447
  motorwaiting1447:
	OUTPUT_TEST layer1447 nos1447 busy1447
	JR_EQ8 busy1447 0 motornotbusy1447
	SLEEP
	JR motorwaiting1447
  motornotbusy1447:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1448:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1449:
  while1450:
    JR_LTEQF VGV_S3 10.0 and1452
    JR_GTF VGV_S2 10.0 or1451
  and1452:
    JR_GTEQF VGV_S3 10.0 and1453
    JR_GTF VGV_S2 10.0 or1451
  and1453:
    JR_LTEQF VGV_S3 6.0 endwhile1450
    JR_GTEQF VGV_S2 6.0 endwhile1450
  or1451:
  whilebody1450:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1454:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1455:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1457
    JR_GTF VGV_S2 10.0 whilebody1450
  and1457:
    JR_GTEQF VGV_S3 10.0 and1458
    JR_GTF VGV_S2 10.0 whilebody1450
  and1458:
    JR_LTEQF VGV_S3 6.0 and1459
    JR_LTF VGV_S2 6.0 whilebody1450
  and1459:
  endwhile1450:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1461
	DATA8 nos1461
	DATA8 busy1461
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1461 nos1461
	JR_EQ8 0 nos1461 motornotbusy1461
  motorwaiting1461:
	OUTPUT_TEST layer1461 nos1461 busy1461
	JR_EQ8 busy1461 0 motornotbusy1461
	SLEEP
	JR motorwaiting1461
  motornotbusy1461:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1463:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1464:
  while1465:
    JR_LTEQF VGV_S3 10.0 endwhile1465
  whilebody1465:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1466:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1467:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1465
  endwhile1465:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1470:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1471:
  while1472:
    JR_GTEQF VGV_S3 60.0 endwhile1472
  whilebody1472:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1473:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1474:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1472
  endwhile1472:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1477
	MOVEF_32 100.0 milliseconds1477
	DATA32 timer1477
	TIMER_WAIT milliseconds1477 timer1477
	TIMER_READY timer1477
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1478:
    CALL MOTOR.RESETCOUNT 'bc'
  while1480:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1484
    DATA8 flag1484
    DIVF F.1 2.0 tmpf1484
    CP_EQF 0.0 2.0 flag1484
    SELECTF flag1484 0.0 tmpf1484 F.0

    JR_GTEQF F.0 200.0 endwhile1480
  whilebody1480:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1485:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1489
    DATA8 flag1489
    DIVF F.1 2.0 tmpf1489
    CP_EQF 0.0 2.0 flag1489
    SELECTF flag1489 0.0 tmpf1489 F.0

    JR_LTF F.0 200.0 whilebody1480
  endwhile1480:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1491:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1492:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1493:
    JR_GTF VGV_I 2.0 endfor1493
  forbody1493:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1494:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1495:
  while1496:
    JR_LTEQF VGV_S3 15.0 and1498
    JR_GTF VGV_S2 15.0 or1497
  and1498:
    JR_GTEQF VGV_S3 15.0 endwhile1496
    JR_GTEQF VGV_S2 15.0 endwhile1496
  or1497:
  whilebody1496:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1499:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1500:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1501:
    JR_LTEQF VGV_S3 15.0 and1502
    JR_GTF VGV_S2 15.0 whilebody1496
  and1502:
    JR_GTEQF VGV_S3 15.0 and1503
    JR_LTF VGV_S2 15.0 whilebody1496
  and1503:
  endwhile1496:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1505
	DATA8 nos1505
	DATA8 busy1505
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1505 nos1505
	JR_EQ8 0 nos1505 motornotbusy1505
  motorwaiting1505:
	OUTPUT_TEST layer1505 nos1505 busy1505
	JR_EQ8 busy1505 0 motornotbusy1505
	SLEEP
	JR motorwaiting1505
  motornotbusy1505:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1493
  endfor1493:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 15.0 'true'

	DATA8 layer1508
	DATA8 nos1508
	DATA8 busy1508
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1508 nos1508
	JR_EQ8 0 nos1508 motornotbusy1508
  motorwaiting1508:
	OUTPUT_TEST layer1508 nos1508 busy1508
	JR_EQ8 busy1508 0 motornotbusy1508
	SLEEP
	JR motorwaiting1508
  motornotbusy1508:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1510:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1511:
    MOVEF_F 80.0 VGV_J
  while1512:
    JR_LTEQF VGV_S3 10.0 endwhile1512
  whilebody1512:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1513:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1514:
    JR_LTEQF VGV_J 30.0 else1515_1
    SUBF VGV_J 0.1 VGV_J
  else1515_1:
  endif1515:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1512
  endwhile1512:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1519:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1520:
    MOVEF_F 80.0 VGV_J
  while1521:
    JR_GTEQF VGV_S3 15.0 endwhile1521
  whilebody1521:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1522:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1523:
    JR_LTEQF VGV_J 30.0 else1524_1
    SUBF VGV_J 0.1 VGV_J
  else1524_1:
  endif1524:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1521
  endwhile1521:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1529:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1533
    DATA8 flag1533
    DIVF F.1 2.0 tmpf1533
    CP_EQF 0.0 2.0 flag1533
    SELECTF flag1533 0.0 tmpf1533 F.0

    JR_GTEQF F.0 50.0 endwhile1529
  whilebody1529:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1534:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1535:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1536:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1537:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1539
    DATA8 flag1539
    DIVF F.1 2.0 tmpf1539
    CP_EQF 0.0 2.0 flag1539
    SELECTF flag1539 0.0 tmpf1539 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1551
    DATA8 flag1551
    DIVF F.1 2.0 tmpf1551
    CP_EQF 0.0 2.0 flag1551
    SELECTF flag1551 0.0 tmpf1551 F.0

    JR_LTF F.0 50.0 whilebody1529
  endwhile1529:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 18.0 95.0 'true'

	DATA8 layer1553
	DATA8 nos1553
	DATA8 busy1553
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1553 nos1553
	JR_EQ8 0 nos1553 motornotbusy1553
  motorwaiting1553:
	OUTPUT_TEST layer1553 nos1553 busy1553
	JR_EQ8 busy1553 0 motornotbusy1553
	SLEEP
	JR motorwaiting1553
  motornotbusy1553:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1555
	MOVEF_32 500.0 milliseconds1555
	DATA32 timer1555
	TIMER_WAIT milliseconds1555 timer1555
	TIMER_READY timer1555
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1558:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1562
    DATA8 flag1562
    DIVF F.1 2.0 tmpf1562
    CP_EQF 0.0 2.0 flag1562
    SELECTF flag1562 0.0 tmpf1562 F.0

    JR_LTEQF F.0 -240.0 endwhile1558
  whilebody1558:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1567
    DATA8 flag1567
    DIVF F.1 2.0 tmpf1567
    CP_EQF 0.0 2.0 flag1567
    SELECTF flag1567 0.0 tmpf1567 F.0

    JR_GTF F.0 -240.0 whilebody1558
  endwhile1558:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 190.0 'true'

	DATA8 layer1569
	DATA8 nos1569
	DATA8 busy1569
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1569 nos1569
	JR_EQ8 0 nos1569 motornotbusy1569
  motorwaiting1569:
	OUTPUT_TEST layer1569 nos1569 busy1569
	JR_EQ8 busy1569 0 motornotbusy1569
	SLEEP
	JR motorwaiting1569
  motornotbusy1569:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1571:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1572:
  while1573:
    JR_LTEQF VGV_S3 10.0 and1575
    JR_GTF VGV_S2 10.0 or1574
  and1575:
    JR_LTEQF VGV_S3 10.0 and1576
    JR_LTF VGV_S2 10.0 or1574
  and1576:
    JR_GTEQF VGV_S3 10.0 endwhile1573
    JR_LTEQF VGV_S2 10.0 endwhile1573
  or1574:
  whilebody1573:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1577:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1578:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1580
    JR_GTF VGV_S2 10.0 whilebody1573
  and1580:
    JR_LTEQF VGV_S3 10.0 and1581
    JR_LTF VGV_S2 10.0 whilebody1573
  and1581:
    JR_GTEQF VGV_S3 10.0 and1582
    JR_GTF VGV_S2 10.0 whilebody1573
  and1582:
  endwhile1573:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1584
	DATA8 nos1584
	DATA8 busy1584
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1584 nos1584
	JR_EQ8 0 nos1584 motornotbusy1584
  motorwaiting1584:
	OUTPUT_TEST layer1584 nos1584 busy1584
	JR_EQ8 busy1584 0 motornotbusy1584
	SLEEP
	JR motorwaiting1584
  motornotbusy1584:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1585:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1586:
  while1587:
    JR_LTEQF VGV_S3 10.0 endwhile1587
  whilebody1587:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1588:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1589:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1587
  endwhile1587:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1591:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1592:
  while1593:
    JR_GTEQF VGV_S3 15.0 endwhile1593
  whilebody1593:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1594:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1595:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1593
  endwhile1593:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1598
	DATA8 nos1598
	DATA8 busy1598
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1598 nos1598
	JR_EQ8 0 nos1598 motornotbusy1598
  motorwaiting1598:
	OUTPUT_TEST layer1598 nos1598 busy1598
	JR_EQ8 busy1598 0 motornotbusy1598
	SLEEP
	JR motorwaiting1598
  motornotbusy1598:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1599:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1600:
  while1601:
    JR_LTEQF VGV_S3 15.0 endwhile1601
  whilebody1601:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1602:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1603:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1601
  endwhile1601:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1606:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1607:
  while1608:
    JR_GTEQF VGV_S3 15.0 endwhile1608
  whilebody1608:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1609:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1610:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1608
  endwhile1608:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1614:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 270.0 endwhile1614
  whilebody1614:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1616:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 270.0 whilebody1614
  endwhile1614:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1619:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1620:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1621:
    JR_GTF VGV_I 3.0 endfor1621
  forbody1621:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1622:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1623:
  while1624:
    JR_LTEQF VGV_S3 15.0 and1626
    JR_GTF VGV_S2 15.0 or1625
  and1626:
    JR_GTEQF VGV_S3 15.0 endwhile1624
    JR_GTEQF VGV_S2 15.0 endwhile1624
  or1625:
  whilebody1624:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1627:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1628:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1629:
    JR_LTEQF VGV_S3 15.0 and1630
    JR_GTF VGV_S2 15.0 whilebody1624
  and1630:
    JR_GTEQF VGV_S3 15.0 and1631
    JR_LTF VGV_S2 15.0 whilebody1624
  and1631:
  endwhile1624:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1633
	DATA8 nos1633
	DATA8 busy1633
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1633 nos1633
	JR_EQ8 0 nos1633 motornotbusy1633
  motorwaiting1633:
	OUTPUT_TEST layer1633 nos1633 busy1633
	JR_EQ8 busy1633 0 motornotbusy1633
	SLEEP
	JR motorwaiting1633
  motornotbusy1633:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1621
  endfor1621:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 195.0 'true'

	DATA8 layer1636
	DATA8 nos1636
	DATA8 busy1636
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1636 nos1636
	JR_EQ8 0 nos1636 motornotbusy1636
  motorwaiting1636:
	OUTPUT_TEST layer1636 nos1636 busy1636
	JR_EQ8 busy1636 0 motornotbusy1636
	SLEEP
	JR motorwaiting1636
  motornotbusy1636:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1637
	DATA8 nos1637
	DATA8 busy1637
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1637 nos1637
	JR_EQ8 0 nos1637 motornotbusy1637
  motorwaiting1637:
	OUTPUT_TEST layer1637 nos1637 busy1637
	JR_EQ8 busy1637 0 motornotbusy1637
	SLEEP
	JR motorwaiting1637
  motornotbusy1637:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1639
	MOVEF_32 500.0 milliseconds1639
	DATA32 timer1639
	TIMER_WAIT milliseconds1639 timer1639
	TIMER_READY timer1639
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1641
	DATA8 nos1641
	DATA8 busy1641
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1641 nos1641
	JR_EQ8 0 nos1641 motornotbusy1641
  motorwaiting1641:
	OUTPUT_TEST layer1641 nos1641 busy1641
	JR_EQ8 busy1641 0 motornotbusy1641
	SLEEP
	JR motorwaiting1641
  motornotbusy1641:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 370.0 'true'

	DATA8 layer1642
	DATA8 nos1642
	DATA8 busy1642
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1642 nos1642
	JR_EQ8 0 nos1642 motornotbusy1642
  motorwaiting1642:
	OUTPUT_TEST layer1642 nos1642 busy1642
	JR_EQ8 busy1642 0 motornotbusy1642
	SLEEP
	JR motorwaiting1642
  motornotbusy1642:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 199.0 'true'

	DATA8 layer1643
	DATA8 nos1643
	DATA8 busy1643
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1643 nos1643
	JR_EQ8 0 nos1643 motornotbusy1643
  motorwaiting1643:
	OUTPUT_TEST layer1643 nos1643 busy1643
	JR_EQ8 busy1643 0 motornotbusy1643
	SLEEP
	JR motorwaiting1643
  motornotbusy1643:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1644
	DATA8 nos1644
	DATA8 busy1644
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1644 nos1644
	JR_EQ8 0 nos1644 motornotbusy1644
  motorwaiting1644:
	OUTPUT_TEST layer1644 nos1644 busy1644
	JR_EQ8 busy1644 0 motornotbusy1644
	SLEEP
	JR motorwaiting1644
  motornotbusy1644:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1645
	DATA8 nos1645
	DATA8 busy1645
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1645 nos1645
	JR_EQ8 0 nos1645 motornotbusy1645
  motorwaiting1645:
	OUTPUT_TEST layer1645 nos1645 busy1645
	JR_EQ8 busy1645 0 motornotbusy1645
	SLEEP
	JR motorwaiting1645
  motornotbusy1645:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1646:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1647:
  while1648:
    JR_LTEQF VGV_S3 10.0 and1650
    JR_GTF VGV_S2 10.0 or1649
  and1650:
    JR_GTEQF VGV_S3 10.0 and1651
    JR_GTF VGV_S2 10.0 or1649
  and1651:
    JR_LTEQF VGV_S3 10.0 endwhile1648
    JR_GTEQF VGV_S2 10.0 endwhile1648
  or1649:
  whilebody1648:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1652:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1653:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1655
    JR_GTF VGV_S2 10.0 whilebody1648
  and1655:
    JR_GTEQF VGV_S3 10.0 and1656
    JR_GTF VGV_S2 10.0 whilebody1648
  and1656:
    JR_LTEQF VGV_S3 10.0 and1657
    JR_LTF VGV_S2 10.0 whilebody1648
  and1657:
  endwhile1648:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1659
	DATA8 nos1659
	DATA8 busy1659
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1659 nos1659
	JR_EQ8 0 nos1659 motornotbusy1659
  motorwaiting1659:
	OUTPUT_TEST layer1659 nos1659 busy1659
	JR_EQ8 busy1659 0 motornotbusy1659
	SLEEP
	JR motorwaiting1659
  motornotbusy1659:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1661
	DATA8 nos1661
	DATA8 busy1661
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1661 nos1661
	JR_EQ8 0 nos1661 motornotbusy1661
  motorwaiting1661:
	OUTPUT_TEST layer1661 nos1661 busy1661
	JR_EQ8 busy1661 0 motornotbusy1661
	SLEEP
	JR motorwaiting1661
  motornotbusy1661:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1662:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1663:
  while1664:
    JR_LTEQF VGV_S3 15.0 endwhile1664
  whilebody1664:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1665:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1666:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1664
  endwhile1664:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1669:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1670:
  while1671:
    JR_GTEQF VGV_S3 60.0 endwhile1671
  whilebody1671:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1672:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1673:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1671
  endwhile1671:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1676:
    JR_GTF VGV_I 1.0 endfor1676
  forbody1676:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1677:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1678:
  while1679:
    JR_LTEQF VGV_S3 10.0 and1681
    JR_GTF VGV_S2 10.0 or1680
  and1681:
    JR_GTEQF VGV_S3 10.0 endwhile1679
    JR_GTEQF VGV_S2 10.0 endwhile1679
  or1680:
  whilebody1679:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1682:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1683:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1684:
    JR_LTEQF VGV_S3 10.0 and1685
    JR_GTF VGV_S2 10.0 whilebody1679
  and1685:
    JR_GTEQF VGV_S3 10.0 and1686
    JR_LTF VGV_S2 10.0 whilebody1679
  and1686:
  endwhile1679:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1688
	DATA8 nos1688
	DATA8 busy1688
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1688 nos1688
	JR_EQ8 0 nos1688 motornotbusy1688
  motorwaiting1688:
	OUTPUT_TEST layer1688 nos1688 busy1688
	JR_EQ8 busy1688 0 motornotbusy1688
	SLEEP
	JR motorwaiting1688
  motornotbusy1688:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1676
  endfor1676:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1691:
    CALL MOTOR.RESETCOUNT 'bc'
  while1693:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1697
    DATA8 flag1697
    DIVF F.1 2.0 tmpf1697
    CP_EQF 0.0 2.0 flag1697
    SELECTF flag1697 0.0 tmpf1697 F.0

    JR_GTEQF F.0 30.0 endwhile1693
  whilebody1693:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1698:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1702
    DATA8 flag1702
    DIVF F.1 2.0 tmpf1702
    CP_EQF 0.0 2.0 flag1702
    SELECTF flag1702 0.0 tmpf1702 F.0

    JR_LTF F.0 30.0 whilebody1693
  endwhile1693:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer1703
	DATA8 nos1703
	DATA8 busy1703
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1703 nos1703
	JR_EQ8 0 nos1703 motornotbusy1703
  motorwaiting1703:
	OUTPUT_TEST layer1703 nos1703 busy1703
	JR_EQ8 busy1703 0 motornotbusy1703
	SLEEP
	JR motorwaiting1703
  motornotbusy1703:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1705
	MOVEF_32 100.0 milliseconds1705
	DATA32 timer1705
	TIMER_WAIT milliseconds1705 timer1705
	TIMER_READY timer1705
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1707
	MOVEF_32 500.0 milliseconds1707
	DATA32 timer1707
	TIMER_WAIT milliseconds1707 timer1707
	TIMER_READY timer1707
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1709:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1710:
  while1711:
    JR_LTEQF VGV_S2 9.0 and1713
    JR_GTF VGV_S3 9.0 or1712
  and1713:
    JR_GTEQF VGV_S2 9.0 and1714
    JR_GTF VGV_S3 9.0 or1712
  and1714:
    JR_LTEQF VGV_S2 9.0 endwhile1711
    JR_GTEQF VGV_S3 9.0 endwhile1711
  or1712:
  whilebody1711:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1715:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1716:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1718
    JR_GTF VGV_S3 9.0 whilebody1711
  and1718:
    JR_GTEQF VGV_S2 9.0 and1719
    JR_GTF VGV_S3 9.0 whilebody1711
  and1719:
    JR_LTEQF VGV_S2 9.0 and1720
    JR_LTF VGV_S3 9.0 whilebody1711
  and1720:
  endwhile1711:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1721
	DATA8 nos1721
	DATA8 busy1721
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1721 nos1721
	JR_EQ8 0 nos1721 motornotbusy1721
  motorwaiting1721:
	OUTPUT_TEST layer1721 nos1721 busy1721
	JR_EQ8 busy1721 0 motornotbusy1721
	SLEEP
	JR motorwaiting1721
  motornotbusy1721:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1723
	DATA8 nos1723
	DATA8 busy1723
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1723 nos1723
	JR_EQ8 0 nos1723 motornotbusy1723
  motorwaiting1723:
	OUTPUT_TEST layer1723 nos1723 busy1723
	JR_EQ8 busy1723 0 motornotbusy1723
	SLEEP
	JR motorwaiting1723
  motornotbusy1723:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1725:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1726:
  while1727:
    JR_LTEQF VGV_S2 10.0 endwhile1727
  whilebody1727:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1728:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1729:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1727
  endwhile1727:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1731:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1732:
  while1733:
    JR_GTEQF VGV_S2 60.0 endwhile1733
  whilebody1733:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1734:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1735:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1733
  endwhile1733:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1738
    DATA8 flag1738
    DIVF 360.0 VGV_L tmpf1738
    CP_EQF 0.0 VGV_L flag1738
    SELECTF flag1738 0.0 tmpf1738 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1741:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1741
  whilebody1741:
    JR_GTEQF VGV_SPEED 60.0 else1743_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1743_1:
  endif1743:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1745:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1741
  endwhile1741:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1748:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1749:
    MOVEF_F 1370.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1750:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1752:
    CALL MOTOR.RESETCOUNT 'bc'
  while1754:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1758
    DATA8 flag1758
    DIVF F.1 2.0 tmpf1758
    CP_EQF 0.0 2.0 flag1758
    SELECTF flag1758 0.0 tmpf1758 F.0

    JR_GTEQF F.0 10.0 endwhile1754
  whilebody1754:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1759:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1760:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1761:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1765
    DATA8 flag1765
    DIVF F.1 2.0 tmpf1765
    CP_EQF 0.0 2.0 flag1765
    SELECTF flag1765 0.0 tmpf1765 F.0

    JR_LTF F.0 10.0 whilebody1754
  endwhile1754:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1767
	DATA8 nos1767
	DATA8 busy1767
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1767 nos1767
	JR_EQ8 0 nos1767 motornotbusy1767
  motorwaiting1767:
	OUTPUT_TEST layer1767 nos1767 busy1767
	JR_EQ8 busy1767 0 motornotbusy1767
	SLEEP
	JR motorwaiting1767
  motornotbusy1767:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1769
	MOVEF_32 500.0 milliseconds1769
	DATA32 timer1769
	TIMER_WAIT milliseconds1769 timer1769
	TIMER_READY timer1769
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1771:
    DATA32 tmp1772
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1772
    JR_NEQ32 0 tmp1772 alreadylaunched1772
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1772:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1773:
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    DATA32 milliseconds1774
	MOVEF_32 400.0 milliseconds1774
	DATA32 timer1774
	TIMER_WAIT milliseconds1774 timer1774
	TIMER_READY timer1774
    CALL MOTOR.SCHEDULESYNC 'bc' -15.0 -15.0 150.0 'true'

	DATA8 layer1775
	DATA8 nos1775
	DATA8 busy1775
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1775 nos1775
	JR_EQ8 0 nos1775 motornotbusy1775
  motorwaiting1775:
	OUTPUT_TEST layer1775 nos1775 busy1775
	JR_EQ8 busy1775 0 motornotbusy1775
	SLEEP
	JR motorwaiting1775
  motornotbusy1775:
    DATA32 milliseconds1776
	MOVEF_32 400.0 milliseconds1776
	DATA32 timer1776
	TIMER_WAIT milliseconds1776 timer1776
	TIMER_READY timer1776
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 200.0 'true'

	DATA8 layer1777
	DATA8 nos1777
	DATA8 busy1777
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1777 nos1777
	JR_EQ8 0 nos1777 motornotbusy1777
  motorwaiting1777:
	OUTPUT_TEST layer1777 nos1777 busy1777
	JR_EQ8 busy1777 0 motornotbusy1777
	SLEEP
	JR motorwaiting1777
  motornotbusy1777:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1779:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1780:
  while1781:
    JR_LTEQF VGV_S2 12.0 endwhile1781
  whilebody1781:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1782:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1783:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 12.0 whilebody1781
  endwhile1781:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1786:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1787:
  while1788:
    JR_GTEQF VGV_S2 60.0 endwhile1788
  whilebody1788:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1789:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1790:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1788
  endwhile1788:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1794:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1798
    DATA8 flag1798
    DIVF F.1 2.0 tmpf1798
    CP_EQF 0.0 2.0 flag1798
    SELECTF flag1798 0.0 tmpf1798 F.0

    JR_GTEQF F.0 300.0 endwhile1794
  whilebody1794:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1799:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1800:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1801:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1805
    DATA8 flag1805
    DIVF F.1 2.0 tmpf1805
    CP_EQF 0.0 2.0 flag1805
    SELECTF flag1805 0.0 tmpf1805 F.0

    JR_LTF F.0 300.0 whilebody1794
  endwhile1794:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.15 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1807:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1808:
  while1809:
    JR_LTEQF VGV_S3 15.0 and1811
    JR_GTF VGV_S2 15.0 or1810
  and1811:
    JR_GTEQF VGV_S3 10.0 endwhile1809
    JR_GTEQF VGV_S2 15.0 endwhile1809
  or1810:
  whilebody1809:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1812:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1813:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1814:
    JR_LTEQF VGV_S3 15.0 and1815
    JR_GTF VGV_S2 15.0 whilebody1809
  and1815:
    JR_GTEQF VGV_S3 10.0 and1816
    JR_LTF VGV_S2 15.0 whilebody1809
  and1816:
  endwhile1809:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1818
	DATA8 no1818
	DATA8 mode81818
	
	MOVEF_8 1.0 no1818
	SUB8 no1818 1 no1818
	DIV8 no1818 4 layer1818
	MATH MOD8 no1818 4 no1818

	MOVEF_8 2.0 mode81818
	
	INPUT_DEVICE READY_RAW layer1818 no1818 0 mode81818 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1825
    DATA8 flag1825
    DIVF VGV_SRED 255.0 tmpf1825
    CP_EQF 0.0 255.0 flag1825
    SELECTF flag1825 0.0 tmpf1825 VGV_SRED

    DATAF tmpf1826
    DATA8 flag1826
    DIVF VGV_SGREEN 255.0 tmpf1826
    CP_EQF 0.0 255.0 flag1826
    SELECTF flag1826 0.0 tmpf1826 VGV_SGREEN

    DATAF tmpf1827
    DATA8 flag1827
    DIVF VGV_SBLUE 255.0 tmpf1827
    CP_EQF 0.0 255.0 flag1827
    SELECTF flag1827 0.0 tmpf1827 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1828_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1828_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1828
  else1828_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1828_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1828_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1828
  else1828_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1828_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1828_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1828_3:
  endif1828:
    JR_GTEQF VGV_SRED VGV_SGREEN else1829_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1829_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1829
  else1829_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1829_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1829_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1829
  else1829_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1829_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1829_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1829_3:
  endif1829:
    JR_NEQF VGV_MAX VGV_MIN else1830_1
    MOVEF_F 0.0 VGV_H
    JR endif1830
  else1830_1:
    JR_NEQF VGV_SRED VGV_MAX else1831_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1832_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1836
    DATA8 flag1836
    DIVF F.0 F.1 tmpf1836
    CP_EQF 0.0 F.1 flag1836
    SELECTF flag1836 0.0 tmpf1836 VGV_H

    JR endif1832
  else1832_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1840
    DATA8 flag1840
    DIVF F.1 F.2 tmpf1840
    CP_EQF 0.0 F.2 flag1840
    SELECTF flag1840 0.0 tmpf1840 F.0

    ADDF F.0 360.0 VGV_H
  else1832_2:
  endif1832:
    JR endif1831
  else1831_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1842_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1846
    DATA8 flag1846
    DIVF F.1 F.2 tmpf1846
    CP_EQF 0.0 F.2 flag1846
    SELECTF flag1846 0.0 tmpf1846 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1842
  else1842_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1851
    DATA8 flag1851
    DIVF F.1 F.2 tmpf1851
    CP_EQF 0.0 F.2 flag1851
    SELECTF flag1851 0.0 tmpf1851 F.0

    ADDF F.0 240.0 VGV_H
  else1842_2:
  endif1842:
  else1831_2:
  endif1831:
  else1830_2:
  endif1830:
    JR_NEQF VGV_MAX 0.0 else1853_1
    MOVEF_F 0.0 VGV_S
    JR endif1853
  else1853_1:
    DATAF tmpf1854
    DATA8 flag1854
    DIVF VGV_MIN VGV_MAX tmpf1854
    CP_EQF 0.0 VGV_MAX flag1854
    SELECTF flag1854 0.0 tmpf1854 F.0

    SUBF 1.0 F.0 VGV_S
  else1853_2:
  endif1853:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1863
	DATA8 no1863
	DATA8 mode81863
	
	MOVEF_8 1.0 no1863
	SUB8 no1863 1 no1863
	DIV8 no1863 4 layer1863
	MATH MOD8 no1863 4 no1863

	MOVEF_8 2.0 mode81863
	
	INPUT_DEVICE READY_RAW layer1863 no1863 0 mode81863 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1864:
    JR_GTF VGV_P 100.0 endfor1864
  forbody1864:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1865:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1864
  endfor1864:
    DATAF tmpf1870
    DATA8 flag1870
    DIVF VGV_X 100.0 tmpf1870
    CP_EQF 0.0 100.0 flag1870
    SELECTF flag1870 0.0 tmpf1870 VGV_H

    DATAF tmpf1871
    DATA8 flag1871
    DIVF VGV_Z 100.0 tmpf1871
    CP_EQF 0.0 100.0 flag1871
    SELECTF flag1871 0.0 tmpf1871 VGV_S

    DATAF tmpf1872
    DATA8 flag1872
    DIVF VGV_D 100.0 tmpf1872
    CP_EQF 0.0 100.0 flag1872
    SELECTF flag1872 0.0 tmpf1872 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1880
	DATA8 no1880
	DATA8 mode81880
	
	MOVEF_8 1.0 no1880
	SUB8 no1880 1 no1880
	DIV8 no1880 4 layer1880
	MATH MOD8 no1880 4 no1880

	MOVEF_8 2.0 mode81880
	
	INPUT_DEVICE READY_RAW layer1880 no1880 0 mode81880 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1887
    DATA8 flag1887
    DIVF VGV_SRED 255.0 tmpf1887
    CP_EQF 0.0 255.0 flag1887
    SELECTF flag1887 0.0 tmpf1887 VGV_SRED

    DATAF tmpf1888
    DATA8 flag1888
    DIVF VGV_SGREEN 255.0 tmpf1888
    CP_EQF 0.0 255.0 flag1888
    SELECTF flag1888 0.0 tmpf1888 VGV_SGREEN

    DATAF tmpf1889
    DATA8 flag1889
    DIVF VGV_SBLUE 255.0 tmpf1889
    CP_EQF 0.0 255.0 flag1889
    SELECTF flag1889 0.0 tmpf1889 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1890_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1890_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1890
  else1890_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1890_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1890_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1890
  else1890_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1890_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1890_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1890_3:
  endif1890:
    JR_GTEQF VGV_SRED VGV_SGREEN else1891_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1891_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1891
  else1891_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1891_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1891_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1891
  else1891_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1891_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1891_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1891_3:
  endif1891:
    JR_NEQF VGV_MAX VGV_MIN else1892_1
    MOVEF_F 0.0 VGV_H
    JR endif1892
  else1892_1:
    JR_NEQF VGV_SRED VGV_MAX else1893_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1894_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1898
    DATA8 flag1898
    DIVF F.0 F.1 tmpf1898
    CP_EQF 0.0 F.1 flag1898
    SELECTF flag1898 0.0 tmpf1898 VGV_H

    JR endif1894
  else1894_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1902
    DATA8 flag1902
    DIVF F.1 F.2 tmpf1902
    CP_EQF 0.0 F.2 flag1902
    SELECTF flag1902 0.0 tmpf1902 F.0

    ADDF F.0 360.0 VGV_H
  else1894_2:
  endif1894:
    JR endif1893
  else1893_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1904_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1908
    DATA8 flag1908
    DIVF F.1 F.2 tmpf1908
    CP_EQF 0.0 F.2 flag1908
    SELECTF flag1908 0.0 tmpf1908 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1904
  else1904_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1913
    DATA8 flag1913
    DIVF F.1 F.2 tmpf1913
    CP_EQF 0.0 F.2 flag1913
    SELECTF flag1913 0.0 tmpf1913 F.0

    ADDF F.0 240.0 VGV_H
  else1904_2:
  endif1904:
  else1893_2:
  endif1893:
  else1892_2:
  endif1892:
    JR_NEQF VGV_MAX 0.0 else1915_1
    MOVEF_F 0.0 VGV_S
    JR endif1915
  else1915_1:
    DATAF tmpf1916
    DATA8 flag1916
    DIVF VGV_MIN VGV_MAX tmpf1916
    CP_EQF 0.0 VGV_MAX flag1916
    SELECTF flag1916 0.0 tmpf1916 F.0

    SUBF 1.0 F.0 VGV_S
  else1915_2:
  endif1915:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1920
    JR_LTF VGV_H 360.0 or1919
  and1920:
    JR_LTF VGV_H 0.0 else1918_1
    JR_GTF VGV_H 20.0 else1918_1
    JR_LTEQF VGV_S 0.3 else1918_1
    JR_GTF VGV_S 1.0 else1918_1
    JR_LTEQF VGV_V 0.025 else1918_1
    JR_GTEQF VGV_V 0.1 else1918_1
  or1919:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1918
  else1918_1:
    JR_LTF VGV_H 20.0 else1918_2
    JR_GTEQF VGV_H 60.0 else1918_2
    JR_LTF VGV_S 0.4 else1918_2
    JR_LTEQF VGV_V 0.03 else1918_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1918
  else1918_2:
    MOVEF_F 6.0 VGV_COLOR
  else1918_3:
  endif1918:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1921
	DATA8 no1921
	DATA8 mode81921
	
	MOVEF_8 1.0 no1921
	SUB8 no1921 1 no1921
	DIV8 no1921 4 layer1921
	MATH MOD8 no1921 4 no1921

	MOVEF_8 2.0 mode81921
	
	INPUT_DEVICE READY_RAW layer1921 no1921 0 mode81921 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1928
    DATA8 flag1928
    DIVF VGV_SRED 255.0 tmpf1928
    CP_EQF 0.0 255.0 flag1928
    SELECTF flag1928 0.0 tmpf1928 VGV_SRED

    DATAF tmpf1929
    DATA8 flag1929
    DIVF VGV_SGREEN 255.0 tmpf1929
    CP_EQF 0.0 255.0 flag1929
    SELECTF flag1929 0.0 tmpf1929 VGV_SGREEN

    DATAF tmpf1930
    DATA8 flag1930
    DIVF VGV_SBLUE 255.0 tmpf1930
    CP_EQF 0.0 255.0 flag1930
    SELECTF flag1930 0.0 tmpf1930 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1931_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1931_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1931
  else1931_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1931_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1931_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1931
  else1931_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1931_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1931_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1931_3:
  endif1931:
    JR_GTEQF VGV_SRED VGV_SGREEN else1932_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1932_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1932
  else1932_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1932_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1932_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1932
  else1932_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1932_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1932_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1932_3:
  endif1932:
    JR_NEQF VGV_MAX VGV_MIN else1933_1
    MOVEF_F 0.0 VGV_H
    JR endif1933
  else1933_1:
    JR_NEQF VGV_SRED VGV_MAX else1934_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1935_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1939
    DATA8 flag1939
    DIVF F.0 F.1 tmpf1939
    CP_EQF 0.0 F.1 flag1939
    SELECTF flag1939 0.0 tmpf1939 VGV_H

    JR endif1935
  else1935_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1943
    DATA8 flag1943
    DIVF F.1 F.2 tmpf1943
    CP_EQF 0.0 F.2 flag1943
    SELECTF flag1943 0.0 tmpf1943 F.0

    ADDF F.0 360.0 VGV_H
  else1935_2:
  endif1935:
    JR endif1934
  else1934_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1945_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1949
    DATA8 flag1949
    DIVF F.1 F.2 tmpf1949
    CP_EQF 0.0 F.2 flag1949
    SELECTF flag1949 0.0 tmpf1949 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1945
  else1945_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1954
    DATA8 flag1954
    DIVF F.1 F.2 tmpf1954
    CP_EQF 0.0 F.2 flag1954
    SELECTF flag1954 0.0 tmpf1954 F.0

    ADDF F.0 240.0 VGV_H
  else1945_2:
  endif1945:
  else1934_2:
  endif1934:
  else1933_2:
  endif1933:
    JR_NEQF VGV_MAX 0.0 else1956_1
    MOVEF_F 0.0 VGV_S
    JR endif1956
  else1956_1:
    DATAF tmpf1957
    DATA8 flag1957
    DIVF VGV_MIN VGV_MAX tmpf1957
    CP_EQF 0.0 VGV_MAX flag1957
    SELECTF flag1957 0.0 tmpf1957 F.0

    SUBF 1.0 F.0 VGV_S
  else1956_2:
  endif1956:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1961
    JR_LTF VGV_H 360.0 or1960
  and1961:
    JR_LTF VGV_H 0.0 else1959_1
    JR_GTF VGV_H 30.0 else1959_1
    JR_LTEQF VGV_S 0.3 else1959_1
    JR_GTF VGV_S 1.0 else1959_1
    JR_LTF VGV_V 0.0 else1959_1
    JR_GTEQF VGV_V 0.02 else1959_1
  or1960:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1959
  else1959_1:
    JR_LTF VGV_H 0.0 else1959_2
    JR_GTEQF VGV_H 60.0 else1959_2
    JR_LTF VGV_S 0.4 else1959_2
    JR_GTF VGV_S 1.0 else1959_2
    JR_LTEQF VGV_V 0.003 else1959_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1959
  else1959_2:
    MOVEF_F 6.0 VGV_COLOR
  else1959_3:
  endif1959:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1966
    DATA8 flag1966
    DIVF F.0 F.1 tmpf1966
    CP_EQF 0.0 F.1 flag1966
    SELECTF flag1966 0.0 tmpf1966 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1971
    DATA8 flag1971
    DIVF F.0 F.1 tmpf1971
    CP_EQF 0.0 F.1 flag1971
    SELECTF flag1971 0.0 tmpf1971 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1972:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1973:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K3 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_POLIN2DUS_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1983:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1984:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF 0.15 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF 8.0 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2DUS_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2DUS_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1998
	MOVEF_32 100.0 milliseconds1998
	DATA32 timer1998
	TIMER_WAIT milliseconds1998 timer1998
	TIMER_READY timer1998
  while1999:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile1999
  whilebody1999:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody1999
  endwhile1999:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds2005
	MOVEF_32 250.0 milliseconds2005
	DATA32 timer2005
	TIMER_WAIT milliseconds2005 timer2005
	TIMER_READY timer2005
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2007:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2008:
  while2009:
    JR_LTEQF VGV_S2 9.0 and2011
    JR_GTF VGV_S3 9.0 or2010
  and2011:
    JR_GTEQF VGV_S2 9.0 and2012
    JR_GTF VGV_S3 9.0 or2010
  and2012:
    JR_LTEQF VGV_S2 9.0 endwhile2009
    JR_GTEQF VGV_S3 9.0 endwhile2009
  or2010:
  whilebody2009:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2013:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2014:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and2016
    JR_GTF VGV_S3 9.0 whilebody2009
  and2016:
    JR_GTEQF VGV_S2 9.0 and2017
    JR_GTF VGV_S3 9.0 whilebody2009
  and2017:
    JR_LTEQF VGV_S2 9.0 and2018
    JR_LTF VGV_S3 9.0 whilebody2009
  and2018:
  endwhile2009:
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2019
	DATA8 no2019
	DATA8 mode82019
	
	MOVEF_8 2.0 no2019
	SUB8 no2019 1 no2019
	DIV8 no2019 4 layer2019
	MATH MOD8 no2019 4 no2019

	MOVEF_8 0.0 mode82019
	
	INPUT_DEVICE READY_RAW layer2019 no2019 0 mode82019 0
    DATA8 layer2020
	DATA8 no2020
	DATA8 mode82020
	
	MOVEF_8 3.0 no2020
	SUB8 no2020 1 no2020
	DIV8 no2020 4 layer2020
	MATH MOD8 no2020 4 no2020

	MOVEF_8 0.0 mode82020
	
	INPUT_DEVICE READY_RAW layer2020 no2020 0 mode82020 0
  while2021:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2021
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2021
  whilebody2021:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2025
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2021
  and2025:
  endwhile2021:
    CALL MOTOR.STOP 'BC' 'True'
  while2029:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2029
  whilebody2029:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2029
  endwhile2029:
    CALL MOTOR.STOP 'B' 'True'
  while2034:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2034
  whilebody2034:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2034
  endwhile2034:
    CALL MOTOR.STOP 'C' 'True'
  while2039:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2039
  whilebody2039:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2039
  endwhile2039:
    CALL MOTOR.STOP 'B' 'True'
  while2044:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2044
  whilebody2044:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2044
  endwhile2044:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
