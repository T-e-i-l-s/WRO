DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2039
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2039:
    JR_NEQ32 SUBPROGRAM 1 dispatch2040
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2040:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 30.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB60:
    WRITE32 ENDSUB_F_A2_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB61:
  while62:
    JR_LTEQF VGV_S3 10.0 and64
    JR_GTF VGV_S2 10.0 or63
  and64:
    JR_GTEQF VGV_S3 10.0 endwhile62
    JR_GTEQF VGV_S2 10.0 endwhile62
  or63:
  whilebody62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB65:
    WRITE32 ENDSUB_F_A2_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB66:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB67:
    JR_LTEQF VGV_S3 10.0 and68
    JR_GTF VGV_S2 10.0 whilebody62
  and68:
    JR_GTEQF VGV_S3 10.0 and69
    JR_LTF VGV_S2 10.0 whilebody62
  and69:
  endwhile62:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB71:
    JR_GTEQF VGV_S 0.6 else72_1
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/a123/Red'
    JR endif72
  else72_1:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/a123/Yellow'
  else72_2:
  endif72:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer75
	DATA8 nos75
	DATA8 busy75
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer75 nos75
	JR_EQ8 0 nos75 motornotbusy75
  motorwaiting75:
	OUTPUT_TEST layer75 nos75 busy75
	JR_EQ8 busy75 0 motornotbusy75
	SLEEP
	JR motorwaiting75
  motornotbusy75:
    JR_NEQF VGV_COLOR 4.0 else76_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB77:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer78
	DATA8 nos78
	DATA8 busy78
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer78 nos78
	JR_EQ8 0 nos78 motornotbusy78
  motorwaiting78:
	OUTPUT_TEST layer78 nos78 busy78
	JR_EQ8 busy78 0 motornotbusy78
	SLEEP
	JR motorwaiting78
  motornotbusy78:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer80
	DATA8 nos80
	DATA8 busy80
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer80 nos80
	JR_EQ8 0 nos80 motornotbusy80
  motorwaiting80:
	OUTPUT_TEST layer80 nos80 busy80
	JR_EQ8 busy80 0 motornotbusy80
	SLEEP
	JR motorwaiting80
  motornotbusy80:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while84:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 700.0 endwhile84
  whilebody84:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB86:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 700.0 whilebody84
  endwhile84:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB89:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer90
	DATA8 nos90
	DATA8 busy90
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer90 nos90
	JR_EQ8 0 nos90 motornotbusy90
  motorwaiting90:
	OUTPUT_TEST layer90 nos90 busy90
	JR_EQ8 busy90 0 motornotbusy90
	SLEEP
	JR motorwaiting90
  motornotbusy90:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while95:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf99
    DATA8 flag99
    DIVF F.1 2.0 tmpf99
    CP_EQF 0.0 2.0 flag99
    SELECTF flag99 0.0 tmpf99 F.0

    JR_GTEQF F.0 100.0 endwhile95
  whilebody95:
    WRITE32 ENDSUB_F_A3_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB100:
    WRITE32 ENDSUB_F_A2_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB101:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB102:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf106
    DATA8 flag106
    DIVF F.1 2.0 tmpf106
    CP_EQF 0.0 2.0 flag106
    SELECTF flag106 0.0 tmpf106 F.0

    JR_LTF F.0 100.0 whilebody95
  endwhile95:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB108:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else110_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB111:
    ADDF VGV_C 1.0 VGV_C
    JR endif110
  else110_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer113
	DATA8 nos113
	DATA8 busy113
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer113 nos113
	JR_EQ8 0 nos113 motornotbusy113
  motorwaiting113:
	OUTPUT_TEST layer113 nos113 busy113
	JR_EQ8 busy113 0 motornotbusy113
	SLEEP
	JR motorwaiting113
  motornotbusy113:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
  while115:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and117
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or116
  and117:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and120
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or116
  and120:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile115
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile115
  or116:
  whilebody115:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and126
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody115
  and126:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and129
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody115
  and129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and132
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody115
  and132:
  endwhile115:
    WRITE32 ENDSUB_F_A3_0:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB135:
    WRITE32 ENDSUB_F_A2_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB136:
  while137:
    JR_LTEQF VGV_S3 10.0 and139
    JR_GTF VGV_S2 10.0 or138
  and139:
    JR_GTEQF VGV_S3 10.0 endwhile137
    JR_GTEQF VGV_S2 10.0 endwhile137
  or138:
  whilebody137:
    WRITE32 ENDSUB_F_A3_0:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB140:
    WRITE32 ENDSUB_F_A2_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB141:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB142:
    JR_LTEQF VGV_S3 10.0 and143
    JR_GTF VGV_S2 10.0 whilebody137
  and143:
    JR_GTEQF VGV_S3 10.0 and144
    JR_LTF VGV_S2 10.0 whilebody137
  and144:
  endwhile137:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer145
	DATA8 nos145
	DATA8 busy145
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer145 nos145
	JR_EQ8 0 nos145 motornotbusy145
  motorwaiting145:
	OUTPUT_TEST layer145 nos145 busy145
	JR_EQ8 busy145 0 motornotbusy145
	SLEEP
	JR motorwaiting145
  motornotbusy145:
    WRITE32 ENDSUB_F_A3_0:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB146:
    WRITE32 ENDSUB_F_A2_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB147:
  while148:
    JR_LTEQF VGV_S3 10.0 and150
    JR_GTF VGV_S2 10.0 or149
  and150:
    JR_GTEQF VGV_S3 10.0 endwhile148
    JR_GTEQF VGV_S2 10.0 endwhile148
  or149:
  whilebody148:
    WRITE32 ENDSUB_F_A3_0:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB151:
    WRITE32 ENDSUB_F_A2_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB152:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB153:
    JR_LTEQF VGV_S3 10.0 and154
    JR_GTF VGV_S2 10.0 whilebody148
  and154:
    JR_GTEQF VGV_S3 10.0 and155
    JR_LTF VGV_S2 10.0 whilebody148
  and155:
  endwhile148:
    CALL MOTOR.STOP 'bc' 'true'
  else110_2:
  endif110:
    JR endif76
  else76_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB157:
    WRITE32 ENDSUB_F_A2_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB158:
  while159:
    JR_LTEQF VGV_S3 10.0 and161
    JR_GTF VGV_S2 10.0 or160
  and161:
    JR_GTEQF VGV_S3 10.0 endwhile159
    JR_GTEQF VGV_S2 10.0 endwhile159
  or160:
  whilebody159:
    WRITE32 ENDSUB_F_A3_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB162:
    WRITE32 ENDSUB_F_A2_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB163:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB164:
    JR_LTEQF VGV_S3 10.0 and165
    JR_GTF VGV_S2 10.0 whilebody159
  and165:
    JR_GTEQF VGV_S3 10.0 and166
    JR_LTF VGV_S2 10.0 whilebody159
  and166:
  endwhile159:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer168
	DATA8 nos168
	DATA8 busy168
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer168 nos168
	JR_EQ8 0 nos168 motornotbusy168
  motorwaiting168:
	OUTPUT_TEST layer168 nos168 busy168
	JR_EQ8 busy168 0 motornotbusy168
	SLEEP
	JR motorwaiting168
  motornotbusy168:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds172
	MOVEF_32 500.0 milliseconds172
	DATA32 timer172
	TIMER_WAIT milliseconds172 timer172
	TIMER_READY timer172
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB174:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while176:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile176
  whilebody176:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB178:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody176
  endwhile176:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else181_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB182:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer183
	DATA8 nos183
	DATA8 busy183
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer183 nos183
	JR_EQ8 0 nos183 motornotbusy183
  motorwaiting183:
	OUTPUT_TEST layer183 nos183 busy183
	JR_EQ8 busy183 0 motornotbusy183
	SLEEP
	JR motorwaiting183
  motornotbusy183:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB185:
    WRITE32 ENDSUB_F_A2_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB186:
  while187:
    JR_LTEQF VGV_S3 15.0 endwhile187
  whilebody187:
    WRITE32 ENDSUB_F_A3_0:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB188:
    WRITE32 ENDSUB_F_A2_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB189:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody187
  endwhile187:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB192:
    WRITE32 ENDSUB_F_A2_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB193:
  while194:
    JR_GTEQF VGV_S3 35.0 endwhile194
  whilebody194:
    WRITE32 ENDSUB_F_A3_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB195:
    WRITE32 ENDSUB_F_A2_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB196:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody194
  endwhile194:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB200:
    WRITE32 ENDSUB_F_A2_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB201:
  while202:
    JR_LTEQF VGV_S3 10.0 and204
    JR_GTF VGV_S2 10.0 or203
  and204:
    JR_GTEQF VGV_S3 10.0 endwhile202
    JR_GTEQF VGV_S2 10.0 endwhile202
  or203:
  whilebody202:
    WRITE32 ENDSUB_F_A3_0:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB205:
    WRITE32 ENDSUB_F_A2_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB206:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB207:
    JR_LTEQF VGV_S3 10.0 and208
    JR_GTF VGV_S2 10.0 whilebody202
  and208:
    JR_GTEQF VGV_S3 10.0 and209
    JR_LTF VGV_S2 10.0 whilebody202
  and209:
  endwhile202:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB211:
    ADDF VGV_C 1.0 VGV_C
    JR endif181
  else181_1:
    DATA32 tmp213
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp213
    JR_NEQ32 0 tmp213 alreadylaunched213
    OBJECT_START TF_VIDVIG_0
  alreadylaunched213:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB214:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer215
	DATA8 nos215
	DATA8 busy215
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer215 nos215
	JR_EQ8 0 nos215 motornotbusy215
  motorwaiting215:
	OUTPUT_TEST layer215 nos215 busy215
	JR_EQ8 busy215 0 motornotbusy215
	SLEEP
	JR motorwaiting215
  motornotbusy215:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer216
	DATA8 nos216
	DATA8 busy216
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer216 nos216
	JR_EQ8 0 nos216 motornotbusy216
  motorwaiting216:
	OUTPUT_TEST layer216 nos216 busy216
	JR_EQ8 busy216 0 motornotbusy216
	SLEEP
	JR motorwaiting216
  motornotbusy216:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB218:
    WRITE32 ENDSUB_F_A2_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB219:
  while220:
    JR_LTEQF VGV_S3 10.0 and222
    JR_GTF VGV_S2 10.0 or221
  and222:
    JR_GTEQF VGV_S3 10.0 endwhile220
    JR_GTEQF VGV_S2 10.0 endwhile220
  or221:
  whilebody220:
    WRITE32 ENDSUB_F_A3_0:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB223:
    WRITE32 ENDSUB_F_A2_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB224:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB225:
    JR_LTEQF VGV_S3 10.0 and226
    JR_GTF VGV_S2 10.0 whilebody220
  and226:
    JR_GTEQF VGV_S3 10.0 and227
    JR_LTF VGV_S2 10.0 whilebody220
  and227:
  endwhile220:
    CALL MOTOR.STOP 'bc' 'true'
  else181_2:
  endif181:
  else76_2:
  endif76:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB229:
    JR_GTEQF VGV_H 35.0 else230_1
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif230
  else230_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else230_2:
  endif230:
    JR_NEQF VGV_COLOR2 4.0 else233_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer234
	DATA8 nos234
	DATA8 busy234
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer234 nos234
	JR_EQ8 0 nos234 motornotbusy234
  motorwaiting234:
	OUTPUT_TEST layer234 nos234 busy234
	JR_EQ8 busy234 0 motornotbusy234
	SLEEP
	JR motorwaiting234
  motornotbusy234:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB235:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif233
  else233_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB237:
    CALL MOTOR.RESETCOUNT 'bc'
  while239:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile239
  whilebody239:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB241:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody239
  endwhile239:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds245
	MOVEF_32 100.0 milliseconds245
	DATA32 timer245
	TIMER_WAIT milliseconds245 timer245
	TIMER_READY timer245
    WRITE32 ENDSUB_F_NPL_0:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB246:
    MOVEF_F 1230.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf247
    DATA8 flag247
    DIVF 360.0 VGV_L tmpf247
    CP_EQF 0.0 VGV_L flag247
    SELECTF flag247 0.0 tmpf247 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while251:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf255
    DATA8 flag255
    DIVF F.1 2.0 tmpf255
    CP_EQF 0.0 2.0 flag255
    SELECTF flag255 0.0 tmpf255 F.0

    JR_GTEQF F.0 VGV_X endwhile251
  whilebody251:
    WRITE32 ENDSUB_F_A3_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB256:
    WRITE32 ENDSUB_F_A2_0:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB257:
    JR_GTEQF VGV_SPEED 60.0 else258_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else258_1:
  endif258:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB260:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf264
    DATA8 flag264
    DIVF F.1 2.0 tmpf264
    CP_EQF 0.0 2.0 flag264
    SELECTF flag264 0.0 tmpf264 F.0

    JR_LTF F.0 VGV_X whilebody251
  endwhile251:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB266:
    JR_NEQF VGV_C 1.0 else267_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB268:
    JR endif267
  else267_1:
    JR_NEQF VGV_C 0.0 else267_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB269:
  else267_2:
  endif267:
    MOVEF_F 1040.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB270:
    WRITE32 ENDSUB_F_A3_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB271:
    WRITE32 ENDSUB_F_A2_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB272:
  while273:
    JR_LTEQF VGV_S3 10.0 and275
    JR_GTF VGV_S2 10.0 or274
  and275:
    JR_GTEQF VGV_S3 10.0 endwhile273
    JR_GTEQF VGV_S2 10.0 endwhile273
  or274:
  whilebody273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB276:
    WRITE32 ENDSUB_F_A2_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB277:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB278:
    JR_LTEQF VGV_S3 10.0 and279
    JR_GTF VGV_S2 10.0 whilebody273
  and279:
    JR_GTEQF VGV_S3 10.0 and280
    JR_LTF VGV_S2 10.0 whilebody273
  and280:
  endwhile273:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    WRITE32 ENDSUB_F_A3_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB283:
    WRITE32 ENDSUB_F_A2_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB284:
  while285:
    JR_LTEQF VGV_S3 10.0 and287
    JR_GTF VGV_S2 10.0 or286
  and287:
    JR_GTEQF VGV_S3 10.0 endwhile285
    JR_GTEQF VGV_S2 10.0 endwhile285
  or286:
  whilebody285:
    WRITE32 ENDSUB_F_A3_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB288:
    WRITE32 ENDSUB_F_A2_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB289:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB290:
    JR_LTEQF VGV_S3 10.0 and291
    JR_GTF VGV_S2 10.0 whilebody285
  and291:
    JR_GTEQF VGV_S3 10.0 and292
    JR_LTF VGV_S2 10.0 whilebody285
  and292:
  endwhile285:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB294:
    CALL MOTOR.RESETCOUNT 'bc'
  while296:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf300
    DATA8 flag300
    DIVF F.1 2.0 tmpf300
    CP_EQF 0.0 2.0 flag300
    SELECTF flag300 0.0 tmpf300 F.0

    JR_GTEQF F.0 350.0 endwhile296
  whilebody296:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB301:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf305
    DATA8 flag305
    DIVF F.1 2.0 tmpf305
    CP_EQF 0.0 2.0 flag305
    SELECTF flag305 0.0 tmpf305 F.0

    JR_LTF F.0 350.0 whilebody296
  endwhile296:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds308
	MOVEF_32 500.0 milliseconds308
	DATA32 timer308
	TIMER_WAIT milliseconds308 timer308
	TIMER_READY timer308
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    DATA32 tmp311
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp311
    JR_NEQ32 0 tmp311 alreadylaunched311
    OBJECT_START TF_VIDVIG_0
  alreadylaunched311:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB312:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB313:
    ADDF VGV_C 1.0 VGV_C
  else233_2:
  endif233:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB315:
    JR_GTF VGV_H 120.0 or317
    JR_LTF VGV_H 0.0 else316_1
    JR_GTF VGV_H 30.0 else316_1
  or317:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif316
  else316_1:
    JR_GTEQF VGV_H 120.0 else316_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif316
  else316_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else316_3:
  endif316:
    JR_NEQF VGV_COLOR3 4.0 else321_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB323:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else325_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB326:
    CALL MOTOR.RESETCOUNT 'bc'
  while328:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf332
    DATA8 flag332
    DIVF F.1 2.0 tmpf332
    CP_EQF 0.0 2.0 flag332
    SELECTF flag332 0.0 tmpf332 F.0

    JR_GTEQF F.0 450.0 endwhile328
  whilebody328:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB333:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf337
    DATA8 flag337
    DIVF F.1 2.0 tmpf337
    CP_EQF 0.0 2.0 flag337
    SELECTF flag337 0.0 tmpf337 F.0

    JR_LTF F.0 450.0 whilebody328
  endwhile328:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds340
	MOVEF_32 500.0 milliseconds340
	DATA32 timer340
	TIMER_WAIT milliseconds340 timer340
	TIMER_READY timer340
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB342:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf343
    DATA8 flag343
    DIVF 360.0 VGV_L tmpf343
    CP_EQF 0.0 VGV_L flag343
    SELECTF flag343 0.0 tmpf343 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while346:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf350
    DATA8 flag350
    DIVF F.1 2.0 tmpf350
    CP_EQF 0.0 2.0 flag350
    SELECTF flag350 0.0 tmpf350 F.0

    JR_GTEQF F.0 VGV_X endwhile346
  whilebody346:
    WRITE32 ENDSUB_F_A3_0:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB351:
    WRITE32 ENDSUB_F_A2_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB352:
    JR_GTEQF VGV_SPEED 80.0 else353_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else353_1:
  endif353:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB355:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf359
    DATA8 flag359
    DIVF F.1 2.0 tmpf359
    CP_EQF 0.0 2.0 flag359
    SELECTF flag359 0.0 tmpf359 F.0

    JR_LTF F.0 VGV_X whilebody346
  endwhile346:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB361:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB362:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB363:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB365:
    CALL MOTOR.RESETCOUNT 'bc'
  while367:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf371
    DATA8 flag371
    DIVF F.1 2.0 tmpf371
    CP_EQF 0.0 2.0 flag371
    SELECTF flag371 0.0 tmpf371 F.0

    JR_GTEQF F.0 300.0 endwhile367
  whilebody367:
    MOVEF_F 40.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB372:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf376
    DATA8 flag376
    DIVF F.1 2.0 tmpf376
    CP_EQF 0.0 2.0 flag376
    SELECTF flag376 0.0 tmpf376 F.0

    JR_LTF F.0 300.0 whilebody367
  endwhile367:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds379
	MOVEF_32 500.0 milliseconds379
	DATA32 timer379
	TIMER_WAIT milliseconds379 timer379
	TIMER_READY timer379
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB381:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB382:
    WRITE32 ENDSUB_F_PR_0:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB383:
    CALL MOTOR.RESETCOUNT 'bc'
  while385:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf389
    DATA8 flag389
    DIVF F.1 2.0 tmpf389
    CP_EQF 0.0 2.0 flag389
    SELECTF flag389 0.0 tmpf389 F.0

    JR_GTEQF F.0 400.0 endwhile385
  whilebody385:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB390:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf394
    DATA8 flag394
    DIVF F.1 2.0 tmpf394
    CP_EQF 0.0 2.0 flag394
    SELECTF flag394 0.0 tmpf394 F.0

    JR_LTF F.0 400.0 whilebody385
  endwhile385:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds397
	MOVEF_32 500.0 milliseconds397
	DATA32 timer397
	TIMER_WAIT milliseconds397 timer397
	TIMER_READY timer397
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB399:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf400
    DATA8 flag400
    DIVF 360.0 VGV_L tmpf400
    CP_EQF 0.0 VGV_L flag400
    SELECTF flag400 0.0 tmpf400 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while403:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf407
    DATA8 flag407
    DIVF F.1 2.0 tmpf407
    CP_EQF 0.0 2.0 flag407
    SELECTF flag407 0.0 tmpf407 F.0

    JR_GTEQF F.0 VGV_X endwhile403
  whilebody403:
    WRITE32 ENDSUB_F_A3_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB408:
    WRITE32 ENDSUB_F_A2_0:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB409:
    JR_GTEQF VGV_SPEED 80.0 else410_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else410_1:
  endif410:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB412:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf416
    DATA8 flag416
    DIVF F.1 2.0 tmpf416
    CP_EQF 0.0 2.0 flag416
    SELECTF flag416 0.0 tmpf416 F.0

    JR_LTF F.0 VGV_X whilebody403
  endwhile403:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB418:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB419:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB420:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB422:
    CALL MOTOR.RESETCOUNT 'bc'
  while424:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf428
    DATA8 flag428
    DIVF F.1 2.0 tmpf428
    CP_EQF 0.0 2.0 flag428
    SELECTF flag428 0.0 tmpf428 F.0

    JR_GTEQF F.0 380.0 endwhile424
  whilebody424:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB429:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf433
    DATA8 flag433
    DIVF F.1 2.0 tmpf433
    CP_EQF 0.0 2.0 flag433
    SELECTF flag433 0.0 tmpf433 F.0

    JR_LTF F.0 380.0 whilebody424
  endwhile424:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds436
	MOVEF_32 500.0 milliseconds436
	DATA32 timer436
	TIMER_WAIT milliseconds436 timer436
	TIMER_READY timer436
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB438:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB439:
    WRITE32 ENDSUB_F_PR_0:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB440:
    CALL MOTOR.RESETCOUNT 'bc'
  while442:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf446
    DATA8 flag446
    DIVF F.1 2.0 tmpf446
    CP_EQF 0.0 2.0 flag446
    SELECTF flag446 0.0 tmpf446 F.0

    JR_GTEQF F.0 270.0 endwhile442
  whilebody442:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB447:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf451
    DATA8 flag451
    DIVF F.1 2.0 tmpf451
    CP_EQF 0.0 2.0 flag451
    SELECTF flag451 0.0 tmpf451 F.0

    JR_LTF F.0 270.0 whilebody442
  endwhile442:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds454
	MOVEF_32 500.0 milliseconds454
	DATA32 timer454
	TIMER_WAIT milliseconds454 timer454
	TIMER_READY timer454
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB456:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf457
    DATA8 flag457
    DIVF 360.0 VGV_L tmpf457
    CP_EQF 0.0 VGV_L flag457
    SELECTF flag457 0.0 tmpf457 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while460:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf464
    DATA8 flag464
    DIVF F.1 2.0 tmpf464
    CP_EQF 0.0 2.0 flag464
    SELECTF flag464 0.0 tmpf464 F.0

    JR_GTEQF F.0 VGV_X endwhile460
  whilebody460:
    WRITE32 ENDSUB_F_A3_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB465:
    WRITE32 ENDSUB_F_A2_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB466:
    JR_GTEQF VGV_SPEED 80.0 else467_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else467_1:
  endif467:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB469:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf473
    DATA8 flag473
    DIVF F.1 2.0 tmpf473
    CP_EQF 0.0 2.0 flag473
    SELECTF flag473 0.0 tmpf473 F.0

    JR_LTF F.0 VGV_X whilebody460
  endwhile460:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB475:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB476:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB477:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB479:
    CALL MOTOR.RESETCOUNT 'bc'
  while481:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf485
    DATA8 flag485
    DIVF F.1 2.0 tmpf485
    CP_EQF 0.0 2.0 flag485
    SELECTF flag485 0.0 tmpf485 F.0

    JR_GTEQF F.0 240.0 endwhile481
  whilebody481:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB486:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf490
    DATA8 flag490
    DIVF F.1 2.0 tmpf490
    CP_EQF 0.0 2.0 flag490
    SELECTF flag490 0.0 tmpf490 F.0

    JR_LTF F.0 240.0 whilebody481
  endwhile481:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds493
	MOVEF_32 500.0 milliseconds493
	DATA32 timer493
	TIMER_WAIT milliseconds493 timer493
	TIMER_READY timer493
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB495:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB496:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer497
	DATA8 nos497
	DATA8 busy497
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer497 nos497
	JR_EQ8 0 nos497 motornotbusy497
  motorwaiting497:
	OUTPUT_TEST layer497 nos497 busy497
	JR_EQ8 busy497 0 motornotbusy497
	SLEEP
	JR motorwaiting497
  motornotbusy497:
    PROGRAM_STOP -1
  else325_1:
  endif325:
  else321_1:
  endif321:
    JR_NEQF VGV_COLOR3 5.0 else499_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB500:
    CALL MOTOR.RESETCOUNT 'bc'
  while502:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf506
    DATA8 flag506
    DIVF F.1 2.0 tmpf506
    CP_EQF 0.0 2.0 flag506
    SELECTF flag506 0.0 tmpf506 F.0

    JR_GTEQF F.0 300.0 endwhile502
  whilebody502:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB507:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf511
    DATA8 flag511
    DIVF F.1 2.0 tmpf511
    CP_EQF 0.0 2.0 flag511
    SELECTF flag511 0.0 tmpf511 F.0

    JR_LTF F.0 300.0 whilebody502
  endwhile502:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds514
	MOVEF_32 500.0 milliseconds514
	DATA32 timer514
	TIMER_WAIT milliseconds514 timer514
	TIMER_READY timer514
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB516:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf517
    DATA8 flag517
    DIVF 360.0 VGV_L tmpf517
    CP_EQF 0.0 VGV_L flag517
    SELECTF flag517 0.0 tmpf517 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while520:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf524
    DATA8 flag524
    DIVF F.1 2.0 tmpf524
    CP_EQF 0.0 2.0 flag524
    SELECTF flag524 0.0 tmpf524 F.0

    JR_GTEQF F.0 VGV_X endwhile520
  whilebody520:
    WRITE32 ENDSUB_F_A3_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB525:
    WRITE32 ENDSUB_F_A2_0:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB526:
    JR_GTEQF VGV_SPEED 80.0 else527_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else527_1:
  endif527:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB529:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf533
    DATA8 flag533
    DIVF F.1 2.0 tmpf533
    CP_EQF 0.0 2.0 flag533
    SELECTF flag533 0.0 tmpf533 F.0

    JR_LTF F.0 VGV_X whilebody520
  endwhile520:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB535:
    JR_NEQF VGV_C 1.0 else536_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB537:
    JR endif536
  else536_1:
    JR_NEQF VGV_C 0.0 else536_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB538:
    JR endif536
  else536_2:
    JR_NEQF VGV_C 2.0 else536_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB539:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB540:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds542
	MOVEF_32 100.0 milliseconds542
	DATA32 timer542
	TIMER_WAIT milliseconds542 timer542
	TIMER_READY timer542
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer543
	DATA8 nos543
	DATA8 busy543
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer543 nos543
	JR_EQ8 0 nos543 motornotbusy543
  motorwaiting543:
	OUTPUT_TEST layer543 nos543 busy543
	JR_EQ8 busy543 0 motornotbusy543
	SLEEP
	JR motorwaiting543
  motornotbusy543:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer545
	DATA8 nos545
	DATA8 busy545
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer545 nos545
	JR_EQ8 0 nos545 motornotbusy545
  motorwaiting545:
	OUTPUT_TEST layer545 nos545 busy545
	JR_EQ8 busy545 0 motornotbusy545
	SLEEP
	JR motorwaiting545
  motornotbusy545:
    WRITE32 ENDSUB_F_A3_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB546:
    WRITE32 ENDSUB_F_A2_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB547:
  while548:
    JR_LTEQF VGV_S2 15.0 endwhile548
  whilebody548:
    WRITE32 ENDSUB_F_A3_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB549:
    WRITE32 ENDSUB_F_A2_0:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB550:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody548
  endwhile548:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB553:
    WRITE32 ENDSUB_F_A2_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB554:
  while555:
    JR_GTEQF VGV_S2 55.0 endwhile555
  whilebody555:
    WRITE32 ENDSUB_F_A3_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB556:
    WRITE32 ENDSUB_F_A2_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB557:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody555
  endwhile555:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while561:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf565
    DATA8 flag565
    DIVF F.1 2.0 tmpf565
    CP_EQF 0.0 2.0 flag565
    SELECTF flag565 0.0 tmpf565 F.0

    JR_GTEQF F.0 270.0 endwhile561
  whilebody561:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB566:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf570
    DATA8 flag570
    DIVF F.1 2.0 tmpf570
    CP_EQF 0.0 2.0 flag570
    SELECTF flag570 0.0 tmpf570 F.0

    JR_LTF F.0 270.0 whilebody561
  endwhile561:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds573
	MOVEF_32 500.0 milliseconds573
	DATA32 timer573
	TIMER_WAIT milliseconds573 timer573
	TIMER_READY timer573
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB575:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB576:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer578
	DATA8 nos578
	DATA8 busy578
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer578 nos578
	JR_EQ8 0 nos578 motornotbusy578
  motorwaiting578:
	OUTPUT_TEST layer578 nos578 busy578
	JR_EQ8 busy578 0 motornotbusy578
	SLEEP
	JR motorwaiting578
  motornotbusy578:
    PROGRAM_STOP -1
  else536_3:
  endif536:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB580:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer582
	DATA8 nos582
	DATA8 busy582
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer582 nos582
	JR_EQ8 0 nos582 motornotbusy582
  motorwaiting582:
	OUTPUT_TEST layer582 nos582 busy582
	JR_EQ8 busy582 0 motornotbusy582
	SLEEP
	JR motorwaiting582
  motornotbusy582:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer584
	DATA8 nos584
	DATA8 busy584
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer584 nos584
	JR_EQ8 0 nos584 motornotbusy584
  motorwaiting584:
	OUTPUT_TEST layer584 nos584 busy584
	JR_EQ8 busy584 0 motornotbusy584
	SLEEP
	JR motorwaiting584
  motornotbusy584:
    WRITE32 ENDSUB_F_A3_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB585:
    WRITE32 ENDSUB_F_A2_0:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB586:
  while587:
    JR_LTEQF VGV_S2 15.0 endwhile587
  whilebody587:
    WRITE32 ENDSUB_F_A3_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB588:
    WRITE32 ENDSUB_F_A2_0:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB589:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody587
  endwhile587:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB592:
    WRITE32 ENDSUB_F_A2_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB593:
  while594:
    JR_GTEQF VGV_S2 55.0 endwhile594
  whilebody594:
    WRITE32 ENDSUB_F_A3_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB595:
    WRITE32 ENDSUB_F_A2_0:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB596:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody594
  endwhile594:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while600:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf604
    DATA8 flag604
    DIVF F.1 2.0 tmpf604
    CP_EQF 0.0 2.0 flag604
    SELECTF flag604 0.0 tmpf604 F.0

    JR_GTEQF F.0 200.0 endwhile600
  whilebody600:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB605:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf609
    DATA8 flag609
    DIVF F.1 2.0 tmpf609
    CP_EQF 0.0 2.0 flag609
    SELECTF flag609 0.0 tmpf609 F.0

    JR_LTF F.0 200.0 whilebody600
  endwhile600:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds612
	MOVEF_32 500.0 milliseconds612
	DATA32 timer612
	TIMER_WAIT milliseconds612 timer612
	TIMER_READY timer612
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB614:
    DATA32 tmp615
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp615
    JR_NEQ32 0 tmp615 alreadylaunched615
    OBJECT_START TF_VIDVIG_0
  alreadylaunched615:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB616:
    ADDF VGV_C 1.0 VGV_C
  else499_1:
  endif499:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB618:
    JR_GTEQF VGV_H 25.0 else619_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif619
  else619_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else619_2:
  endif619:
    JR_NEQF VGV_COLOR4 4.0 else622_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer623
	DATA8 nos623
	DATA8 busy623
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer623 nos623
	JR_EQ8 0 nos623 motornotbusy623
  motorwaiting623:
	OUTPUT_TEST layer623 nos623 busy623
	JR_EQ8 busy623 0 motornotbusy623
	SLEEP
	JR motorwaiting623
  motornotbusy623:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB624:
    JR_NEQF VGV_C 1.0 else625_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB626:
    CALL MOTOR.RESETCOUNT 'bc'
  while628:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf632
    DATA8 flag632
    DIVF F.1 2.0 tmpf632
    CP_EQF 0.0 2.0 flag632
    SELECTF flag632 0.0 tmpf632 F.0

    JR_GTEQF F.0 400.0 endwhile628
  whilebody628:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB633:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf637
    DATA8 flag637
    DIVF F.1 2.0 tmpf637
    CP_EQF 0.0 2.0 flag637
    SELECTF flag637 0.0 tmpf637 F.0

    JR_LTF F.0 400.0 whilebody628
  endwhile628:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds640
	MOVEF_32 500.0 milliseconds640
	DATA32 timer640
	TIMER_WAIT milliseconds640 timer640
	TIMER_READY timer640
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB642:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf643
    DATA8 flag643
    DIVF 360.0 VGV_L tmpf643
    CP_EQF 0.0 VGV_L flag643
    SELECTF flag643 0.0 tmpf643 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while646:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf650
    DATA8 flag650
    DIVF F.1 2.0 tmpf650
    CP_EQF 0.0 2.0 flag650
    SELECTF flag650 0.0 tmpf650 F.0

    JR_GTEQF F.0 VGV_X endwhile646
  whilebody646:
    WRITE32 ENDSUB_F_A3_0:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB651:
    WRITE32 ENDSUB_F_A2_0:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB652:
    JR_GTEQF VGV_SPEED 80.0 else653_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else653_1:
  endif653:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB655:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf659
    DATA8 flag659
    DIVF F.1 2.0 tmpf659
    CP_EQF 0.0 2.0 flag659
    SELECTF flag659 0.0 tmpf659 F.0

    JR_LTF F.0 VGV_X whilebody646
  endwhile646:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB661:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB662:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB663:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB665:
    CALL MOTOR.RESETCOUNT 'bc'
  while667:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf671
    DATA8 flag671
    DIVF F.1 2.0 tmpf671
    CP_EQF 0.0 2.0 flag671
    SELECTF flag671 0.0 tmpf671 F.0

    JR_GTEQF F.0 380.0 endwhile667
  whilebody667:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB672:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf676
    DATA8 flag676
    DIVF F.1 2.0 tmpf676
    CP_EQF 0.0 2.0 flag676
    SELECTF flag676 0.0 tmpf676 F.0

    JR_LTF F.0 380.0 whilebody667
  endwhile667:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds679
	MOVEF_32 500.0 milliseconds679
	DATA32 timer679
	TIMER_WAIT milliseconds679 timer679
	TIMER_READY timer679
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB681:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB682:
    WRITE32 ENDSUB_F_PR_0:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB683:
    CALL MOTOR.RESETCOUNT 'bc'
  while685:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf689
    DATA8 flag689
    DIVF F.1 2.0 tmpf689
    CP_EQF 0.0 2.0 flag689
    SELECTF flag689 0.0 tmpf689 F.0

    JR_GTEQF F.0 270.0 endwhile685
  whilebody685:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB690:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf694
    DATA8 flag694
    DIVF F.1 2.0 tmpf694
    CP_EQF 0.0 2.0 flag694
    SELECTF flag694 0.0 tmpf694 F.0

    JR_LTF F.0 270.0 whilebody685
  endwhile685:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds697
	MOVEF_32 500.0 milliseconds697
	DATA32 timer697
	TIMER_WAIT milliseconds697 timer697
	TIMER_READY timer697
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB699:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf700
    DATA8 flag700
    DIVF 360.0 VGV_L tmpf700
    CP_EQF 0.0 VGV_L flag700
    SELECTF flag700 0.0 tmpf700 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while703:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf707
    DATA8 flag707
    DIVF F.1 2.0 tmpf707
    CP_EQF 0.0 2.0 flag707
    SELECTF flag707 0.0 tmpf707 F.0

    JR_GTEQF F.0 VGV_X endwhile703
  whilebody703:
    WRITE32 ENDSUB_F_A3_0:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB708:
    WRITE32 ENDSUB_F_A2_0:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB709:
    JR_GTEQF VGV_SPEED 80.0 else710_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else710_1:
  endif710:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB712:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf716
    DATA8 flag716
    DIVF F.1 2.0 tmpf716
    CP_EQF 0.0 2.0 flag716
    SELECTF flag716 0.0 tmpf716 F.0

    JR_LTF F.0 VGV_X whilebody703
  endwhile703:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB718:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB719:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB720:
    WRITE32 ENDSUB_F_PR_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB721:
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while723:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf727
    DATA8 flag727
    DIVF F.1 2.0 tmpf727
    CP_EQF 0.0 2.0 flag727
    SELECTF flag727 0.0 tmpf727 F.0

    JR_GTEQF F.0 200.0 endwhile723
  whilebody723:
    WRITE32 ENDSUB_F_A3_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB728:
    WRITE32 ENDSUB_F_A2_0:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB729:
    JR_GTEQF VGV_SPEED 80.0 else730_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else730_1:
  endif730:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB732:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf736
    DATA8 flag736
    DIVF F.1 2.0 tmpf736
    CP_EQF 0.0 2.0 flag736
    SELECTF flag736 0.0 tmpf736 F.0

    JR_LTF F.0 200.0 whilebody723
  endwhile723:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds739
	MOVEF_32 500.0 milliseconds739
	DATA32 timer739
	TIMER_WAIT milliseconds739 timer739
	TIMER_READY timer739
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB741:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB742:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer743
	DATA8 nos743
	DATA8 busy743
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer743 nos743
	JR_EQ8 0 nos743 motornotbusy743
  motorwaiting743:
	OUTPUT_TEST layer743 nos743 busy743
	JR_EQ8 busy743 0 motornotbusy743
	SLEEP
	JR motorwaiting743
  motornotbusy743:
    PROGRAM_STOP -1
  else625_1:
  endif625:
  else622_1:
  endif622:
    JR_NEQF VGV_COLOR4 5.0 else745_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB746:
    CALL MOTOR.RESETCOUNT 'bc'
  while748:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf752
    DATA8 flag752
    DIVF F.1 2.0 tmpf752
    CP_EQF 0.0 2.0 flag752
    SELECTF flag752 0.0 tmpf752 F.0

    JR_GTEQF F.0 450.0 endwhile748
  whilebody748:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB753:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 2.0 tmpf757
    CP_EQF 0.0 2.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    JR_LTF F.0 450.0 whilebody748
  endwhile748:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds760
	MOVEF_32 500.0 milliseconds760
	DATA32 timer760
	TIMER_WAIT milliseconds760 timer760
	TIMER_READY timer760
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB762:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf763
    DATA8 flag763
    DIVF 360.0 VGV_L tmpf763
    CP_EQF 0.0 VGV_L flag763
    SELECTF flag763 0.0 tmpf763 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while766:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf770
    DATA8 flag770
    DIVF F.1 2.0 tmpf770
    CP_EQF 0.0 2.0 flag770
    SELECTF flag770 0.0 tmpf770 F.0

    JR_GTEQF F.0 VGV_X endwhile766
  whilebody766:
    WRITE32 ENDSUB_F_A3_0:CALLSUB771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB771:
    WRITE32 ENDSUB_F_A2_0:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB772:
    JR_GTEQF VGV_SPEED 80.0 else773_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else773_1:
  endif773:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB775:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf779
    DATA8 flag779
    DIVF F.1 2.0 tmpf779
    CP_EQF 0.0 2.0 flag779
    SELECTF flag779 0.0 tmpf779 F.0

    JR_LTF F.0 VGV_X whilebody766
  endwhile766:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB781:
    JR_NEQF VGV_C 1.0 else782_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB783:
    JR endif782
  else782_1:
    JR_NEQF VGV_C 0.0 else782_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB784:
    JR endif782
  else782_2:
    JR_NEQF VGV_C 2.0 else782_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB785:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB786:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB788:
    CALL MOTOR.RESETCOUNT 'bc'
  while790:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf794
    DATA8 flag794
    DIVF F.1 2.0 tmpf794
    CP_EQF 0.0 2.0 flag794
    SELECTF flag794 0.0 tmpf794 F.0

    JR_GTEQF F.0 250.0 endwhile790
  whilebody790:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB795:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf799
    DATA8 flag799
    DIVF F.1 2.0 tmpf799
    CP_EQF 0.0 2.0 flag799
    SELECTF flag799 0.0 tmpf799 F.0

    JR_LTF F.0 250.0 whilebody790
  endwhile790:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds802
	MOVEF_32 500.0 milliseconds802
	DATA32 timer802
	TIMER_WAIT milliseconds802 timer802
	TIMER_READY timer802
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB804:
    CALL MOTOR.RESETCOUNT 'bc'
  while806:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf810
    DATA8 flag810
    DIVF F.1 2.0 tmpf810
    CP_EQF 0.0 2.0 flag810
    SELECTF flag810 0.0 tmpf810 F.0

    JR_GTEQF F.0 100.0 endwhile806
  whilebody806:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB811:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf815
    DATA8 flag815
    DIVF F.1 2.0 tmpf815
    CP_EQF 0.0 2.0 flag815
    SELECTF flag815 0.0 tmpf815 F.0

    JR_LTF F.0 100.0 whilebody806
  endwhile806:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB817:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer819
	DATA8 nos819
	DATA8 busy819
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer819 nos819
	JR_EQ8 0 nos819 motornotbusy819
  motorwaiting819:
	OUTPUT_TEST layer819 nos819 busy819
	JR_EQ8 busy819 0 motornotbusy819
	SLEEP
	JR motorwaiting819
  motornotbusy819:
    PROGRAM_STOP -1
  else782_3:
  endif782:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB821:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB823:
    CALL MOTOR.RESETCOUNT 'bc'
  while825:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf829
    DATA8 flag829
    DIVF F.1 2.0 tmpf829
    CP_EQF 0.0 2.0 flag829
    SELECTF flag829 0.0 tmpf829 F.0

    JR_GTEQF F.0 250.0 endwhile825
  whilebody825:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB830:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf834
    DATA8 flag834
    DIVF F.1 2.0 tmpf834
    CP_EQF 0.0 2.0 flag834
    SELECTF flag834 0.0 tmpf834 F.0

    JR_LTF F.0 250.0 whilebody825
  endwhile825:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds837
	MOVEF_32 500.0 milliseconds837
	DATA32 timer837
	TIMER_WAIT milliseconds837 timer837
	TIMER_READY timer837
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp839
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp839
    JR_NEQ32 0 tmp839 alreadylaunched839
    OBJECT_START TF_VIDVIG_0
  alreadylaunched839:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB840:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB841:
    ADDF VGV_C 1.0 VGV_C
  else745_1:
  endif745:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB843:
    JR_LTF VGV_H 30.0 or845
    JR_LTEQF VGV_H 280.0 else844_1
  or845:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif844
  else844_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else844_2:
  endif844:
    JR_NEQF VGV_COLOR5 4.0 else848_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer849
	DATA8 nos849
	DATA8 busy849
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer849 nos849
	JR_EQ8 0 nos849 motornotbusy849
  motorwaiting849:
	OUTPUT_TEST layer849 nos849 busy849
	JR_EQ8 busy849 0 motornotbusy849
	SLEEP
	JR motorwaiting849
  motornotbusy849:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB850:
    WRITE32 ENDSUB_F_PR_0:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB851:
    CALL MOTOR.RESETCOUNT 'bc'
  while853:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf857
    DATA8 flag857
    DIVF F.1 2.0 tmpf857
    CP_EQF 0.0 2.0 flag857
    SELECTF flag857 0.0 tmpf857 F.0

    JR_GTEQF F.0 270.0 endwhile853
  whilebody853:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB858:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf862
    DATA8 flag862
    DIVF F.1 2.0 tmpf862
    CP_EQF 0.0 2.0 flag862
    SELECTF flag862 0.0 tmpf862 F.0

    JR_LTF F.0 270.0 whilebody853
  endwhile853:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds865
	MOVEF_32 500.0 milliseconds865
	DATA32 timer865
	TIMER_WAIT milliseconds865 timer865
	TIMER_READY timer865
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB867:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB868:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf869
    DATA8 flag869
    DIVF 360.0 VGV_L tmpf869
    CP_EQF 0.0 VGV_L flag869
    SELECTF flag869 0.0 tmpf869 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while872:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf876
    DATA8 flag876
    DIVF F.1 2.0 tmpf876
    CP_EQF 0.0 2.0 flag876
    SELECTF flag876 0.0 tmpf876 F.0

    JR_GTEQF F.0 VGV_X endwhile872
  whilebody872:
    WRITE32 ENDSUB_F_A3_0:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB877:
    WRITE32 ENDSUB_F_A2_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB878:
    JR_GTEQF VGV_SPEED 80.0 else879_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else879_1:
  endif879:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB881 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB881:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf885
    DATA8 flag885
    DIVF F.1 2.0 tmpf885
    CP_EQF 0.0 2.0 flag885
    SELECTF flag885 0.0 tmpf885 F.0

    JR_LTF F.0 VGV_X whilebody872
  endwhile872:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB887:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB888:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB889:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer891
	DATA8 nos891
	DATA8 busy891
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer891 nos891
	JR_EQ8 0 nos891 motornotbusy891
  motorwaiting891:
	OUTPUT_TEST layer891 nos891 busy891
	JR_EQ8 busy891 0 motornotbusy891
	SLEEP
	JR motorwaiting891
  motornotbusy891:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer893
	DATA8 nos893
	DATA8 busy893
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer893 nos893
	JR_EQ8 0 nos893 motornotbusy893
  motorwaiting893:
	OUTPUT_TEST layer893 nos893 busy893
	JR_EQ8 busy893 0 motornotbusy893
	SLEEP
	JR motorwaiting893
  motornotbusy893:
    WRITE32 ENDSUB_F_A3_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB894:
    WRITE32 ENDSUB_F_A2_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB895:
  while896:
    JR_LTEQF VGV_S3 15.0 endwhile896
  whilebody896:
    WRITE32 ENDSUB_F_A3_0:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB897:
    WRITE32 ENDSUB_F_A2_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB898:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody896
  endwhile896:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB901:
    WRITE32 ENDSUB_F_A2_0:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB902:
  while903:
    JR_GTEQF VGV_S3 60.0 endwhile903
  whilebody903:
    WRITE32 ENDSUB_F_A3_0:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB904:
    WRITE32 ENDSUB_F_A2_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB905:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody903
  endwhile903:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while909:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf913
    DATA8 flag913
    DIVF F.1 2.0 tmpf913
    CP_EQF 0.0 2.0 flag913
    SELECTF flag913 0.0 tmpf913 F.0

    JR_GTEQF F.0 270.0 endwhile909
  whilebody909:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB914:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf918
    DATA8 flag918
    DIVF F.1 2.0 tmpf918
    CP_EQF 0.0 2.0 flag918
    SELECTF flag918 0.0 tmpf918 F.0

    JR_LTF F.0 270.0 whilebody909
  endwhile909:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds921
	MOVEF_32 500.0 milliseconds921
	DATA32 timer921
	TIMER_WAIT milliseconds921 timer921
	TIMER_READY timer921
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB923:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB924:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer925
	DATA8 nos925
	DATA8 busy925
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer925 nos925
	JR_EQ8 0 nos925 motornotbusy925
  motorwaiting925:
	OUTPUT_TEST layer925 nos925 busy925
	JR_EQ8 busy925 0 motornotbusy925
	SLEEP
	JR motorwaiting925
  motornotbusy925:
    PROGRAM_STOP -1
  else848_1:
  endif848:
    JR_NEQF VGV_COLOR5 5.0 else927_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB928 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB928:
    CALL MOTOR.RESETCOUNT 'bc'
  while930:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf934
    DATA8 flag934
    DIVF F.1 2.0 tmpf934
    CP_EQF 0.0 2.0 flag934
    SELECTF flag934 0.0 tmpf934 F.0

    JR_GTEQF F.0 400.0 endwhile930
  whilebody930:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB935:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf939
    DATA8 flag939
    DIVF F.1 2.0 tmpf939
    CP_EQF 0.0 2.0 flag939
    SELECTF flag939 0.0 tmpf939 F.0

    JR_LTF F.0 400.0 whilebody930
  endwhile930:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds942
	MOVEF_32 500.0 milliseconds942
	DATA32 timer942
	TIMER_WAIT milliseconds942 timer942
	TIMER_READY timer942
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB944:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf945
    DATA8 flag945
    DIVF 360.0 VGV_L tmpf945
    CP_EQF 0.0 VGV_L flag945
    SELECTF flag945 0.0 tmpf945 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while948:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf952
    DATA8 flag952
    DIVF F.1 2.0 tmpf952
    CP_EQF 0.0 2.0 flag952
    SELECTF flag952 0.0 tmpf952 F.0

    JR_GTEQF F.0 VGV_X endwhile948
  whilebody948:
    WRITE32 ENDSUB_F_A3_0:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB953:
    WRITE32 ENDSUB_F_A2_0:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB954:
    JR_GTEQF VGV_SPEED 80.0 else955_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else955_1:
  endif955:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB957:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf961
    DATA8 flag961
    DIVF F.1 2.0 tmpf961
    CP_EQF 0.0 2.0 flag961
    SELECTF flag961 0.0 tmpf961 F.0

    JR_LTF F.0 VGV_X whilebody948
  endwhile948:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB963:
    JR_NEQF VGV_C 1.0 else964_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB965:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB966:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB968:
    CALL MOTOR.RESETCOUNT 'bc'
  while970:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf974
    DATA8 flag974
    DIVF F.1 2.0 tmpf974
    CP_EQF 0.0 2.0 flag974
    SELECTF flag974 0.0 tmpf974 F.0

    JR_GTEQF F.0 380.0 endwhile970
  whilebody970:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB975:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf979
    DATA8 flag979
    DIVF F.1 2.0 tmpf979
    CP_EQF 0.0 2.0 flag979
    SELECTF flag979 0.0 tmpf979 F.0

    JR_LTF F.0 380.0 whilebody970
  endwhile970:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds982
	MOVEF_32 500.0 milliseconds982
	DATA32 timer982
	TIMER_WAIT milliseconds982 timer982
	TIMER_READY timer982
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB984:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB985:
    WRITE32 ENDSUB_F_PR_0:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB986:
    CALL MOTOR.RESETCOUNT 'bc'
  while988:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf992
    DATA8 flag992
    DIVF F.1 2.0 tmpf992
    CP_EQF 0.0 2.0 flag992
    SELECTF flag992 0.0 tmpf992 F.0

    JR_GTEQF F.0 270.0 endwhile988
  whilebody988:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB993:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf997
    DATA8 flag997
    DIVF F.1 2.0 tmpf997
    CP_EQF 0.0 2.0 flag997
    SELECTF flag997 0.0 tmpf997 F.0

    JR_LTF F.0 270.0 whilebody988
  endwhile988:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1000
	MOVEF_32 500.0 milliseconds1000
	DATA32 timer1000
	TIMER_WAIT milliseconds1000 timer1000
	TIMER_READY timer1000
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1002
	DATA8 no1002
	DATA8 mode81002
	
	MOVEF_8 2.0 no1002
	SUB8 no1002 1 no1002
	DIV8 no1002 4 layer1002
	MATH MOD8 no1002 4 no1002

	MOVEF_8 0.0 mode81002
	
	INPUT_DEVICE READY_RAW layer1002 no1002 0 mode81002 0
    DATA8 layer1003
	DATA8 no1003
	DATA8 mode81003
	
	MOVEF_8 3.0 no1003
	SUB8 no1003 1 no1003
	DIV8 no1003 4 layer1003
	MATH MOD8 no1003 4 no1003

	MOVEF_8 0.0 mode81003
	
	INPUT_DEVICE READY_RAW layer1003 no1003 0 mode81003 0
  while1004:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1006
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1005
  and1006:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1009
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1005
  and1009:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1004
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1004
  or1005:
  whilebody1004:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1015
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1004
  and1015:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1018
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1004
  and1018:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1021
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1004
  and1021:
  endwhile1004:
  while1024:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1024
  whilebody1024:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1024
  endwhile1024:
    CALL MOTOR.STOP 'B' 'True'
  while1029:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1029
  whilebody1029:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1029
  endwhile1029:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1034
	DATA8 nos1034
	DATA8 busy1034
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1034 nos1034
	JR_EQ8 0 nos1034 motornotbusy1034
  motorwaiting1034:
	OUTPUT_TEST layer1034 nos1034 busy1034
	JR_EQ8 busy1034 0 motornotbusy1034
	SLEEP
	JR motorwaiting1034
  motornotbusy1034:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1036
	DATA8 nos1036
	DATA8 busy1036
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1036 nos1036
	JR_EQ8 0 nos1036 motornotbusy1036
  motorwaiting1036:
	OUTPUT_TEST layer1036 nos1036 busy1036
	JR_EQ8 busy1036 0 motornotbusy1036
	SLEEP
	JR motorwaiting1036
  motornotbusy1036:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1038:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1039:
  while1040:
    JR_LTEQF VGV_S3 10.0 endwhile1040
  whilebody1040:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1041:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1042:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1040
  endwhile1040:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1044:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1045:
  while1046:
    JR_GTEQF VGV_S3 55.0 endwhile1046
  whilebody1046:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1047:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1048:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1046
  endwhile1046:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1051
    DATA8 flag1051
    DIVF 360.0 VGV_L tmpf1051
    CP_EQF 0.0 VGV_L flag1051
    SELECTF flag1051 0.0 tmpf1051 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1054:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1058
    DATA8 flag1058
    DIVF F.1 2.0 tmpf1058
    CP_EQF 0.0 2.0 flag1058
    SELECTF flag1058 0.0 tmpf1058 F.0

    JR_GTEQF F.0 VGV_X endwhile1054
  whilebody1054:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1059:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1060:
    JR_GTEQF VGV_SPEED 80.0 else1061_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1061_1:
  endif1061:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1063:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1067
    DATA8 flag1067
    DIVF F.1 2.0 tmpf1067
    CP_EQF 0.0 2.0 flag1067
    SELECTF flag1067 0.0 tmpf1067 F.0

    JR_LTF F.0 VGV_X whilebody1054
  endwhile1054:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1069:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1070:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1071:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1073:
    CALL MOTOR.RESETCOUNT 'bc'
  while1075:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1079
    DATA8 flag1079
    DIVF F.1 2.0 tmpf1079
    CP_EQF 0.0 2.0 flag1079
    SELECTF flag1079 0.0 tmpf1079 F.0

    JR_GTEQF F.0 270.0 endwhile1075
  whilebody1075:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1080:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1084
    DATA8 flag1084
    DIVF F.1 2.0 tmpf1084
    CP_EQF 0.0 2.0 flag1084
    SELECTF flag1084 0.0 tmpf1084 F.0

    JR_LTF F.0 270.0 whilebody1075
  endwhile1075:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1087
	MOVEF_32 500.0 milliseconds1087
	DATA32 timer1087
	TIMER_WAIT milliseconds1087 timer1087
	TIMER_READY timer1087
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1089:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1090:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1091
	DATA8 nos1091
	DATA8 busy1091
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1091 nos1091
	JR_EQ8 0 nos1091 motornotbusy1091
  motorwaiting1091:
	OUTPUT_TEST layer1091 nos1091 busy1091
	JR_EQ8 busy1091 0 motornotbusy1091
	SLEEP
	JR motorwaiting1091
  motornotbusy1091:
    PROGRAM_STOP -1
    JR endif964
  else964_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1093 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1093:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1094:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1096:
    CALL MOTOR.RESETCOUNT 'bc'
  while1098:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1102
    DATA8 flag1102
    DIVF F.1 2.0 tmpf1102
    CP_EQF 0.0 2.0 flag1102
    SELECTF flag1102 0.0 tmpf1102 F.0

    JR_GTEQF F.0 470.0 endwhile1098
  whilebody1098:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1103:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1107
    DATA8 flag1107
    DIVF F.1 2.0 tmpf1107
    CP_EQF 0.0 2.0 flag1107
    SELECTF flag1107 0.0 tmpf1107 F.0

    JR_LTF F.0 470.0 whilebody1098
  endwhile1098:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1110
	MOVEF_32 500.0 milliseconds1110
	DATA32 timer1110
	TIMER_WAIT milliseconds1110 timer1110
	TIMER_READY timer1110
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1112:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1113:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1114
	DATA8 nos1114
	DATA8 busy1114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1114 nos1114
	JR_EQ8 0 nos1114 motornotbusy1114
  motorwaiting1114:
	OUTPUT_TEST layer1114 nos1114 busy1114
	JR_EQ8 busy1114 0 motornotbusy1114
	SLEEP
	JR motorwaiting1114
  motornotbusy1114:
    PROGRAM_STOP -1
  else964_2:
  endif964:
  else927_1:
  endif927:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1117
	DATA8 nos1117
	DATA8 busy1117
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1117 nos1117
	JR_EQ8 0 nos1117 motornotbusy1117
  motorwaiting1117:
	OUTPUT_TEST layer1117 nos1117 busy1117
	JR_EQ8 busy1117 0 motornotbusy1117
	SLEEP
	JR motorwaiting1117
  motornotbusy1117:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1118
	DATA8 nos1118
	DATA8 busy1118
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1118 nos1118
	JR_EQ8 0 nos1118 motornotbusy1118
  motorwaiting1118:
	OUTPUT_TEST layer1118 nos1118 busy1118
	JR_EQ8 busy1118 0 motornotbusy1118
	SLEEP
	JR motorwaiting1118
  motornotbusy1118:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1120
	DATA8 nos1120
	DATA8 busy1120
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1120 nos1120
	JR_EQ8 0 nos1120 motornotbusy1120
  motorwaiting1120:
	OUTPUT_TEST layer1120 nos1120 busy1120
	JR_EQ8 busy1120 0 motornotbusy1120
	SLEEP
	JR motorwaiting1120
  motornotbusy1120:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1121
	DATA8 nos1121
	DATA8 busy1121
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1121 nos1121
	JR_EQ8 0 nos1121 motornotbusy1121
  motorwaiting1121:
	OUTPUT_TEST layer1121 nos1121 busy1121
	JR_EQ8 busy1121 0 motornotbusy1121
	SLEEP
	JR motorwaiting1121
  motornotbusy1121:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1123
    DATA8 flag1123
    DIVF 360.0 VGV_L tmpf1123
    CP_EQF 0.0 VGV_L flag1123
    SELECTF flag1123 0.0 tmpf1123 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1126:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1130
    DATA8 flag1130
    DIVF F.1 2.0 tmpf1130
    CP_EQF 0.0 2.0 flag1130
    SELECTF flag1130 0.0 tmpf1130 F.0

    JR_GTEQF F.0 VGV_X endwhile1126
  whilebody1126:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1131:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1132:
    JR_GTEQF VGV_SPEED 80.0 else1133_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1133_1:
  endif1133:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1135:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1139
    DATA8 flag1139
    DIVF F.1 2.0 tmpf1139
    CP_EQF 0.0 2.0 flag1139
    SELECTF flag1139 0.0 tmpf1139 F.0

    JR_LTF F.0 VGV_X whilebody1126
  endwhile1126:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1141:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1143
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1143
    JR_NEQ32 0 tmp1143 alreadylaunched1143
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1143:
ENDTHREAD:
    RETURN
SUB_F_SB2_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1144:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1145:
  while1146:
    JR_LTEQF VGV_S3 10.0 and1148
    JR_GTF VGV_S2 10.0 or1147
  and1148:
    JR_GTEQF VGV_S3 10.0 endwhile1146
    JR_GTEQF VGV_S2 10.0 endwhile1146
  or1147:
  whilebody1146:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1149:
    JR_LTEQF VGV_S3 10.0 and1150
    JR_GTF VGV_S2 10.0 whilebody1146
  and1150:
    JR_GTEQF VGV_S3 10.0 and1151
    JR_LTF VGV_S2 10.0 whilebody1146
  and1151:
  endwhile1146:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1153
	DATA8 nos1153
	DATA8 busy1153
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1153 nos1153
	JR_EQ8 0 nos1153 motornotbusy1153
  motorwaiting1153:
	OUTPUT_TEST layer1153 nos1153 busy1153
	JR_EQ8 busy1153 0 motornotbusy1153
	SLEEP
	JR motorwaiting1153
  motornotbusy1153:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1154
	DATA8 nos1154
	DATA8 busy1154
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1154 nos1154
	JR_EQ8 0 nos1154 motornotbusy1154
  motorwaiting1154:
	OUTPUT_TEST layer1154 nos1154 busy1154
	JR_EQ8 busy1154 0 motornotbusy1154
	SLEEP
	JR motorwaiting1154
  motornotbusy1154:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer1155
	DATA8 nos1155
	DATA8 busy1155
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1155 nos1155
	JR_EQ8 0 nos1155 motornotbusy1155
  motorwaiting1155:
	OUTPUT_TEST layer1155 nos1155 busy1155
	JR_EQ8 busy1155 0 motornotbusy1155
	SLEEP
	JR motorwaiting1155
  motornotbusy1155:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1156:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1157:
  while1158:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile1158
  whilebody1158:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody1158
  endwhile1158:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1163:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1164:
  while1165:
    JR_GTEQF VGV_S3 55.0 endwhile1165
  whilebody1165:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1166:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1167:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 55.0 whilebody1165
  endwhile1165:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1170
	DATA8 nos1170
	DATA8 busy1170
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1170 nos1170
	JR_EQ8 0 nos1170 motornotbusy1170
  motorwaiting1170:
	OUTPUT_TEST layer1170 nos1170 busy1170
	JR_EQ8 busy1170 0 motornotbusy1170
	SLEEP
	JR motorwaiting1170
  motornotbusy1170:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 30.0 'true'

	DATA8 layer1171
	DATA8 nos1171
	DATA8 busy1171
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1171 nos1171
	JR_EQ8 0 nos1171 motornotbusy1171
  motorwaiting1171:
	OUTPUT_TEST layer1171 nos1171 busy1171
	JR_EQ8 busy1171 0 motornotbusy1171
	SLEEP
	JR motorwaiting1171
  motornotbusy1171:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1172:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1173
    DATA8 flag1173
    DIVF 360.0 VGV_L tmpf1173
    CP_EQF 0.0 VGV_L flag1173
    SELECTF flag1173 0.0 tmpf1173 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1176:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1180
    DATA8 flag1180
    DIVF F.1 2.0 tmpf1180
    CP_EQF 0.0 2.0 flag1180
    SELECTF flag1180 0.0 tmpf1180 F.0

    JR_GTEQF F.0 VGV_X endwhile1176
  whilebody1176:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1181:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1182:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1183:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1187
    DATA8 flag1187
    DIVF F.1 2.0 tmpf1187
    CP_EQF 0.0 2.0 flag1187
    SELECTF flag1187 0.0 tmpf1187 F.0

    JR_LTF F.0 VGV_X whilebody1176
  endwhile1176:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1189:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1190:
  while1191:
    JR_LTEQF VGV_S3 15.0 and1193
    JR_GTF VGV_S2 15.0 or1192
  and1193:
    JR_GTEQF VGV_S3 15.0 endwhile1191
    JR_GTEQF VGV_S2 15.0 endwhile1191
  or1192:
  whilebody1191:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1194:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1195:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1196:
    JR_LTEQF VGV_S3 15.0 and1197
    JR_GTF VGV_S2 15.0 whilebody1191
  and1197:
    JR_GTEQF VGV_S3 15.0 and1198
    JR_LTF VGV_S2 15.0 whilebody1191
  and1198:
  endwhile1191:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1200
	DATA8 nos1200
	DATA8 busy1200
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1200 nos1200
	JR_EQ8 0 nos1200 motornotbusy1200
  motorwaiting1200:
	OUTPUT_TEST layer1200 nos1200 busy1200
	JR_EQ8 busy1200 0 motornotbusy1200
	SLEEP
	JR motorwaiting1200
  motornotbusy1200:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1201:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1202:
  while1203:
    JR_GTEQF VGV_S2 60.0 endwhile1203
  whilebody1203:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1203
  endwhile1203:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1207:
  while1208:
    JR_LTEQF VGV_S3 10.0 and1210
    JR_GTF VGV_S2 10.0 or1209
  and1210:
    JR_GTEQF VGV_S3 10.0 endwhile1208
    JR_GTEQF VGV_S2 10.0 endwhile1208
  or1209:
  whilebody1208:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1211:
    JR_LTEQF VGV_S3 10.0 and1212
    JR_GTF VGV_S2 10.0 whilebody1208
  and1212:
    JR_GTEQF VGV_S3 10.0 and1213
    JR_LTF VGV_S2 10.0 whilebody1208
  and1213:
  endwhile1208:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1215
    DATA8 flag1215
    DIVF 360.0 VGV_L tmpf1215
    CP_EQF 0.0 VGV_L flag1215
    SELECTF flag1215 0.0 tmpf1215 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1218:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1222
    DATA8 flag1222
    DIVF F.1 2.0 tmpf1222
    CP_EQF 0.0 2.0 flag1222
    SELECTF flag1222 0.0 tmpf1222 F.0

    JR_GTEQF F.0 VGV_X endwhile1218
  whilebody1218:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1223:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1224:
    JR_GTEQF VGV_SPEED 80.0 else1225_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1225_1:
  endif1225:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1227:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1231
    DATA8 flag1231
    DIVF F.1 2.0 tmpf1231
    CP_EQF 0.0 2.0 flag1231
    SELECTF flag1231 0.0 tmpf1231 F.0

    JR_LTF F.0 VGV_X whilebody1218
  endwhile1218:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1233:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1234:
  while1235:
    JR_LTEQF VGV_S3 15.0 and1237
    JR_GTF VGV_S2 15.0 or1236
  and1237:
    JR_GTEQF VGV_S3 15.0 endwhile1235
    JR_GTEQF VGV_S2 15.0 endwhile1235
  or1236:
  whilebody1235:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1238:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1239:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1240:
    JR_LTEQF VGV_S3 15.0 and1241
    JR_GTF VGV_S2 15.0 whilebody1235
  and1241:
    JR_GTEQF VGV_S3 15.0 and1242
    JR_LTF VGV_S2 15.0 whilebody1235
  and1242:
  endwhile1235:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 40.0 'true'

	DATA8 layer1244
	DATA8 nos1244
	DATA8 busy1244
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1244 nos1244
	JR_EQ8 0 nos1244 motornotbusy1244
  motorwaiting1244:
	OUTPUT_TEST layer1244 nos1244 busy1244
	JR_EQ8 busy1244 0 motornotbusy1244
	SLEEP
	JR motorwaiting1244
  motornotbusy1244:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1246
	DATA8 nos1246
	DATA8 busy1246
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1246 nos1246
	JR_EQ8 0 nos1246 motornotbusy1246
  motorwaiting1246:
	OUTPUT_TEST layer1246 nos1246 busy1246
	JR_EQ8 busy1246 0 motornotbusy1246
	SLEEP
	JR motorwaiting1246
  motornotbusy1246:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1247:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1248:
  while1249:
    JR_LTEQF VGV_S2 15.0 endwhile1249
  whilebody1249:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1250:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1251:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1249
  endwhile1249:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1254:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1255:
  while1256:
    JR_GTEQF VGV_S2 55.0 endwhile1256
  whilebody1256:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1257:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1258:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1256
  endwhile1256:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer1261
	DATA8 nos1261
	DATA8 busy1261
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1261 nos1261
	JR_EQ8 0 nos1261 motornotbusy1261
  motorwaiting1261:
	OUTPUT_TEST layer1261 nos1261 busy1261
	JR_EQ8 busy1261 0 motornotbusy1261
	SLEEP
	JR motorwaiting1261
  motornotbusy1261:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1263
	DATA8 nos1263
	DATA8 busy1263
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1263 nos1263
	JR_EQ8 0 nos1263 motornotbusy1263
  motorwaiting1263:
	OUTPUT_TEST layer1263 nos1263 busy1263
	JR_EQ8 busy1263 0 motornotbusy1263
	SLEEP
	JR motorwaiting1263
  motornotbusy1263:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1264:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1265:
  while1266:
    JR_LTEQF VGV_S3 15.0 endwhile1266
  whilebody1266:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1267:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1268:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody1266
  endwhile1266:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1271:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1272:
  while1273:
    JR_GTEQF VGV_S3 60.0 endwhile1273
  whilebody1273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1274:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1275:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1273
  endwhile1273:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1278:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1279:
  while1280:
    JR_LTEQF VGV_S2 9.0 and1282
    JR_GTF VGV_S3 9.0 or1281
  and1282:
    JR_GTEQF VGV_S2 9.0 and1283
    JR_GTF VGV_S3 9.0 or1281
  and1283:
    JR_LTEQF VGV_S2 9.0 endwhile1280
    JR_GTEQF VGV_S3 9.0 endwhile1280
  or1281:
  whilebody1280:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1284:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1285:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1287
    JR_GTF VGV_S3 9.0 whilebody1280
  and1287:
    JR_GTEQF VGV_S2 9.0 and1288
    JR_GTF VGV_S3 9.0 whilebody1280
  and1288:
    JR_LTEQF VGV_S2 9.0 and1289
    JR_LTF VGV_S3 9.0 whilebody1280
  and1289:
  endwhile1280:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 53.0 'true'

	DATA8 layer1290
	DATA8 nos1290
	DATA8 busy1290
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1290 nos1290
	JR_EQ8 0 nos1290 motornotbusy1290
  motorwaiting1290:
	OUTPUT_TEST layer1290 nos1290 busy1290
	JR_EQ8 busy1290 0 motornotbusy1290
	SLEEP
	JR motorwaiting1290
  motornotbusy1290:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1292
	DATA8 nos1292
	DATA8 busy1292
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1292 nos1292
	JR_EQ8 0 nos1292 motornotbusy1292
  motorwaiting1292:
	OUTPUT_TEST layer1292 nos1292 busy1292
	JR_EQ8 busy1292 0 motornotbusy1292
	SLEEP
	JR motorwaiting1292
  motornotbusy1292:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1294:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1295:
  while1296:
    JR_LTEQF VGV_S2 10.0 endwhile1296
  whilebody1296:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1297:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1298:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1296
  endwhile1296:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1300:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1301:
  while1302:
    JR_GTEQF VGV_S2 60.0 endwhile1302
  whilebody1302:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1303:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1304:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1302
  endwhile1302:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1307:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1308
	DATA8 nos1308
	DATA8 busy1308
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1308 nos1308
	JR_EQ8 0 nos1308 motornotbusy1308
  motorwaiting1308:
	OUTPUT_TEST layer1308 nos1308 busy1308
	JR_EQ8 busy1308 0 motornotbusy1308
	SLEEP
	JR motorwaiting1308
  motornotbusy1308:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1310
	DATA8 nos1310
	DATA8 busy1310
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1310 nos1310
	JR_EQ8 0 nos1310 motornotbusy1310
  motorwaiting1310:
	OUTPUT_TEST layer1310 nos1310 busy1310
	JR_EQ8 busy1310 0 motornotbusy1310
	SLEEP
	JR motorwaiting1310
  motornotbusy1310:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1312:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1313:
  while1314:
    JR_LTEQF VGV_S3 8.0 endwhile1314
  whilebody1314:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1315:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1316:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1314
  endwhile1314:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1318:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1319:
  while1320:
    JR_GTEQF VGV_S3 55.0 endwhile1320
  whilebody1320:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1321:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1322:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1320
  endwhile1320:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1325
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1325
    JR_NEQ32 0 tmp1325 alreadylaunched1325
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1325:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1326:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1327:
  while1328:
    JR_LTEQF VGV_S3 15.0 and1330
    JR_GTF VGV_S2 15.0 or1329
  and1330:
    JR_GTEQF VGV_S3 15.0 and1331
    JR_GTF VGV_S2 15.0 or1329
  and1331:
    JR_LTEQF VGV_S3 15.0 endwhile1328
    JR_GTEQF VGV_S2 15.0 endwhile1328
  or1329:
  whilebody1328:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1332:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1333:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1334:
    JR_LTEQF VGV_S3 15.0 and1335
    JR_GTF VGV_S2 15.0 whilebody1328
  and1335:
    JR_GTEQF VGV_S3 15.0 and1336
    JR_GTF VGV_S2 15.0 whilebody1328
  and1336:
    JR_LTEQF VGV_S3 15.0 and1337
    JR_LTF VGV_S2 15.0 whilebody1328
  and1337:
  endwhile1328:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1339
	DATA8 nos1339
	DATA8 busy1339
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1339 nos1339
	JR_EQ8 0 nos1339 motornotbusy1339
  motorwaiting1339:
	OUTPUT_TEST layer1339 nos1339 busy1339
	JR_EQ8 busy1339 0 motornotbusy1339
	SLEEP
	JR motorwaiting1339
  motornotbusy1339:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1340
	DATA8 nos1340
	DATA8 busy1340
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1340 nos1340
	JR_EQ8 0 nos1340 motornotbusy1340
  motorwaiting1340:
	OUTPUT_TEST layer1340 nos1340 busy1340
	JR_EQ8 busy1340 0 motornotbusy1340
	SLEEP
	JR motorwaiting1340
  motornotbusy1340:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1343:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1344:
  while1345:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1345
  whilebody1345:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1347:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1348:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1349:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1345
  endwhile1345:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1353
	MOVEF_32 500.0 milliseconds1353
	DATA32 timer1353
	TIMER_WAIT milliseconds1353 timer1353
	TIMER_READY timer1353
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1355
	DATA8 nos1355
	DATA8 busy1355
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1355 nos1355
	JR_EQ8 0 nos1355 motornotbusy1355
  motorwaiting1355:
	OUTPUT_TEST layer1355 nos1355 busy1355
	JR_EQ8 busy1355 0 motornotbusy1355
	SLEEP
	JR motorwaiting1355
  motornotbusy1355:
    CALL MOTOR.STARTSYNC 'bc' -30.0 -80.0
    DATA32 milliseconds1357
	MOVEF_32 1400.0 milliseconds1357
	DATA32 timer1357
	TIMER_WAIT milliseconds1357 timer1357
	TIMER_READY timer1357
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1359
	DATA8 nos1359
	DATA8 busy1359
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1359 nos1359
	JR_EQ8 0 nos1359 motornotbusy1359
  motorwaiting1359:
	OUTPUT_TEST layer1359 nos1359 busy1359
	JR_EQ8 busy1359 0 motornotbusy1359
	SLEEP
	JR motorwaiting1359
  motornotbusy1359:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1360
	DATA8 nos1360
	DATA8 busy1360
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1360 nos1360
	JR_EQ8 0 nos1360 motornotbusy1360
  motorwaiting1360:
	OUTPUT_TEST layer1360 nos1360 busy1360
	JR_EQ8 busy1360 0 motornotbusy1360
	SLEEP
	JR motorwaiting1360
  motornotbusy1360:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1361
	DATA8 nos1361
	DATA8 busy1361
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1361 nos1361
	JR_EQ8 0 nos1361 motornotbusy1361
  motorwaiting1361:
	OUTPUT_TEST layer1361 nos1361 busy1361
	JR_EQ8 busy1361 0 motornotbusy1361
	SLEEP
	JR motorwaiting1361
  motornotbusy1361:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1362:
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 45.0 'true'

	DATA8 layer1363
	DATA8 nos1363
	DATA8 busy1363
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1363 nos1363
	JR_EQ8 0 nos1363 motornotbusy1363
  motorwaiting1363:
	OUTPUT_TEST layer1363 nos1363 busy1363
	JR_EQ8 busy1363 0 motornotbusy1363
	SLEEP
	JR motorwaiting1363
  motornotbusy1363:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1364
	DATA8 nos1364
	DATA8 busy1364
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1364 nos1364
	JR_EQ8 0 nos1364 motornotbusy1364
  motorwaiting1364:
	OUTPUT_TEST layer1364 nos1364 busy1364
	JR_EQ8 busy1364 0 motornotbusy1364
	SLEEP
	JR motorwaiting1364
  motornotbusy1364:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1366:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1367:
  while1368:
    JR_LTEQF VGV_S2 15.0 endwhile1368
  whilebody1368:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1369:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1370:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1368
  endwhile1368:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1373:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1374:
  while1375:
    JR_GTEQF VGV_S2 50.0 endwhile1375
  whilebody1375:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1376:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1377:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1375
  endwhile1375:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1380:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1381:
  while1382:
    JR_LTEQF VGV_S3 15.0 and1384
    JR_GTF VGV_S2 15.0 or1383
  and1384:
    JR_GTEQF VGV_S3 15.0 endwhile1382
    JR_GTEQF VGV_S2 15.0 endwhile1382
  or1383:
  whilebody1382:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1385:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1386:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1387:
    JR_LTEQF VGV_S3 15.0 and1388
    JR_GTF VGV_S2 15.0 whilebody1382
  and1388:
    JR_GTEQF VGV_S3 15.0 and1389
    JR_LTF VGV_S2 15.0 whilebody1382
  and1389:
  endwhile1382:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1391:
    CALL MOTOR.RESETCOUNT 'bc'
  while1393:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1397
    DATA8 flag1397
    DIVF F.1 2.0 tmpf1397
    CP_EQF 0.0 2.0 flag1397
    SELECTF flag1397 0.0 tmpf1397 F.0

    JR_GTEQF F.0 200.0 endwhile1393
  whilebody1393:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1398:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1402
    DATA8 flag1402
    DIVF F.1 2.0 tmpf1402
    CP_EQF 0.0 2.0 flag1402
    SELECTF flag1402 0.0 tmpf1402 F.0

    JR_LTF F.0 200.0 whilebody1393
  endwhile1393:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1404:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1405:
    MOVEF_F 1.0 VGV_I
  for1406:
    JR_GTF VGV_I 1.0 endfor1406
  forbody1406:
    MOVEF_F 0.33 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1407:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1408:
  while1409:
    JR_LTEQF VGV_S3 15.0 and1411
    JR_GTF VGV_S2 15.0 or1410
  and1411:
    JR_GTEQF VGV_S3 15.0 endwhile1409
    JR_GTEQF VGV_S2 15.0 endwhile1409
  or1410:
  whilebody1409:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1412:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1413:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1414:
    JR_LTEQF VGV_S3 15.0 and1415
    JR_GTF VGV_S2 15.0 whilebody1409
  and1415:
    JR_GTEQF VGV_S3 15.0 and1416
    JR_LTF VGV_S2 15.0 whilebody1409
  and1416:
  endwhile1409:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1418
	DATA8 nos1418
	DATA8 busy1418
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1418 nos1418
	JR_EQ8 0 nos1418 motornotbusy1418
  motorwaiting1418:
	OUTPUT_TEST layer1418 nos1418 busy1418
	JR_EQ8 busy1418 0 motornotbusy1418
	SLEEP
	JR motorwaiting1418
  motornotbusy1418:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1406
  endfor1406:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 30.0 'true'

	DATA8 layer1421
	DATA8 nos1421
	DATA8 busy1421
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1421 nos1421
	JR_EQ8 0 nos1421 motornotbusy1421
  motorwaiting1421:
	OUTPUT_TEST layer1421 nos1421 busy1421
	JR_EQ8 busy1421 0 motornotbusy1421
	SLEEP
	JR motorwaiting1421
  motornotbusy1421:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 185.0 'true'

	DATA8 layer1422
	DATA8 nos1422
	DATA8 busy1422
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1422 nos1422
	JR_EQ8 0 nos1422 motornotbusy1422
  motorwaiting1422:
	OUTPUT_TEST layer1422 nos1422 busy1422
	JR_EQ8 busy1422 0 motornotbusy1422
	SLEEP
	JR motorwaiting1422
  motornotbusy1422:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1423
	DATA8 nos1423
	DATA8 busy1423
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1423 nos1423
	JR_EQ8 0 nos1423 motornotbusy1423
  motorwaiting1423:
	OUTPUT_TEST layer1423 nos1423 busy1423
	JR_EQ8 busy1423 0 motornotbusy1423
	SLEEP
	JR motorwaiting1423
  motornotbusy1423:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1425
	MOVEF_32 500.0 milliseconds1425
	DATA32 timer1425
	TIMER_WAIT milliseconds1425 timer1425
	TIMER_READY timer1425
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 110.0 'true'

	DATA8 layer1427
	DATA8 nos1427
	DATA8 busy1427
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1427 nos1427
	JR_EQ8 0 nos1427 motornotbusy1427
  motorwaiting1427:
	OUTPUT_TEST layer1427 nos1427 busy1427
	JR_EQ8 busy1427 0 motornotbusy1427
	SLEEP
	JR motorwaiting1427
  motornotbusy1427:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 415.0 'true'

	DATA8 layer1428
	DATA8 nos1428
	DATA8 busy1428
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1428 nos1428
	JR_EQ8 0 nos1428 motornotbusy1428
  motorwaiting1428:
	OUTPUT_TEST layer1428 nos1428 busy1428
	JR_EQ8 busy1428 0 motornotbusy1428
	SLEEP
	JR motorwaiting1428
  motornotbusy1428:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1429:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1430:
  while1431:
    JR_LTEQF VGV_S3 10.0 and1433
    JR_GTF VGV_S2 10.0 or1432
  and1433:
    JR_GTEQF VGV_S3 10.0 and1434
    JR_GTF VGV_S2 10.0 or1432
  and1434:
    JR_LTEQF VGV_S3 6.0 endwhile1431
    JR_GTEQF VGV_S2 6.0 endwhile1431
  or1432:
  whilebody1431:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1435:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1436:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1438
    JR_GTF VGV_S2 10.0 whilebody1431
  and1438:
    JR_GTEQF VGV_S3 10.0 and1439
    JR_GTF VGV_S2 10.0 whilebody1431
  and1439:
    JR_LTEQF VGV_S3 6.0 and1440
    JR_LTF VGV_S2 6.0 whilebody1431
  and1440:
  endwhile1431:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1442
	DATA8 nos1442
	DATA8 busy1442
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1442 nos1442
	JR_EQ8 0 nos1442 motornotbusy1442
  motorwaiting1442:
	OUTPUT_TEST layer1442 nos1442 busy1442
	JR_EQ8 busy1442 0 motornotbusy1442
	SLEEP
	JR motorwaiting1442
  motornotbusy1442:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1444:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1445:
  while1446:
    JR_LTEQF VGV_S3 10.0 endwhile1446
  whilebody1446:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1447:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1448:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1446
  endwhile1446:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1451:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1452:
  while1453:
    JR_GTEQF VGV_S3 60.0 endwhile1453
  whilebody1453:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1454:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1455:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1453
  endwhile1453:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1458
	MOVEF_32 100.0 milliseconds1458
	DATA32 timer1458
	TIMER_WAIT milliseconds1458 timer1458
	TIMER_READY timer1458
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1459:
    CALL MOTOR.RESETCOUNT 'bc'
  while1461:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1465
    DATA8 flag1465
    DIVF F.1 2.0 tmpf1465
    CP_EQF 0.0 2.0 flag1465
    SELECTF flag1465 0.0 tmpf1465 F.0

    JR_GTEQF F.0 200.0 endwhile1461
  whilebody1461:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1466:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1470
    DATA8 flag1470
    DIVF F.1 2.0 tmpf1470
    CP_EQF 0.0 2.0 flag1470
    SELECTF flag1470 0.0 tmpf1470 F.0

    JR_LTF F.0 200.0 whilebody1461
  endwhile1461:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1472:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1473:
    MOVEF_F 1.0 VGV_I
  for1474:
    JR_GTF VGV_I 2.0 endfor1474
  forbody1474:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1475
	DATA8 nos1475
	DATA8 busy1475
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1475 nos1475
	JR_EQ8 0 nos1475 motornotbusy1475
  motorwaiting1475:
	OUTPUT_TEST layer1475 nos1475 busy1475
	JR_EQ8 busy1475 0 motornotbusy1475
	SLEEP
	JR motorwaiting1475
  motornotbusy1475:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1476:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1477:
  while1478:
    JR_LTEQF VGV_S3 15.0 and1480
    JR_GTF VGV_S2 15.0 or1479
  and1480:
    JR_GTEQF VGV_S3 15.0 endwhile1478
    JR_GTEQF VGV_S2 15.0 endwhile1478
  or1479:
  whilebody1478:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1481:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1482:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1483:
    JR_LTEQF VGV_S3 15.0 and1484
    JR_GTF VGV_S2 15.0 whilebody1478
  and1484:
    JR_GTEQF VGV_S3 15.0 and1485
    JR_LTF VGV_S2 15.0 whilebody1478
  and1485:
  endwhile1478:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1474
  endfor1474:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1488
	DATA8 nos1488
	DATA8 busy1488
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1488 nos1488
	JR_EQ8 0 nos1488 motornotbusy1488
  motorwaiting1488:
	OUTPUT_TEST layer1488 nos1488 busy1488
	JR_EQ8 busy1488 0 motornotbusy1488
	SLEEP
	JR motorwaiting1488
  motornotbusy1488:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1490:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1491:
    MOVEF_F 80.0 VGV_J
  while1492:
    JR_LTEQF VGV_S3 10.0 endwhile1492
  whilebody1492:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1493:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1494:
    JR_LTEQF VGV_J 30.0 else1495_1
    SUBF VGV_J 0.1 VGV_J
  else1495_1:
  endif1495:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1492
  endwhile1492:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1499:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1500:
    MOVEF_F 80.0 VGV_J
  while1501:
    JR_GTEQF VGV_S3 15.0 endwhile1501
  whilebody1501:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1502:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1503:
    JR_LTEQF VGV_J 30.0 else1504_1
    SUBF VGV_J 0.1 VGV_J
  else1504_1:
  endif1504:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1501
  endwhile1501:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1509:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1513
    DATA8 flag1513
    DIVF F.1 2.0 tmpf1513
    CP_EQF 0.0 2.0 flag1513
    SELECTF flag1513 0.0 tmpf1513 F.0

    JR_GTEQF F.0 50.0 endwhile1509
  whilebody1509:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1514:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1515:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1516:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1517:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1519
    DATA8 flag1519
    DIVF F.1 2.0 tmpf1519
    CP_EQF 0.0 2.0 flag1519
    SELECTF flag1519 0.0 tmpf1519 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1531
    DATA8 flag1531
    DIVF F.1 2.0 tmpf1531
    CP_EQF 0.0 2.0 flag1531
    SELECTF flag1531 0.0 tmpf1531 F.0

    JR_LTF F.0 50.0 whilebody1509
  endwhile1509:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 18.0 95.0 'true'

	DATA8 layer1533
	DATA8 nos1533
	DATA8 busy1533
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1533 nos1533
	JR_EQ8 0 nos1533 motornotbusy1533
  motorwaiting1533:
	OUTPUT_TEST layer1533 nos1533 busy1533
	JR_EQ8 busy1533 0 motornotbusy1533
	SLEEP
	JR motorwaiting1533
  motornotbusy1533:
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 -18.0 30.0 'true'

	DATA8 layer1534
	DATA8 nos1534
	DATA8 busy1534
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1534 nos1534
	JR_EQ8 0 nos1534 motornotbusy1534
  motorwaiting1534:
	OUTPUT_TEST layer1534 nos1534 busy1534
	JR_EQ8 busy1534 0 motornotbusy1534
	SLEEP
	JR motorwaiting1534
  motornotbusy1534:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1536
	MOVEF_32 500.0 milliseconds1536
	DATA32 timer1536
	TIMER_WAIT milliseconds1536 timer1536
	TIMER_READY timer1536
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1539:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1543
    DATA8 flag1543
    DIVF F.1 2.0 tmpf1543
    CP_EQF 0.0 2.0 flag1543
    SELECTF flag1543 0.0 tmpf1543 F.0

    JR_LTEQF F.0 -240.0 endwhile1539
  whilebody1539:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1548
    DATA8 flag1548
    DIVF F.1 2.0 tmpf1548
    CP_EQF 0.0 2.0 flag1548
    SELECTF flag1548 0.0 tmpf1548 F.0

    JR_GTF F.0 -240.0 whilebody1539
  endwhile1539:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1550
	DATA8 nos1550
	DATA8 busy1550
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1550 nos1550
	JR_EQ8 0 nos1550 motornotbusy1550
  motorwaiting1550:
	OUTPUT_TEST layer1550 nos1550 busy1550
	JR_EQ8 busy1550 0 motornotbusy1550
	SLEEP
	JR motorwaiting1550
  motornotbusy1550:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1552:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1553:
  while1554:
    JR_LTEQF VGV_S3 10.0 and1556
    JR_GTF VGV_S2 10.0 or1555
  and1556:
    JR_LTEQF VGV_S3 10.0 and1557
    JR_LTF VGV_S2 10.0 or1555
  and1557:
    JR_GTEQF VGV_S3 10.0 endwhile1554
    JR_LTEQF VGV_S2 10.0 endwhile1554
  or1555:
  whilebody1554:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1558:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1559:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1561
    JR_GTF VGV_S2 10.0 whilebody1554
  and1561:
    JR_LTEQF VGV_S3 10.0 and1562
    JR_LTF VGV_S2 10.0 whilebody1554
  and1562:
    JR_GTEQF VGV_S3 10.0 and1563
    JR_GTF VGV_S2 10.0 whilebody1554
  and1563:
  endwhile1554:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1565
	DATA8 nos1565
	DATA8 busy1565
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1565 nos1565
	JR_EQ8 0 nos1565 motornotbusy1565
  motorwaiting1565:
	OUTPUT_TEST layer1565 nos1565 busy1565
	JR_EQ8 busy1565 0 motornotbusy1565
	SLEEP
	JR motorwaiting1565
  motornotbusy1565:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1566:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1567:
  while1568:
    JR_LTEQF VGV_S3 10.0 endwhile1568
  whilebody1568:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1569:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1570:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1568
  endwhile1568:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1572:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1573:
  while1574:
    JR_GTEQF VGV_S3 15.0 endwhile1574
  whilebody1574:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1575:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1576:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1574
  endwhile1574:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1579
	DATA8 nos1579
	DATA8 busy1579
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1579 nos1579
	JR_EQ8 0 nos1579 motornotbusy1579
  motorwaiting1579:
	OUTPUT_TEST layer1579 nos1579 busy1579
	JR_EQ8 busy1579 0 motornotbusy1579
	SLEEP
	JR motorwaiting1579
  motornotbusy1579:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1580:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1581:
  while1582:
    JR_LTEQF VGV_S3 15.0 endwhile1582
  whilebody1582:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1583:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1584:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1582
  endwhile1582:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1587:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1588:
  while1589:
    JR_GTEQF VGV_S3 15.0 endwhile1589
  whilebody1589:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1590:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1591:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1589
  endwhile1589:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1595:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 270.0 endwhile1595
  whilebody1595:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1597:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 270.0 whilebody1595
  endwhile1595:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1600:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1601:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1602:
    JR_GTF VGV_I 3.0 endfor1602
  forbody1602:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1603:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1604:
  while1605:
    JR_LTEQF VGV_S3 15.0 and1607
    JR_GTF VGV_S2 15.0 or1606
  and1607:
    JR_GTEQF VGV_S3 15.0 endwhile1605
    JR_GTEQF VGV_S2 15.0 endwhile1605
  or1606:
  whilebody1605:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1608:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1609:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1610:
    JR_LTEQF VGV_S3 15.0 and1611
    JR_GTF VGV_S2 15.0 whilebody1605
  and1611:
    JR_GTEQF VGV_S3 15.0 and1612
    JR_LTF VGV_S2 15.0 whilebody1605
  and1612:
  endwhile1605:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1614
	DATA8 nos1614
	DATA8 busy1614
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1614 nos1614
	JR_EQ8 0 nos1614 motornotbusy1614
  motorwaiting1614:
	OUTPUT_TEST layer1614 nos1614 busy1614
	JR_EQ8 busy1614 0 motornotbusy1614
	SLEEP
	JR motorwaiting1614
  motornotbusy1614:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1602
  endfor1602:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 200.0 'true'

	DATA8 layer1617
	DATA8 nos1617
	DATA8 busy1617
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1617 nos1617
	JR_EQ8 0 nos1617 motornotbusy1617
  motorwaiting1617:
	OUTPUT_TEST layer1617 nos1617 busy1617
	JR_EQ8 busy1617 0 motornotbusy1617
	SLEEP
	JR motorwaiting1617
  motornotbusy1617:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1618
	DATA8 nos1618
	DATA8 busy1618
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1618 nos1618
	JR_EQ8 0 nos1618 motornotbusy1618
  motorwaiting1618:
	OUTPUT_TEST layer1618 nos1618 busy1618
	JR_EQ8 busy1618 0 motornotbusy1618
	SLEEP
	JR motorwaiting1618
  motornotbusy1618:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1620
	MOVEF_32 500.0 milliseconds1620
	DATA32 timer1620
	TIMER_WAIT milliseconds1620 timer1620
	TIMER_READY timer1620
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1622
	DATA8 nos1622
	DATA8 busy1622
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1622 nos1622
	JR_EQ8 0 nos1622 motornotbusy1622
  motorwaiting1622:
	OUTPUT_TEST layer1622 nos1622 busy1622
	JR_EQ8 busy1622 0 motornotbusy1622
	SLEEP
	JR motorwaiting1622
  motornotbusy1622:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 395.0 'true'

	DATA8 layer1623
	DATA8 nos1623
	DATA8 busy1623
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1623 nos1623
	JR_EQ8 0 nos1623 motornotbusy1623
  motorwaiting1623:
	OUTPUT_TEST layer1623 nos1623 busy1623
	JR_EQ8 busy1623 0 motornotbusy1623
	SLEEP
	JR motorwaiting1623
  motornotbusy1623:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer1624
	DATA8 nos1624
	DATA8 busy1624
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1624 nos1624
	JR_EQ8 0 nos1624 motornotbusy1624
  motorwaiting1624:
	OUTPUT_TEST layer1624 nos1624 busy1624
	JR_EQ8 busy1624 0 motornotbusy1624
	SLEEP
	JR motorwaiting1624
  motornotbusy1624:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1625
	DATA8 nos1625
	DATA8 busy1625
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1625 nos1625
	JR_EQ8 0 nos1625 motornotbusy1625
  motorwaiting1625:
	OUTPUT_TEST layer1625 nos1625 busy1625
	JR_EQ8 busy1625 0 motornotbusy1625
	SLEEP
	JR motorwaiting1625
  motornotbusy1625:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1626
	DATA8 nos1626
	DATA8 busy1626
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1626 nos1626
	JR_EQ8 0 nos1626 motornotbusy1626
  motorwaiting1626:
	OUTPUT_TEST layer1626 nos1626 busy1626
	JR_EQ8 busy1626 0 motornotbusy1626
	SLEEP
	JR motorwaiting1626
  motornotbusy1626:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1627:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1628:
  while1629:
    JR_LTEQF VGV_S3 10.0 and1631
    JR_GTF VGV_S2 10.0 or1630
  and1631:
    JR_GTEQF VGV_S3 10.0 and1632
    JR_GTF VGV_S2 10.0 or1630
  and1632:
    JR_LTEQF VGV_S3 10.0 endwhile1629
    JR_GTEQF VGV_S2 10.0 endwhile1629
  or1630:
  whilebody1629:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1633:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1634:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1636
    JR_GTF VGV_S2 10.0 whilebody1629
  and1636:
    JR_GTEQF VGV_S3 10.0 and1637
    JR_GTF VGV_S2 10.0 whilebody1629
  and1637:
    JR_LTEQF VGV_S3 10.0 and1638
    JR_LTF VGV_S2 10.0 whilebody1629
  and1638:
  endwhile1629:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 65.0 'true'

	DATA8 layer1640
	DATA8 nos1640
	DATA8 busy1640
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1640 nos1640
	JR_EQ8 0 nos1640 motornotbusy1640
  motorwaiting1640:
	OUTPUT_TEST layer1640 nos1640 busy1640
	JR_EQ8 busy1640 0 motornotbusy1640
	SLEEP
	JR motorwaiting1640
  motornotbusy1640:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1642
	DATA8 nos1642
	DATA8 busy1642
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1642 nos1642
	JR_EQ8 0 nos1642 motornotbusy1642
  motorwaiting1642:
	OUTPUT_TEST layer1642 nos1642 busy1642
	JR_EQ8 busy1642 0 motornotbusy1642
	SLEEP
	JR motorwaiting1642
  motornotbusy1642:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1643:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1644:
  while1645:
    JR_LTEQF VGV_S3 15.0 endwhile1645
  whilebody1645:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1646:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1647:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1645
  endwhile1645:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1650:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1651:
  while1652:
    JR_GTEQF VGV_S3 60.0 endwhile1652
  whilebody1652:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1653:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1654:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1652
  endwhile1652:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1657:
    JR_GTF VGV_I 1.0 endfor1657
  forbody1657:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1658:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1659:
  while1660:
    JR_LTEQF VGV_S3 10.0 and1662
    JR_GTF VGV_S2 10.0 or1661
  and1662:
    JR_GTEQF VGV_S3 10.0 endwhile1660
    JR_GTEQF VGV_S2 10.0 endwhile1660
  or1661:
  whilebody1660:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1663:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1664:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1665:
    JR_LTEQF VGV_S3 10.0 and1666
    JR_GTF VGV_S2 10.0 whilebody1660
  and1666:
    JR_GTEQF VGV_S3 10.0 and1667
    JR_LTF VGV_S2 10.0 whilebody1660
  and1667:
  endwhile1660:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1669
	DATA8 nos1669
	DATA8 busy1669
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1669 nos1669
	JR_EQ8 0 nos1669 motornotbusy1669
  motorwaiting1669:
	OUTPUT_TEST layer1669 nos1669 busy1669
	JR_EQ8 busy1669 0 motornotbusy1669
	SLEEP
	JR motorwaiting1669
  motornotbusy1669:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1657
  endfor1657:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1672:
    CALL MOTOR.RESETCOUNT 'bc'
  while1674:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1678
    DATA8 flag1678
    DIVF F.1 2.0 tmpf1678
    CP_EQF 0.0 2.0 flag1678
    SELECTF flag1678 0.0 tmpf1678 F.0

    JR_GTEQF F.0 220.0 endwhile1674
  whilebody1674:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1679:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1683
    DATA8 flag1683
    DIVF F.1 2.0 tmpf1683
    CP_EQF 0.0 2.0 flag1683
    SELECTF flag1683 0.0 tmpf1683 F.0

    JR_LTF F.0 220.0 whilebody1674
  endwhile1674:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1685
	MOVEF_32 100.0 milliseconds1685
	DATA32 timer1685
	TIMER_WAIT milliseconds1685 timer1685
	TIMER_READY timer1685
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1687
	MOVEF_32 500.0 milliseconds1687
	DATA32 timer1687
	TIMER_WAIT milliseconds1687 timer1687
	TIMER_READY timer1687
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1689:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1690:
  while1691:
    JR_LTEQF VGV_S2 9.0 and1693
    JR_GTF VGV_S3 9.0 or1692
  and1693:
    JR_GTEQF VGV_S2 9.0 and1694
    JR_GTF VGV_S3 9.0 or1692
  and1694:
    JR_LTEQF VGV_S2 9.0 endwhile1691
    JR_GTEQF VGV_S3 9.0 endwhile1691
  or1692:
  whilebody1691:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1695:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1696:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1698
    JR_GTF VGV_S3 9.0 whilebody1691
  and1698:
    JR_GTEQF VGV_S2 9.0 and1699
    JR_GTF VGV_S3 9.0 whilebody1691
  and1699:
    JR_LTEQF VGV_S2 9.0 and1700
    JR_LTF VGV_S3 9.0 whilebody1691
  and1700:
  endwhile1691:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1701
	DATA8 nos1701
	DATA8 busy1701
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1701 nos1701
	JR_EQ8 0 nos1701 motornotbusy1701
  motorwaiting1701:
	OUTPUT_TEST layer1701 nos1701 busy1701
	JR_EQ8 busy1701 0 motornotbusy1701
	SLEEP
	JR motorwaiting1701
  motornotbusy1701:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1703
	DATA8 nos1703
	DATA8 busy1703
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1703 nos1703
	JR_EQ8 0 nos1703 motornotbusy1703
  motorwaiting1703:
	OUTPUT_TEST layer1703 nos1703 busy1703
	JR_EQ8 busy1703 0 motornotbusy1703
	SLEEP
	JR motorwaiting1703
  motornotbusy1703:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1705:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1706:
  while1707:
    JR_LTEQF VGV_S2 10.0 endwhile1707
  whilebody1707:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1708:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1709:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1707
  endwhile1707:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1711:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1712:
  while1713:
    JR_GTEQF VGV_S2 60.0 endwhile1713
  whilebody1713:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1714:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1715:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1713
  endwhile1713:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1718
    DATA8 flag1718
    DIVF 360.0 VGV_L tmpf1718
    CP_EQF 0.0 VGV_L flag1718
    SELECTF flag1718 0.0 tmpf1718 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1721:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1721
  whilebody1721:
    JR_GTEQF VGV_SPEED 60.0 else1723_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1723_1:
  endif1723:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1725:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1721
  endwhile1721:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1728:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1729:
    MOVEF_F 1300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1730:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1732
	DATA8 nos1732
	DATA8 busy1732
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1732 nos1732
	JR_EQ8 0 nos1732 motornotbusy1732
  motorwaiting1732:
	OUTPUT_TEST layer1732 nos1732 busy1732
	JR_EQ8 busy1732 0 motornotbusy1732
	SLEEP
	JR motorwaiting1732
  motornotbusy1732:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1733:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1734:
  while1735:
    JR_LTEQF VGV_S3 10.0 and1737
    JR_GTF VGV_S2 10.0 or1736
  and1737:
    JR_GTEQF VGV_S3 10.0 endwhile1735
    JR_GTEQF VGV_S2 10.0 endwhile1735
  or1736:
  whilebody1735:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1738:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1739:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1740:
    JR_LTEQF VGV_S3 10.0 and1741
    JR_GTF VGV_S2 10.0 whilebody1735
  and1741:
    JR_GTEQF VGV_S3 10.0 and1742
    JR_LTF VGV_S2 10.0 whilebody1735
  and1742:
  endwhile1735:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1744:
    CALL MOTOR.RESETCOUNT 'bc'
  while1746:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1750
    DATA8 flag1750
    DIVF F.1 2.0 tmpf1750
    CP_EQF 0.0 2.0 flag1750
    SELECTF flag1750 0.0 tmpf1750 F.0

    JR_GTEQF F.0 200.0 endwhile1746
  whilebody1746:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1751:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1752:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1753:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1757
    DATA8 flag1757
    DIVF F.1 2.0 tmpf1757
    CP_EQF 0.0 2.0 flag1757
    SELECTF flag1757 0.0 tmpf1757 F.0

    JR_LTF F.0 200.0 whilebody1746
  endwhile1746:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1760
	MOVEF_32 500.0 milliseconds1760
	DATA32 timer1760
	TIMER_WAIT milliseconds1760 timer1760
	TIMER_READY timer1760
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1762:
    DATA32 tmp1763
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1763
    JR_NEQ32 0 tmp1763 alreadylaunched1763
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1763:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1764:
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    DATA32 milliseconds1765
	MOVEF_32 400.0 milliseconds1765
	DATA32 timer1765
	TIMER_WAIT milliseconds1765 timer1765
	TIMER_READY timer1765
    CALL MOTOR.SCHEDULESYNC 'bc' -25.0 -15.0 150.0 'true'

	DATA8 layer1766
	DATA8 nos1766
	DATA8 busy1766
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1766 nos1766
	JR_EQ8 0 nos1766 motornotbusy1766
  motorwaiting1766:
	OUTPUT_TEST layer1766 nos1766 busy1766
	JR_EQ8 busy1766 0 motornotbusy1766
	SLEEP
	JR motorwaiting1766
  motornotbusy1766:
    DATA32 milliseconds1767
	MOVEF_32 400.0 milliseconds1767
	DATA32 timer1767
	TIMER_WAIT milliseconds1767 timer1767
	TIMER_READY timer1767
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer1768
	DATA8 nos1768
	DATA8 busy1768
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1768 nos1768
	JR_EQ8 0 nos1768 motornotbusy1768
  motorwaiting1768:
	OUTPUT_TEST layer1768 nos1768 busy1768
	JR_EQ8 busy1768 0 motornotbusy1768
	SLEEP
	JR motorwaiting1768
  motornotbusy1768:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1770:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1771:
  while1772:
    JR_LTEQF VGV_S2 12.0 endwhile1772
  whilebody1772:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1773:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1774:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 12.0 whilebody1772
  endwhile1772:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1777:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1778:
  while1779:
    JR_GTEQF VGV_S2 60.0 endwhile1779
  whilebody1779:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1780:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1781:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1779
  endwhile1779:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1785:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1789
    DATA8 flag1789
    DIVF F.1 2.0 tmpf1789
    CP_EQF 0.0 2.0 flag1789
    SELECTF flag1789 0.0 tmpf1789 F.0

    JR_GTEQF F.0 300.0 endwhile1785
  whilebody1785:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1790:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1791:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1792:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1796
    DATA8 flag1796
    DIVF F.1 2.0 tmpf1796
    CP_EQF 0.0 2.0 flag1796
    SELECTF flag1796 0.0 tmpf1796 F.0

    JR_LTF F.0 300.0 whilebody1785
  endwhile1785:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.15 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1798:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1799:
  while1800:
    JR_LTEQF VGV_S3 15.0 and1802
    JR_GTF VGV_S2 15.0 or1801
  and1802:
    JR_GTEQF VGV_S3 10.0 endwhile1800
    JR_GTEQF VGV_S2 15.0 endwhile1800
  or1801:
  whilebody1800:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1803:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1804:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1805:
    JR_LTEQF VGV_S3 15.0 and1806
    JR_GTF VGV_S2 15.0 whilebody1800
  and1806:
    JR_GTEQF VGV_S3 10.0 and1807
    JR_LTF VGV_S2 15.0 whilebody1800
  and1807:
  endwhile1800:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1809
	DATA8 no1809
	DATA8 mode81809
	
	MOVEF_8 1.0 no1809
	SUB8 no1809 1 no1809
	DIV8 no1809 4 layer1809
	MATH MOD8 no1809 4 no1809

	MOVEF_8 2.0 mode81809
	
	INPUT_DEVICE READY_RAW layer1809 no1809 0 mode81809 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1816
    DATA8 flag1816
    DIVF VGV_SRED 255.0 tmpf1816
    CP_EQF 0.0 255.0 flag1816
    SELECTF flag1816 0.0 tmpf1816 VGV_SRED

    DATAF tmpf1817
    DATA8 flag1817
    DIVF VGV_SGREEN 255.0 tmpf1817
    CP_EQF 0.0 255.0 flag1817
    SELECTF flag1817 0.0 tmpf1817 VGV_SGREEN

    DATAF tmpf1818
    DATA8 flag1818
    DIVF VGV_SBLUE 255.0 tmpf1818
    CP_EQF 0.0 255.0 flag1818
    SELECTF flag1818 0.0 tmpf1818 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1819_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1819_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1819
  else1819_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1819_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1819_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1819
  else1819_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1819_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1819_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1819_3:
  endif1819:
    JR_GTEQF VGV_SRED VGV_SGREEN else1820_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1820_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1820
  else1820_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1820_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1820_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1820
  else1820_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1820_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1820_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1820_3:
  endif1820:
    JR_NEQF VGV_MAX VGV_MIN else1821_1
    MOVEF_F 0.0 VGV_H
    JR endif1821
  else1821_1:
    JR_NEQF VGV_SRED VGV_MAX else1822_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1823_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1827
    DATA8 flag1827
    DIVF F.0 F.1 tmpf1827
    CP_EQF 0.0 F.1 flag1827
    SELECTF flag1827 0.0 tmpf1827 VGV_H

    JR endif1823
  else1823_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1831
    DATA8 flag1831
    DIVF F.1 F.2 tmpf1831
    CP_EQF 0.0 F.2 flag1831
    SELECTF flag1831 0.0 tmpf1831 F.0

    ADDF F.0 360.0 VGV_H
  else1823_2:
  endif1823:
    JR endif1822
  else1822_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1833_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1837
    DATA8 flag1837
    DIVF F.1 F.2 tmpf1837
    CP_EQF 0.0 F.2 flag1837
    SELECTF flag1837 0.0 tmpf1837 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1833
  else1833_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1842
    DATA8 flag1842
    DIVF F.1 F.2 tmpf1842
    CP_EQF 0.0 F.2 flag1842
    SELECTF flag1842 0.0 tmpf1842 F.0

    ADDF F.0 240.0 VGV_H
  else1833_2:
  endif1833:
  else1822_2:
  endif1822:
  else1821_2:
  endif1821:
    JR_NEQF VGV_MAX 0.0 else1844_1
    MOVEF_F 0.0 VGV_S
    JR endif1844
  else1844_1:
    DATAF tmpf1845
    DATA8 flag1845
    DIVF VGV_MIN VGV_MAX tmpf1845
    CP_EQF 0.0 VGV_MAX flag1845
    SELECTF flag1845 0.0 tmpf1845 F.0

    SUBF 1.0 F.0 VGV_S
  else1844_2:
  endif1844:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1854
	DATA8 no1854
	DATA8 mode81854
	
	MOVEF_8 1.0 no1854
	SUB8 no1854 1 no1854
	DIV8 no1854 4 layer1854
	MATH MOD8 no1854 4 no1854

	MOVEF_8 2.0 mode81854
	
	INPUT_DEVICE READY_RAW layer1854 no1854 0 mode81854 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1855:
    JR_GTF VGV_P 100.0 endfor1855
  forbody1855:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1856:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1855
  endfor1855:
    DATAF tmpf1861
    DATA8 flag1861
    DIVF VGV_X 100.0 tmpf1861
    CP_EQF 0.0 100.0 flag1861
    SELECTF flag1861 0.0 tmpf1861 VGV_H

    DATAF tmpf1862
    DATA8 flag1862
    DIVF VGV_Z 100.0 tmpf1862
    CP_EQF 0.0 100.0 flag1862
    SELECTF flag1862 0.0 tmpf1862 VGV_S

    DATAF tmpf1863
    DATA8 flag1863
    DIVF VGV_D 100.0 tmpf1863
    CP_EQF 0.0 100.0 flag1863
    SELECTF flag1863 0.0 tmpf1863 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1871
	DATA8 no1871
	DATA8 mode81871
	
	MOVEF_8 1.0 no1871
	SUB8 no1871 1 no1871
	DIV8 no1871 4 layer1871
	MATH MOD8 no1871 4 no1871

	MOVEF_8 2.0 mode81871
	
	INPUT_DEVICE READY_RAW layer1871 no1871 0 mode81871 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1878
    DATA8 flag1878
    DIVF VGV_SRED 255.0 tmpf1878
    CP_EQF 0.0 255.0 flag1878
    SELECTF flag1878 0.0 tmpf1878 VGV_SRED

    DATAF tmpf1879
    DATA8 flag1879
    DIVF VGV_SGREEN 255.0 tmpf1879
    CP_EQF 0.0 255.0 flag1879
    SELECTF flag1879 0.0 tmpf1879 VGV_SGREEN

    DATAF tmpf1880
    DATA8 flag1880
    DIVF VGV_SBLUE 255.0 tmpf1880
    CP_EQF 0.0 255.0 flag1880
    SELECTF flag1880 0.0 tmpf1880 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1881_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1881_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1881
  else1881_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1881_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1881_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1881
  else1881_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1881_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1881_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1881_3:
  endif1881:
    JR_GTEQF VGV_SRED VGV_SGREEN else1882_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1882_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1882
  else1882_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1882_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1882_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1882
  else1882_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1882_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1882_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1882_3:
  endif1882:
    JR_NEQF VGV_MAX VGV_MIN else1883_1
    MOVEF_F 0.0 VGV_H
    JR endif1883
  else1883_1:
    JR_NEQF VGV_SRED VGV_MAX else1884_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1885_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1889
    DATA8 flag1889
    DIVF F.0 F.1 tmpf1889
    CP_EQF 0.0 F.1 flag1889
    SELECTF flag1889 0.0 tmpf1889 VGV_H

    JR endif1885
  else1885_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1893
    DATA8 flag1893
    DIVF F.1 F.2 tmpf1893
    CP_EQF 0.0 F.2 flag1893
    SELECTF flag1893 0.0 tmpf1893 F.0

    ADDF F.0 360.0 VGV_H
  else1885_2:
  endif1885:
    JR endif1884
  else1884_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1895_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1899
    DATA8 flag1899
    DIVF F.1 F.2 tmpf1899
    CP_EQF 0.0 F.2 flag1899
    SELECTF flag1899 0.0 tmpf1899 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1895
  else1895_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1904
    DATA8 flag1904
    DIVF F.1 F.2 tmpf1904
    CP_EQF 0.0 F.2 flag1904
    SELECTF flag1904 0.0 tmpf1904 F.0

    ADDF F.0 240.0 VGV_H
  else1895_2:
  endif1895:
  else1884_2:
  endif1884:
  else1883_2:
  endif1883:
    JR_NEQF VGV_MAX 0.0 else1906_1
    MOVEF_F 0.0 VGV_S
    JR endif1906
  else1906_1:
    DATAF tmpf1907
    DATA8 flag1907
    DIVF VGV_MIN VGV_MAX tmpf1907
    CP_EQF 0.0 VGV_MAX flag1907
    SELECTF flag1907 0.0 tmpf1907 F.0

    SUBF 1.0 F.0 VGV_S
  else1906_2:
  endif1906:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1911
    JR_LTF VGV_H 360.0 or1910
  and1911:
    JR_LTF VGV_H 0.0 else1909_1
    JR_GTF VGV_H 20.0 else1909_1
    JR_LTEQF VGV_S 0.3 else1909_1
    JR_GTF VGV_S 1.0 else1909_1
    JR_LTEQF VGV_V 0.025 else1909_1
    JR_GTEQF VGV_V 0.1 else1909_1
  or1910:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1909
  else1909_1:
    JR_LTF VGV_H 20.0 else1909_2
    JR_GTEQF VGV_H 60.0 else1909_2
    JR_LTF VGV_S 0.4 else1909_2
    JR_LTEQF VGV_V 0.03 else1909_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1909
  else1909_2:
    MOVEF_F 6.0 VGV_COLOR
  else1909_3:
  endif1909:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1912
	DATA8 no1912
	DATA8 mode81912
	
	MOVEF_8 1.0 no1912
	SUB8 no1912 1 no1912
	DIV8 no1912 4 layer1912
	MATH MOD8 no1912 4 no1912

	MOVEF_8 2.0 mode81912
	
	INPUT_DEVICE READY_RAW layer1912 no1912 0 mode81912 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1919
    DATA8 flag1919
    DIVF VGV_SRED 255.0 tmpf1919
    CP_EQF 0.0 255.0 flag1919
    SELECTF flag1919 0.0 tmpf1919 VGV_SRED

    DATAF tmpf1920
    DATA8 flag1920
    DIVF VGV_SGREEN 255.0 tmpf1920
    CP_EQF 0.0 255.0 flag1920
    SELECTF flag1920 0.0 tmpf1920 VGV_SGREEN

    DATAF tmpf1921
    DATA8 flag1921
    DIVF VGV_SBLUE 255.0 tmpf1921
    CP_EQF 0.0 255.0 flag1921
    SELECTF flag1921 0.0 tmpf1921 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1922_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1922_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1922
  else1922_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1922_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1922_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1922
  else1922_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1922_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1922_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1922_3:
  endif1922:
    JR_GTEQF VGV_SRED VGV_SGREEN else1923_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1923_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1923
  else1923_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1923_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1923_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1923
  else1923_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1923_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1923_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1923_3:
  endif1923:
    JR_NEQF VGV_MAX VGV_MIN else1924_1
    MOVEF_F 0.0 VGV_H
    JR endif1924
  else1924_1:
    JR_NEQF VGV_SRED VGV_MAX else1925_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1926_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1930
    DATA8 flag1930
    DIVF F.0 F.1 tmpf1930
    CP_EQF 0.0 F.1 flag1930
    SELECTF flag1930 0.0 tmpf1930 VGV_H

    JR endif1926
  else1926_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1934
    DATA8 flag1934
    DIVF F.1 F.2 tmpf1934
    CP_EQF 0.0 F.2 flag1934
    SELECTF flag1934 0.0 tmpf1934 F.0

    ADDF F.0 360.0 VGV_H
  else1926_2:
  endif1926:
    JR endif1925
  else1925_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1936_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1940
    DATA8 flag1940
    DIVF F.1 F.2 tmpf1940
    CP_EQF 0.0 F.2 flag1940
    SELECTF flag1940 0.0 tmpf1940 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1936
  else1936_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1945
    DATA8 flag1945
    DIVF F.1 F.2 tmpf1945
    CP_EQF 0.0 F.2 flag1945
    SELECTF flag1945 0.0 tmpf1945 F.0

    ADDF F.0 240.0 VGV_H
  else1936_2:
  endif1936:
  else1925_2:
  endif1925:
  else1924_2:
  endif1924:
    JR_NEQF VGV_MAX 0.0 else1947_1
    MOVEF_F 0.0 VGV_S
    JR endif1947
  else1947_1:
    DATAF tmpf1948
    DATA8 flag1948
    DIVF VGV_MIN VGV_MAX tmpf1948
    CP_EQF 0.0 VGV_MAX flag1948
    SELECTF flag1948 0.0 tmpf1948 F.0

    SUBF 1.0 F.0 VGV_S
  else1947_2:
  endif1947:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1952
    JR_LTF VGV_H 360.0 or1951
  and1952:
    JR_LTF VGV_H 0.0 else1950_1
    JR_GTF VGV_H 30.0 else1950_1
    JR_LTEQF VGV_S 0.3 else1950_1
    JR_GTF VGV_S 1.0 else1950_1
    JR_LTF VGV_V 0.0 else1950_1
    JR_GTEQF VGV_V 0.02 else1950_1
  or1951:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1950
  else1950_1:
    JR_LTF VGV_H 0.0 else1950_2
    JR_GTEQF VGV_H 60.0 else1950_2
    JR_LTF VGV_S 0.4 else1950_2
    JR_GTF VGV_S 1.0 else1950_2
    JR_LTEQF VGV_V 0.003 else1950_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1950
  else1950_2:
    MOVEF_F 6.0 VGV_COLOR
  else1950_3:
  endif1950:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1957
    DATA8 flag1957
    DIVF F.0 F.1 tmpf1957
    CP_EQF 0.0 F.1 flag1957
    SELECTF flag1957 0.0 tmpf1957 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1962
    DATA8 flag1962
    DIVF F.0 F.1 tmpf1962
    CP_EQF 0.0 F.1 flag1962
    SELECTF flag1962 0.0 tmpf1962 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1963:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1964:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K3 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1978
	MOVEF_32 100.0 milliseconds1978
	DATA32 timer1978
	TIMER_WAIT milliseconds1978 timer1978
	TIMER_READY timer1978
  while1979:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile1979
  whilebody1979:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody1979
  endwhile1979:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1985
	MOVEF_32 250.0 milliseconds1985
	DATA32 timer1985
	TIMER_WAIT milliseconds1985 timer1985
	TIMER_READY timer1985
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1987:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1988:
  while1989:
    JR_LTEQF VGV_S2 9.0 and1991
    JR_GTF VGV_S3 9.0 or1990
  and1991:
    JR_GTEQF VGV_S2 9.0 and1992
    JR_GTF VGV_S3 9.0 or1990
  and1992:
    JR_LTEQF VGV_S2 9.0 endwhile1989
    JR_GTEQF VGV_S3 9.0 endwhile1989
  or1990:
  whilebody1989:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1993:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1994:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1996
    JR_GTF VGV_S3 9.0 whilebody1989
  and1996:
    JR_GTEQF VGV_S2 9.0 and1997
    JR_GTF VGV_S3 9.0 whilebody1989
  and1997:
    JR_LTEQF VGV_S2 9.0 and1998
    JR_LTF VGV_S3 9.0 whilebody1989
  and1998:
  endwhile1989:
  while1999:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1999
  whilebody1999:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1999
  endwhile1999:
    CALL MOTOR.STOP 'B' 'True'
  while2004:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2004
  whilebody2004:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2004
  endwhile2004:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2009
	DATA8 no2009
	DATA8 mode82009
	
	MOVEF_8 2.0 no2009
	SUB8 no2009 1 no2009
	DIV8 no2009 4 layer2009
	MATH MOD8 no2009 4 no2009

	MOVEF_8 0.0 mode82009
	
	INPUT_DEVICE READY_RAW layer2009 no2009 0 mode82009 0
    DATA8 layer2010
	DATA8 no2010
	DATA8 mode82010
	
	MOVEF_8 3.0 no2010
	SUB8 no2010 1 no2010
	DIV8 no2010 4 layer2010
	MATH MOD8 no2010 4 no2010

	MOVEF_8 0.0 mode82010
	
	INPUT_DEVICE READY_RAW layer2010 no2010 0 mode82010 0
  while2011:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2011
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2011
  whilebody2011:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2015
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2011
  and2015:
  endwhile2011:
    CALL MOTOR.STOP 'BC' 'True'
  while2019:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2019
  whilebody2019:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2019
  endwhile2019:
    CALL MOTOR.STOP 'B' 'True'
  while2024:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2024
  whilebody2024:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2024
  endwhile2024:
    CALL MOTOR.STOP 'C' 'True'
  while2029:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2029
  whilebody2029:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2029
  endwhile2029:
    CALL MOTOR.STOP 'B' 'True'
  while2034:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2034
  whilebody2034:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2034
  endwhile2034:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
