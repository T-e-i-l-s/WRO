DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2082
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2082:
    JR_NEQ32 SUBPROGRAM 1 dispatch2083
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2083:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 30.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB60:
    WRITE32 ENDSUB_F_A2_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB61:
  while62:
    JR_LTEQF VGV_S3 10.0 and64
    JR_GTF VGV_S2 10.0 or63
  and64:
    JR_GTEQF VGV_S3 10.0 endwhile62
    JR_GTEQF VGV_S2 10.0 endwhile62
  or63:
  whilebody62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB65:
    WRITE32 ENDSUB_F_A2_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB66:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB67:
    JR_LTEQF VGV_S3 10.0 and68
    JR_GTF VGV_S2 10.0 whilebody62
  and68:
    JR_GTEQF VGV_S3 10.0 and69
    JR_LTF VGV_S2 10.0 whilebody62
  and69:
  endwhile62:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB71:
    JR_GTF VGV_H 100.0 or73
    JR_LTF VGV_H 0.0 else72_1
    JR_GTF VGV_H 27.0 else72_1
  or73:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif72
  else72_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else72_2:
  endif72:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    JR_NEQF VGV_COLOR 4.0 else77_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB78:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer81
	DATA8 nos81
	DATA8 busy81
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer81 nos81
	JR_EQ8 0 nos81 motornotbusy81
  motorwaiting81:
	OUTPUT_TEST layer81 nos81 busy81
	JR_EQ8 busy81 0 motornotbusy81
	SLEEP
	JR motorwaiting81
  motornotbusy81:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while85:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 625.0 endwhile85
  whilebody85:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB87:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 625.0 whilebody85
  endwhile85:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB90:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer91
	DATA8 nos91
	DATA8 busy91
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer91 nos91
	JR_EQ8 0 nos91 motornotbusy91
  motorwaiting91:
	OUTPUT_TEST layer91 nos91 busy91
	JR_EQ8 busy91 0 motornotbusy91
	SLEEP
	JR motorwaiting91
  motornotbusy91:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer93
	DATA8 nos93
	DATA8 busy93
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer93 nos93
	JR_EQ8 0 nos93 motornotbusy93
  motorwaiting93:
	OUTPUT_TEST layer93 nos93 busy93
	JR_EQ8 busy93 0 motornotbusy93
	SLEEP
	JR motorwaiting93
  motornotbusy93:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while96:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf100
    DATA8 flag100
    DIVF F.1 2.0 tmpf100
    CP_EQF 0.0 2.0 flag100
    SELECTF flag100 0.0 tmpf100 F.0

    JR_GTEQF F.0 100.0 endwhile96
  whilebody96:
    WRITE32 ENDSUB_F_A3_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB101:
    WRITE32 ENDSUB_F_A2_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB102:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB103:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf107
    DATA8 flag107
    DIVF F.1 2.0 tmpf107
    CP_EQF 0.0 2.0 flag107
    SELECTF flag107 0.0 tmpf107 F.0

    JR_LTF F.0 100.0 whilebody96
  endwhile96:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB109:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else111_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB112:
    ADDF VGV_C 1.0 VGV_C
    JR endif111
  else111_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer115
	DATA8 nos115
	DATA8 busy115
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer115 nos115
	JR_EQ8 0 nos115 motornotbusy115
  motorwaiting115:
	OUTPUT_TEST layer115 nos115 busy115
	JR_EQ8 busy115 0 motornotbusy115
	SLEEP
	JR motorwaiting115
  motornotbusy115:
  while116:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and118
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or117
  and118:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and121
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or117
  and121:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile116
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile116
  or117:
  whilebody116:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and130
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody116
  and130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and133
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and133:
  endwhile116:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB136:
    WRITE32 ENDSUB_F_A2_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB137:
  while138:
    JR_LTEQF VGV_S3 10.0 and140
    JR_GTF VGV_S2 10.0 or139
  and140:
    JR_GTEQF VGV_S3 10.0 endwhile138
    JR_GTEQF VGV_S2 10.0 endwhile138
  or139:
  whilebody138:
    WRITE32 ENDSUB_F_A3_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB141:
    WRITE32 ENDSUB_F_A2_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB142:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB143:
    JR_LTEQF VGV_S3 10.0 and144
    JR_GTF VGV_S2 10.0 whilebody138
  and144:
    JR_GTEQF VGV_S3 10.0 and145
    JR_LTF VGV_S2 10.0 whilebody138
  and145:
  endwhile138:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
  else111_2:
  endif111:
    JR endif77
  else77_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
  while160:
    JR_LTEQF VGV_S3 10.0 and162
    JR_GTF VGV_S2 10.0 or161
  and162:
    JR_GTEQF VGV_S3 10.0 endwhile160
    JR_GTEQF VGV_S2 10.0 endwhile160
  or161:
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB163:
    WRITE32 ENDSUB_F_A2_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB164:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB165:
    JR_LTEQF VGV_S3 10.0 and166
    JR_GTF VGV_S2 10.0 whilebody160
  and166:
    JR_GTEQF VGV_S3 10.0 and167
    JR_LTF VGV_S2 10.0 whilebody160
  and167:
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer170
	DATA8 nos170
	DATA8 busy170
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer170 nos170
	JR_EQ8 0 nos170 motornotbusy170
  motorwaiting170:
	OUTPUT_TEST layer170 nos170 busy170
	JR_EQ8 busy170 0 motornotbusy170
	SLEEP
	JR motorwaiting170
  motornotbusy170:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds173
	MOVEF_32 500.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB175:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while177:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile177
  whilebody177:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB179:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody177
  endwhile177:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else182_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB183:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB186:
    WRITE32 ENDSUB_F_A2_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB187:
  while188:
    JR_LTEQF VGV_S3 15.0 endwhile188
  whilebody188:
    WRITE32 ENDSUB_F_A3_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB189:
    WRITE32 ENDSUB_F_A2_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB190:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody188
  endwhile188:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB193:
    WRITE32 ENDSUB_F_A2_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB194:
  while195:
    JR_GTEQF VGV_S3 35.0 endwhile195
  whilebody195:
    WRITE32 ENDSUB_F_A3_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB196:
    WRITE32 ENDSUB_F_A2_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB197:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody195
  endwhile195:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB201:
    WRITE32 ENDSUB_F_A2_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB202:
  while203:
    JR_LTEQF VGV_S3 10.0 and205
    JR_GTF VGV_S2 10.0 or204
  and205:
    JR_GTEQF VGV_S3 10.0 endwhile203
    JR_GTEQF VGV_S2 10.0 endwhile203
  or204:
  whilebody203:
    WRITE32 ENDSUB_F_A3_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB207:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB208:
    JR_LTEQF VGV_S3 10.0 and209
    JR_GTF VGV_S2 10.0 whilebody203
  and209:
    JR_GTEQF VGV_S3 10.0 and210
    JR_LTF VGV_S2 10.0 whilebody203
  and210:
  endwhile203:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB212:
    ADDF VGV_C 1.0 VGV_C
    JR endif182
  else182_1:
    DATA32 tmp214
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp214
    JR_NEQ32 0 tmp214 alreadylaunched214
    OBJECT_START TF_VIDVIG_0
  alreadylaunched214:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB215:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer216
	DATA8 nos216
	DATA8 busy216
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer216 nos216
	JR_EQ8 0 nos216 motornotbusy216
  motorwaiting216:
	OUTPUT_TEST layer216 nos216 busy216
	JR_EQ8 busy216 0 motornotbusy216
	SLEEP
	JR motorwaiting216
  motornotbusy216:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB220:
  while221:
    JR_LTEQF VGV_S3 10.0 and223
    JR_GTF VGV_S2 10.0 or222
  and223:
    JR_GTEQF VGV_S3 10.0 endwhile221
    JR_GTEQF VGV_S2 10.0 endwhile221
  or222:
  whilebody221:
    WRITE32 ENDSUB_F_A3_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB225:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB226:
    JR_LTEQF VGV_S3 10.0 and227
    JR_GTF VGV_S2 10.0 whilebody221
  and227:
    JR_GTEQF VGV_S3 10.0 and228
    JR_LTF VGV_S2 10.0 whilebody221
  and228:
  endwhile221:
    CALL MOTOR.STOP 'bc' 'true'
  else182_2:
  endif182:
  else77_2:
  endif77:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB230:
    JR_LTF VGV_H 21.0 or232
    JR_LTEQF VGV_H 100.0 else231_1
  or232:
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif231
  else231_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else231_2:
  endif231:
    JR_NEQF VGV_COLOR2 4.0 else235_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB237:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif235
  else235_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB239:
    CALL MOTOR.RESETCOUNT 'bc'
  while241:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 210.0 endwhile241
  whilebody241:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB243:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 210.0 whilebody241
  endwhile241:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds248
	MOVEF_32 100.0 milliseconds248
	DATA32 timer248
	TIMER_WAIT milliseconds248 timer248
	TIMER_READY timer248
    WRITE32 ENDSUB_F_NPL_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB249:
    MOVEF_F 1230.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf250
    DATA8 flag250
    DIVF 360.0 VGV_L tmpf250
    CP_EQF 0.0 VGV_L flag250
    SELECTF flag250 0.0 tmpf250 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while254:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf258
    DATA8 flag258
    DIVF F.1 2.0 tmpf258
    CP_EQF 0.0 2.0 flag258
    SELECTF flag258 0.0 tmpf258 F.0

    JR_GTEQF F.0 VGV_X endwhile254
  whilebody254:
    WRITE32 ENDSUB_F_A3_0:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB259:
    WRITE32 ENDSUB_F_A2_0:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB260:
    JR_GTEQF VGV_SPEED 60.0 else261_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else261_1:
  endif261:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB263:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf267
    DATA8 flag267
    DIVF F.1 2.0 tmpf267
    CP_EQF 0.0 2.0 flag267
    SELECTF flag267 0.0 tmpf267 F.0

    JR_LTF F.0 VGV_X whilebody254
  endwhile254:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB269:
    JR_NEQF VGV_C 1.0 else270_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB271:
    JR endif270
  else270_1:
    JR_NEQF VGV_C 0.0 else270_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB272:
  else270_2:
  endif270:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB274:
    WRITE32 ENDSUB_F_A2_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB275:
  while276:
    JR_LTEQF VGV_S3 10.0 and278
    JR_GTF VGV_S2 10.0 or277
  and278:
    JR_GTEQF VGV_S3 10.0 endwhile276
    JR_GTEQF VGV_S2 10.0 endwhile276
  or277:
  whilebody276:
    WRITE32 ENDSUB_F_A3_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB279:
    WRITE32 ENDSUB_F_A2_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB280:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB281:
    JR_LTEQF VGV_S3 10.0 and282
    JR_GTF VGV_S2 10.0 whilebody276
  and282:
    JR_GTEQF VGV_S3 10.0 and283
    JR_LTF VGV_S2 10.0 whilebody276
  and283:
  endwhile276:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer285
	DATA8 nos285
	DATA8 busy285
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer285 nos285
	JR_EQ8 0 nos285 motornotbusy285
  motorwaiting285:
	OUTPUT_TEST layer285 nos285 busy285
	JR_EQ8 busy285 0 motornotbusy285
	SLEEP
	JR motorwaiting285
  motornotbusy285:
    WRITE32 ENDSUB_F_A3_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB286:
    WRITE32 ENDSUB_F_A2_0:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB287:
  while288:
    JR_LTEQF VGV_S3 10.0 and290
    JR_GTF VGV_S2 10.0 or289
  and290:
    JR_GTEQF VGV_S3 10.0 endwhile288
    JR_GTEQF VGV_S2 10.0 endwhile288
  or289:
  whilebody288:
    WRITE32 ENDSUB_F_A3_0:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB291:
    WRITE32 ENDSUB_F_A2_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB292:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB293:
    JR_LTEQF VGV_S3 10.0 and294
    JR_GTF VGV_S2 10.0 whilebody288
  and294:
    JR_GTEQF VGV_S3 10.0 and295
    JR_LTF VGV_S2 10.0 whilebody288
  and295:
  endwhile288:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB297:
    CALL MOTOR.RESETCOUNT 'bc'
  while299:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf303
    DATA8 flag303
    DIVF F.1 2.0 tmpf303
    CP_EQF 0.0 2.0 flag303
    SELECTF flag303 0.0 tmpf303 F.0

    JR_GTEQF F.0 160.0 endwhile299
  whilebody299:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB304:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf308
    DATA8 flag308
    DIVF F.1 2.0 tmpf308
    CP_EQF 0.0 2.0 flag308
    SELECTF flag308 0.0 tmpf308 F.0

    JR_LTF F.0 160.0 whilebody299
  endwhile299:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds312
	MOVEF_32 500.0 milliseconds312
	DATA32 timer312
	TIMER_WAIT milliseconds312 timer312
	TIMER_READY timer312
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer314
	DATA8 nos314
	DATA8 busy314
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer314 nos314
	JR_EQ8 0 nos314 motornotbusy314
  motorwaiting314:
	OUTPUT_TEST layer314 nos314 busy314
	JR_EQ8 busy314 0 motornotbusy314
	SLEEP
	JR motorwaiting314
  motornotbusy314:
    DATA32 tmp315
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp315
    JR_NEQ32 0 tmp315 alreadylaunched315
    OBJECT_START TF_VIDVIG_0
  alreadylaunched315:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB316:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB317:
    ADDF VGV_C 1.0 VGV_C
  else235_2:
  endif235:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB319:
    JR_LTEQF VGV_H 100.0 and322
    JR_NEQF VGV_H 240.0 or321
  and322:
    JR_LTF VGV_H 0.0 else320_1
    JR_GTF VGV_H 21.0 else320_1
  or321:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif320
  else320_1:
    JR_GTEQF VGV_H 120.0 else320_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif320
  else320_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else320_3:
  endif320:
    JR_NEQF VGV_COLOR3 4.0 else326_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer327
	DATA8 nos327
	DATA8 busy327
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer327 nos327
	JR_EQ8 0 nos327 motornotbusy327
  motorwaiting327:
	OUTPUT_TEST layer327 nos327 busy327
	JR_EQ8 busy327 0 motornotbusy327
	SLEEP
	JR motorwaiting327
  motornotbusy327:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB328:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else330_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB331:
    CALL MOTOR.RESETCOUNT 'bc'
  while333:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf337
    DATA8 flag337
    DIVF F.1 2.0 tmpf337
    CP_EQF 0.0 2.0 flag337
    SELECTF flag337 0.0 tmpf337 F.0

    JR_GTEQF F.0 210.0 endwhile333
  whilebody333:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB338:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf342
    DATA8 flag342
    DIVF F.1 2.0 tmpf342
    CP_EQF 0.0 2.0 flag342
    SELECTF flag342 0.0 tmpf342 F.0

    JR_LTF F.0 210.0 whilebody333
  endwhile333:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer344
	DATA8 nos344
	DATA8 busy344
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer344 nos344
	JR_EQ8 0 nos344 motornotbusy344
  motorwaiting344:
	OUTPUT_TEST layer344 nos344 busy344
	JR_EQ8 busy344 0 motornotbusy344
	SLEEP
	JR motorwaiting344
  motornotbusy344:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds346
	MOVEF_32 500.0 milliseconds346
	DATA32 timer346
	TIMER_WAIT milliseconds346 timer346
	TIMER_READY timer346
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB348:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf349
    DATA8 flag349
    DIVF 360.0 VGV_L tmpf349
    CP_EQF 0.0 VGV_L flag349
    SELECTF flag349 0.0 tmpf349 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while352:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf356
    DATA8 flag356
    DIVF F.1 2.0 tmpf356
    CP_EQF 0.0 2.0 flag356
    SELECTF flag356 0.0 tmpf356 F.0

    JR_GTEQF F.0 VGV_X endwhile352
  whilebody352:
    WRITE32 ENDSUB_F_A3_0:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB357:
    WRITE32 ENDSUB_F_A2_0:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB358:
    JR_GTEQF VGV_SPEED 80.0 else359_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else359_1:
  endif359:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB361:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf365
    DATA8 flag365
    DIVF F.1 2.0 tmpf365
    CP_EQF 0.0 2.0 flag365
    SELECTF flag365 0.0 tmpf365 F.0

    JR_LTF F.0 VGV_X whilebody352
  endwhile352:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB367:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB368:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB369:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB371:
    CALL MOTOR.RESETCOUNT 'bc'
  while373:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf377
    DATA8 flag377
    DIVF F.1 2.0 tmpf377
    CP_EQF 0.0 2.0 flag377
    SELECTF flag377 0.0 tmpf377 F.0

    JR_GTEQF F.0 210.0 endwhile373
  whilebody373:
    MOVEF_F 40.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB378:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf382
    DATA8 flag382
    DIVF F.1 2.0 tmpf382
    CP_EQF 0.0 2.0 flag382
    SELECTF flag382 0.0 tmpf382 F.0

    JR_LTF F.0 210.0 whilebody373
  endwhile373:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer384
	DATA8 nos384
	DATA8 busy384
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer384 nos384
	JR_EQ8 0 nos384 motornotbusy384
  motorwaiting384:
	OUTPUT_TEST layer384 nos384 busy384
	JR_EQ8 busy384 0 motornotbusy384
	SLEEP
	JR motorwaiting384
  motornotbusy384:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds386
	MOVEF_32 500.0 milliseconds386
	DATA32 timer386
	TIMER_WAIT milliseconds386 timer386
	TIMER_READY timer386
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB388:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB389:
    WRITE32 ENDSUB_F_PR_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB390:
    CALL MOTOR.RESETCOUNT 'bc'
  while392:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf396
    DATA8 flag396
    DIVF F.1 2.0 tmpf396
    CP_EQF 0.0 2.0 flag396
    SELECTF flag396 0.0 tmpf396 F.0

    JR_GTEQF F.0 400.0 endwhile392
  whilebody392:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB397:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf401
    DATA8 flag401
    DIVF F.1 2.0 tmpf401
    CP_EQF 0.0 2.0 flag401
    SELECTF flag401 0.0 tmpf401 F.0

    JR_LTF F.0 400.0 whilebody392
  endwhile392:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds404
	MOVEF_32 500.0 milliseconds404
	DATA32 timer404
	TIMER_WAIT milliseconds404 timer404
	TIMER_READY timer404
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB406:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf407
    DATA8 flag407
    DIVF 360.0 VGV_L tmpf407
    CP_EQF 0.0 VGV_L flag407
    SELECTF flag407 0.0 tmpf407 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while410:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf414
    DATA8 flag414
    DIVF F.1 2.0 tmpf414
    CP_EQF 0.0 2.0 flag414
    SELECTF flag414 0.0 tmpf414 F.0

    JR_GTEQF F.0 VGV_X endwhile410
  whilebody410:
    WRITE32 ENDSUB_F_A3_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB415:
    WRITE32 ENDSUB_F_A2_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB416:
    JR_GTEQF VGV_SPEED 80.0 else417_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else417_1:
  endif417:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB419:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf423
    DATA8 flag423
    DIVF F.1 2.0 tmpf423
    CP_EQF 0.0 2.0 flag423
    SELECTF flag423 0.0 tmpf423 F.0

    JR_LTF F.0 VGV_X whilebody410
  endwhile410:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB425:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB426:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB427:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB429:
    CALL MOTOR.RESETCOUNT 'bc'
  while431:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf435
    DATA8 flag435
    DIVF F.1 2.0 tmpf435
    CP_EQF 0.0 2.0 flag435
    SELECTF flag435 0.0 tmpf435 F.0

    JR_GTEQF F.0 160.0 endwhile431
  whilebody431:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB436:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf440
    DATA8 flag440
    DIVF F.1 2.0 tmpf440
    CP_EQF 0.0 2.0 flag440
    SELECTF flag440 0.0 tmpf440 F.0

    JR_LTF F.0 160.0 whilebody431
  endwhile431:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer442
	DATA8 nos442
	DATA8 busy442
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer442 nos442
	JR_EQ8 0 nos442 motornotbusy442
  motorwaiting442:
	OUTPUT_TEST layer442 nos442 busy442
	JR_EQ8 busy442 0 motornotbusy442
	SLEEP
	JR motorwaiting442
  motornotbusy442:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds444
	MOVEF_32 500.0 milliseconds444
	DATA32 timer444
	TIMER_WAIT milliseconds444 timer444
	TIMER_READY timer444
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB446:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB447:
    WRITE32 ENDSUB_F_PR_0:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB448:
    CALL MOTOR.RESETCOUNT 'bc'
  while450:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf454
    DATA8 flag454
    DIVF F.1 2.0 tmpf454
    CP_EQF 0.0 2.0 flag454
    SELECTF flag454 0.0 tmpf454 F.0

    JR_GTEQF F.0 80.0 endwhile450
  whilebody450:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB455:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf459
    DATA8 flag459
    DIVF F.1 2.0 tmpf459
    CP_EQF 0.0 2.0 flag459
    SELECTF flag459 0.0 tmpf459 F.0

    JR_LTF F.0 80.0 whilebody450
  endwhile450:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer461
	DATA8 nos461
	DATA8 busy461
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer461 nos461
	JR_EQ8 0 nos461 motornotbusy461
  motorwaiting461:
	OUTPUT_TEST layer461 nos461 busy461
	JR_EQ8 busy461 0 motornotbusy461
	SLEEP
	JR motorwaiting461
  motornotbusy461:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds463
	MOVEF_32 500.0 milliseconds463
	DATA32 timer463
	TIMER_WAIT milliseconds463 timer463
	TIMER_READY timer463
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB465:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf466
    DATA8 flag466
    DIVF 360.0 VGV_L tmpf466
    CP_EQF 0.0 VGV_L flag466
    SELECTF flag466 0.0 tmpf466 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while469:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf473
    DATA8 flag473
    DIVF F.1 2.0 tmpf473
    CP_EQF 0.0 2.0 flag473
    SELECTF flag473 0.0 tmpf473 F.0

    JR_GTEQF F.0 VGV_X endwhile469
  whilebody469:
    WRITE32 ENDSUB_F_A3_0:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB474:
    WRITE32 ENDSUB_F_A2_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB475:
    JR_GTEQF VGV_SPEED 80.0 else476_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else476_1:
  endif476:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB478:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf482
    DATA8 flag482
    DIVF F.1 2.0 tmpf482
    CP_EQF 0.0 2.0 flag482
    SELECTF flag482 0.0 tmpf482 F.0

    JR_LTF F.0 VGV_X whilebody469
  endwhile469:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB484:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB485:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB486:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB488:
    CALL MOTOR.RESETCOUNT 'bc'
  while490:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf494
    DATA8 flag494
    DIVF F.1 2.0 tmpf494
    CP_EQF 0.0 2.0 flag494
    SELECTF flag494 0.0 tmpf494 F.0

    JR_GTEQF F.0 50.0 endwhile490
  whilebody490:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB495:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf499
    DATA8 flag499
    DIVF F.1 2.0 tmpf499
    CP_EQF 0.0 2.0 flag499
    SELECTF flag499 0.0 tmpf499 F.0

    JR_LTF F.0 50.0 whilebody490
  endwhile490:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer501
	DATA8 nos501
	DATA8 busy501
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer501 nos501
	JR_EQ8 0 nos501 motornotbusy501
  motorwaiting501:
	OUTPUT_TEST layer501 nos501 busy501
	JR_EQ8 busy501 0 motornotbusy501
	SLEEP
	JR motorwaiting501
  motornotbusy501:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds503
	MOVEF_32 500.0 milliseconds503
	DATA32 timer503
	TIMER_WAIT milliseconds503 timer503
	TIMER_READY timer503
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB505:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB506:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB507:
  else330_1:
  endif330:
  else326_1:
  endif326:
    JR_NEQF VGV_COLOR3 5.0 else508_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB509:
    CALL MOTOR.RESETCOUNT 'bc'
  while511:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf515
    DATA8 flag515
    DIVF F.1 2.0 tmpf515
    CP_EQF 0.0 2.0 flag515
    SELECTF flag515 0.0 tmpf515 F.0

    JR_GTEQF F.0 180.0 endwhile511
  whilebody511:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB516:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf520
    DATA8 flag520
    DIVF F.1 2.0 tmpf520
    CP_EQF 0.0 2.0 flag520
    SELECTF flag520 0.0 tmpf520 F.0

    JR_LTF F.0 180.0 whilebody511
  endwhile511:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer522
	DATA8 nos522
	DATA8 busy522
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer522 nos522
	JR_EQ8 0 nos522 motornotbusy522
  motorwaiting522:
	OUTPUT_TEST layer522 nos522 busy522
	JR_EQ8 busy522 0 motornotbusy522
	SLEEP
	JR motorwaiting522
  motornotbusy522:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds524
	MOVEF_32 500.0 milliseconds524
	DATA32 timer524
	TIMER_WAIT milliseconds524 timer524
	TIMER_READY timer524
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB526:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf527
    DATA8 flag527
    DIVF 360.0 VGV_L tmpf527
    CP_EQF 0.0 VGV_L flag527
    SELECTF flag527 0.0 tmpf527 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while530:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf534
    DATA8 flag534
    DIVF F.1 2.0 tmpf534
    CP_EQF 0.0 2.0 flag534
    SELECTF flag534 0.0 tmpf534 F.0

    JR_GTEQF F.0 VGV_X endwhile530
  whilebody530:
    WRITE32 ENDSUB_F_A3_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB535:
    WRITE32 ENDSUB_F_A2_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB536:
    JR_GTEQF VGV_SPEED 80.0 else537_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else537_1:
  endif537:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB539:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf543
    DATA8 flag543
    DIVF F.1 2.0 tmpf543
    CP_EQF 0.0 2.0 flag543
    SELECTF flag543 0.0 tmpf543 F.0

    JR_LTF F.0 VGV_X whilebody530
  endwhile530:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB545:
    JR_NEQF VGV_C 1.0 else546_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB547:
    JR endif546
  else546_1:
    JR_NEQF VGV_C 0.0 else546_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB548:
    JR endif546
  else546_2:
    JR_NEQF VGV_C 2.0 else546_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB549:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB550:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds552
	MOVEF_32 100.0 milliseconds552
	DATA32 timer552
	TIMER_WAIT milliseconds552 timer552
	TIMER_READY timer552
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer553
	DATA8 nos553
	DATA8 busy553
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer553 nos553
	JR_EQ8 0 nos553 motornotbusy553
  motorwaiting553:
	OUTPUT_TEST layer553 nos553 busy553
	JR_EQ8 busy553 0 motornotbusy553
	SLEEP
	JR motorwaiting553
  motornotbusy553:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer555
	DATA8 nos555
	DATA8 busy555
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer555 nos555
	JR_EQ8 0 nos555 motornotbusy555
  motorwaiting555:
	OUTPUT_TEST layer555 nos555 busy555
	JR_EQ8 busy555 0 motornotbusy555
	SLEEP
	JR motorwaiting555
  motornotbusy555:
    WRITE32 ENDSUB_F_A3_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB556:
    WRITE32 ENDSUB_F_A2_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB557:
  while558:
    JR_LTEQF VGV_S2 15.0 endwhile558
  whilebody558:
    WRITE32 ENDSUB_F_A3_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB559:
    WRITE32 ENDSUB_F_A2_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB560:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody558
  endwhile558:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB563:
    WRITE32 ENDSUB_F_A2_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB564:
  while565:
    JR_GTEQF VGV_S2 55.0 endwhile565
  whilebody565:
    WRITE32 ENDSUB_F_A3_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB566:
    WRITE32 ENDSUB_F_A2_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB567:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody565
  endwhile565:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while571:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf575
    DATA8 flag575
    DIVF F.1 2.0 tmpf575
    CP_EQF 0.0 2.0 flag575
    SELECTF flag575 0.0 tmpf575 F.0

    JR_GTEQF F.0 230.0 endwhile571
  whilebody571:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB576:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf580
    DATA8 flag580
    DIVF F.1 2.0 tmpf580
    CP_EQF 0.0 2.0 flag580
    SELECTF flag580 0.0 tmpf580 F.0

    JR_LTF F.0 230.0 whilebody571
  endwhile571:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds583
	MOVEF_32 500.0 milliseconds583
	DATA32 timer583
	TIMER_WAIT milliseconds583 timer583
	TIMER_READY timer583
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB585:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB586:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB588:
  else546_3:
  endif546:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB589:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer591
	DATA8 nos591
	DATA8 busy591
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer591 nos591
	JR_EQ8 0 nos591 motornotbusy591
  motorwaiting591:
	OUTPUT_TEST layer591 nos591 busy591
	JR_EQ8 busy591 0 motornotbusy591
	SLEEP
	JR motorwaiting591
  motornotbusy591:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer593
	DATA8 nos593
	DATA8 busy593
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer593 nos593
	JR_EQ8 0 nos593 motornotbusy593
  motorwaiting593:
	OUTPUT_TEST layer593 nos593 busy593
	JR_EQ8 busy593 0 motornotbusy593
	SLEEP
	JR motorwaiting593
  motornotbusy593:
    WRITE32 ENDSUB_F_A3_0:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB594:
    WRITE32 ENDSUB_F_A2_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB595:
  while596:
    JR_LTEQF VGV_S2 15.0 endwhile596
  whilebody596:
    WRITE32 ENDSUB_F_A3_0:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB597:
    WRITE32 ENDSUB_F_A2_0:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB598:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody596
  endwhile596:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB601:
    WRITE32 ENDSUB_F_A2_0:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB602:
  while603:
    JR_GTEQF VGV_S2 55.0 endwhile603
  whilebody603:
    WRITE32 ENDSUB_F_A3_0:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB604:
    WRITE32 ENDSUB_F_A2_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB605:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody603
  endwhile603:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while609:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf613
    DATA8 flag613
    DIVF F.1 2.0 tmpf613
    CP_EQF 0.0 2.0 flag613
    SELECTF flag613 0.0 tmpf613 F.0

    JR_GTEQF F.0 10.0 endwhile609
  whilebody609:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB614:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf618
    DATA8 flag618
    DIVF F.1 2.0 tmpf618
    CP_EQF 0.0 2.0 flag618
    SELECTF flag618 0.0 tmpf618 F.0

    JR_LTF F.0 10.0 whilebody609
  endwhile609:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer619
	DATA8 nos619
	DATA8 busy619
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer619 nos619
	JR_EQ8 0 nos619 motornotbusy619
  motorwaiting619:
	OUTPUT_TEST layer619 nos619 busy619
	JR_EQ8 busy619 0 motornotbusy619
	SLEEP
	JR motorwaiting619
  motornotbusy619:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds622
	MOVEF_32 500.0 milliseconds622
	DATA32 timer622
	TIMER_WAIT milliseconds622 timer622
	TIMER_READY timer622
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB624:
    DATA32 tmp625
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp625
    JR_NEQ32 0 tmp625 alreadylaunched625
    OBJECT_START TF_VIDVIG_0
  alreadylaunched625:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB626:
    ADDF VGV_C 1.0 VGV_C
  else508_1:
  endif508:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB628:
    JR_LTF VGV_H 21.0 or630
    JR_LTEQF VGV_H 100.0 else629_1
  or630:
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif629
  else629_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else629_2:
  endif629:
    JR_NEQF VGV_COLOR4 4.0 else633_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer634
	DATA8 nos634
	DATA8 busy634
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer634 nos634
	JR_EQ8 0 nos634 motornotbusy634
  motorwaiting634:
	OUTPUT_TEST layer634 nos634 busy634
	JR_EQ8 busy634 0 motornotbusy634
	SLEEP
	JR motorwaiting634
  motornotbusy634:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB635:
    JR_NEQF VGV_C 1.0 else636_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB637:
    CALL MOTOR.RESETCOUNT 'bc'
  while639:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf643
    DATA8 flag643
    DIVF F.1 2.0 tmpf643
    CP_EQF 0.0 2.0 flag643
    SELECTF flag643 0.0 tmpf643 F.0

    JR_GTEQF F.0 210.0 endwhile639
  whilebody639:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB644:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf648
    DATA8 flag648
    DIVF F.1 2.0 tmpf648
    CP_EQF 0.0 2.0 flag648
    SELECTF flag648 0.0 tmpf648 F.0

    JR_LTF F.0 210.0 whilebody639
  endwhile639:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer650
	DATA8 nos650
	DATA8 busy650
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer650 nos650
	JR_EQ8 0 nos650 motornotbusy650
  motorwaiting650:
	OUTPUT_TEST layer650 nos650 busy650
	JR_EQ8 busy650 0 motornotbusy650
	SLEEP
	JR motorwaiting650
  motornotbusy650:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds652
	MOVEF_32 500.0 milliseconds652
	DATA32 timer652
	TIMER_WAIT milliseconds652 timer652
	TIMER_READY timer652
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB654:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf655
    DATA8 flag655
    DIVF 360.0 VGV_L tmpf655
    CP_EQF 0.0 VGV_L flag655
    SELECTF flag655 0.0 tmpf655 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while658:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf662
    DATA8 flag662
    DIVF F.1 2.0 tmpf662
    CP_EQF 0.0 2.0 flag662
    SELECTF flag662 0.0 tmpf662 F.0

    JR_GTEQF F.0 VGV_X endwhile658
  whilebody658:
    WRITE32 ENDSUB_F_A3_0:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB663:
    WRITE32 ENDSUB_F_A2_0:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB664:
    JR_GTEQF VGV_SPEED 80.0 else665_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else665_1:
  endif665:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB667:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf671
    DATA8 flag671
    DIVF F.1 2.0 tmpf671
    CP_EQF 0.0 2.0 flag671
    SELECTF flag671 0.0 tmpf671 F.0

    JR_LTF F.0 VGV_X whilebody658
  endwhile658:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB673:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB674:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB675:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer677
	DATA8 nos677
	DATA8 busy677
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer677 nos677
	JR_EQ8 0 nos677 motornotbusy677
  motorwaiting677:
	OUTPUT_TEST layer677 nos677 busy677
	JR_EQ8 busy677 0 motornotbusy677
	SLEEP
	JR motorwaiting677
  motornotbusy677:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB678:
    WRITE32 ENDSUB_F_PR_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB679:
    CALL MOTOR.RESETCOUNT 'bc'
  while681:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf685
    DATA8 flag685
    DIVF F.1 2.0 tmpf685
    CP_EQF 0.0 2.0 flag685
    SELECTF flag685 0.0 tmpf685 F.0

    JR_GTEQF F.0 110.0 endwhile681
  whilebody681:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB686:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf690
    DATA8 flag690
    DIVF F.1 2.0 tmpf690
    CP_EQF 0.0 2.0 flag690
    SELECTF flag690 0.0 tmpf690 F.0

    JR_LTF F.0 110.0 whilebody681
  endwhile681:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 180.0 'true'

	DATA8 layer692
	DATA8 nos692
	DATA8 busy692
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer692 nos692
	JR_EQ8 0 nos692 motornotbusy692
  motorwaiting692:
	OUTPUT_TEST layer692 nos692 busy692
	JR_EQ8 busy692 0 motornotbusy692
	SLEEP
	JR motorwaiting692
  motornotbusy692:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds694
	MOVEF_32 500.0 milliseconds694
	DATA32 timer694
	TIMER_WAIT milliseconds694 timer694
	TIMER_READY timer694
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB696:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB697:
    WRITE32 ENDSUB_F_PR_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB698:
    CALL MOTOR.RESETCOUNT 'bc'
  while700:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf704
    DATA8 flag704
    DIVF F.1 2.0 tmpf704
    CP_EQF 0.0 2.0 flag704
    SELECTF flag704 0.0 tmpf704 F.0

    JR_GTEQF F.0 80.0 endwhile700
  whilebody700:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB705:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf709
    DATA8 flag709
    DIVF F.1 2.0 tmpf709
    CP_EQF 0.0 2.0 flag709
    SELECTF flag709 0.0 tmpf709 F.0

    JR_LTF F.0 80.0 whilebody700
  endwhile700:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer711
	DATA8 nos711
	DATA8 busy711
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer711 nos711
	JR_EQ8 0 nos711 motornotbusy711
  motorwaiting711:
	OUTPUT_TEST layer711 nos711 busy711
	JR_EQ8 busy711 0 motornotbusy711
	SLEEP
	JR motorwaiting711
  motornotbusy711:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds713
	MOVEF_32 500.0 milliseconds713
	DATA32 timer713
	TIMER_WAIT milliseconds713 timer713
	TIMER_READY timer713
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB715:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf716
    DATA8 flag716
    DIVF 360.0 VGV_L tmpf716
    CP_EQF 0.0 VGV_L flag716
    SELECTF flag716 0.0 tmpf716 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while719:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf723
    DATA8 flag723
    DIVF F.1 2.0 tmpf723
    CP_EQF 0.0 2.0 flag723
    SELECTF flag723 0.0 tmpf723 F.0

    JR_GTEQF F.0 VGV_X endwhile719
  whilebody719:
    WRITE32 ENDSUB_F_A3_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB724:
    WRITE32 ENDSUB_F_A2_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB725:
    JR_GTEQF VGV_SPEED 80.0 else726_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else726_1:
  endif726:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB728:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf732
    DATA8 flag732
    DIVF F.1 2.0 tmpf732
    CP_EQF 0.0 2.0 flag732
    SELECTF flag732 0.0 tmpf732 F.0

    JR_LTF F.0 VGV_X whilebody719
  endwhile719:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB734:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB735:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB736:
    WRITE32 ENDSUB_F_PR_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB737:
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while739:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf743
    DATA8 flag743
    DIVF F.1 2.0 tmpf743
    CP_EQF 0.0 2.0 flag743
    SELECTF flag743 0.0 tmpf743 F.0

    JR_GTEQF F.0 110.0 endwhile739
  whilebody739:
    WRITE32 ENDSUB_F_A3_0:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB744:
    WRITE32 ENDSUB_F_A2_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB745:
    JR_GTEQF VGV_SPEED 80.0 else746_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else746_1:
  endif746:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB748:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf752
    DATA8 flag752
    DIVF F.1 2.0 tmpf752
    CP_EQF 0.0 2.0 flag752
    SELECTF flag752 0.0 tmpf752 F.0

    JR_LTF F.0 110.0 whilebody739
  endwhile739:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer754
	DATA8 nos754
	DATA8 busy754
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer754 nos754
	JR_EQ8 0 nos754 motornotbusy754
  motorwaiting754:
	OUTPUT_TEST layer754 nos754 busy754
	JR_EQ8 busy754 0 motornotbusy754
	SLEEP
	JR motorwaiting754
  motornotbusy754:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds756
	MOVEF_32 500.0 milliseconds756
	DATA32 timer756
	TIMER_WAIT milliseconds756 timer756
	TIMER_READY timer756
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB758:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB759:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB760:
  else636_1:
  endif636:
  else633_1:
  endif633:
    JR_NEQF VGV_COLOR4 5.0 else761_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB762:
    CALL MOTOR.RESETCOUNT 'bc'
  while764:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf768
    DATA8 flag768
    DIVF F.1 2.0 tmpf768
    CP_EQF 0.0 2.0 flag768
    SELECTF flag768 0.0 tmpf768 F.0

    JR_GTEQF F.0 260.0 endwhile764
  whilebody764:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB769:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf773
    DATA8 flag773
    DIVF F.1 2.0 tmpf773
    CP_EQF 0.0 2.0 flag773
    SELECTF flag773 0.0 tmpf773 F.0

    JR_LTF F.0 260.0 whilebody764
  endwhile764:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer775
	DATA8 nos775
	DATA8 busy775
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer775 nos775
	JR_EQ8 0 nos775 motornotbusy775
  motorwaiting775:
	OUTPUT_TEST layer775 nos775 busy775
	JR_EQ8 busy775 0 motornotbusy775
	SLEEP
	JR motorwaiting775
  motornotbusy775:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds777
	MOVEF_32 500.0 milliseconds777
	DATA32 timer777
	TIMER_WAIT milliseconds777 timer777
	TIMER_READY timer777
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB779:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf780
    DATA8 flag780
    DIVF 360.0 VGV_L tmpf780
    CP_EQF 0.0 VGV_L flag780
    SELECTF flag780 0.0 tmpf780 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while783:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf787
    DATA8 flag787
    DIVF F.1 2.0 tmpf787
    CP_EQF 0.0 2.0 flag787
    SELECTF flag787 0.0 tmpf787 F.0

    JR_GTEQF F.0 VGV_X endwhile783
  whilebody783:
    WRITE32 ENDSUB_F_A3_0:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB788:
    WRITE32 ENDSUB_F_A2_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB789:
    JR_GTEQF VGV_SPEED 80.0 else790_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else790_1:
  endif790:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB792:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf796
    DATA8 flag796
    DIVF F.1 2.0 tmpf796
    CP_EQF 0.0 2.0 flag796
    SELECTF flag796 0.0 tmpf796 F.0

    JR_LTF F.0 VGV_X whilebody783
  endwhile783:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB798:
    JR_NEQF VGV_C 1.0 else799_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB800:
    JR endif799
  else799_1:
    JR_NEQF VGV_C 0.0 else799_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB801:
    JR endif799
  else799_2:
    JR_NEQF VGV_C 2.0 else799_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB802:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB803:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB805:
    CALL MOTOR.RESETCOUNT 'bc'
  while807:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf811
    DATA8 flag811
    DIVF F.1 2.0 tmpf811
    CP_EQF 0.0 2.0 flag811
    SELECTF flag811 0.0 tmpf811 F.0

    JR_GTEQF F.0 210.0 endwhile807
  whilebody807:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB812:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf816
    DATA8 flag816
    DIVF F.1 2.0 tmpf816
    CP_EQF 0.0 2.0 flag816
    SELECTF flag816 0.0 tmpf816 F.0

    JR_LTF F.0 210.0 whilebody807
  endwhile807:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer818
	DATA8 nos818
	DATA8 busy818
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer818 nos818
	JR_EQ8 0 nos818 motornotbusy818
  motorwaiting818:
	OUTPUT_TEST layer818 nos818 busy818
	JR_EQ8 busy818 0 motornotbusy818
	SLEEP
	JR motorwaiting818
  motornotbusy818:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds820
	MOVEF_32 500.0 milliseconds820
	DATA32 timer820
	TIMER_WAIT milliseconds820 timer820
	TIMER_READY timer820
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB822:
    CALL MOTOR.RESETCOUNT 'bc'
  while824:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf828
    DATA8 flag828
    DIVF F.1 2.0 tmpf828
    CP_EQF 0.0 2.0 flag828
    SELECTF flag828 0.0 tmpf828 F.0

    JR_GTEQF F.0 100.0 endwhile824
  whilebody824:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB829:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf833
    DATA8 flag833
    DIVF F.1 2.0 tmpf833
    CP_EQF 0.0 2.0 flag833
    SELECTF flag833 0.0 tmpf833 F.0

    JR_LTF F.0 100.0 whilebody824
  endwhile824:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB835:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB837:
  else799_3:
  endif799:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB838:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB840:
    CALL MOTOR.RESETCOUNT 'bc'
  while842:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf846
    DATA8 flag846
    DIVF F.1 2.0 tmpf846
    CP_EQF 0.0 2.0 flag846
    SELECTF flag846 0.0 tmpf846 F.0

    JR_GTEQF F.0 210.0 endwhile842
  whilebody842:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB847:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf851
    DATA8 flag851
    DIVF F.1 2.0 tmpf851
    CP_EQF 0.0 2.0 flag851
    SELECTF flag851 0.0 tmpf851 F.0

    JR_LTF F.0 210.0 whilebody842
  endwhile842:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds854
	MOVEF_32 500.0 milliseconds854
	DATA32 timer854
	TIMER_WAIT milliseconds854 timer854
	TIMER_READY timer854
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp856
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp856
    JR_NEQ32 0 tmp856 alreadylaunched856
    OBJECT_START TF_VIDVIG_0
  alreadylaunched856:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB857:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB858:
    ADDF VGV_C 1.0 VGV_C
  else761_1:
  endif761:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB860:
    JR_LTF VGV_H 32.0 or862
    JR_LTEQF VGV_H 100.0 else861_1
  or862:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif861
  else861_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else861_2:
  endif861:
    JR_NEQF VGV_COLOR5 4.0 else865_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer866
	DATA8 nos866
	DATA8 busy866
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer866 nos866
	JR_EQ8 0 nos866 motornotbusy866
  motorwaiting866:
	OUTPUT_TEST layer866 nos866 busy866
	JR_EQ8 busy866 0 motornotbusy866
	SLEEP
	JR motorwaiting866
  motornotbusy866:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB867:
    WRITE32 ENDSUB_F_PR_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB868:
    CALL MOTOR.RESETCOUNT 'bc'
  while870:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf874
    DATA8 flag874
    DIVF F.1 2.0 tmpf874
    CP_EQF 0.0 2.0 flag874
    SELECTF flag874 0.0 tmpf874 F.0

    JR_GTEQF F.0 270.0 endwhile870
  whilebody870:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB875:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf879
    DATA8 flag879
    DIVF F.1 2.0 tmpf879
    CP_EQF 0.0 2.0 flag879
    SELECTF flag879 0.0 tmpf879 F.0

    JR_LTF F.0 270.0 whilebody870
  endwhile870:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds882
	MOVEF_32 500.0 milliseconds882
	DATA32 timer882
	TIMER_WAIT milliseconds882 timer882
	TIMER_READY timer882
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB884:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB885:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf886
    DATA8 flag886
    DIVF 360.0 VGV_L tmpf886
    CP_EQF 0.0 VGV_L flag886
    SELECTF flag886 0.0 tmpf886 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while889:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf893
    DATA8 flag893
    DIVF F.1 2.0 tmpf893
    CP_EQF 0.0 2.0 flag893
    SELECTF flag893 0.0 tmpf893 F.0

    JR_GTEQF F.0 VGV_X endwhile889
  whilebody889:
    WRITE32 ENDSUB_F_A3_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB894:
    WRITE32 ENDSUB_F_A2_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB895:
    JR_GTEQF VGV_SPEED 80.0 else896_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else896_1:
  endif896:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB898:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf902
    DATA8 flag902
    DIVF F.1 2.0 tmpf902
    CP_EQF 0.0 2.0 flag902
    SELECTF flag902 0.0 tmpf902 F.0

    JR_LTF F.0 VGV_X whilebody889
  endwhile889:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB904:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB905:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB906:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer908
	DATA8 nos908
	DATA8 busy908
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer908 nos908
	JR_EQ8 0 nos908 motornotbusy908
  motorwaiting908:
	OUTPUT_TEST layer908 nos908 busy908
	JR_EQ8 busy908 0 motornotbusy908
	SLEEP
	JR motorwaiting908
  motornotbusy908:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer910
	DATA8 nos910
	DATA8 busy910
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer910 nos910
	JR_EQ8 0 nos910 motornotbusy910
  motorwaiting910:
	OUTPUT_TEST layer910 nos910 busy910
	JR_EQ8 busy910 0 motornotbusy910
	SLEEP
	JR motorwaiting910
  motornotbusy910:
    WRITE32 ENDSUB_F_A3_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB911:
    WRITE32 ENDSUB_F_A2_0:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB912:
  while913:
    JR_LTEQF VGV_S3 15.0 endwhile913
  whilebody913:
    WRITE32 ENDSUB_F_A3_0:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB914:
    WRITE32 ENDSUB_F_A2_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB915:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody913
  endwhile913:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB918:
    WRITE32 ENDSUB_F_A2_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB919:
  while920:
    JR_GTEQF VGV_S3 60.0 endwhile920
  whilebody920:
    WRITE32 ENDSUB_F_A3_0:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB921:
    WRITE32 ENDSUB_F_A2_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB922:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody920
  endwhile920:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while926:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf930
    DATA8 flag930
    DIVF F.1 2.0 tmpf930
    CP_EQF 0.0 2.0 flag930
    SELECTF flag930 0.0 tmpf930 F.0

    JR_GTEQF F.0 80.0 endwhile926
  whilebody926:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB931:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf935
    DATA8 flag935
    DIVF F.1 2.0 tmpf935
    CP_EQF 0.0 2.0 flag935
    SELECTF flag935 0.0 tmpf935 F.0

    JR_LTF F.0 80.0 whilebody926
  endwhile926:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer936
	DATA8 nos936
	DATA8 busy936
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer936 nos936
	JR_EQ8 0 nos936 motornotbusy936
  motorwaiting936:
	OUTPUT_TEST layer936 nos936 busy936
	JR_EQ8 busy936 0 motornotbusy936
	SLEEP
	JR motorwaiting936
  motornotbusy936:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds939
	MOVEF_32 500.0 milliseconds939
	DATA32 timer939
	TIMER_WAIT milliseconds939 timer939
	TIMER_READY timer939
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB941:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB942:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB943:
  else865_1:
  endif865:
    JR_NEQF VGV_COLOR5 5.0 else944_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB945:
    CALL MOTOR.RESETCOUNT 'bc'
  while947:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf951
    DATA8 flag951
    DIVF F.1 2.0 tmpf951
    CP_EQF 0.0 2.0 flag951
    SELECTF flag951 0.0 tmpf951 F.0

    JR_GTEQF F.0 210.0 endwhile947
  whilebody947:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB952:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf956
    DATA8 flag956
    DIVF F.1 2.0 tmpf956
    CP_EQF 0.0 2.0 flag956
    SELECTF flag956 0.0 tmpf956 F.0

    JR_LTF F.0 210.0 whilebody947
  endwhile947:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer958
	DATA8 nos958
	DATA8 busy958
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer958 nos958
	JR_EQ8 0 nos958 motornotbusy958
  motorwaiting958:
	OUTPUT_TEST layer958 nos958 busy958
	JR_EQ8 busy958 0 motornotbusy958
	SLEEP
	JR motorwaiting958
  motornotbusy958:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds960
	MOVEF_32 500.0 milliseconds960
	DATA32 timer960
	TIMER_WAIT milliseconds960 timer960
	TIMER_READY timer960
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB962:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf963
    DATA8 flag963
    DIVF 360.0 VGV_L tmpf963
    CP_EQF 0.0 VGV_L flag963
    SELECTF flag963 0.0 tmpf963 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while966:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf970
    DATA8 flag970
    DIVF F.1 2.0 tmpf970
    CP_EQF 0.0 2.0 flag970
    SELECTF flag970 0.0 tmpf970 F.0

    JR_GTEQF F.0 VGV_X endwhile966
  whilebody966:
    WRITE32 ENDSUB_F_A3_0:CALLSUB971 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB971:
    WRITE32 ENDSUB_F_A2_0:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB972:
    JR_GTEQF VGV_SPEED 80.0 else973_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else973_1:
  endif973:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB975:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf979
    DATA8 flag979
    DIVF F.1 2.0 tmpf979
    CP_EQF 0.0 2.0 flag979
    SELECTF flag979 0.0 tmpf979 F.0

    JR_LTF F.0 VGV_X whilebody966
  endwhile966:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB981:
    JR_NEQF VGV_C 1.0 else982_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB983:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB984:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB986:
    CALL MOTOR.RESETCOUNT 'bc'
  while988:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf992
    DATA8 flag992
    DIVF F.1 2.0 tmpf992
    CP_EQF 0.0 2.0 flag992
    SELECTF flag992 0.0 tmpf992 F.0

    JR_GTEQF F.0 160.0 endwhile988
  whilebody988:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB993:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf997
    DATA8 flag997
    DIVF F.1 2.0 tmpf997
    CP_EQF 0.0 2.0 flag997
    SELECTF flag997 0.0 tmpf997 F.0

    JR_LTF F.0 160.0 whilebody988
  endwhile988:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1000
	MOVEF_32 500.0 milliseconds1000
	DATA32 timer1000
	TIMER_WAIT milliseconds1000 timer1000
	TIMER_READY timer1000
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1002:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1003 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1003:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1004:
    CALL MOTOR.RESETCOUNT 'bc'
  while1006:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1010
    DATA8 flag1010
    DIVF F.1 2.0 tmpf1010
    CP_EQF 0.0 2.0 flag1010
    SELECTF flag1010 0.0 tmpf1010 F.0

    JR_GTEQF F.0 80.0 endwhile1006
  whilebody1006:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1011:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1015
    DATA8 flag1015
    DIVF F.1 2.0 tmpf1015
    CP_EQF 0.0 2.0 flag1015
    SELECTF flag1015 0.0 tmpf1015 F.0

    JR_LTF F.0 80.0 whilebody1006
  endwhile1006:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1017
	DATA8 nos1017
	DATA8 busy1017
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1017 nos1017
	JR_EQ8 0 nos1017 motornotbusy1017
  motorwaiting1017:
	OUTPUT_TEST layer1017 nos1017 busy1017
	JR_EQ8 busy1017 0 motornotbusy1017
	SLEEP
	JR motorwaiting1017
  motornotbusy1017:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1019
	MOVEF_32 500.0 milliseconds1019
	DATA32 timer1019
	TIMER_WAIT milliseconds1019 timer1019
	TIMER_READY timer1019
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1021
	DATA8 no1021
	DATA8 mode81021
	
	MOVEF_8 2.0 no1021
	SUB8 no1021 1 no1021
	DIV8 no1021 4 layer1021
	MATH MOD8 no1021 4 no1021

	MOVEF_8 0.0 mode81021
	
	INPUT_DEVICE READY_RAW layer1021 no1021 0 mode81021 0
    DATA8 layer1022
	DATA8 no1022
	DATA8 mode81022
	
	MOVEF_8 3.0 no1022
	SUB8 no1022 1 no1022
	DIV8 no1022 4 layer1022
	MATH MOD8 no1022 4 no1022

	MOVEF_8 0.0 mode81022
	
	INPUT_DEVICE READY_RAW layer1022 no1022 0 mode81022 0
  while1023:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1025
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1024
  and1025:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1028
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1024
  and1028:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1023
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1023
  or1024:
  whilebody1023:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1034
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1023
  and1034:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1037
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1023
  and1037:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1040
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1023
  and1040:
  endwhile1023:
  while1043:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1043
  whilebody1043:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1043
  endwhile1043:
    CALL MOTOR.STOP 'B' 'True'
  while1048:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1048
  whilebody1048:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1048
  endwhile1048:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1053
	DATA8 nos1053
	DATA8 busy1053
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1053 nos1053
	JR_EQ8 0 nos1053 motornotbusy1053
  motorwaiting1053:
	OUTPUT_TEST layer1053 nos1053 busy1053
	JR_EQ8 busy1053 0 motornotbusy1053
	SLEEP
	JR motorwaiting1053
  motornotbusy1053:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1055
	DATA8 nos1055
	DATA8 busy1055
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1055 nos1055
	JR_EQ8 0 nos1055 motornotbusy1055
  motorwaiting1055:
	OUTPUT_TEST layer1055 nos1055 busy1055
	JR_EQ8 busy1055 0 motornotbusy1055
	SLEEP
	JR motorwaiting1055
  motornotbusy1055:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1057 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1057:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1058:
  while1059:
    JR_LTEQF VGV_S3 10.0 endwhile1059
  whilebody1059:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1060:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1061:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1059
  endwhile1059:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1063:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1064:
  while1065:
    JR_GTEQF VGV_S3 55.0 endwhile1065
  whilebody1065:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1066:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1067 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1067:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1065
  endwhile1065:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1070
    DATA8 flag1070
    DIVF 360.0 VGV_L tmpf1070
    CP_EQF 0.0 VGV_L flag1070
    SELECTF flag1070 0.0 tmpf1070 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1073:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1077
    DATA8 flag1077
    DIVF F.1 2.0 tmpf1077
    CP_EQF 0.0 2.0 flag1077
    SELECTF flag1077 0.0 tmpf1077 F.0

    JR_GTEQF F.0 VGV_X endwhile1073
  whilebody1073:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1078:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1079:
    JR_GTEQF VGV_SPEED 80.0 else1080_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1080_1:
  endif1080:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1082 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1082:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1086
    DATA8 flag1086
    DIVF F.1 2.0 tmpf1086
    CP_EQF 0.0 2.0 flag1086
    SELECTF flag1086 0.0 tmpf1086 F.0

    JR_LTF F.0 VGV_X whilebody1073
  endwhile1073:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1088:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1089:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1090:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1092:
    CALL MOTOR.RESETCOUNT 'bc'
  while1094:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1098
    DATA8 flag1098
    DIVF F.1 2.0 tmpf1098
    CP_EQF 0.0 2.0 flag1098
    SELECTF flag1098 0.0 tmpf1098 F.0

    JR_GTEQF F.0 80.0 endwhile1094
  whilebody1094:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1099:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1103
    DATA8 flag1103
    DIVF F.1 2.0 tmpf1103
    CP_EQF 0.0 2.0 flag1103
    SELECTF flag1103 0.0 tmpf1103 F.0

    JR_LTF F.0 80.0 whilebody1094
  endwhile1094:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1105
	DATA8 nos1105
	DATA8 busy1105
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1105 nos1105
	JR_EQ8 0 nos1105 motornotbusy1105
  motorwaiting1105:
	OUTPUT_TEST layer1105 nos1105 busy1105
	JR_EQ8 busy1105 0 motornotbusy1105
	SLEEP
	JR motorwaiting1105
  motornotbusy1105:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1107
	MOVEF_32 500.0 milliseconds1107
	DATA32 timer1107
	TIMER_WAIT milliseconds1107 timer1107
	TIMER_READY timer1107
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1109:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1110:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1111:
    JR endif982
  else982_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1112:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1113:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1115:
    CALL MOTOR.RESETCOUNT 'bc'
  while1117:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1121
    DATA8 flag1121
    DIVF F.1 2.0 tmpf1121
    CP_EQF 0.0 2.0 flag1121
    SELECTF flag1121 0.0 tmpf1121 F.0

    JR_GTEQF F.0 160.0 endwhile1117
  whilebody1117:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1122:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1126
    DATA8 flag1126
    DIVF F.1 2.0 tmpf1126
    CP_EQF 0.0 2.0 flag1126
    SELECTF flag1126 0.0 tmpf1126 F.0

    JR_LTF F.0 160.0 whilebody1117
  endwhile1117:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1128
	DATA8 nos1128
	DATA8 busy1128
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1128 nos1128
	JR_EQ8 0 nos1128 motornotbusy1128
  motorwaiting1128:
	OUTPUT_TEST layer1128 nos1128 busy1128
	JR_EQ8 busy1128 0 motornotbusy1128
	SLEEP
	JR motorwaiting1128
  motornotbusy1128:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1130
	MOVEF_32 500.0 milliseconds1130
	DATA32 timer1130
	TIMER_WAIT milliseconds1130 timer1130
	TIMER_READY timer1130
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1132:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1133:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1134:
  else982_2:
  endif982:
  else944_1:
  endif944:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1136
	DATA8 nos1136
	DATA8 busy1136
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1136 nos1136
	JR_EQ8 0 nos1136 motornotbusy1136
  motorwaiting1136:
	OUTPUT_TEST layer1136 nos1136 busy1136
	JR_EQ8 busy1136 0 motornotbusy1136
	SLEEP
	JR motorwaiting1136
  motornotbusy1136:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1137
	DATA8 nos1137
	DATA8 busy1137
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1137 nos1137
	JR_EQ8 0 nos1137 motornotbusy1137
  motorwaiting1137:
	OUTPUT_TEST layer1137 nos1137 busy1137
	JR_EQ8 busy1137 0 motornotbusy1137
	SLEEP
	JR motorwaiting1137
  motornotbusy1137:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1139
	DATA8 nos1139
	DATA8 busy1139
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1139 nos1139
	JR_EQ8 0 nos1139 motornotbusy1139
  motorwaiting1139:
	OUTPUT_TEST layer1139 nos1139 busy1139
	JR_EQ8 busy1139 0 motornotbusy1139
	SLEEP
	JR motorwaiting1139
  motornotbusy1139:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1140
	DATA8 nos1140
	DATA8 busy1140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1140 nos1140
	JR_EQ8 0 nos1140 motornotbusy1140
  motorwaiting1140:
	OUTPUT_TEST layer1140 nos1140 busy1140
	JR_EQ8 busy1140 0 motornotbusy1140
	SLEEP
	JR motorwaiting1140
  motornotbusy1140:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1142
    DATA8 flag1142
    DIVF 360.0 VGV_L tmpf1142
    CP_EQF 0.0 VGV_L flag1142
    SELECTF flag1142 0.0 tmpf1142 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1145:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1149
    DATA8 flag1149
    DIVF F.1 2.0 tmpf1149
    CP_EQF 0.0 2.0 flag1149
    SELECTF flag1149 0.0 tmpf1149 F.0

    JR_GTEQF F.0 VGV_X endwhile1145
  whilebody1145:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1150:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1151:
    JR_GTEQF VGV_SPEED 80.0 else1152_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1152_1:
  endif1152:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1154:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1158
    DATA8 flag1158
    DIVF F.1 2.0 tmpf1158
    CP_EQF 0.0 2.0 flag1158
    SELECTF flag1158 0.0 tmpf1158 F.0

    JR_LTF F.0 VGV_X whilebody1145
  endwhile1145:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1160:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1162
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1162
    JR_NEQ32 0 tmp1162 alreadylaunched1162
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1162:
ENDTHREAD:
    RETURN
SUB_F_FINISH_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 146.0 'true'

	DATA8 layer1163
	DATA8 nos1163
	DATA8 busy1163
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1163 nos1163
	JR_EQ8 0 nos1163 motornotbusy1163
  motorwaiting1163:
	OUTPUT_TEST layer1163 nos1163 busy1163
	JR_EQ8 busy1163 0 motornotbusy1163
	SLEEP
	JR motorwaiting1163
  motornotbusy1163:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 146.0 'true'

	DATA8 layer1164
	DATA8 nos1164
	DATA8 busy1164
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1164 nos1164
	JR_EQ8 0 nos1164 motornotbusy1164
  motorwaiting1164:
	OUTPUT_TEST layer1164 nos1164 busy1164
	JR_EQ8 busy1164 0 motornotbusy1164
	SLEEP
	JR motorwaiting1164
  motornotbusy1164:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1165
	DATA8 nos1165
	DATA8 busy1165
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1165 nos1165
	JR_EQ8 0 nos1165 motornotbusy1165
  motorwaiting1165:
	OUTPUT_TEST layer1165 nos1165 busy1165
	JR_EQ8 busy1165 0 motornotbusy1165
	SLEEP
	JR motorwaiting1165
  motornotbusy1165:
    PROGRAM_STOP -1
RETSUB_F_FINISH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_0:
SUB_F_SB2_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1167:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1168:
  while1169:
    JR_LTEQF VGV_S3 10.0 and1171
    JR_GTF VGV_S2 10.0 or1170
  and1171:
    JR_GTEQF VGV_S3 10.0 endwhile1169
    JR_GTEQF VGV_S2 10.0 endwhile1169
  or1170:
  whilebody1169:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1172:
    JR_LTEQF VGV_S3 10.0 and1173
    JR_GTF VGV_S2 10.0 whilebody1169
  and1173:
    JR_GTEQF VGV_S3 10.0 and1174
    JR_LTF VGV_S2 10.0 whilebody1169
  and1174:
  endwhile1169:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1176
	DATA8 nos1176
	DATA8 busy1176
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1176 nos1176
	JR_EQ8 0 nos1176 motornotbusy1176
  motorwaiting1176:
	OUTPUT_TEST layer1176 nos1176 busy1176
	JR_EQ8 busy1176 0 motornotbusy1176
	SLEEP
	JR motorwaiting1176
  motornotbusy1176:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1177
	DATA8 nos1177
	DATA8 busy1177
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1177 nos1177
	JR_EQ8 0 nos1177 motornotbusy1177
  motorwaiting1177:
	OUTPUT_TEST layer1177 nos1177 busy1177
	JR_EQ8 busy1177 0 motornotbusy1177
	SLEEP
	JR motorwaiting1177
  motornotbusy1177:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer1178
	DATA8 nos1178
	DATA8 busy1178
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1178 nos1178
	JR_EQ8 0 nos1178 motornotbusy1178
  motorwaiting1178:
	OUTPUT_TEST layer1178 nos1178 busy1178
	JR_EQ8 busy1178 0 motornotbusy1178
	SLEEP
	JR motorwaiting1178
  motornotbusy1178:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1179:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1180:
  while1181:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1181
  whilebody1181:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1181
  endwhile1181:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1186:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1187:
  while1188:
    JR_GTEQF VGV_S3 55.0 endwhile1188
  whilebody1188:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1189:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1190:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 55.0 whilebody1188
  endwhile1188:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1193
	DATA8 nos1193
	DATA8 busy1193
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1193 nos1193
	JR_EQ8 0 nos1193 motornotbusy1193
  motorwaiting1193:
	OUTPUT_TEST layer1193 nos1193 busy1193
	JR_EQ8 busy1193 0 motornotbusy1193
	SLEEP
	JR motorwaiting1193
  motornotbusy1193:
  while1194:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 61.0 or1195
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 61.0 endwhile1194
  or1195:
  whilebody1194:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 61.0 whilebody1194
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 61.0 whilebody1194
  endwhile1194:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1202:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1203
    DATA8 flag1203
    DIVF 360.0 VGV_L tmpf1203
    CP_EQF 0.0 VGV_L flag1203
    SELECTF flag1203 0.0 tmpf1203 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1206:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1210
    DATA8 flag1210
    DIVF F.1 2.0 tmpf1210
    CP_EQF 0.0 2.0 flag1210
    SELECTF flag1210 0.0 tmpf1210 F.0

    JR_GTEQF F.0 VGV_X endwhile1206
  whilebody1206:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1211:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1212:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1213:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1217
    DATA8 flag1217
    DIVF F.1 2.0 tmpf1217
    CP_EQF 0.0 2.0 flag1217
    SELECTF flag1217 0.0 tmpf1217 F.0

    JR_LTF F.0 VGV_X whilebody1206
  endwhile1206:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1220:
  while1221:
    JR_LTEQF VGV_S3 15.0 and1223
    JR_GTF VGV_S2 15.0 or1222
  and1223:
    JR_GTEQF VGV_S3 15.0 endwhile1221
    JR_GTEQF VGV_S2 15.0 endwhile1221
  or1222:
  whilebody1221:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1225:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1226:
    JR_LTEQF VGV_S3 15.0 and1227
    JR_GTF VGV_S2 15.0 whilebody1221
  and1227:
    JR_GTEQF VGV_S3 15.0 and1228
    JR_LTF VGV_S2 15.0 whilebody1221
  and1228:
  endwhile1221:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1230
	DATA8 nos1230
	DATA8 busy1230
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1230 nos1230
	JR_EQ8 0 nos1230 motornotbusy1230
  motorwaiting1230:
	OUTPUT_TEST layer1230 nos1230 busy1230
	JR_EQ8 busy1230 0 motornotbusy1230
	SLEEP
	JR motorwaiting1230
  motornotbusy1230:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1231:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1232:
  while1233:
    JR_GTEQF VGV_S2 60.0 endwhile1233
  whilebody1233:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1233
  endwhile1233:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1236:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1237:
  while1238:
    JR_LTEQF VGV_S3 10.0 and1240
    JR_GTF VGV_S2 10.0 or1239
  and1240:
    JR_GTEQF VGV_S3 10.0 endwhile1238
    JR_GTEQF VGV_S2 10.0 endwhile1238
  or1239:
  whilebody1238:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1241:
    JR_LTEQF VGV_S3 10.0 and1242
    JR_GTF VGV_S2 10.0 whilebody1238
  and1242:
    JR_GTEQF VGV_S3 10.0 and1243
    JR_LTF VGV_S2 10.0 whilebody1238
  and1243:
  endwhile1238:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1245
    DATA8 flag1245
    DIVF 360.0 VGV_L tmpf1245
    CP_EQF 0.0 VGV_L flag1245
    SELECTF flag1245 0.0 tmpf1245 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1248:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1252
    DATA8 flag1252
    DIVF F.1 2.0 tmpf1252
    CP_EQF 0.0 2.0 flag1252
    SELECTF flag1252 0.0 tmpf1252 F.0

    JR_GTEQF F.0 VGV_X endwhile1248
  whilebody1248:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1253:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1254:
    JR_GTEQF VGV_SPEED 80.0 else1255_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1255_1:
  endif1255:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB1257:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1261
    DATA8 flag1261
    DIVF F.1 2.0 tmpf1261
    CP_EQF 0.0 2.0 flag1261
    SELECTF flag1261 0.0 tmpf1261 F.0

    JR_LTF F.0 VGV_X whilebody1248
  endwhile1248:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1263:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1264:
  while1265:
    JR_LTEQF VGV_S3 15.0 and1267
    JR_GTF VGV_S2 15.0 or1266
  and1267:
    JR_GTEQF VGV_S3 15.0 endwhile1265
    JR_GTEQF VGV_S2 15.0 endwhile1265
  or1266:
  whilebody1265:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1268:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1269:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1270:
    JR_LTEQF VGV_S3 15.0 and1271
    JR_GTF VGV_S2 15.0 whilebody1265
  and1271:
    JR_GTEQF VGV_S3 15.0 and1272
    JR_LTF VGV_S2 15.0 whilebody1265
  and1272:
  endwhile1265:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer1274
	DATA8 nos1274
	DATA8 busy1274
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1274 nos1274
	JR_EQ8 0 nos1274 motornotbusy1274
  motorwaiting1274:
	OUTPUT_TEST layer1274 nos1274 busy1274
	JR_EQ8 busy1274 0 motornotbusy1274
	SLEEP
	JR motorwaiting1274
  motornotbusy1274:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1276
	DATA8 nos1276
	DATA8 busy1276
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1276 nos1276
	JR_EQ8 0 nos1276 motornotbusy1276
  motorwaiting1276:
	OUTPUT_TEST layer1276 nos1276 busy1276
	JR_EQ8 busy1276 0 motornotbusy1276
	SLEEP
	JR motorwaiting1276
  motornotbusy1276:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1277:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1278:
  while1279:
    JR_LTEQF VGV_S2 15.0 endwhile1279
  whilebody1279:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1280:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1281:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody1279
  endwhile1279:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1285:
  while1286:
    JR_GTEQF VGV_S2 55.0 endwhile1286
  whilebody1286:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1287:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1288:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody1286
  endwhile1286:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer1291
	DATA8 nos1291
	DATA8 busy1291
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1291 nos1291
	JR_EQ8 0 nos1291 motornotbusy1291
  motorwaiting1291:
	OUTPUT_TEST layer1291 nos1291 busy1291
	JR_EQ8 busy1291 0 motornotbusy1291
	SLEEP
	JR motorwaiting1291
  motornotbusy1291:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1293
	DATA8 nos1293
	DATA8 busy1293
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1293 nos1293
	JR_EQ8 0 nos1293 motornotbusy1293
  motorwaiting1293:
	OUTPUT_TEST layer1293 nos1293 busy1293
	JR_EQ8 busy1293 0 motornotbusy1293
	SLEEP
	JR motorwaiting1293
  motornotbusy1293:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1294:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1295:
  while1296:
    JR_LTEQF VGV_S3 15.0 endwhile1296
  whilebody1296:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1297:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1298:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1296
  endwhile1296:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1301:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1302:
  while1303:
    JR_GTEQF VGV_S3 60.0 endwhile1303
  whilebody1303:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1304:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1305:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1303
  endwhile1303:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1308:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1309:
  while1310:
    JR_LTEQF VGV_S2 9.0 and1312
    JR_GTF VGV_S3 9.0 or1311
  and1312:
    JR_GTEQF VGV_S2 9.0 and1313
    JR_GTF VGV_S3 9.0 or1311
  and1313:
    JR_LTEQF VGV_S2 9.0 endwhile1310
    JR_GTEQF VGV_S3 9.0 endwhile1310
  or1311:
  whilebody1310:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1314:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1315:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1317
    JR_GTF VGV_S3 9.0 whilebody1310
  and1317:
    JR_GTEQF VGV_S2 9.0 and1318
    JR_GTF VGV_S3 9.0 whilebody1310
  and1318:
    JR_LTEQF VGV_S2 9.0 and1319
    JR_LTF VGV_S3 9.0 whilebody1310
  and1319:
  endwhile1310:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1320
	DATA8 nos1320
	DATA8 busy1320
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1320 nos1320
	JR_EQ8 0 nos1320 motornotbusy1320
  motorwaiting1320:
	OUTPUT_TEST layer1320 nos1320 busy1320
	JR_EQ8 busy1320 0 motornotbusy1320
	SLEEP
	JR motorwaiting1320
  motornotbusy1320:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1322
	DATA8 nos1322
	DATA8 busy1322
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1322 nos1322
	JR_EQ8 0 nos1322 motornotbusy1322
  motorwaiting1322:
	OUTPUT_TEST layer1322 nos1322 busy1322
	JR_EQ8 busy1322 0 motornotbusy1322
	SLEEP
	JR motorwaiting1322
  motornotbusy1322:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1324:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1325:
  while1326:
    JR_LTEQF VGV_S2 10.0 endwhile1326
  whilebody1326:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1327:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1328:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1326
  endwhile1326:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1330:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1331:
  while1332:
    JR_GTEQF VGV_S2 60.0 endwhile1332
  whilebody1332:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1333:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1334:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1332
  endwhile1332:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1337:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 20.0 'true'

	DATA8 layer1338
	DATA8 nos1338
	DATA8 busy1338
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1338 nos1338
	JR_EQ8 0 nos1338 motornotbusy1338
  motorwaiting1338:
	OUTPUT_TEST layer1338 nos1338 busy1338
	JR_EQ8 busy1338 0 motornotbusy1338
	SLEEP
	JR motorwaiting1338
  motornotbusy1338:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1340
	DATA8 nos1340
	DATA8 busy1340
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1340 nos1340
	JR_EQ8 0 nos1340 motornotbusy1340
  motorwaiting1340:
	OUTPUT_TEST layer1340 nos1340 busy1340
	JR_EQ8 busy1340 0 motornotbusy1340
	SLEEP
	JR motorwaiting1340
  motornotbusy1340:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1342:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1343:
  while1344:
    JR_LTEQF VGV_S3 8.0 endwhile1344
  whilebody1344:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1345:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1346:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1344
  endwhile1344:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1348:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1349:
  while1350:
    JR_GTEQF VGV_S3 55.0 endwhile1350
  whilebody1350:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1351:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1352:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1350
  endwhile1350:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1355
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1355
    JR_NEQ32 0 tmp1355 alreadylaunched1355
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1355:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1356:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1357:
  while1358:
    JR_LTEQF VGV_S3 15.0 and1360
    JR_GTF VGV_S2 15.0 or1359
  and1360:
    JR_GTEQF VGV_S3 15.0 and1361
    JR_GTF VGV_S2 15.0 or1359
  and1361:
    JR_LTEQF VGV_S3 15.0 endwhile1358
    JR_GTEQF VGV_S2 15.0 endwhile1358
  or1359:
  whilebody1358:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1362:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1363:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1364:
    JR_LTEQF VGV_S3 15.0 and1365
    JR_GTF VGV_S2 15.0 whilebody1358
  and1365:
    JR_GTEQF VGV_S3 15.0 and1366
    JR_GTF VGV_S2 15.0 whilebody1358
  and1366:
    JR_LTEQF VGV_S3 15.0 and1367
    JR_LTF VGV_S2 15.0 whilebody1358
  and1367:
  endwhile1358:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1369
	DATA8 nos1369
	DATA8 busy1369
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1369 nos1369
	JR_EQ8 0 nos1369 motornotbusy1369
  motorwaiting1369:
	OUTPUT_TEST layer1369 nos1369 busy1369
	JR_EQ8 busy1369 0 motornotbusy1369
	SLEEP
	JR motorwaiting1369
  motornotbusy1369:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1370
	DATA8 nos1370
	DATA8 busy1370
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1370 nos1370
	JR_EQ8 0 nos1370 motornotbusy1370
  motorwaiting1370:
	OUTPUT_TEST layer1370 nos1370 busy1370
	JR_EQ8 busy1370 0 motornotbusy1370
	SLEEP
	JR motorwaiting1370
  motornotbusy1370:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1373:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1374:
  while1375:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1375
  whilebody1375:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1377:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1378:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1379:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1375
  endwhile1375:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -60.0
    DATA32 milliseconds1383
	MOVEF_32 250.0 milliseconds1383
	DATA32 timer1383
	TIMER_WAIT milliseconds1383 timer1383
	TIMER_READY timer1383
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1385
	DATA8 nos1385
	DATA8 busy1385
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1385 nos1385
	JR_EQ8 0 nos1385 motornotbusy1385
  motorwaiting1385:
	OUTPUT_TEST layer1385 nos1385 busy1385
	JR_EQ8 busy1385 0 motornotbusy1385
	SLEEP
	JR motorwaiting1385
  motornotbusy1385:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -100.0
    DATA32 milliseconds1387
	MOVEF_32 1400.0 milliseconds1387
	DATA32 timer1387
	TIMER_WAIT milliseconds1387 timer1387
	TIMER_READY timer1387
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1389
	DATA8 nos1389
	DATA8 busy1389
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1389 nos1389
	JR_EQ8 0 nos1389 motornotbusy1389
  motorwaiting1389:
	OUTPUT_TEST layer1389 nos1389 busy1389
	JR_EQ8 busy1389 0 motornotbusy1389
	SLEEP
	JR motorwaiting1389
  motornotbusy1389:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1390
	DATA8 nos1390
	DATA8 busy1390
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1390 nos1390
	JR_EQ8 0 nos1390 motornotbusy1390
  motorwaiting1390:
	OUTPUT_TEST layer1390 nos1390 busy1390
	JR_EQ8 busy1390 0 motornotbusy1390
	SLEEP
	JR motorwaiting1390
  motornotbusy1390:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1391
	DATA8 nos1391
	DATA8 busy1391
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1391 nos1391
	JR_EQ8 0 nos1391 motornotbusy1391
  motorwaiting1391:
	OUTPUT_TEST layer1391 nos1391 busy1391
	JR_EQ8 busy1391 0 motornotbusy1391
	SLEEP
	JR motorwaiting1391
  motornotbusy1391:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1392:
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 45.0 'true'

	DATA8 layer1393
	DATA8 nos1393
	DATA8 busy1393
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1393 nos1393
	JR_EQ8 0 nos1393 motornotbusy1393
  motorwaiting1393:
	OUTPUT_TEST layer1393 nos1393 busy1393
	JR_EQ8 busy1393 0 motornotbusy1393
	SLEEP
	JR motorwaiting1393
  motornotbusy1393:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1394
	DATA8 nos1394
	DATA8 busy1394
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1394 nos1394
	JR_EQ8 0 nos1394 motornotbusy1394
  motorwaiting1394:
	OUTPUT_TEST layer1394 nos1394 busy1394
	JR_EQ8 busy1394 0 motornotbusy1394
	SLEEP
	JR motorwaiting1394
  motornotbusy1394:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1396:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1397:
  while1398:
    JR_LTEQF VGV_S2 15.0 endwhile1398
  whilebody1398:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1399:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1400:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1398
  endwhile1398:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1403:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1404:
  while1405:
    JR_GTEQF VGV_S2 50.0 endwhile1405
  whilebody1405:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1406:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1407:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1405
  endwhile1405:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1410:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1411:
  while1412:
    JR_LTEQF VGV_S3 15.0 and1414
    JR_GTF VGV_S2 15.0 or1413
  and1414:
    JR_GTEQF VGV_S3 15.0 endwhile1412
    JR_GTEQF VGV_S2 15.0 endwhile1412
  or1413:
  whilebody1412:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1415:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1416:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1417:
    JR_LTEQF VGV_S3 15.0 and1418
    JR_GTF VGV_S2 15.0 whilebody1412
  and1418:
    JR_GTEQF VGV_S3 15.0 and1419
    JR_LTF VGV_S2 15.0 whilebody1412
  and1419:
  endwhile1412:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1421:
    CALL MOTOR.RESETCOUNT 'bc'
  while1423:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1427
    DATA8 flag1427
    DIVF F.1 2.0 tmpf1427
    CP_EQF 0.0 2.0 flag1427
    SELECTF flag1427 0.0 tmpf1427 F.0

    JR_GTEQF F.0 200.0 endwhile1423
  whilebody1423:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1428:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1432
    DATA8 flag1432
    DIVF F.1 2.0 tmpf1432
    CP_EQF 0.0 2.0 flag1432
    SELECTF flag1432 0.0 tmpf1432 F.0

    JR_LTF F.0 200.0 whilebody1423
  endwhile1423:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1434:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1435:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1436:
    JR_GTF VGV_I 1.0 endfor1436
  forbody1436:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1437:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1438:
  while1439:
    JR_LTEQF VGV_S3 15.0 and1441
    JR_GTF VGV_S2 15.0 or1440
  and1441:
    JR_GTEQF VGV_S3 15.0 endwhile1439
    JR_GTEQF VGV_S2 15.0 endwhile1439
  or1440:
  whilebody1439:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1442:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1443:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1444:
    JR_LTEQF VGV_S3 15.0 and1445
    JR_GTF VGV_S2 15.0 whilebody1439
  and1445:
    JR_GTEQF VGV_S3 15.0 and1446
    JR_LTF VGV_S2 15.0 whilebody1439
  and1446:
  endwhile1439:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1448
	DATA8 nos1448
	DATA8 busy1448
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1448 nos1448
	JR_EQ8 0 nos1448 motornotbusy1448
  motorwaiting1448:
	OUTPUT_TEST layer1448 nos1448 busy1448
	JR_EQ8 busy1448 0 motornotbusy1448
	SLEEP
	JR motorwaiting1448
  motornotbusy1448:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1436
  endfor1436:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 10.0 'true'

	DATA8 layer1451
	DATA8 nos1451
	DATA8 busy1451
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1451 nos1451
	JR_EQ8 0 nos1451 motornotbusy1451
  motorwaiting1451:
	OUTPUT_TEST layer1451 nos1451 busy1451
	JR_EQ8 busy1451 0 motornotbusy1451
	SLEEP
	JR motorwaiting1451
  motornotbusy1451:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 190.0 'true'

	DATA8 layer1452
	DATA8 nos1452
	DATA8 busy1452
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1452 nos1452
	JR_EQ8 0 nos1452 motornotbusy1452
  motorwaiting1452:
	OUTPUT_TEST layer1452 nos1452 busy1452
	JR_EQ8 busy1452 0 motornotbusy1452
	SLEEP
	JR motorwaiting1452
  motornotbusy1452:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1453
	DATA8 nos1453
	DATA8 busy1453
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1453 nos1453
	JR_EQ8 0 nos1453 motornotbusy1453
  motorwaiting1453:
	OUTPUT_TEST layer1453 nos1453 busy1453
	JR_EQ8 busy1453 0 motornotbusy1453
	SLEEP
	JR motorwaiting1453
  motornotbusy1453:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1455
	MOVEF_32 500.0 milliseconds1455
	DATA32 timer1455
	TIMER_WAIT milliseconds1455 timer1455
	TIMER_READY timer1455
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 110.0 'true'

	DATA8 layer1457
	DATA8 nos1457
	DATA8 busy1457
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1457 nos1457
	JR_EQ8 0 nos1457 motornotbusy1457
  motorwaiting1457:
	OUTPUT_TEST layer1457 nos1457 busy1457
	JR_EQ8 busy1457 0 motornotbusy1457
	SLEEP
	JR motorwaiting1457
  motornotbusy1457:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 415.0 'true'

	DATA8 layer1458
	DATA8 nos1458
	DATA8 busy1458
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1458 nos1458
	JR_EQ8 0 nos1458 motornotbusy1458
  motorwaiting1458:
	OUTPUT_TEST layer1458 nos1458 busy1458
	JR_EQ8 busy1458 0 motornotbusy1458
	SLEEP
	JR motorwaiting1458
  motornotbusy1458:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1459:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1460:
  while1461:
    JR_LTEQF VGV_S3 10.0 and1463
    JR_GTF VGV_S2 10.0 or1462
  and1463:
    JR_GTEQF VGV_S3 10.0 and1464
    JR_GTF VGV_S2 10.0 or1462
  and1464:
    JR_LTEQF VGV_S3 6.0 endwhile1461
    JR_GTEQF VGV_S2 6.0 endwhile1461
  or1462:
  whilebody1461:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1465:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1466:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1468
    JR_GTF VGV_S2 10.0 whilebody1461
  and1468:
    JR_GTEQF VGV_S3 10.0 and1469
    JR_GTF VGV_S2 10.0 whilebody1461
  and1469:
    JR_LTEQF VGV_S3 6.0 and1470
    JR_LTF VGV_S2 6.0 whilebody1461
  and1470:
  endwhile1461:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1472
	DATA8 nos1472
	DATA8 busy1472
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1472 nos1472
	JR_EQ8 0 nos1472 motornotbusy1472
  motorwaiting1472:
	OUTPUT_TEST layer1472 nos1472 busy1472
	JR_EQ8 busy1472 0 motornotbusy1472
	SLEEP
	JR motorwaiting1472
  motornotbusy1472:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1474:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1475:
  while1476:
    JR_LTEQF VGV_S3 10.0 endwhile1476
  whilebody1476:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1477:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1478:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1476
  endwhile1476:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1481:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1482:
  while1483:
    JR_GTEQF VGV_S3 60.0 endwhile1483
  whilebody1483:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1484:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1485:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1483
  endwhile1483:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1488
	MOVEF_32 100.0 milliseconds1488
	DATA32 timer1488
	TIMER_WAIT milliseconds1488 timer1488
	TIMER_READY timer1488
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1489:
    CALL MOTOR.RESETCOUNT 'bc'
  while1491:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1495
    DATA8 flag1495
    DIVF F.1 2.0 tmpf1495
    CP_EQF 0.0 2.0 flag1495
    SELECTF flag1495 0.0 tmpf1495 F.0

    JR_GTEQF F.0 200.0 endwhile1491
  whilebody1491:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1496:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1500
    DATA8 flag1500
    DIVF F.1 2.0 tmpf1500
    CP_EQF 0.0 2.0 flag1500
    SELECTF flag1500 0.0 tmpf1500 F.0

    JR_LTF F.0 200.0 whilebody1491
  endwhile1491:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1502:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1503:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1504:
    JR_GTF VGV_I 2.0 endfor1504
  forbody1504:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1505:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1506:
  while1507:
    JR_LTEQF VGV_S3 15.0 and1509
    JR_GTF VGV_S2 15.0 or1508
  and1509:
    JR_GTEQF VGV_S3 15.0 endwhile1507
    JR_GTEQF VGV_S2 15.0 endwhile1507
  or1508:
  whilebody1507:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1510:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1511:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1512:
    JR_LTEQF VGV_S3 15.0 and1513
    JR_GTF VGV_S2 15.0 whilebody1507
  and1513:
    JR_GTEQF VGV_S3 15.0 and1514
    JR_LTF VGV_S2 15.0 whilebody1507
  and1514:
  endwhile1507:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1516
	DATA8 nos1516
	DATA8 busy1516
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1516 nos1516
	JR_EQ8 0 nos1516 motornotbusy1516
  motorwaiting1516:
	OUTPUT_TEST layer1516 nos1516 busy1516
	JR_EQ8 busy1516 0 motornotbusy1516
	SLEEP
	JR motorwaiting1516
  motornotbusy1516:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1504
  endfor1504:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 5.0 'true'

	DATA8 layer1519
	DATA8 nos1519
	DATA8 busy1519
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1519 nos1519
	JR_EQ8 0 nos1519 motornotbusy1519
  motorwaiting1519:
	OUTPUT_TEST layer1519 nos1519 busy1519
	JR_EQ8 busy1519 0 motornotbusy1519
	SLEEP
	JR motorwaiting1519
  motornotbusy1519:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1521:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1522:
    MOVEF_F 80.0 VGV_J
  while1523:
    JR_LTEQF VGV_S3 10.0 endwhile1523
  whilebody1523:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1524:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1525:
    JR_LTEQF VGV_J 30.0 else1526_1
    SUBF VGV_J 0.1 VGV_J
  else1526_1:
  endif1526:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1523
  endwhile1523:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1530:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1531:
    MOVEF_F 80.0 VGV_J
  while1532:
    JR_GTEQF VGV_S3 15.0 endwhile1532
  whilebody1532:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1533:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1534:
    JR_LTEQF VGV_J 30.0 else1535_1
    SUBF VGV_J 0.1 VGV_J
  else1535_1:
  endif1535:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1532
  endwhile1532:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1540:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1544
    DATA8 flag1544
    DIVF F.1 2.0 tmpf1544
    CP_EQF 0.0 2.0 flag1544
    SELECTF flag1544 0.0 tmpf1544 F.0

    JR_GTEQF F.0 50.0 endwhile1540
  whilebody1540:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1545:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1546:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1547:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1548:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1550
    DATA8 flag1550
    DIVF F.1 2.0 tmpf1550
    CP_EQF 0.0 2.0 flag1550
    SELECTF flag1550 0.0 tmpf1550 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1562
    DATA8 flag1562
    DIVF F.1 2.0 tmpf1562
    CP_EQF 0.0 2.0 flag1562
    SELECTF flag1562 0.0 tmpf1562 F.0

    JR_LTF F.0 50.0 whilebody1540
  endwhile1540:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 18.0 95.0 'true'

	DATA8 layer1564
	DATA8 nos1564
	DATA8 busy1564
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1564 nos1564
	JR_EQ8 0 nos1564 motornotbusy1564
  motorwaiting1564:
	OUTPUT_TEST layer1564 nos1564 busy1564
	JR_EQ8 busy1564 0 motornotbusy1564
	SLEEP
	JR motorwaiting1564
  motornotbusy1564:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1566
	MOVEF_32 500.0 milliseconds1566
	DATA32 timer1566
	TIMER_WAIT milliseconds1566 timer1566
	TIMER_READY timer1566
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1569:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1573
    DATA8 flag1573
    DIVF F.1 2.0 tmpf1573
    CP_EQF 0.0 2.0 flag1573
    SELECTF flag1573 0.0 tmpf1573 F.0

    JR_LTEQF F.0 -240.0 endwhile1569
  whilebody1569:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1578
    DATA8 flag1578
    DIVF F.1 2.0 tmpf1578
    CP_EQF 0.0 2.0 flag1578
    SELECTF flag1578 0.0 tmpf1578 F.0

    JR_GTF F.0 -240.0 whilebody1569
  endwhile1569:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1580
	DATA8 nos1580
	DATA8 busy1580
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1580 nos1580
	JR_EQ8 0 nos1580 motornotbusy1580
  motorwaiting1580:
	OUTPUT_TEST layer1580 nos1580 busy1580
	JR_EQ8 busy1580 0 motornotbusy1580
	SLEEP
	JR motorwaiting1580
  motornotbusy1580:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1582:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1583:
  while1584:
    JR_LTEQF VGV_S3 10.0 and1586
    JR_GTF VGV_S2 10.0 or1585
  and1586:
    JR_LTEQF VGV_S3 10.0 and1587
    JR_LTF VGV_S2 10.0 or1585
  and1587:
    JR_GTEQF VGV_S3 10.0 endwhile1584
    JR_LTEQF VGV_S2 10.0 endwhile1584
  or1585:
  whilebody1584:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1588:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1589:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1591
    JR_GTF VGV_S2 10.0 whilebody1584
  and1591:
    JR_LTEQF VGV_S3 10.0 and1592
    JR_LTF VGV_S2 10.0 whilebody1584
  and1592:
    JR_GTEQF VGV_S3 10.0 and1593
    JR_GTF VGV_S2 10.0 whilebody1584
  and1593:
  endwhile1584:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1595
	DATA8 nos1595
	DATA8 busy1595
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1595 nos1595
	JR_EQ8 0 nos1595 motornotbusy1595
  motorwaiting1595:
	OUTPUT_TEST layer1595 nos1595 busy1595
	JR_EQ8 busy1595 0 motornotbusy1595
	SLEEP
	JR motorwaiting1595
  motornotbusy1595:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1596:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1597:
  while1598:
    JR_LTEQF VGV_S3 10.0 endwhile1598
  whilebody1598:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1599:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1600:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1598
  endwhile1598:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1602:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1603:
  while1604:
    JR_GTEQF VGV_S3 15.0 endwhile1604
  whilebody1604:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1605:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1606:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1604
  endwhile1604:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1609
	DATA8 nos1609
	DATA8 busy1609
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1609 nos1609
	JR_EQ8 0 nos1609 motornotbusy1609
  motorwaiting1609:
	OUTPUT_TEST layer1609 nos1609 busy1609
	JR_EQ8 busy1609 0 motornotbusy1609
	SLEEP
	JR motorwaiting1609
  motornotbusy1609:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1610:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1611:
  while1612:
    JR_LTEQF VGV_S3 15.0 endwhile1612
  whilebody1612:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1613:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1614:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1612
  endwhile1612:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1617:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1618:
  while1619:
    JR_GTEQF VGV_S3 15.0 endwhile1619
  whilebody1619:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1620:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1621:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1619
  endwhile1619:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.4 VGV_K3
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.RESETCOUNT 'bc'
  while1625:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 270.0 endwhile1625
  whilebody1625:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1627:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 270.0 whilebody1625
  endwhile1625:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1630:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1631:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1632:
    JR_GTF VGV_I 3.0 endfor1632
  forbody1632:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1633:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1634:
  while1635:
    JR_LTEQF VGV_S3 15.0 and1637
    JR_GTF VGV_S2 15.0 or1636
  and1637:
    JR_GTEQF VGV_S3 15.0 endwhile1635
    JR_GTEQF VGV_S2 15.0 endwhile1635
  or1636:
  whilebody1635:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1638:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1639:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1640:
    JR_LTEQF VGV_S3 15.0 and1641
    JR_GTF VGV_S2 15.0 whilebody1635
  and1641:
    JR_GTEQF VGV_S3 15.0 and1642
    JR_LTF VGV_S2 15.0 whilebody1635
  and1642:
  endwhile1635:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1644
	DATA8 nos1644
	DATA8 busy1644
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1644 nos1644
	JR_EQ8 0 nos1644 motornotbusy1644
  motorwaiting1644:
	OUTPUT_TEST layer1644 nos1644 busy1644
	JR_EQ8 busy1644 0 motornotbusy1644
	SLEEP
	JR motorwaiting1644
  motornotbusy1644:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1632
  endfor1632:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 200.0 'true'

	DATA8 layer1647
	DATA8 nos1647
	DATA8 busy1647
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1647 nos1647
	JR_EQ8 0 nos1647 motornotbusy1647
  motorwaiting1647:
	OUTPUT_TEST layer1647 nos1647 busy1647
	JR_EQ8 busy1647 0 motornotbusy1647
	SLEEP
	JR motorwaiting1647
  motornotbusy1647:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1648
	DATA8 nos1648
	DATA8 busy1648
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1648 nos1648
	JR_EQ8 0 nos1648 motornotbusy1648
  motorwaiting1648:
	OUTPUT_TEST layer1648 nos1648 busy1648
	JR_EQ8 busy1648 0 motornotbusy1648
	SLEEP
	JR motorwaiting1648
  motornotbusy1648:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1650
	MOVEF_32 500.0 milliseconds1650
	DATA32 timer1650
	TIMER_WAIT milliseconds1650 timer1650
	TIMER_READY timer1650
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1652
	DATA8 nos1652
	DATA8 busy1652
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1652 nos1652
	JR_EQ8 0 nos1652 motornotbusy1652
  motorwaiting1652:
	OUTPUT_TEST layer1652 nos1652 busy1652
	JR_EQ8 busy1652 0 motornotbusy1652
	SLEEP
	JR motorwaiting1652
  motornotbusy1652:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 375.0 'true'

	DATA8 layer1653
	DATA8 nos1653
	DATA8 busy1653
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1653 nos1653
	JR_EQ8 0 nos1653 motornotbusy1653
  motorwaiting1653:
	OUTPUT_TEST layer1653 nos1653 busy1653
	JR_EQ8 busy1653 0 motornotbusy1653
	SLEEP
	JR motorwaiting1653
  motornotbusy1653:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 199.0 'true'

	DATA8 layer1654
	DATA8 nos1654
	DATA8 busy1654
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1654 nos1654
	JR_EQ8 0 nos1654 motornotbusy1654
  motorwaiting1654:
	OUTPUT_TEST layer1654 nos1654 busy1654
	JR_EQ8 busy1654 0 motornotbusy1654
	SLEEP
	JR motorwaiting1654
  motornotbusy1654:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1655
	DATA8 nos1655
	DATA8 busy1655
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1655 nos1655
	JR_EQ8 0 nos1655 motornotbusy1655
  motorwaiting1655:
	OUTPUT_TEST layer1655 nos1655 busy1655
	JR_EQ8 busy1655 0 motornotbusy1655
	SLEEP
	JR motorwaiting1655
  motornotbusy1655:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1656
	DATA8 nos1656
	DATA8 busy1656
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1656 nos1656
	JR_EQ8 0 nos1656 motornotbusy1656
  motorwaiting1656:
	OUTPUT_TEST layer1656 nos1656 busy1656
	JR_EQ8 busy1656 0 motornotbusy1656
	SLEEP
	JR motorwaiting1656
  motornotbusy1656:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1657:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1658:
  while1659:
    JR_LTEQF VGV_S3 10.0 and1661
    JR_GTF VGV_S2 10.0 or1660
  and1661:
    JR_GTEQF VGV_S3 10.0 and1662
    JR_GTF VGV_S2 10.0 or1660
  and1662:
    JR_LTEQF VGV_S3 10.0 endwhile1659
    JR_GTEQF VGV_S2 10.0 endwhile1659
  or1660:
  whilebody1659:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1663:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1664:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1666
    JR_GTF VGV_S2 10.0 whilebody1659
  and1666:
    JR_GTEQF VGV_S3 10.0 and1667
    JR_GTF VGV_S2 10.0 whilebody1659
  and1667:
    JR_LTEQF VGV_S3 10.0 and1668
    JR_LTF VGV_S2 10.0 whilebody1659
  and1668:
  endwhile1659:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1670
	DATA8 nos1670
	DATA8 busy1670
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1670 nos1670
	JR_EQ8 0 nos1670 motornotbusy1670
  motorwaiting1670:
	OUTPUT_TEST layer1670 nos1670 busy1670
	JR_EQ8 busy1670 0 motornotbusy1670
	SLEEP
	JR motorwaiting1670
  motornotbusy1670:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1672
	DATA8 nos1672
	DATA8 busy1672
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1672 nos1672
	JR_EQ8 0 nos1672 motornotbusy1672
  motorwaiting1672:
	OUTPUT_TEST layer1672 nos1672 busy1672
	JR_EQ8 busy1672 0 motornotbusy1672
	SLEEP
	JR motorwaiting1672
  motornotbusy1672:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1673:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1674:
  while1675:
    JR_LTEQF VGV_S3 15.0 endwhile1675
  whilebody1675:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1676:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1677:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1675
  endwhile1675:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1680:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1681:
  while1682:
    JR_GTEQF VGV_S3 60.0 endwhile1682
  whilebody1682:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1683:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1684:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1682
  endwhile1682:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1687:
    JR_GTF VGV_I 1.0 endfor1687
  forbody1687:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1688:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1689:
  while1690:
    JR_LTEQF VGV_S3 10.0 and1692
    JR_GTF VGV_S2 10.0 or1691
  and1692:
    JR_GTEQF VGV_S3 10.0 endwhile1690
    JR_GTEQF VGV_S2 10.0 endwhile1690
  or1691:
  whilebody1690:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1693:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1694:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1695:
    JR_LTEQF VGV_S3 10.0 and1696
    JR_GTF VGV_S2 10.0 whilebody1690
  and1696:
    JR_GTEQF VGV_S3 10.0 and1697
    JR_LTF VGV_S2 10.0 whilebody1690
  and1697:
  endwhile1690:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1699
	DATA8 nos1699
	DATA8 busy1699
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1699 nos1699
	JR_EQ8 0 nos1699 motornotbusy1699
  motorwaiting1699:
	OUTPUT_TEST layer1699 nos1699 busy1699
	JR_EQ8 busy1699 0 motornotbusy1699
	SLEEP
	JR motorwaiting1699
  motornotbusy1699:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1687
  endfor1687:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1702:
    CALL MOTOR.RESETCOUNT 'bc'
  while1704:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1708
    DATA8 flag1708
    DIVF F.1 2.0 tmpf1708
    CP_EQF 0.0 2.0 flag1708
    SELECTF flag1708 0.0 tmpf1708 F.0

    JR_GTEQF F.0 30.0 endwhile1704
  whilebody1704:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1709:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1713
    DATA8 flag1713
    DIVF F.1 2.0 tmpf1713
    CP_EQF 0.0 2.0 flag1713
    SELECTF flag1713 0.0 tmpf1713 F.0

    JR_LTF F.0 30.0 whilebody1704
  endwhile1704:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer1714
	DATA8 nos1714
	DATA8 busy1714
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1714 nos1714
	JR_EQ8 0 nos1714 motornotbusy1714
  motorwaiting1714:
	OUTPUT_TEST layer1714 nos1714 busy1714
	JR_EQ8 busy1714 0 motornotbusy1714
	SLEEP
	JR motorwaiting1714
  motornotbusy1714:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1716
	MOVEF_32 100.0 milliseconds1716
	DATA32 timer1716
	TIMER_WAIT milliseconds1716 timer1716
	TIMER_READY timer1716
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1718
	MOVEF_32 500.0 milliseconds1718
	DATA32 timer1718
	TIMER_WAIT milliseconds1718 timer1718
	TIMER_READY timer1718
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1720:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1721:
  while1722:
    JR_LTEQF VGV_S2 9.0 and1724
    JR_GTF VGV_S3 9.0 or1723
  and1724:
    JR_GTEQF VGV_S2 9.0 and1725
    JR_GTF VGV_S3 9.0 or1723
  and1725:
    JR_LTEQF VGV_S2 9.0 endwhile1722
    JR_GTEQF VGV_S3 9.0 endwhile1722
  or1723:
  whilebody1722:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1726:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1727:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1729
    JR_GTF VGV_S3 9.0 whilebody1722
  and1729:
    JR_GTEQF VGV_S2 9.0 and1730
    JR_GTF VGV_S3 9.0 whilebody1722
  and1730:
    JR_LTEQF VGV_S2 9.0 and1731
    JR_LTF VGV_S3 9.0 whilebody1722
  and1731:
  endwhile1722:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1732
	DATA8 nos1732
	DATA8 busy1732
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1732 nos1732
	JR_EQ8 0 nos1732 motornotbusy1732
  motorwaiting1732:
	OUTPUT_TEST layer1732 nos1732 busy1732
	JR_EQ8 busy1732 0 motornotbusy1732
	SLEEP
	JR motorwaiting1732
  motornotbusy1732:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1734
	DATA8 nos1734
	DATA8 busy1734
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1734 nos1734
	JR_EQ8 0 nos1734 motornotbusy1734
  motorwaiting1734:
	OUTPUT_TEST layer1734 nos1734 busy1734
	JR_EQ8 busy1734 0 motornotbusy1734
	SLEEP
	JR motorwaiting1734
  motornotbusy1734:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1736:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1737:
  while1738:
    JR_LTEQF VGV_S2 10.0 endwhile1738
  whilebody1738:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1739:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1740:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1738
  endwhile1738:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1742:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1743:
  while1744:
    JR_GTEQF VGV_S2 60.0 endwhile1744
  whilebody1744:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1745:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1746:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1744
  endwhile1744:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1749
    DATA8 flag1749
    DIVF 360.0 VGV_L tmpf1749
    CP_EQF 0.0 VGV_L flag1749
    SELECTF flag1749 0.0 tmpf1749 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1752:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1752
  whilebody1752:
    JR_GTEQF VGV_SPEED 60.0 else1754_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1754_1:
  endif1754:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1756:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1752
  endwhile1752:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1759:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1760:
    MOVEF_F 1300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1761:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1763
	DATA8 nos1763
	DATA8 busy1763
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1763 nos1763
	JR_EQ8 0 nos1763 motornotbusy1763
  motorwaiting1763:
	OUTPUT_TEST layer1763 nos1763 busy1763
	JR_EQ8 busy1763 0 motornotbusy1763
	SLEEP
	JR motorwaiting1763
  motornotbusy1763:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1764:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1765:
  while1766:
    JR_LTEQF VGV_S3 10.0 and1768
    JR_GTF VGV_S2 10.0 or1767
  and1768:
    JR_GTEQF VGV_S3 10.0 endwhile1766
    JR_GTEQF VGV_S2 10.0 endwhile1766
  or1767:
  whilebody1766:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1769:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1770:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1771:
    JR_LTEQF VGV_S3 10.0 and1772
    JR_GTF VGV_S2 10.0 whilebody1766
  and1772:
    JR_GTEQF VGV_S3 10.0 and1773
    JR_LTF VGV_S2 10.0 whilebody1766
  and1773:
  endwhile1766:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1775:
    CALL MOTOR.RESETCOUNT 'bc'
  while1777:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1781
    DATA8 flag1781
    DIVF F.1 2.0 tmpf1781
    CP_EQF 0.0 2.0 flag1781
    SELECTF flag1781 0.0 tmpf1781 F.0

    JR_GTEQF F.0 10.0 endwhile1777
  whilebody1777:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1782:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1783:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1784:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1788
    DATA8 flag1788
    DIVF F.1 2.0 tmpf1788
    CP_EQF 0.0 2.0 flag1788
    SELECTF flag1788 0.0 tmpf1788 F.0

    JR_LTF F.0 10.0 whilebody1777
  endwhile1777:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1790
	DATA8 nos1790
	DATA8 busy1790
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1790 nos1790
	JR_EQ8 0 nos1790 motornotbusy1790
  motorwaiting1790:
	OUTPUT_TEST layer1790 nos1790 busy1790
	JR_EQ8 busy1790 0 motornotbusy1790
	SLEEP
	JR motorwaiting1790
  motornotbusy1790:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1792
	MOVEF_32 500.0 milliseconds1792
	DATA32 timer1792
	TIMER_WAIT milliseconds1792 timer1792
	TIMER_READY timer1792
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1794:
    DATA32 tmp1795
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1795
    JR_NEQ32 0 tmp1795 alreadylaunched1795
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1795:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1796:
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    DATA32 milliseconds1797
	MOVEF_32 400.0 milliseconds1797
	DATA32 timer1797
	TIMER_WAIT milliseconds1797 timer1797
	TIMER_READY timer1797
    CALL MOTOR.SCHEDULESYNC 'bc' -25.0 -20.0 150.0 'true'

	DATA8 layer1798
	DATA8 nos1798
	DATA8 busy1798
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1798 nos1798
	JR_EQ8 0 nos1798 motornotbusy1798
  motorwaiting1798:
	OUTPUT_TEST layer1798 nos1798 busy1798
	JR_EQ8 busy1798 0 motornotbusy1798
	SLEEP
	JR motorwaiting1798
  motornotbusy1798:
    DATA32 milliseconds1799
	MOVEF_32 400.0 milliseconds1799
	DATA32 timer1799
	TIMER_WAIT milliseconds1799 timer1799
	TIMER_READY timer1799
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 25.0 200.0 'true'

	DATA8 layer1800
	DATA8 nos1800
	DATA8 busy1800
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1800 nos1800
	JR_EQ8 0 nos1800 motornotbusy1800
  motorwaiting1800:
	OUTPUT_TEST layer1800 nos1800 busy1800
	JR_EQ8 busy1800 0 motornotbusy1800
	SLEEP
	JR motorwaiting1800
  motornotbusy1800:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1802:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1803:
  while1804:
    JR_LTEQF VGV_S2 12.0 endwhile1804
  whilebody1804:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1805:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1806:
    CALL MOTOR.STARTSYNC 'bc' -30.0 25.0
    JR_GTF VGV_S2 12.0 whilebody1804
  endwhile1804:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1809:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1810:
  while1811:
    JR_GTEQF VGV_S2 60.0 endwhile1811
  whilebody1811:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1812:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1813:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1811
  endwhile1811:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1817:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1821
    DATA8 flag1821
    DIVF F.1 2.0 tmpf1821
    CP_EQF 0.0 2.0 flag1821
    SELECTF flag1821 0.0 tmpf1821 F.0

    JR_GTEQF F.0 300.0 endwhile1817
  whilebody1817:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1822:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1823:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1824:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1828
    DATA8 flag1828
    DIVF F.1 2.0 tmpf1828
    CP_EQF 0.0 2.0 flag1828
    SELECTF flag1828 0.0 tmpf1828 F.0

    JR_LTF F.0 300.0 whilebody1817
  endwhile1817:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.15 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1830:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1831:
  while1832:
    JR_LTEQF VGV_S3 15.0 and1834
    JR_GTF VGV_S2 15.0 or1833
  and1834:
    JR_GTEQF VGV_S3 10.0 endwhile1832
    JR_GTEQF VGV_S2 15.0 endwhile1832
  or1833:
  whilebody1832:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1835:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1836:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1837:
    JR_LTEQF VGV_S3 15.0 and1838
    JR_GTF VGV_S2 15.0 whilebody1832
  and1838:
    JR_GTEQF VGV_S3 10.0 and1839
    JR_LTF VGV_S2 15.0 whilebody1832
  and1839:
  endwhile1832:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1841
	DATA8 no1841
	DATA8 mode81841
	
	MOVEF_8 1.0 no1841
	SUB8 no1841 1 no1841
	DIV8 no1841 4 layer1841
	MATH MOD8 no1841 4 no1841

	MOVEF_8 2.0 mode81841
	
	INPUT_DEVICE READY_RAW layer1841 no1841 0 mode81841 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1848
    DATA8 flag1848
    DIVF VGV_SRED 255.0 tmpf1848
    CP_EQF 0.0 255.0 flag1848
    SELECTF flag1848 0.0 tmpf1848 VGV_SRED

    DATAF tmpf1849
    DATA8 flag1849
    DIVF VGV_SGREEN 255.0 tmpf1849
    CP_EQF 0.0 255.0 flag1849
    SELECTF flag1849 0.0 tmpf1849 VGV_SGREEN

    DATAF tmpf1850
    DATA8 flag1850
    DIVF VGV_SBLUE 255.0 tmpf1850
    CP_EQF 0.0 255.0 flag1850
    SELECTF flag1850 0.0 tmpf1850 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1851_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1851_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1851
  else1851_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1851_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1851_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1851
  else1851_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1851_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1851_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1851_3:
  endif1851:
    JR_GTEQF VGV_SRED VGV_SGREEN else1852_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1852_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1852
  else1852_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1852_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1852_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1852
  else1852_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1852_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1852_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1852_3:
  endif1852:
    JR_NEQF VGV_MAX VGV_MIN else1853_1
    MOVEF_F 0.0 VGV_H
    JR endif1853
  else1853_1:
    JR_NEQF VGV_SRED VGV_MAX else1854_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1855_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1859
    DATA8 flag1859
    DIVF F.0 F.1 tmpf1859
    CP_EQF 0.0 F.1 flag1859
    SELECTF flag1859 0.0 tmpf1859 VGV_H

    JR endif1855
  else1855_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1863
    DATA8 flag1863
    DIVF F.1 F.2 tmpf1863
    CP_EQF 0.0 F.2 flag1863
    SELECTF flag1863 0.0 tmpf1863 F.0

    ADDF F.0 360.0 VGV_H
  else1855_2:
  endif1855:
    JR endif1854
  else1854_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1865_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1869
    DATA8 flag1869
    DIVF F.1 F.2 tmpf1869
    CP_EQF 0.0 F.2 flag1869
    SELECTF flag1869 0.0 tmpf1869 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1865
  else1865_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1874
    DATA8 flag1874
    DIVF F.1 F.2 tmpf1874
    CP_EQF 0.0 F.2 flag1874
    SELECTF flag1874 0.0 tmpf1874 F.0

    ADDF F.0 240.0 VGV_H
  else1865_2:
  endif1865:
  else1854_2:
  endif1854:
  else1853_2:
  endif1853:
    JR_NEQF VGV_MAX 0.0 else1876_1
    MOVEF_F 0.0 VGV_S
    JR endif1876
  else1876_1:
    DATAF tmpf1877
    DATA8 flag1877
    DIVF VGV_MIN VGV_MAX tmpf1877
    CP_EQF 0.0 VGV_MAX flag1877
    SELECTF flag1877 0.0 tmpf1877 F.0

    SUBF 1.0 F.0 VGV_S
  else1876_2:
  endif1876:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1886
	DATA8 no1886
	DATA8 mode81886
	
	MOVEF_8 1.0 no1886
	SUB8 no1886 1 no1886
	DIV8 no1886 4 layer1886
	MATH MOD8 no1886 4 no1886

	MOVEF_8 2.0 mode81886
	
	INPUT_DEVICE READY_RAW layer1886 no1886 0 mode81886 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1887:
    JR_GTF VGV_P 100.0 endfor1887
  forbody1887:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1888:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1887
  endfor1887:
    DATAF tmpf1893
    DATA8 flag1893
    DIVF VGV_X 100.0 tmpf1893
    CP_EQF 0.0 100.0 flag1893
    SELECTF flag1893 0.0 tmpf1893 VGV_H

    DATAF tmpf1894
    DATA8 flag1894
    DIVF VGV_Z 100.0 tmpf1894
    CP_EQF 0.0 100.0 flag1894
    SELECTF flag1894 0.0 tmpf1894 VGV_S

    DATAF tmpf1895
    DATA8 flag1895
    DIVF VGV_D 100.0 tmpf1895
    CP_EQF 0.0 100.0 flag1895
    SELECTF flag1895 0.0 tmpf1895 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1903
	DATA8 no1903
	DATA8 mode81903
	
	MOVEF_8 1.0 no1903
	SUB8 no1903 1 no1903
	DIV8 no1903 4 layer1903
	MATH MOD8 no1903 4 no1903

	MOVEF_8 2.0 mode81903
	
	INPUT_DEVICE READY_RAW layer1903 no1903 0 mode81903 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1910
    DATA8 flag1910
    DIVF VGV_SRED 255.0 tmpf1910
    CP_EQF 0.0 255.0 flag1910
    SELECTF flag1910 0.0 tmpf1910 VGV_SRED

    DATAF tmpf1911
    DATA8 flag1911
    DIVF VGV_SGREEN 255.0 tmpf1911
    CP_EQF 0.0 255.0 flag1911
    SELECTF flag1911 0.0 tmpf1911 VGV_SGREEN

    DATAF tmpf1912
    DATA8 flag1912
    DIVF VGV_SBLUE 255.0 tmpf1912
    CP_EQF 0.0 255.0 flag1912
    SELECTF flag1912 0.0 tmpf1912 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1913_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1913_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1913
  else1913_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1913_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1913_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1913
  else1913_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1913_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1913_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1913_3:
  endif1913:
    JR_GTEQF VGV_SRED VGV_SGREEN else1914_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1914_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1914
  else1914_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1914_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1914_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1914
  else1914_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1914_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1914_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1914_3:
  endif1914:
    JR_NEQF VGV_MAX VGV_MIN else1915_1
    MOVEF_F 0.0 VGV_H
    JR endif1915
  else1915_1:
    JR_NEQF VGV_SRED VGV_MAX else1916_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1917_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1921
    DATA8 flag1921
    DIVF F.0 F.1 tmpf1921
    CP_EQF 0.0 F.1 flag1921
    SELECTF flag1921 0.0 tmpf1921 VGV_H

    JR endif1917
  else1917_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1925
    DATA8 flag1925
    DIVF F.1 F.2 tmpf1925
    CP_EQF 0.0 F.2 flag1925
    SELECTF flag1925 0.0 tmpf1925 F.0

    ADDF F.0 360.0 VGV_H
  else1917_2:
  endif1917:
    JR endif1916
  else1916_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1927_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1931
    DATA8 flag1931
    DIVF F.1 F.2 tmpf1931
    CP_EQF 0.0 F.2 flag1931
    SELECTF flag1931 0.0 tmpf1931 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1927
  else1927_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1936
    DATA8 flag1936
    DIVF F.1 F.2 tmpf1936
    CP_EQF 0.0 F.2 flag1936
    SELECTF flag1936 0.0 tmpf1936 F.0

    ADDF F.0 240.0 VGV_H
  else1927_2:
  endif1927:
  else1916_2:
  endif1916:
  else1915_2:
  endif1915:
    JR_NEQF VGV_MAX 0.0 else1938_1
    MOVEF_F 0.0 VGV_S
    JR endif1938
  else1938_1:
    DATAF tmpf1939
    DATA8 flag1939
    DIVF VGV_MIN VGV_MAX tmpf1939
    CP_EQF 0.0 VGV_MAX flag1939
    SELECTF flag1939 0.0 tmpf1939 F.0

    SUBF 1.0 F.0 VGV_S
  else1938_2:
  endif1938:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1943
    JR_LTF VGV_H 360.0 or1942
  and1943:
    JR_LTF VGV_H 0.0 else1941_1
    JR_GTF VGV_H 20.0 else1941_1
    JR_LTEQF VGV_S 0.3 else1941_1
    JR_GTF VGV_S 1.0 else1941_1
    JR_LTEQF VGV_V 0.025 else1941_1
    JR_GTEQF VGV_V 0.1 else1941_1
  or1942:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1941
  else1941_1:
    JR_LTF VGV_H 20.0 else1941_2
    JR_GTEQF VGV_H 60.0 else1941_2
    JR_LTF VGV_S 0.4 else1941_2
    JR_LTEQF VGV_V 0.03 else1941_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1941
  else1941_2:
    MOVEF_F 6.0 VGV_COLOR
  else1941_3:
  endif1941:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1944
	DATA8 no1944
	DATA8 mode81944
	
	MOVEF_8 1.0 no1944
	SUB8 no1944 1 no1944
	DIV8 no1944 4 layer1944
	MATH MOD8 no1944 4 no1944

	MOVEF_8 2.0 mode81944
	
	INPUT_DEVICE READY_RAW layer1944 no1944 0 mode81944 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1951
    DATA8 flag1951
    DIVF VGV_SRED 255.0 tmpf1951
    CP_EQF 0.0 255.0 flag1951
    SELECTF flag1951 0.0 tmpf1951 VGV_SRED

    DATAF tmpf1952
    DATA8 flag1952
    DIVF VGV_SGREEN 255.0 tmpf1952
    CP_EQF 0.0 255.0 flag1952
    SELECTF flag1952 0.0 tmpf1952 VGV_SGREEN

    DATAF tmpf1953
    DATA8 flag1953
    DIVF VGV_SBLUE 255.0 tmpf1953
    CP_EQF 0.0 255.0 flag1953
    SELECTF flag1953 0.0 tmpf1953 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1954_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1954_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1954
  else1954_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1954_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1954_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1954
  else1954_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1954_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1954_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1954_3:
  endif1954:
    JR_GTEQF VGV_SRED VGV_SGREEN else1955_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1955_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1955
  else1955_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1955_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1955_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1955
  else1955_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1955_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1955_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1955_3:
  endif1955:
    JR_NEQF VGV_MAX VGV_MIN else1956_1
    MOVEF_F 0.0 VGV_H
    JR endif1956
  else1956_1:
    JR_NEQF VGV_SRED VGV_MAX else1957_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1958_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1962
    DATA8 flag1962
    DIVF F.0 F.1 tmpf1962
    CP_EQF 0.0 F.1 flag1962
    SELECTF flag1962 0.0 tmpf1962 VGV_H

    JR endif1958
  else1958_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1966
    DATA8 flag1966
    DIVF F.1 F.2 tmpf1966
    CP_EQF 0.0 F.2 flag1966
    SELECTF flag1966 0.0 tmpf1966 F.0

    ADDF F.0 360.0 VGV_H
  else1958_2:
  endif1958:
    JR endif1957
  else1957_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1968_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1972
    DATA8 flag1972
    DIVF F.1 F.2 tmpf1972
    CP_EQF 0.0 F.2 flag1972
    SELECTF flag1972 0.0 tmpf1972 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1968
  else1968_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1977
    DATA8 flag1977
    DIVF F.1 F.2 tmpf1977
    CP_EQF 0.0 F.2 flag1977
    SELECTF flag1977 0.0 tmpf1977 F.0

    ADDF F.0 240.0 VGV_H
  else1968_2:
  endif1968:
  else1957_2:
  endif1957:
  else1956_2:
  endif1956:
    JR_NEQF VGV_MAX 0.0 else1979_1
    MOVEF_F 0.0 VGV_S
    JR endif1979
  else1979_1:
    DATAF tmpf1980
    DATA8 flag1980
    DIVF VGV_MIN VGV_MAX tmpf1980
    CP_EQF 0.0 VGV_MAX flag1980
    SELECTF flag1980 0.0 tmpf1980 F.0

    SUBF 1.0 F.0 VGV_S
  else1979_2:
  endif1979:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1984
    JR_LTF VGV_H 360.0 or1983
  and1984:
    JR_LTF VGV_H 0.0 else1982_1
    JR_GTF VGV_H 30.0 else1982_1
    JR_LTEQF VGV_S 0.3 else1982_1
    JR_GTF VGV_S 1.0 else1982_1
    JR_LTF VGV_V 0.0 else1982_1
    JR_GTEQF VGV_V 0.02 else1982_1
  or1983:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1982
  else1982_1:
    JR_LTF VGV_H 0.0 else1982_2
    JR_GTEQF VGV_H 60.0 else1982_2
    JR_LTF VGV_S 0.4 else1982_2
    JR_GTF VGV_S 1.0 else1982_2
    JR_LTEQF VGV_V 0.003 else1982_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1982
  else1982_2:
    MOVEF_F 6.0 VGV_COLOR
  else1982_3:
  endif1982:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1989
    DATA8 flag1989
    DIVF F.0 F.1 tmpf1989
    CP_EQF 0.0 F.1 flag1989
    SELECTF flag1989 0.0 tmpf1989 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1994
    DATA8 flag1994
    DIVF F.0 F.1 tmpf1994
    CP_EQF 0.0 F.1 flag1994
    SELECTF flag1994 0.0 tmpf1994 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1995:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1996:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF 0.2 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF 0.0 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_POLIN2DUS_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2006:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2007:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF 0.15 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF 8.0 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2DUS_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2DUS_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds2021
	MOVEF_32 100.0 milliseconds2021
	DATA32 timer2021
	TIMER_WAIT milliseconds2021 timer2021
	TIMER_READY timer2021
  while2022:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile2022
  whilebody2022:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody2022
  endwhile2022:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds2028
	MOVEF_32 250.0 milliseconds2028
	DATA32 timer2028
	TIMER_WAIT milliseconds2028 timer2028
	TIMER_READY timer2028
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2030:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2031:
  while2032:
    JR_LTEQF VGV_S2 9.0 and2034
    JR_GTF VGV_S3 9.0 or2033
  and2034:
    JR_GTEQF VGV_S2 9.0 and2035
    JR_GTF VGV_S3 9.0 or2033
  and2035:
    JR_LTEQF VGV_S2 9.0 endwhile2032
    JR_GTEQF VGV_S3 9.0 endwhile2032
  or2033:
  whilebody2032:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2036:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2037:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and2039
    JR_GTF VGV_S3 9.0 whilebody2032
  and2039:
    JR_GTEQF VGV_S2 9.0 and2040
    JR_GTF VGV_S3 9.0 whilebody2032
  and2040:
    JR_LTEQF VGV_S2 9.0 and2041
    JR_LTF VGV_S3 9.0 whilebody2032
  and2041:
  endwhile2032:
  while2042:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile2042
  whilebody2042:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody2042
  endwhile2042:
    CALL MOTOR.STOP 'B' 'True'
  while2047:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2047
  whilebody2047:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2047
  endwhile2047:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2052
	DATA8 no2052
	DATA8 mode82052
	
	MOVEF_8 2.0 no2052
	SUB8 no2052 1 no2052
	DIV8 no2052 4 layer2052
	MATH MOD8 no2052 4 no2052

	MOVEF_8 0.0 mode82052
	
	INPUT_DEVICE READY_RAW layer2052 no2052 0 mode82052 0
    DATA8 layer2053
	DATA8 no2053
	DATA8 mode82053
	
	MOVEF_8 3.0 no2053
	SUB8 no2053 1 no2053
	DIV8 no2053 4 layer2053
	MATH MOD8 no2053 4 no2053

	MOVEF_8 0.0 mode82053
	
	INPUT_DEVICE READY_RAW layer2053 no2053 0 mode82053 0
  while2054:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2054
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2054
  whilebody2054:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2058
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2054
  and2058:
  endwhile2054:
    CALL MOTOR.STOP 'BC' 'True'
  while2062:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2062
  whilebody2062:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2062
  endwhile2062:
    CALL MOTOR.STOP 'B' 'True'
  while2067:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2067
  whilebody2067:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2067
  endwhile2067:
    CALL MOTOR.STOP 'C' 'True'
  while2072:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2072
  whilebody2072:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2072
  endwhile2072:
    CALL MOTOR.STOP 'B' 'True'
  while2077:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2077
  whilebody2077:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2077
  endwhile2077:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
