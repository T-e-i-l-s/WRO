DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_AB
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_AB
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2115
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2115:
    JR_NEQ32 SUBPROGRAM 1 dispatch2116
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2116:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_AB
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_AB
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 30.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 40.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB60:
    WRITE32 ENDSUB_F_A2_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB61:
  while62:
    JR_LTEQF VGV_S3 60.0 endwhile62
  whilebody62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB63:
    WRITE32 ENDSUB_F_A2_0:CALLSUB64 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB64:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S3 60.0 whilebody62
  endwhile62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB66:
    WRITE32 ENDSUB_F_A2_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB67:
  while68:
    JR_GTEQF VGV_S2 60.0 endwhile68
  whilebody68:
    WRITE32 ENDSUB_F_A3_0:CALLSUB69 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB69:
    WRITE32 ENDSUB_F_A2_0:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB70:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S2 60.0 whilebody68
  endwhile68:
  while72:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 350.0 endwhile72
  whilebody72:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB74 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB74:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 350.0 whilebody72
  endwhile72:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB77:
    WRITE32 ENDSUB_F_A2_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB78:
    MOVEF_F 40.0 VGV_SPEED
  while79:
    JR_LTEQF VGV_S3 10.0 and81
    JR_GTF VGV_S2 10.0 or80
  and81:
    JR_GTEQF VGV_S3 10.0 endwhile79
    JR_GTEQF VGV_S2 10.0 endwhile79
  or80:
  whilebody79:
    WRITE32 ENDSUB_F_A3_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB82:
    WRITE32 ENDSUB_F_A2_0:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB83:
    JR_LTEQF VGV_SPEED 30.0 else84_1
    SUBF VGV_SPEED 0.1 VGV_SPEED
  else84_1:
  endif84:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB86:
    JR_LTEQF VGV_S3 10.0 and87
    JR_GTF VGV_S2 10.0 whilebody79
  and87:
    JR_GTEQF VGV_S3 10.0 and88
    JR_LTF VGV_S2 10.0 whilebody79
  and88:
  endwhile79:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB90:
    JR_GTF VGV_H 100.0 or92
    JR_LTF VGV_H 0.0 else91_1
    JR_GTF VGV_H 23.0 else91_1
  or92:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.NOTE 100.0 'B#7' 500.0
    JR endif91
  else91_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else91_2:
  endif91:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    JR_NEQF VGV_COLOR 4.0 else96_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB97:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer98
	DATA8 nos98
	DATA8 busy98
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer98 nos98
	JR_EQ8 0 nos98 motornotbusy98
  motorwaiting98:
	OUTPUT_TEST layer98 nos98 busy98
	JR_EQ8 busy98 0 motornotbusy98
	SLEEP
	JR motorwaiting98
  motornotbusy98:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer100
	DATA8 nos100
	DATA8 busy100
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer100 nos100
	JR_EQ8 0 nos100 motornotbusy100
  motorwaiting100:
	OUTPUT_TEST layer100 nos100 busy100
	JR_EQ8 busy100 0 motornotbusy100
	SLEEP
	JR motorwaiting100
  motornotbusy100:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while104:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 570.0 endwhile104
  whilebody104:
    MOVEF_F 70.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB106:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 570.0 whilebody104
  endwhile104:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB109:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer112
	DATA8 nos112
	DATA8 busy112
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer112 nos112
	JR_EQ8 0 nos112 motornotbusy112
  motorwaiting112:
	OUTPUT_TEST layer112 nos112 busy112
	JR_EQ8 busy112 0 motornotbusy112
	SLEEP
	JR motorwaiting112
  motornotbusy112:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while115:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf119
    DATA8 flag119
    DIVF F.1 2.0 tmpf119
    CP_EQF 0.0 2.0 flag119
    SELECTF flag119 0.0 tmpf119 F.0

    JR_GTEQF F.0 100.0 endwhile115
  whilebody115:
    WRITE32 ENDSUB_F_A3_0:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB120:
    WRITE32 ENDSUB_F_A2_0:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB121:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB122:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf126
    DATA8 flag126
    DIVF F.1 2.0 tmpf126
    CP_EQF 0.0 2.0 flag126
    SELECTF flag126 0.0 tmpf126 F.0

    JR_LTF F.0 100.0 whilebody115
  endwhile115:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 750.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB128:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else130_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB131:
    ADDF VGV_C 1.0 VGV_C
    JR endif130
  else130_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer133
	DATA8 nos133
	DATA8 busy133
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer133 nos133
	JR_EQ8 0 nos133 motornotbusy133
  motorwaiting133:
	OUTPUT_TEST layer133 nos133 busy133
	JR_EQ8 busy133 0 motornotbusy133
	SLEEP
	JR motorwaiting133
  motornotbusy133:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer134
	DATA8 nos134
	DATA8 busy134
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer134 nos134
	JR_EQ8 0 nos134 motornotbusy134
  motorwaiting134:
	OUTPUT_TEST layer134 nos134 busy134
	JR_EQ8 busy134 0 motornotbusy134
	SLEEP
	JR motorwaiting134
  motornotbusy134:
    WRITE32 ENDSUB_F_A3_0:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB135:
    WRITE32 ENDSUB_F_A2_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB136:
  while137:
    JR_LTEQF VGV_S2 15.0 endwhile137
  whilebody137:
    WRITE32 ENDSUB_F_A3_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB138:
    WRITE32 ENDSUB_F_A2_0:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB139:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    JR_GTF VGV_S2 15.0 whilebody137
  endwhile137:
    WRITE32 ENDSUB_F_A3_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB141:
    WRITE32 ENDSUB_F_A2_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB142:
  while143:
    JR_GTEQF VGV_S2 55.0 endwhile143
  whilebody143:
    WRITE32 ENDSUB_F_A3_0:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB144:
    WRITE32 ENDSUB_F_A2_0:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB145:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    JR_LTF VGV_S2 55.0 whilebody143
  endwhile143:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 190.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB147:
  else130_2:
  endif130:
    JR endif96
  else96_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB148:
    WRITE32 ENDSUB_F_A2_0:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB149:
  while150:
    JR_LTEQF VGV_S3 10.0 and152
    JR_GTF VGV_S2 10.0 or151
  and152:
    JR_GTEQF VGV_S3 10.0 endwhile150
    JR_GTEQF VGV_S2 10.0 endwhile150
  or151:
  whilebody150:
    WRITE32 ENDSUB_F_A3_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB153:
    WRITE32 ENDSUB_F_A2_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB154:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB155:
    JR_LTEQF VGV_S3 10.0 and156
    JR_GTF VGV_S2 10.0 whilebody150
  and156:
    JR_GTEQF VGV_S3 10.0 and157
    JR_LTF VGV_S2 10.0 whilebody150
  and157:
  endwhile150:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer159
	DATA8 nos159
	DATA8 busy159
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer159 nos159
	JR_EQ8 0 nos159 motornotbusy159
  motorwaiting159:
	OUTPUT_TEST layer159 nos159 busy159
	JR_EQ8 busy159 0 motornotbusy159
	SLEEP
	JR motorwaiting159
  motornotbusy159:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer160
	DATA8 nos160
	DATA8 busy160
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer160 nos160
	JR_EQ8 0 nos160 motornotbusy160
  motorwaiting160:
	OUTPUT_TEST layer160 nos160 busy160
	JR_EQ8 busy160 0 motornotbusy160
	SLEEP
	JR motorwaiting160
  motornotbusy160:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds163
	MOVEF_32 500.0 milliseconds163
	DATA32 timer163
	TIMER_WAIT milliseconds163 timer163
	TIMER_READY timer163
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB165:
    CALL MOTOR.RESETCOUNT 'bc'
  while167:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 530.0 endwhile167
  whilebody167:
    MOVEF_F 70.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB169:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 530.0 whilebody167
  endwhile167:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else173_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB174:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer175
	DATA8 nos175
	DATA8 busy175
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer175 nos175
	JR_EQ8 0 nos175 motornotbusy175
  motorwaiting175:
	OUTPUT_TEST layer175 nos175 busy175
	JR_EQ8 busy175 0 motornotbusy175
	SLEEP
	JR motorwaiting175
  motornotbusy175:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB177:
    WRITE32 ENDSUB_F_A2_0:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB178:
  while179:
    JR_LTEQF VGV_S3 15.0 endwhile179
  whilebody179:
    WRITE32 ENDSUB_F_A3_0:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB180:
    WRITE32 ENDSUB_F_A2_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB181:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody179
  endwhile179:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB184:
    WRITE32 ENDSUB_F_A2_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB185:
  while186:
    JR_GTEQF VGV_S3 35.0 endwhile186
  whilebody186:
    WRITE32 ENDSUB_F_A3_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB187:
    WRITE32 ENDSUB_F_A2_0:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB188:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody186
  endwhile186:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB192:
    WRITE32 ENDSUB_F_A2_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB193:
  while194:
    JR_LTEQF VGV_S3 10.0 and196
    JR_GTF VGV_S2 10.0 or195
  and196:
    JR_GTEQF VGV_S3 10.0 endwhile194
    JR_GTEQF VGV_S2 10.0 endwhile194
  or195:
  whilebody194:
    WRITE32 ENDSUB_F_A3_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB197:
    WRITE32 ENDSUB_F_A2_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB198:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB199:
    JR_LTEQF VGV_S3 10.0 and200
    JR_GTF VGV_S2 10.0 whilebody194
  and200:
    JR_GTEQF VGV_S3 10.0 and201
    JR_LTF VGV_S2 10.0 whilebody194
  and201:
  endwhile194:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB203:
    ADDF VGV_C 1.0 VGV_C
    JR endif173
  else173_1:
    DATA32 tmp205
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp205
    JR_NEQ32 0 tmp205 alreadylaunched205
    OBJECT_START TF_VIDVIG_0
  alreadylaunched205:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB206:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer207
	DATA8 nos207
	DATA8 busy207
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer207 nos207
	JR_EQ8 0 nos207 motornotbusy207
  motorwaiting207:
	OUTPUT_TEST layer207 nos207 busy207
	JR_EQ8 busy207 0 motornotbusy207
	SLEEP
	JR motorwaiting207
  motornotbusy207:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer208
	DATA8 nos208
	DATA8 busy208
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer208 nos208
	JR_EQ8 0 nos208 motornotbusy208
  motorwaiting208:
	OUTPUT_TEST layer208 nos208 busy208
	JR_EQ8 busy208 0 motornotbusy208
	SLEEP
	JR motorwaiting208
  motornotbusy208:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB210:
    WRITE32 ENDSUB_F_A2_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB211:
  while212:
    JR_LTEQF VGV_S3 10.0 and214
    JR_GTF VGV_S2 10.0 or213
  and214:
    JR_GTEQF VGV_S3 10.0 endwhile212
    JR_GTEQF VGV_S2 10.0 endwhile212
  or213:
  whilebody212:
    WRITE32 ENDSUB_F_A3_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB215:
    WRITE32 ENDSUB_F_A2_0:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB216:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB217:
    JR_LTEQF VGV_S3 10.0 and218
    JR_GTF VGV_S2 10.0 whilebody212
  and218:
    JR_GTEQF VGV_S3 10.0 and219
    JR_LTF VGV_S2 10.0 whilebody212
  and219:
  endwhile212:
    CALL MOTOR.STOP 'bc' 'true'
  else173_2:
  endif173:
  else96_2:
  endif96:
    JR_NEQF VGV_COLOR 4.0 else221_1
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 50.0 'true'

	DATA8 layer222
	DATA8 nos222
	DATA8 busy222
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer222 nos222
	JR_EQ8 0 nos222 motornotbusy222
  motorwaiting222:
	OUTPUT_TEST layer222 nos222 busy222
	JR_EQ8 busy222 0 motornotbusy222
	SLEEP
	JR motorwaiting222
  motornotbusy222:
  else221_1:
  endif221:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB223:
    JR_LTF VGV_H 21.0 or225
    JR_LTEQF VGV_H 100.0 else224_1
  or225:
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif224
  else224_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else224_2:
  endif224:
    JR_NEQF VGV_COLOR 4.0 else228_1
    JR endif228
  else228_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 10.0 'true'

	DATA8 layer229
	DATA8 nos229
	DATA8 busy229
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer229 nos229
	JR_EQ8 0 nos229 motornotbusy229
  motorwaiting229:
	OUTPUT_TEST layer229 nos229 busy229
	JR_EQ8 busy229 0 motornotbusy229
	SLEEP
	JR motorwaiting229
  motornotbusy229:
  else228_2:
  endif228:
    JR_NEQF VGV_COLOR2 4.0 else230_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer231
	DATA8 nos231
	DATA8 busy231
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer231 nos231
	JR_EQ8 0 nos231 motornotbusy231
  motorwaiting231:
	OUTPUT_TEST layer231 nos231 busy231
	JR_EQ8 busy231 0 motornotbusy231
	SLEEP
	JR motorwaiting231
  motornotbusy231:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB232:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif230
  else230_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB234:
    CALL MOTOR.RESETCOUNT 'bc'
  while236:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 210.0 endwhile236
  whilebody236:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB238:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 210.0 whilebody236
  endwhile236:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 250.0 'true'

	DATA8 layer241
	DATA8 nos241
	DATA8 busy241
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer241 nos241
	JR_EQ8 0 nos241 motornotbusy241
  motorwaiting241:
	OUTPUT_TEST layer241 nos241 busy241
	JR_EQ8 busy241 0 motornotbusy241
	SLEEP
	JR motorwaiting241
  motornotbusy241:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds243
	MOVEF_32 100.0 milliseconds243
	DATA32 timer243
	TIMER_WAIT milliseconds243 timer243
	TIMER_READY timer243
    CALL MOTOR.SCHEDULESYNC 'BC' -30.0 0.0 50.0 'true'

	DATA8 layer244
	DATA8 nos244
	DATA8 busy244
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer244 nos244
	JR_EQ8 0 nos244 motornotbusy244
  motorwaiting244:
	OUTPUT_TEST layer244 nos244 busy244
	JR_EQ8 busy244 0 motornotbusy244
	SLEEP
	JR motorwaiting244
  motornotbusy244:
    CALL MOTOR.SCHEDULESYNC 'BC' 0.0 -30.0 50.0 'true'

	DATA8 layer245
	DATA8 nos245
	DATA8 busy245
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer245 nos245
	JR_EQ8 0 nos245 motornotbusy245
  motorwaiting245:
	OUTPUT_TEST layer245 nos245 busy245
	JR_EQ8 busy245 0 motornotbusy245
	SLEEP
	JR motorwaiting245
  motornotbusy245:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB246:
    MOVEF_F 1230.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf247
    DATA8 flag247
    DIVF 360.0 VGV_L tmpf247
    CP_EQF 0.0 VGV_L flag247
    SELECTF flag247 0.0 tmpf247 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while251:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf255
    DATA8 flag255
    DIVF F.1 2.0 tmpf255
    CP_EQF 0.0 2.0 flag255
    SELECTF flag255 0.0 tmpf255 F.0

    JR_GTEQF F.0 VGV_X endwhile251
  whilebody251:
    WRITE32 ENDSUB_F_A3_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB256:
    WRITE32 ENDSUB_F_A2_0:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB257:
    JR_GTEQF VGV_SPEED 90.0 else258_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else258_1:
  endif258:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB260:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf264
    DATA8 flag264
    DIVF F.1 2.0 tmpf264
    CP_EQF 0.0 2.0 flag264
    SELECTF flag264 0.0 tmpf264 F.0

    JR_LTF F.0 VGV_X whilebody251
  endwhile251:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB266:
    JR_NEQF VGV_C 1.0 else267_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB268:
    JR endif267
  else267_1:
    JR_NEQF VGV_C 0.0 else267_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB269:
  else267_2:
  endif267:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB270:
    WRITE32 ENDSUB_F_A3_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB271:
    WRITE32 ENDSUB_F_A2_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB272:
  while273:
    JR_LTEQF VGV_S3 10.0 and275
    JR_GTF VGV_S2 10.0 or274
  and275:
    JR_GTEQF VGV_S3 10.0 endwhile273
    JR_GTEQF VGV_S2 10.0 endwhile273
  or274:
  whilebody273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB276:
    WRITE32 ENDSUB_F_A2_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB277:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB278:
    JR_LTEQF VGV_S3 10.0 and279
    JR_GTF VGV_S2 10.0 whilebody273
  and279:
    JR_GTEQF VGV_S3 10.0 and280
    JR_LTF VGV_S2 10.0 whilebody273
  and280:
  endwhile273:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    WRITE32 ENDSUB_F_A3_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB283:
    WRITE32 ENDSUB_F_A2_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB284:
  while285:
    JR_LTEQF VGV_S3 10.0 and287
    JR_GTF VGV_S2 10.0 or286
  and287:
    JR_GTEQF VGV_S3 10.0 endwhile285
    JR_GTEQF VGV_S2 10.0 endwhile285
  or286:
  whilebody285:
    WRITE32 ENDSUB_F_A3_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB288:
    WRITE32 ENDSUB_F_A2_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB289:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB290:
    JR_LTEQF VGV_S3 10.0 and291
    JR_GTF VGV_S2 10.0 whilebody285
  and291:
    JR_GTEQF VGV_S3 10.0 and292
    JR_LTF VGV_S2 10.0 whilebody285
  and292:
  endwhile285:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB294:
    CALL MOTOR.RESETCOUNT 'bc'
  while296:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf300
    DATA8 flag300
    DIVF F.1 2.0 tmpf300
    CP_EQF 0.0 2.0 flag300
    SELECTF flag300 0.0 tmpf300 F.0

    JR_GTEQF F.0 160.0 endwhile296
  whilebody296:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB301:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf305
    DATA8 flag305
    DIVF F.1 2.0 tmpf305
    CP_EQF 0.0 2.0 flag305
    SELECTF flag305 0.0 tmpf305 F.0

    JR_LTF F.0 160.0 whilebody296
  endwhile296:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer307
	DATA8 nos307
	DATA8 busy307
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer307 nos307
	JR_EQ8 0 nos307 motornotbusy307
  motorwaiting307:
	OUTPUT_TEST layer307 nos307 busy307
	JR_EQ8 busy307 0 motornotbusy307
	SLEEP
	JR motorwaiting307
  motornotbusy307:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds309
	MOVEF_32 500.0 milliseconds309
	DATA32 timer309
	TIMER_WAIT milliseconds309 timer309
	TIMER_READY timer309
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer311
	DATA8 nos311
	DATA8 busy311
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer311 nos311
	JR_EQ8 0 nos311 motornotbusy311
  motorwaiting311:
	OUTPUT_TEST layer311 nos311 busy311
	JR_EQ8 busy311 0 motornotbusy311
	SLEEP
	JR motorwaiting311
  motornotbusy311:
    DATA32 tmp312
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp312
    JR_NEQ32 0 tmp312 alreadylaunched312
    OBJECT_START TF_VIDVIG_0
  alreadylaunched312:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB313:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB314:
    ADDF VGV_C 1.0 VGV_C
  else230_2:
  endif230:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 40.0 'true'

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB317:
    JR_GTF VGV_H 100.0 or319
    JR_LTF VGV_H 0.0 else318_1
    JR_GTF VGV_H 32.0 else318_1
  or319:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif318
  else318_1:
    JR_GTEQF VGV_H 120.0 else318_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif318
  else318_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else318_3:
  endif318:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    JR_NEQF VGV_COLOR3 4.0 else324_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB326:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else328_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB329:
    CALL MOTOR.RESETCOUNT 'bc'
  while331:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf335
    DATA8 flag335
    DIVF F.1 2.0 tmpf335
    CP_EQF 0.0 2.0 flag335
    SELECTF flag335 0.0 tmpf335 F.0

    JR_GTEQF F.0 210.0 endwhile331
  whilebody331:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB336:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf340
    DATA8 flag340
    DIVF F.1 2.0 tmpf340
    CP_EQF 0.0 2.0 flag340
    SELECTF flag340 0.0 tmpf340 F.0

    JR_LTF F.0 210.0 whilebody331
  endwhile331:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer342
	DATA8 nos342
	DATA8 busy342
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer342 nos342
	JR_EQ8 0 nos342 motornotbusy342
  motorwaiting342:
	OUTPUT_TEST layer342 nos342 busy342
	JR_EQ8 busy342 0 motornotbusy342
	SLEEP
	JR motorwaiting342
  motornotbusy342:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds344
	MOVEF_32 500.0 milliseconds344
	DATA32 timer344
	TIMER_WAIT milliseconds344 timer344
	TIMER_READY timer344
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB346:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf347
    DATA8 flag347
    DIVF 360.0 VGV_L tmpf347
    CP_EQF 0.0 VGV_L flag347
    SELECTF flag347 0.0 tmpf347 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while350:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf354
    DATA8 flag354
    DIVF F.1 2.0 tmpf354
    CP_EQF 0.0 2.0 flag354
    SELECTF flag354 0.0 tmpf354 F.0

    JR_GTEQF F.0 VGV_X endwhile350
  whilebody350:
    WRITE32 ENDSUB_F_A3_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB355:
    WRITE32 ENDSUB_F_A2_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB356:
    JR_GTEQF VGV_SPEED 90.0 else357_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else357_1:
  endif357:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB359:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf363
    DATA8 flag363
    DIVF F.1 2.0 tmpf363
    CP_EQF 0.0 2.0 flag363
    SELECTF flag363 0.0 tmpf363 F.0

    JR_LTF F.0 VGV_X whilebody350
  endwhile350:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB365:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB366:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB367:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB369:
    CALL MOTOR.RESETCOUNT 'bc'
  while371:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf375
    DATA8 flag375
    DIVF F.1 2.0 tmpf375
    CP_EQF 0.0 2.0 flag375
    SELECTF flag375 0.0 tmpf375 F.0

    JR_GTEQF F.0 210.0 endwhile371
  whilebody371:
    MOVEF_F 40.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB376:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf380
    DATA8 flag380
    DIVF F.1 2.0 tmpf380
    CP_EQF 0.0 2.0 flag380
    SELECTF flag380 0.0 tmpf380 F.0

    JR_LTF F.0 210.0 whilebody371
  endwhile371:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 130.0 'true'

	DATA8 layer382
	DATA8 nos382
	DATA8 busy382
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer382 nos382
	JR_EQ8 0 nos382 motornotbusy382
  motorwaiting382:
	OUTPUT_TEST layer382 nos382 busy382
	JR_EQ8 busy382 0 motornotbusy382
	SLEEP
	JR motorwaiting382
  motornotbusy382:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds384
	MOVEF_32 500.0 milliseconds384
	DATA32 timer384
	TIMER_WAIT milliseconds384 timer384
	TIMER_READY timer384
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB386:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB387:
    WRITE32 ENDSUB_F_PR_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB388:
    CALL MOTOR.RESETCOUNT 'bc'
  while390:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf394
    DATA8 flag394
    DIVF F.1 2.0 tmpf394
    CP_EQF 0.0 2.0 flag394
    SELECTF flag394 0.0 tmpf394 F.0

    JR_GTEQF F.0 400.0 endwhile390
  whilebody390:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB395:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf399
    DATA8 flag399
    DIVF F.1 2.0 tmpf399
    CP_EQF 0.0 2.0 flag399
    SELECTF flag399 0.0 tmpf399 F.0

    JR_LTF F.0 400.0 whilebody390
  endwhile390:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds402
	MOVEF_32 500.0 milliseconds402
	DATA32 timer402
	TIMER_WAIT milliseconds402 timer402
	TIMER_READY timer402
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB404:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf405
    DATA8 flag405
    DIVF 360.0 VGV_L tmpf405
    CP_EQF 0.0 VGV_L flag405
    SELECTF flag405 0.0 tmpf405 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while408:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf412
    DATA8 flag412
    DIVF F.1 2.0 tmpf412
    CP_EQF 0.0 2.0 flag412
    SELECTF flag412 0.0 tmpf412 F.0

    JR_GTEQF F.0 VGV_X endwhile408
  whilebody408:
    WRITE32 ENDSUB_F_A3_0:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB413:
    WRITE32 ENDSUB_F_A2_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB414:
    JR_GTEQF VGV_SPEED 90.0 else415_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else415_1:
  endif415:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB417:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf421
    DATA8 flag421
    DIVF F.1 2.0 tmpf421
    CP_EQF 0.0 2.0 flag421
    SELECTF flag421 0.0 tmpf421 F.0

    JR_LTF F.0 VGV_X whilebody408
  endwhile408:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB423:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB424:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB425:
    WRITE32 ENDSUB_F_A2_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB426:
  while427:
    JR_LTEQF VGV_S3 15.0 and429
    JR_GTF VGV_S2 15.0 or428
  and429:
    JR_GTEQF VGV_S3 15.0 endwhile427
    JR_GTEQF VGV_S2 15.0 endwhile427
  or428:
  whilebody427:
    WRITE32 ENDSUB_F_A3_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB430:
    WRITE32 ENDSUB_F_A2_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB431:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB432:
    JR_LTEQF VGV_S3 15.0 and433
    JR_GTF VGV_S2 15.0 whilebody427
  and433:
    JR_GTEQF VGV_S3 15.0 and434
    JR_LTF VGV_S2 15.0 whilebody427
  and434:
  endwhile427:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer436
	DATA8 nos436
	DATA8 busy436
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer436 nos436
	JR_EQ8 0 nos436 motornotbusy436
  motorwaiting436:
	OUTPUT_TEST layer436 nos436 busy436
	JR_EQ8 busy436 0 motornotbusy436
	SLEEP
	JR motorwaiting436
  motornotbusy436:
    WRITE32 ENDSUB_F_A3_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB437:
    WRITE32 ENDSUB_F_A2_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB438:
  while439:
    JR_GTEQF VGV_S2 60.0 endwhile439
  whilebody439:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody439
  endwhile439:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB442:
    WRITE32 ENDSUB_F_A2_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB443:
  while444:
    JR_LTEQF VGV_S3 10.0 and446
    JR_GTF VGV_S2 10.0 or445
  and446:
    JR_GTEQF VGV_S3 10.0 endwhile444
    JR_GTEQF VGV_S2 10.0 endwhile444
  or445:
  whilebody444:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB447:
    JR_LTEQF VGV_S3 10.0 and448
    JR_GTF VGV_S2 10.0 whilebody444
  and448:
    JR_GTEQF VGV_S3 10.0 and449
    JR_LTF VGV_S2 10.0 whilebody444
  and449:
  endwhile444:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB451:
    CALL MOTOR.RESETCOUNT 'bc'
  while453:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf457
    DATA8 flag457
    DIVF F.1 2.0 tmpf457
    CP_EQF 0.0 2.0 flag457
    SELECTF flag457 0.0 tmpf457 F.0

    JR_GTEQF F.0 160.0 endwhile453
  whilebody453:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB458:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf462
    DATA8 flag462
    DIVF F.1 2.0 tmpf462
    CP_EQF 0.0 2.0 flag462
    SELECTF flag462 0.0 tmpf462 F.0

    JR_LTF F.0 160.0 whilebody453
  endwhile453:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer464
	DATA8 nos464
	DATA8 busy464
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer464 nos464
	JR_EQ8 0 nos464 motornotbusy464
  motorwaiting464:
	OUTPUT_TEST layer464 nos464 busy464
	JR_EQ8 busy464 0 motornotbusy464
	SLEEP
	JR motorwaiting464
  motornotbusy464:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds466
	MOVEF_32 500.0 milliseconds466
	DATA32 timer466
	TIMER_WAIT milliseconds466 timer466
	TIMER_READY timer466
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB468:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB469:
    WRITE32 ENDSUB_F_PR_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB470:
    CALL MOTOR.RESETCOUNT 'bc'
  while472:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf476
    DATA8 flag476
    DIVF F.1 2.0 tmpf476
    CP_EQF 0.0 2.0 flag476
    SELECTF flag476 0.0 tmpf476 F.0

    JR_GTEQF F.0 100.0 endwhile472
  whilebody472:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB477:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf481
    DATA8 flag481
    DIVF F.1 2.0 tmpf481
    CP_EQF 0.0 2.0 flag481
    SELECTF flag481 0.0 tmpf481 F.0

    JR_LTF F.0 100.0 whilebody472
  endwhile472:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer483
	DATA8 nos483
	DATA8 busy483
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer483 nos483
	JR_EQ8 0 nos483 motornotbusy483
  motorwaiting483:
	OUTPUT_TEST layer483 nos483 busy483
	JR_EQ8 busy483 0 motornotbusy483
	SLEEP
	JR motorwaiting483
  motornotbusy483:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds485
	MOVEF_32 500.0 milliseconds485
	DATA32 timer485
	TIMER_WAIT milliseconds485 timer485
	TIMER_READY timer485
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB487:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf488
    DATA8 flag488
    DIVF 360.0 VGV_L tmpf488
    CP_EQF 0.0 VGV_L flag488
    SELECTF flag488 0.0 tmpf488 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while491:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf495
    DATA8 flag495
    DIVF F.1 2.0 tmpf495
    CP_EQF 0.0 2.0 flag495
    SELECTF flag495 0.0 tmpf495 F.0

    JR_GTEQF F.0 VGV_X endwhile491
  whilebody491:
    WRITE32 ENDSUB_F_A3_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB496:
    WRITE32 ENDSUB_F_A2_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB497:
    JR_GTEQF VGV_SPEED 90.0 else498_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else498_1:
  endif498:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB500:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf504
    DATA8 flag504
    DIVF F.1 2.0 tmpf504
    CP_EQF 0.0 2.0 flag504
    SELECTF flag504 0.0 tmpf504 F.0

    JR_LTF F.0 VGV_X whilebody491
  endwhile491:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB506:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB507:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB508:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB510:
    CALL MOTOR.RESETCOUNT 'bc'
  while512:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf516
    DATA8 flag516
    DIVF F.1 2.0 tmpf516
    CP_EQF 0.0 2.0 flag516
    SELECTF flag516 0.0 tmpf516 F.0

    JR_GTEQF F.0 100.0 endwhile512
  whilebody512:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB517:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf521
    DATA8 flag521
    DIVF F.1 2.0 tmpf521
    CP_EQF 0.0 2.0 flag521
    SELECTF flag521 0.0 tmpf521 F.0

    JR_LTF F.0 100.0 whilebody512
  endwhile512:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 70.0 'true'

	DATA8 layer523
	DATA8 nos523
	DATA8 busy523
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer523 nos523
	JR_EQ8 0 nos523 motornotbusy523
  motorwaiting523:
	OUTPUT_TEST layer523 nos523 busy523
	JR_EQ8 busy523 0 motornotbusy523
	SLEEP
	JR motorwaiting523
  motornotbusy523:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds525
	MOVEF_32 500.0 milliseconds525
	DATA32 timer525
	TIMER_WAIT milliseconds525 timer525
	TIMER_READY timer525
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB527:
    MOVEF_F 550.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB528:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB529:
  else328_1:
  endif328:
  else324_1:
  endif324:
    JR_NEQF VGV_COLOR3 5.0 else530_1
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 25.0 'true'

	DATA8 layer531
	DATA8 nos531
	DATA8 busy531
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer531 nos531
	JR_EQ8 0 nos531 motornotbusy531
  motorwaiting531:
	OUTPUT_TEST layer531 nos531 busy531
	JR_EQ8 busy531 0 motornotbusy531
	SLEEP
	JR motorwaiting531
  motornotbusy531:
    WRITE32 ENDSUB_F_PR_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB532:
    CALL MOTOR.RESETCOUNT 'bc'
  while534:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf538
    DATA8 flag538
    DIVF F.1 2.0 tmpf538
    CP_EQF 0.0 2.0 flag538
    SELECTF flag538 0.0 tmpf538 F.0

    JR_GTEQF F.0 180.0 endwhile534
  whilebody534:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB539:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf543
    DATA8 flag543
    DIVF F.1 2.0 tmpf543
    CP_EQF 0.0 2.0 flag543
    SELECTF flag543 0.0 tmpf543 F.0

    JR_LTF F.0 180.0 whilebody534
  endwhile534:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer545
	DATA8 nos545
	DATA8 busy545
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer545 nos545
	JR_EQ8 0 nos545 motornotbusy545
  motorwaiting545:
	OUTPUT_TEST layer545 nos545 busy545
	JR_EQ8 busy545 0 motornotbusy545
	SLEEP
	JR motorwaiting545
  motornotbusy545:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds547
	MOVEF_32 500.0 milliseconds547
	DATA32 timer547
	TIMER_WAIT milliseconds547 timer547
	TIMER_READY timer547
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB549:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf550
    DATA8 flag550
    DIVF 360.0 VGV_L tmpf550
    CP_EQF 0.0 VGV_L flag550
    SELECTF flag550 0.0 tmpf550 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while553:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf557
    DATA8 flag557
    DIVF F.1 2.0 tmpf557
    CP_EQF 0.0 2.0 flag557
    SELECTF flag557 0.0 tmpf557 F.0

    JR_GTEQF F.0 VGV_X endwhile553
  whilebody553:
    WRITE32 ENDSUB_F_A3_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB558:
    WRITE32 ENDSUB_F_A2_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB559:
    JR_GTEQF VGV_SPEED 90.0 else560_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else560_1:
  endif560:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB562:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf566
    DATA8 flag566
    DIVF F.1 2.0 tmpf566
    CP_EQF 0.0 2.0 flag566
    SELECTF flag566 0.0 tmpf566 F.0

    JR_LTF F.0 VGV_X whilebody553
  endwhile553:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB568:
    JR_NEQF VGV_C 1.0 else569_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB570:
    JR endif569
  else569_1:
    JR_NEQF VGV_C 0.0 else569_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB571:
    JR endif569
  else569_2:
    JR_NEQF VGV_C 2.0 else569_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB572:
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB573:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds575
	MOVEF_32 100.0 milliseconds575
	DATA32 timer575
	TIMER_WAIT milliseconds575 timer575
	TIMER_READY timer575
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 59.0 'true'

	DATA8 layer576
	DATA8 nos576
	DATA8 busy576
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer576 nos576
	JR_EQ8 0 nos576 motornotbusy576
  motorwaiting576:
	OUTPUT_TEST layer576 nos576 busy576
	JR_EQ8 busy576 0 motornotbusy576
	SLEEP
	JR motorwaiting576
  motornotbusy576:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer578
	DATA8 nos578
	DATA8 busy578
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer578 nos578
	JR_EQ8 0 nos578 motornotbusy578
  motorwaiting578:
	OUTPUT_TEST layer578 nos578 busy578
	JR_EQ8 busy578 0 motornotbusy578
	SLEEP
	JR motorwaiting578
  motornotbusy578:
    WRITE32 ENDSUB_F_A3_0:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB579:
    WRITE32 ENDSUB_F_A2_0:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB580:
  while581:
    JR_LTEQF VGV_S2 15.0 endwhile581
  whilebody581:
    WRITE32 ENDSUB_F_A3_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB582:
    WRITE32 ENDSUB_F_A2_0:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB583:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody581
  endwhile581:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB586:
    WRITE32 ENDSUB_F_A2_0:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB587:
  while588:
    JR_GTEQF VGV_S2 55.0 endwhile588
  whilebody588:
    WRITE32 ENDSUB_F_A3_0:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB589:
    WRITE32 ENDSUB_F_A2_0:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB590:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody588
  endwhile588:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while594:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf598
    DATA8 flag598
    DIVF F.1 2.0 tmpf598
    CP_EQF 0.0 2.0 flag598
    SELECTF flag598 0.0 tmpf598 F.0

    JR_GTEQF F.0 70.0 endwhile594
  whilebody594:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB599:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf603
    DATA8 flag603
    DIVF F.1 2.0 tmpf603
    CP_EQF 0.0 2.0 flag603
    SELECTF flag603 0.0 tmpf603 F.0

    JR_LTF F.0 70.0 whilebody594
  endwhile594:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 150.0 'true'

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds607
	MOVEF_32 500.0 milliseconds607
	DATA32 timer607
	TIMER_WAIT milliseconds607 timer607
	TIMER_READY timer607
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB609:
    MOVEF_F 700.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB610:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB612:
  else569_3:
  endif569:
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB613:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 59.0 'true'

	DATA8 layer615
	DATA8 nos615
	DATA8 busy615
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer615 nos615
	JR_EQ8 0 nos615 motornotbusy615
  motorwaiting615:
	OUTPUT_TEST layer615 nos615 busy615
	JR_EQ8 busy615 0 motornotbusy615
	SLEEP
	JR motorwaiting615
  motornotbusy615:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer617
	DATA8 nos617
	DATA8 busy617
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer617 nos617
	JR_EQ8 0 nos617 motornotbusy617
  motorwaiting617:
	OUTPUT_TEST layer617 nos617 busy617
	JR_EQ8 busy617 0 motornotbusy617
	SLEEP
	JR motorwaiting617
  motornotbusy617:
    WRITE32 ENDSUB_F_A3_0:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB618:
    WRITE32 ENDSUB_F_A2_0:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB619:
  while620:
    JR_LTEQF VGV_S2 15.0 endwhile620
  whilebody620:
    WRITE32 ENDSUB_F_A3_0:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB621:
    WRITE32 ENDSUB_F_A2_0:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB622:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody620
  endwhile620:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB625:
    WRITE32 ENDSUB_F_A2_0:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB626:
  while627:
    JR_GTEQF VGV_S2 55.0 endwhile627
  whilebody627:
    WRITE32 ENDSUB_F_A3_0:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB628:
    WRITE32 ENDSUB_F_A2_0:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB629:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody627
  endwhile627:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while633:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf637
    DATA8 flag637
    DIVF F.1 2.0 tmpf637
    CP_EQF 0.0 2.0 flag637
    SELECTF flag637 0.0 tmpf637 F.0

    JR_GTEQF F.0 10.0 endwhile633
  whilebody633:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB638:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf642
    DATA8 flag642
    DIVF F.1 2.0 tmpf642
    CP_EQF 0.0 2.0 flag642
    SELECTF flag642 0.0 tmpf642 F.0

    JR_LTF F.0 10.0 whilebody633
  endwhile633:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer643
	DATA8 nos643
	DATA8 busy643
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer643 nos643
	JR_EQ8 0 nos643 motornotbusy643
  motorwaiting643:
	OUTPUT_TEST layer643 nos643 busy643
	JR_EQ8 busy643 0 motornotbusy643
	SLEEP
	JR motorwaiting643
  motornotbusy643:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds646
	MOVEF_32 500.0 milliseconds646
	DATA32 timer646
	TIMER_WAIT milliseconds646 timer646
	TIMER_READY timer646
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB648:
    DATA32 tmp649
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp649
    JR_NEQ32 0 tmp649 alreadylaunched649
    OBJECT_START TF_VIDVIG_0
  alreadylaunched649:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB650:
    ADDF VGV_C 1.0 VGV_C
  else530_1:
  endif530:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 40.0 'true'

	DATA8 layer652
	DATA8 nos652
	DATA8 busy652
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer652 nos652
	JR_EQ8 0 nos652 motornotbusy652
  motorwaiting652:
	OUTPUT_TEST layer652 nos652 busy652
	JR_EQ8 busy652 0 motornotbusy652
	SLEEP
	JR motorwaiting652
  motornotbusy652:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB653:
    JR_GTEQF VGV_H 25.0 else654_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif654
  else654_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else654_2:
  endif654:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer657
	DATA8 nos657
	DATA8 busy657
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer657 nos657
	JR_EQ8 0 nos657 motornotbusy657
  motorwaiting657:
	OUTPUT_TEST layer657 nos657 busy657
	JR_EQ8 busy657 0 motornotbusy657
	SLEEP
	JR motorwaiting657
  motornotbusy657:
    JR_NEQF VGV_COLOR4 4.0 else658_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB660:
    JR_NEQF VGV_C 1.0 else661_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB662:
    CALL MOTOR.RESETCOUNT 'bc'
  while664:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf668
    DATA8 flag668
    DIVF F.1 2.0 tmpf668
    CP_EQF 0.0 2.0 flag668
    SELECTF flag668 0.0 tmpf668 F.0

    JR_GTEQF F.0 210.0 endwhile664
  whilebody664:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB669:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf673
    DATA8 flag673
    DIVF F.1 2.0 tmpf673
    CP_EQF 0.0 2.0 flag673
    SELECTF flag673 0.0 tmpf673 F.0

    JR_LTF F.0 210.0 whilebody664
  endwhile664:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer675
	DATA8 nos675
	DATA8 busy675
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer675 nos675
	JR_EQ8 0 nos675 motornotbusy675
  motorwaiting675:
	OUTPUT_TEST layer675 nos675 busy675
	JR_EQ8 busy675 0 motornotbusy675
	SLEEP
	JR motorwaiting675
  motornotbusy675:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds677
	MOVEF_32 500.0 milliseconds677
	DATA32 timer677
	TIMER_WAIT milliseconds677 timer677
	TIMER_READY timer677
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB679:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf680
    DATA8 flag680
    DIVF 360.0 VGV_L tmpf680
    CP_EQF 0.0 VGV_L flag680
    SELECTF flag680 0.0 tmpf680 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while683:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf687
    DATA8 flag687
    DIVF F.1 2.0 tmpf687
    CP_EQF 0.0 2.0 flag687
    SELECTF flag687 0.0 tmpf687 F.0

    JR_GTEQF F.0 VGV_X endwhile683
  whilebody683:
    WRITE32 ENDSUB_F_A3_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB688:
    WRITE32 ENDSUB_F_A2_0:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB689:
    JR_GTEQF VGV_SPEED 90.0 else690_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else690_1:
  endif690:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB692:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf696
    DATA8 flag696
    DIVF F.1 2.0 tmpf696
    CP_EQF 0.0 2.0 flag696
    SELECTF flag696 0.0 tmpf696 F.0

    JR_LTF F.0 VGV_X whilebody683
  endwhile683:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB698:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB699:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB700:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer702
	DATA8 nos702
	DATA8 busy702
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer702 nos702
	JR_EQ8 0 nos702 motornotbusy702
  motorwaiting702:
	OUTPUT_TEST layer702 nos702 busy702
	JR_EQ8 busy702 0 motornotbusy702
	SLEEP
	JR motorwaiting702
  motornotbusy702:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB703:
    WRITE32 ENDSUB_F_PR_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB704:
    CALL MOTOR.RESETCOUNT 'bc'
  while706:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf710
    DATA8 flag710
    DIVF F.1 2.0 tmpf710
    CP_EQF 0.0 2.0 flag710
    SELECTF flag710 0.0 tmpf710 F.0

    JR_GTEQF F.0 110.0 endwhile706
  whilebody706:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB711:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf715
    DATA8 flag715
    DIVF F.1 2.0 tmpf715
    CP_EQF 0.0 2.0 flag715
    SELECTF flag715 0.0 tmpf715 F.0

    JR_LTF F.0 110.0 whilebody706
  endwhile706:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer717
	DATA8 nos717
	DATA8 busy717
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer717 nos717
	JR_EQ8 0 nos717 motornotbusy717
  motorwaiting717:
	OUTPUT_TEST layer717 nos717 busy717
	JR_EQ8 busy717 0 motornotbusy717
	SLEEP
	JR motorwaiting717
  motornotbusy717:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds719
	MOVEF_32 500.0 milliseconds719
	DATA32 timer719
	TIMER_WAIT milliseconds719 timer719
	TIMER_READY timer719
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB721:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB722:
    WRITE32 ENDSUB_F_PR_0:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB723:
    CALL MOTOR.RESETCOUNT 'bc'
  while725:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf729
    DATA8 flag729
    DIVF F.1 2.0 tmpf729
    CP_EQF 0.0 2.0 flag729
    SELECTF flag729 0.0 tmpf729 F.0

    JR_GTEQF F.0 90.0 endwhile725
  whilebody725:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB730:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf734
    DATA8 flag734
    DIVF F.1 2.0 tmpf734
    CP_EQF 0.0 2.0 flag734
    SELECTF flag734 0.0 tmpf734 F.0

    JR_LTF F.0 90.0 whilebody725
  endwhile725:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer736
	DATA8 nos736
	DATA8 busy736
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer736 nos736
	JR_EQ8 0 nos736 motornotbusy736
  motorwaiting736:
	OUTPUT_TEST layer736 nos736 busy736
	JR_EQ8 busy736 0 motornotbusy736
	SLEEP
	JR motorwaiting736
  motornotbusy736:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds738
	MOVEF_32 500.0 milliseconds738
	DATA32 timer738
	TIMER_WAIT milliseconds738 timer738
	TIMER_READY timer738
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB740:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf741
    DATA8 flag741
    DIVF 360.0 VGV_L tmpf741
    CP_EQF 0.0 VGV_L flag741
    SELECTF flag741 0.0 tmpf741 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while744:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf748
    DATA8 flag748
    DIVF F.1 2.0 tmpf748
    CP_EQF 0.0 2.0 flag748
    SELECTF flag748 0.0 tmpf748 F.0

    JR_GTEQF F.0 VGV_X endwhile744
  whilebody744:
    WRITE32 ENDSUB_F_A3_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB749:
    WRITE32 ENDSUB_F_A2_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB750:
    JR_GTEQF VGV_SPEED 90.0 else751_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else751_1:
  endif751:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB753:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 2.0 tmpf757
    CP_EQF 0.0 2.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    JR_LTF F.0 VGV_X whilebody744
  endwhile744:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB759:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB760:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB761:
    WRITE32 ENDSUB_F_PR_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB762:
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while764:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf768
    DATA8 flag768
    DIVF F.1 2.0 tmpf768
    CP_EQF 0.0 2.0 flag768
    SELECTF flag768 0.0 tmpf768 F.0

    JR_GTEQF F.0 110.0 endwhile764
  whilebody764:
    WRITE32 ENDSUB_F_A3_0:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB769:
    WRITE32 ENDSUB_F_A2_0:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB770:
    JR_GTEQF VGV_SPEED 90.0 else771_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else771_1:
  endif771:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB773:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf777
    DATA8 flag777
    DIVF F.1 2.0 tmpf777
    CP_EQF 0.0 2.0 flag777
    SELECTF flag777 0.0 tmpf777 F.0

    JR_LTF F.0 110.0 whilebody764
  endwhile764:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 160.0 'true'

	DATA8 layer779
	DATA8 nos779
	DATA8 busy779
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer779 nos779
	JR_EQ8 0 nos779 motornotbusy779
  motorwaiting779:
	OUTPUT_TEST layer779 nos779 busy779
	JR_EQ8 busy779 0 motornotbusy779
	SLEEP
	JR motorwaiting779
  motornotbusy779:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds781
	MOVEF_32 500.0 milliseconds781
	DATA32 timer781
	TIMER_WAIT milliseconds781 timer781
	TIMER_READY timer781
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB783:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB784:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB785:
  else661_1:
  endif661:
  else658_1:
  endif658:
    JR_NEQF VGV_COLOR4 5.0 else786_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB787:
    CALL MOTOR.RESETCOUNT 'bc'
  while789:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf793
    DATA8 flag793
    DIVF F.1 2.0 tmpf793
    CP_EQF 0.0 2.0 flag793
    SELECTF flag793 0.0 tmpf793 F.0

    JR_GTEQF F.0 260.0 endwhile789
  whilebody789:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB794:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf798
    DATA8 flag798
    DIVF F.1 2.0 tmpf798
    CP_EQF 0.0 2.0 flag798
    SELECTF flag798 0.0 tmpf798 F.0

    JR_LTF F.0 260.0 whilebody789
  endwhile789:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer800
	DATA8 nos800
	DATA8 busy800
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer800 nos800
	JR_EQ8 0 nos800 motornotbusy800
  motorwaiting800:
	OUTPUT_TEST layer800 nos800 busy800
	JR_EQ8 busy800 0 motornotbusy800
	SLEEP
	JR motorwaiting800
  motornotbusy800:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds802
	MOVEF_32 500.0 milliseconds802
	DATA32 timer802
	TIMER_WAIT milliseconds802 timer802
	TIMER_READY timer802
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB804:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf805
    DATA8 flag805
    DIVF 360.0 VGV_L tmpf805
    CP_EQF 0.0 VGV_L flag805
    SELECTF flag805 0.0 tmpf805 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while808:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf812
    DATA8 flag812
    DIVF F.1 2.0 tmpf812
    CP_EQF 0.0 2.0 flag812
    SELECTF flag812 0.0 tmpf812 F.0

    JR_GTEQF F.0 VGV_X endwhile808
  whilebody808:
    WRITE32 ENDSUB_F_A3_0:CALLSUB813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB813:
    WRITE32 ENDSUB_F_A2_0:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB814:
    JR_GTEQF VGV_SPEED 90.0 else815_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else815_1:
  endif815:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB817:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf821
    DATA8 flag821
    DIVF F.1 2.0 tmpf821
    CP_EQF 0.0 2.0 flag821
    SELECTF flag821 0.0 tmpf821 F.0

    JR_LTF F.0 VGV_X whilebody808
  endwhile808:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB823:
    JR_NEQF VGV_C 1.0 else824_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB825:
    JR endif824
  else824_1:
    JR_NEQF VGV_C 0.0 else824_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB826:
    JR endif824
  else824_2:
    JR_NEQF VGV_C 2.0 else824_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB827:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB828:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB830:
    CALL MOTOR.RESETCOUNT 'bc'
  while832:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf836
    DATA8 flag836
    DIVF F.1 2.0 tmpf836
    CP_EQF 0.0 2.0 flag836
    SELECTF flag836 0.0 tmpf836 F.0

    JR_GTEQF F.0 150.0 endwhile832
  whilebody832:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB837:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf841
    DATA8 flag841
    DIVF F.1 2.0 tmpf841
    CP_EQF 0.0 2.0 flag841
    SELECTF flag841 0.0 tmpf841 F.0

    JR_LTF F.0 150.0 whilebody832
  endwhile832:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 150.0 'true'

	DATA8 layer843
	DATA8 nos843
	DATA8 busy843
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer843 nos843
	JR_EQ8 0 nos843 motornotbusy843
  motorwaiting843:
	OUTPUT_TEST layer843 nos843 busy843
	JR_EQ8 busy843 0 motornotbusy843
	SLEEP
	JR motorwaiting843
  motornotbusy843:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds845
	MOVEF_32 500.0 milliseconds845
	DATA32 timer845
	TIMER_WAIT milliseconds845 timer845
	TIMER_READY timer845
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB847:
    CALL MOTOR.RESETCOUNT 'bc'
  while849:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf853
    DATA8 flag853
    DIVF F.1 2.0 tmpf853
    CP_EQF 0.0 2.0 flag853
    SELECTF flag853 0.0 tmpf853 F.0

    JR_GTEQF F.0 100.0 endwhile849
  whilebody849:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB854:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf858
    DATA8 flag858
    DIVF F.1 2.0 tmpf858
    CP_EQF 0.0 2.0 flag858
    SELECTF flag858 0.0 tmpf858 F.0

    JR_LTF F.0 100.0 whilebody849
  endwhile849:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB860:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB862 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB862:
  else824_3:
  endif824:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB863:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB865:
    CALL MOTOR.RESETCOUNT 'bc'
  while867:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf871
    DATA8 flag871
    DIVF F.1 2.0 tmpf871
    CP_EQF 0.0 2.0 flag871
    SELECTF flag871 0.0 tmpf871 F.0

    JR_GTEQF F.0 150.0 endwhile867
  whilebody867:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB872:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf876
    DATA8 flag876
    DIVF F.1 2.0 tmpf876
    CP_EQF 0.0 2.0 flag876
    SELECTF flag876 0.0 tmpf876 F.0

    JR_LTF F.0 150.0 whilebody867
  endwhile867:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 150.0 'true'

	DATA8 layer877
	DATA8 nos877
	DATA8 busy877
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer877 nos877
	JR_EQ8 0 nos877 motornotbusy877
  motorwaiting877:
	OUTPUT_TEST layer877 nos877 busy877
	JR_EQ8 busy877 0 motornotbusy877
	SLEEP
	JR motorwaiting877
  motornotbusy877:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds880
	MOVEF_32 500.0 milliseconds880
	DATA32 timer880
	TIMER_WAIT milliseconds880 timer880
	TIMER_READY timer880
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp882
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp882
    JR_NEQ32 0 tmp882 alreadylaunched882
    OBJECT_START TF_VIDVIG_0
  alreadylaunched882:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB883:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB884:
    ADDF VGV_C 1.0 VGV_C
  else786_1:
  endif786:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB886:
    JR_LTF VGV_H 12.0 or888
    JR_LTEQF VGV_H 100.0 else887_1
  or888:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif887
  else887_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else887_2:
  endif887:
    JR_NEQF VGV_COLOR5 4.0 else891_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer892
	DATA8 nos892
	DATA8 busy892
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer892 nos892
	JR_EQ8 0 nos892 motornotbusy892
  motorwaiting892:
	OUTPUT_TEST layer892 nos892 busy892
	JR_EQ8 busy892 0 motornotbusy892
	SLEEP
	JR motorwaiting892
  motornotbusy892:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB893:
    WRITE32 ENDSUB_F_PR_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB894:
    CALL MOTOR.RESETCOUNT 'bc'
  while896:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf900
    DATA8 flag900
    DIVF F.1 2.0 tmpf900
    CP_EQF 0.0 2.0 flag900
    SELECTF flag900 0.0 tmpf900 F.0

    JR_GTEQF F.0 270.0 endwhile896
  whilebody896:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB901:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf905
    DATA8 flag905
    DIVF F.1 2.0 tmpf905
    CP_EQF 0.0 2.0 flag905
    SELECTF flag905 0.0 tmpf905 F.0

    JR_LTF F.0 270.0 whilebody896
  endwhile896:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds908
	MOVEF_32 500.0 milliseconds908
	DATA32 timer908
	TIMER_WAIT milliseconds908 timer908
	TIMER_READY timer908
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB910:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB911:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf912
    DATA8 flag912
    DIVF 360.0 VGV_L tmpf912
    CP_EQF 0.0 VGV_L flag912
    SELECTF flag912 0.0 tmpf912 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while915:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf919
    DATA8 flag919
    DIVF F.1 2.0 tmpf919
    CP_EQF 0.0 2.0 flag919
    SELECTF flag919 0.0 tmpf919 F.0

    JR_GTEQF F.0 VGV_X endwhile915
  whilebody915:
    WRITE32 ENDSUB_F_A3_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB920:
    WRITE32 ENDSUB_F_A2_0:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB921:
    JR_GTEQF VGV_SPEED 90.0 else922_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else922_1:
  endif922:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB924:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf928
    DATA8 flag928
    DIVF F.1 2.0 tmpf928
    CP_EQF 0.0 2.0 flag928
    SELECTF flag928 0.0 tmpf928 F.0

    JR_LTF F.0 VGV_X whilebody915
  endwhile915:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB930:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB931:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB932:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer934
	DATA8 nos934
	DATA8 busy934
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer934 nos934
	JR_EQ8 0 nos934 motornotbusy934
  motorwaiting934:
	OUTPUT_TEST layer934 nos934 busy934
	JR_EQ8 busy934 0 motornotbusy934
	SLEEP
	JR motorwaiting934
  motornotbusy934:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer936
	DATA8 nos936
	DATA8 busy936
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer936 nos936
	JR_EQ8 0 nos936 motornotbusy936
  motorwaiting936:
	OUTPUT_TEST layer936 nos936 busy936
	JR_EQ8 busy936 0 motornotbusy936
	SLEEP
	JR motorwaiting936
  motornotbusy936:
    WRITE32 ENDSUB_F_A3_0:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB937:
    WRITE32 ENDSUB_F_A2_0:CALLSUB938 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB938:
  while939:
    JR_LTEQF VGV_S3 15.0 endwhile939
  whilebody939:
    WRITE32 ENDSUB_F_A3_0:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB940:
    WRITE32 ENDSUB_F_A2_0:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB941:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody939
  endwhile939:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB944:
    WRITE32 ENDSUB_F_A2_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB945:
  while946:
    JR_GTEQF VGV_S3 60.0 endwhile946
  whilebody946:
    WRITE32 ENDSUB_F_A3_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB947:
    WRITE32 ENDSUB_F_A2_0:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB948:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody946
  endwhile946:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while952:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf956
    DATA8 flag956
    DIVF F.1 2.0 tmpf956
    CP_EQF 0.0 2.0 flag956
    SELECTF flag956 0.0 tmpf956 F.0

    JR_GTEQF F.0 80.0 endwhile952
  whilebody952:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB957:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf961
    DATA8 flag961
    DIVF F.1 2.0 tmpf961
    CP_EQF 0.0 2.0 flag961
    SELECTF flag961 0.0 tmpf961 F.0

    JR_LTF F.0 80.0 whilebody952
  endwhile952:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer962
	DATA8 nos962
	DATA8 busy962
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer962 nos962
	JR_EQ8 0 nos962 motornotbusy962
  motorwaiting962:
	OUTPUT_TEST layer962 nos962 busy962
	JR_EQ8 busy962 0 motornotbusy962
	SLEEP
	JR motorwaiting962
  motornotbusy962:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds965
	MOVEF_32 500.0 milliseconds965
	DATA32 timer965
	TIMER_WAIT milliseconds965 timer965
	TIMER_READY timer965
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB967:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB968:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB969:
  else891_1:
  endif891:
    JR_NEQF VGV_COLOR5 5.0 else970_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB971 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB971:
    CALL MOTOR.RESETCOUNT 'bc'
  while973:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf977
    DATA8 flag977
    DIVF F.1 2.0 tmpf977
    CP_EQF 0.0 2.0 flag977
    SELECTF flag977 0.0 tmpf977 F.0

    JR_GTEQF F.0 210.0 endwhile973
  whilebody973:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB978:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf982
    DATA8 flag982
    DIVF F.1 2.0 tmpf982
    CP_EQF 0.0 2.0 flag982
    SELECTF flag982 0.0 tmpf982 F.0

    JR_LTF F.0 210.0 whilebody973
  endwhile973:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 270.0 'true'

	DATA8 layer984
	DATA8 nos984
	DATA8 busy984
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer984 nos984
	JR_EQ8 0 nos984 motornotbusy984
  motorwaiting984:
	OUTPUT_TEST layer984 nos984 busy984
	JR_EQ8 busy984 0 motornotbusy984
	SLEEP
	JR motorwaiting984
  motornotbusy984:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds986
	MOVEF_32 500.0 milliseconds986
	DATA32 timer986
	TIMER_WAIT milliseconds986 timer986
	TIMER_READY timer986
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB988:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf989
    DATA8 flag989
    DIVF 360.0 VGV_L tmpf989
    CP_EQF 0.0 VGV_L flag989
    SELECTF flag989 0.0 tmpf989 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while992:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf996
    DATA8 flag996
    DIVF F.1 2.0 tmpf996
    CP_EQF 0.0 2.0 flag996
    SELECTF flag996 0.0 tmpf996 F.0

    JR_GTEQF F.0 VGV_X endwhile992
  whilebody992:
    WRITE32 ENDSUB_F_A3_0:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB997:
    WRITE32 ENDSUB_F_A2_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB998:
    JR_GTEQF VGV_SPEED 90.0 else999_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else999_1:
  endif999:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1001:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1005
    DATA8 flag1005
    DIVF F.1 2.0 tmpf1005
    CP_EQF 0.0 2.0 flag1005
    SELECTF flag1005 0.0 tmpf1005 F.0

    JR_LTF F.0 VGV_X whilebody992
  endwhile992:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1007:
    JR_NEQF VGV_C 1.0 else1008_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB1009:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1010:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1012:
    CALL MOTOR.RESETCOUNT 'bc'
  while1014:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1018
    DATA8 flag1018
    DIVF F.1 2.0 tmpf1018
    CP_EQF 0.0 2.0 flag1018
    SELECTF flag1018 0.0 tmpf1018 F.0

    JR_GTEQF F.0 160.0 endwhile1014
  whilebody1014:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1019:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1023
    DATA8 flag1023
    DIVF F.1 2.0 tmpf1023
    CP_EQF 0.0 2.0 flag1023
    SELECTF flag1023 0.0 tmpf1023 F.0

    JR_LTF F.0 160.0 whilebody1014
  endwhile1014:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1026
	MOVEF_32 500.0 milliseconds1026
	DATA32 timer1026
	TIMER_WAIT milliseconds1026 timer1026
	TIMER_READY timer1026
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1028:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1029:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1030:
    CALL MOTOR.RESETCOUNT 'bc'
  while1032:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1036
    DATA8 flag1036
    DIVF F.1 2.0 tmpf1036
    CP_EQF 0.0 2.0 flag1036
    SELECTF flag1036 0.0 tmpf1036 F.0

    JR_GTEQF F.0 80.0 endwhile1032
  whilebody1032:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1037:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1041
    DATA8 flag1041
    DIVF F.1 2.0 tmpf1041
    CP_EQF 0.0 2.0 flag1041
    SELECTF flag1041 0.0 tmpf1041 F.0

    JR_LTF F.0 80.0 whilebody1032
  endwhile1032:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer1043
	DATA8 nos1043
	DATA8 busy1043
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1043 nos1043
	JR_EQ8 0 nos1043 motornotbusy1043
  motorwaiting1043:
	OUTPUT_TEST layer1043 nos1043 busy1043
	JR_EQ8 busy1043 0 motornotbusy1043
	SLEEP
	JR motorwaiting1043
  motornotbusy1043:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1045
	MOVEF_32 500.0 milliseconds1045
	DATA32 timer1045
	TIMER_WAIT milliseconds1045 timer1045
	TIMER_READY timer1045
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1047
	DATA8 no1047
	DATA8 mode81047
	
	MOVEF_8 2.0 no1047
	SUB8 no1047 1 no1047
	DIV8 no1047 4 layer1047
	MATH MOD8 no1047 4 no1047

	MOVEF_8 0.0 mode81047
	
	INPUT_DEVICE READY_RAW layer1047 no1047 0 mode81047 0
    DATA8 layer1048
	DATA8 no1048
	DATA8 mode81048
	
	MOVEF_8 3.0 no1048
	SUB8 no1048 1 no1048
	DIV8 no1048 4 layer1048
	MATH MOD8 no1048 4 no1048

	MOVEF_8 0.0 mode81048
	
	INPUT_DEVICE READY_RAW layer1048 no1048 0 mode81048 0
  while1049:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1051
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1050
  and1051:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1054
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1050
  and1054:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1049
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1049
  or1050:
  whilebody1049:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1060
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1049
  and1060:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1063
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1049
  and1063:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1066
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1049
  and1066:
  endwhile1049:
  while1069:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1069
  whilebody1069:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1069
  endwhile1069:
    CALL MOTOR.STOP 'B' 'True'
  while1074:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1074
  whilebody1074:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1074
  endwhile1074:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1079
	DATA8 nos1079
	DATA8 busy1079
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1079 nos1079
	JR_EQ8 0 nos1079 motornotbusy1079
  motorwaiting1079:
	OUTPUT_TEST layer1079 nos1079 busy1079
	JR_EQ8 busy1079 0 motornotbusy1079
	SLEEP
	JR motorwaiting1079
  motornotbusy1079:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1081
	DATA8 nos1081
	DATA8 busy1081
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1081 nos1081
	JR_EQ8 0 nos1081 motornotbusy1081
  motorwaiting1081:
	OUTPUT_TEST layer1081 nos1081 busy1081
	JR_EQ8 busy1081 0 motornotbusy1081
	SLEEP
	JR motorwaiting1081
  motornotbusy1081:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1083:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1084 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1084:
  while1085:
    JR_LTEQF VGV_S3 10.0 endwhile1085
  whilebody1085:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1086:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1087:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1085
  endwhile1085:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1089:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1090:
  while1091:
    JR_GTEQF VGV_S3 55.0 endwhile1091
  whilebody1091:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1092:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1093 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1093:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1091
  endwhile1091:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1096
    DATA8 flag1096
    DIVF 360.0 VGV_L tmpf1096
    CP_EQF 0.0 VGV_L flag1096
    SELECTF flag1096 0.0 tmpf1096 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1099:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1103
    DATA8 flag1103
    DIVF F.1 2.0 tmpf1103
    CP_EQF 0.0 2.0 flag1103
    SELECTF flag1103 0.0 tmpf1103 F.0

    JR_GTEQF F.0 VGV_X endwhile1099
  whilebody1099:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1104:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1105:
    JR_GTEQF VGV_SPEED 90.0 else1106_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else1106_1:
  endif1106:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1108:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1112
    DATA8 flag1112
    DIVF F.1 2.0 tmpf1112
    CP_EQF 0.0 2.0 flag1112
    SELECTF flag1112 0.0 tmpf1112 F.0

    JR_LTF F.0 VGV_X whilebody1099
  endwhile1099:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1114:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1115:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1116:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1118:
    CALL MOTOR.RESETCOUNT 'bc'
  while1120:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1124
    DATA8 flag1124
    DIVF F.1 2.0 tmpf1124
    CP_EQF 0.0 2.0 flag1124
    SELECTF flag1124 0.0 tmpf1124 F.0

    JR_GTEQF F.0 110.0 endwhile1120
  whilebody1120:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1125:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1129
    DATA8 flag1129
    DIVF F.1 2.0 tmpf1129
    CP_EQF 0.0 2.0 flag1129
    SELECTF flag1129 0.0 tmpf1129 F.0

    JR_LTF F.0 110.0 whilebody1120
  endwhile1120:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 230.0 'true'

	DATA8 layer1131
	DATA8 nos1131
	DATA8 busy1131
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1131 nos1131
	JR_EQ8 0 nos1131 motornotbusy1131
  motorwaiting1131:
	OUTPUT_TEST layer1131 nos1131 busy1131
	JR_EQ8 busy1131 0 motornotbusy1131
	SLEEP
	JR motorwaiting1131
  motornotbusy1131:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1133
	MOVEF_32 500.0 milliseconds1133
	DATA32 timer1133
	TIMER_WAIT milliseconds1133 timer1133
	TIMER_READY timer1133
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1135:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1136:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1137:
    JR endif1008
  else1008_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1138:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1139:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1141:
    CALL MOTOR.RESETCOUNT 'bc'
  while1143:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1147
    DATA8 flag1147
    DIVF F.1 2.0 tmpf1147
    CP_EQF 0.0 2.0 flag1147
    SELECTF flag1147 0.0 tmpf1147 F.0

    JR_GTEQF F.0 160.0 endwhile1143
  whilebody1143:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1148:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1152
    DATA8 flag1152
    DIVF F.1 2.0 tmpf1152
    CP_EQF 0.0 2.0 flag1152
    SELECTF flag1152 0.0 tmpf1152 F.0

    JR_LTF F.0 160.0 whilebody1143
  endwhile1143:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1154
	DATA8 nos1154
	DATA8 busy1154
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1154 nos1154
	JR_EQ8 0 nos1154 motornotbusy1154
  motorwaiting1154:
	OUTPUT_TEST layer1154 nos1154 busy1154
	JR_EQ8 busy1154 0 motornotbusy1154
	SLEEP
	JR motorwaiting1154
  motornotbusy1154:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1156
	MOVEF_32 500.0 milliseconds1156
	DATA32 timer1156
	TIMER_WAIT milliseconds1156 timer1156
	TIMER_READY timer1156
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1158:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1159:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1160:
  else1008_2:
  endif1008:
  else970_1:
  endif970:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1162
	DATA8 nos1162
	DATA8 busy1162
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1162 nos1162
	JR_EQ8 0 nos1162 motornotbusy1162
  motorwaiting1162:
	OUTPUT_TEST layer1162 nos1162 busy1162
	JR_EQ8 busy1162 0 motornotbusy1162
	SLEEP
	JR motorwaiting1162
  motornotbusy1162:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1163
	DATA8 nos1163
	DATA8 busy1163
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1163 nos1163
	JR_EQ8 0 nos1163 motornotbusy1163
  motorwaiting1163:
	OUTPUT_TEST layer1163 nos1163 busy1163
	JR_EQ8 busy1163 0 motornotbusy1163
	SLEEP
	JR motorwaiting1163
  motornotbusy1163:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1165
	DATA8 nos1165
	DATA8 busy1165
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1165 nos1165
	JR_EQ8 0 nos1165 motornotbusy1165
  motorwaiting1165:
	OUTPUT_TEST layer1165 nos1165 busy1165
	JR_EQ8 busy1165 0 motornotbusy1165
	SLEEP
	JR motorwaiting1165
  motornotbusy1165:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1166
	DATA8 nos1166
	DATA8 busy1166
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1166 nos1166
	JR_EQ8 0 nos1166 motornotbusy1166
  motorwaiting1166:
	OUTPUT_TEST layer1166 nos1166 busy1166
	JR_EQ8 busy1166 0 motornotbusy1166
	SLEEP
	JR motorwaiting1166
  motornotbusy1166:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1168
    DATA8 flag1168
    DIVF 360.0 VGV_L tmpf1168
    CP_EQF 0.0 VGV_L flag1168
    SELECTF flag1168 0.0 tmpf1168 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1171:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1175
    DATA8 flag1175
    DIVF F.1 2.0 tmpf1175
    CP_EQF 0.0 2.0 flag1175
    SELECTF flag1175 0.0 tmpf1175 F.0

    JR_GTEQF F.0 VGV_X endwhile1171
  whilebody1171:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1176:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1177:
    JR_GTEQF VGV_SPEED 80.0 else1178_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1178_1:
  endif1178:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1180:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1184
    DATA8 flag1184
    DIVF F.1 2.0 tmpf1184
    CP_EQF 0.0 2.0 flag1184
    SELECTF flag1184 0.0 tmpf1184 F.0

    JR_LTF F.0 VGV_X whilebody1171
  endwhile1171:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1186:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1188
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1188
    JR_NEQ32 0 tmp1188 alreadylaunched1188
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1188:
ENDTHREAD:
    RETURN
SUB_F_FINISH_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 145.0 'true'

	DATA8 layer1189
	DATA8 nos1189
	DATA8 busy1189
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1189 nos1189
	JR_EQ8 0 nos1189 motornotbusy1189
  motorwaiting1189:
	OUTPUT_TEST layer1189 nos1189 busy1189
	JR_EQ8 busy1189 0 motornotbusy1189
	SLEEP
	JR motorwaiting1189
  motornotbusy1189:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 145.0 'true'

	DATA8 layer1190
	DATA8 nos1190
	DATA8 busy1190
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1190 nos1190
	JR_EQ8 0 nos1190 motornotbusy1190
  motorwaiting1190:
	OUTPUT_TEST layer1190 nos1190 busy1190
	JR_EQ8 busy1190 0 motornotbusy1190
	SLEEP
	JR motorwaiting1190
  motornotbusy1190:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1191
	DATA8 nos1191
	DATA8 busy1191
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1191 nos1191
	JR_EQ8 0 nos1191 motornotbusy1191
  motorwaiting1191:
	OUTPUT_TEST layer1191 nos1191 busy1191
	JR_EQ8 busy1191 0 motornotbusy1191
	SLEEP
	JR motorwaiting1191
  motornotbusy1191:
    PROGRAM_STOP -1
RETSUB_F_FINISH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_0:
SUB_F_SB2_0:
    CALL MOTOR.RESETCOUNT 'bc'
  while1194:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1198
    DATA8 flag1198
    DIVF F.1 2.0 tmpf1198
    CP_EQF 0.0 2.0 flag1198
    SELECTF flag1198 0.0 tmpf1198 F.0

    JR_LTEQF F.0 100.0 endwhile1194
  whilebody1194:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1199:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1203
    DATA8 flag1203
    DIVF F.1 2.0 tmpf1203
    CP_EQF 0.0 2.0 flag1203
    SELECTF flag1203 0.0 tmpf1203 F.0

    JR_GTF F.0 100.0 whilebody1194
  endwhile1194:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1205:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1206:
  while1207:
    JR_LTEQF VGV_S3 60.0 endwhile1207
  whilebody1207:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1208:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1209:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S3 60.0 whilebody1207
  endwhile1207:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1211:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1212:
  while1213:
    JR_GTEQF VGV_S2 60.0 endwhile1213
  whilebody1213:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1214:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1215:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S2 60.0 whilebody1213
  endwhile1213:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1217:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1218:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1220:
  while1221:
    JR_LTEQF VGV_S3 10.0 and1223
    JR_GTF VGV_S2 10.0 or1222
  and1223:
    JR_GTEQF VGV_S3 10.0 endwhile1221
    JR_GTEQF VGV_S2 10.0 endwhile1221
  or1222:
  whilebody1221:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1224:
    JR_LTEQF VGV_S3 10.0 and1225
    JR_GTF VGV_S2 10.0 whilebody1221
  and1225:
    JR_GTEQF VGV_S3 10.0 and1226
    JR_LTF VGV_S2 10.0 whilebody1221
  and1226:
  endwhile1221:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1228
	DATA8 nos1228
	DATA8 busy1228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1228 nos1228
	JR_EQ8 0 nos1228 motornotbusy1228
  motorwaiting1228:
	OUTPUT_TEST layer1228 nos1228 busy1228
	JR_EQ8 busy1228 0 motornotbusy1228
	SLEEP
	JR motorwaiting1228
  motornotbusy1228:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -20.0 150.0 'true'

	DATA8 layer1229
	DATA8 nos1229
	DATA8 busy1229
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1229 nos1229
	JR_EQ8 0 nos1229 motornotbusy1229
  motorwaiting1229:
	OUTPUT_TEST layer1229 nos1229 busy1229
	JR_EQ8 busy1229 0 motornotbusy1229
	SLEEP
	JR motorwaiting1229
  motornotbusy1229:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer1230
	DATA8 nos1230
	DATA8 busy1230
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1230 nos1230
	JR_EQ8 0 nos1230 motornotbusy1230
  motorwaiting1230:
	OUTPUT_TEST layer1230 nos1230 busy1230
	JR_EQ8 busy1230 0 motornotbusy1230
	SLEEP
	JR motorwaiting1230
  motornotbusy1230:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1231:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1232:
  while1233:
    JR_LTEQF VGV_S3 10.0 endwhile1233
  whilebody1233:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1234:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1235:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S3 10.0 whilebody1233
  endwhile1233:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1238:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1239:
  while1240:
    JR_GTEQF VGV_S3 55.0 endwhile1240
  whilebody1240:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1241:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1242:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 55.0 whilebody1240
  endwhile1240:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1245
	DATA8 nos1245
	DATA8 busy1245
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1245 nos1245
	JR_EQ8 0 nos1245 motornotbusy1245
  motorwaiting1245:
	OUTPUT_TEST layer1245 nos1245 busy1245
	JR_EQ8 busy1245 0 motornotbusy1245
	SLEEP
	JR motorwaiting1245
  motornotbusy1245:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1246:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1247:
  while1248:
    JR_LTEQF VGV_S3 55.0 endwhile1248
  whilebody1248:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1249:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1250:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S3 55.0 whilebody1248
  endwhile1248:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 25.0 'true'

	DATA8 layer1253
	DATA8 nos1253
	DATA8 busy1253
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1253 nos1253
	JR_EQ8 0 nos1253 motornotbusy1253
  motorwaiting1253:
	OUTPUT_TEST layer1253 nos1253 busy1253
	JR_EQ8 busy1253 0 motornotbusy1253
	SLEEP
	JR motorwaiting1253
  motornotbusy1253:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1254:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1255
    DATA8 flag1255
    DIVF 360.0 VGV_L tmpf1255
    CP_EQF 0.0 VGV_L flag1255
    SELECTF flag1255 0.0 tmpf1255 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1258:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1262
    DATA8 flag1262
    DIVF F.1 2.0 tmpf1262
    CP_EQF 0.0 2.0 flag1262
    SELECTF flag1262 0.0 tmpf1262 F.0

    JR_GTEQF F.0 VGV_X endwhile1258
  whilebody1258:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1263:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1264:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1265:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1269
    DATA8 flag1269
    DIVF F.1 2.0 tmpf1269
    CP_EQF 0.0 2.0 flag1269
    SELECTF flag1269 0.0 tmpf1269 F.0

    JR_LTF F.0 VGV_X whilebody1258
  endwhile1258:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1271:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1272:
  while1273:
    JR_LTEQF VGV_S3 15.0 and1275
    JR_GTF VGV_S2 15.0 or1274
  and1275:
    JR_GTEQF VGV_S3 15.0 endwhile1273
    JR_GTEQF VGV_S2 15.0 endwhile1273
  or1274:
  whilebody1273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1276:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1277:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1278:
    JR_LTEQF VGV_S3 15.0 and1279
    JR_GTF VGV_S2 15.0 whilebody1273
  and1279:
    JR_GTEQF VGV_S3 15.0 and1280
    JR_LTF VGV_S2 15.0 whilebody1273
  and1280:
  endwhile1273:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1282
	DATA8 nos1282
	DATA8 busy1282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1282 nos1282
	JR_EQ8 0 nos1282 motornotbusy1282
  motorwaiting1282:
	OUTPUT_TEST layer1282 nos1282 busy1282
	JR_EQ8 busy1282 0 motornotbusy1282
	SLEEP
	JR motorwaiting1282
  motornotbusy1282:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1283:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1284:
  while1285:
    JR_GTEQF VGV_S2 60.0 endwhile1285
  whilebody1285:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1285
  endwhile1285:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1288:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1289:
  while1290:
    JR_LTEQF VGV_S3 10.0 and1292
    JR_GTF VGV_S2 10.0 or1291
  and1292:
    JR_GTEQF VGV_S3 10.0 endwhile1290
    JR_GTEQF VGV_S2 10.0 endwhile1290
  or1291:
  whilebody1290:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1293:
    JR_LTEQF VGV_S3 10.0 and1294
    JR_GTF VGV_S2 10.0 whilebody1290
  and1294:
    JR_GTEQF VGV_S3 10.0 and1295
    JR_LTF VGV_S2 10.0 whilebody1290
  and1295:
  endwhile1290:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1297
    DATA8 flag1297
    DIVF 360.0 VGV_L tmpf1297
    CP_EQF 0.0 VGV_L flag1297
    SELECTF flag1297 0.0 tmpf1297 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1300:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1304
    DATA8 flag1304
    DIVF F.1 2.0 tmpf1304
    CP_EQF 0.0 2.0 flag1304
    SELECTF flag1304 0.0 tmpf1304 F.0

    JR_GTEQF F.0 VGV_X endwhile1300
  whilebody1300:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1305:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1306:
    JR_GTEQF VGV_SPEED 95.0 else1307_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else1307_1:
  endif1307:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB1309:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1313
    DATA8 flag1313
    DIVF F.1 2.0 tmpf1313
    CP_EQF 0.0 2.0 flag1313
    SELECTF flag1313 0.0 tmpf1313 F.0

    JR_LTF F.0 VGV_X whilebody1300
  endwhile1300:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1315:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1316:
  while1317:
    JR_LTEQF VGV_S3 15.0 and1319
    JR_GTF VGV_S2 15.0 or1318
  and1319:
    JR_GTEQF VGV_S3 15.0 endwhile1317
    JR_GTEQF VGV_S2 15.0 endwhile1317
  or1318:
  whilebody1317:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1320:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1321:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1322:
    JR_LTEQF VGV_S3 15.0 and1323
    JR_GTF VGV_S2 15.0 whilebody1317
  and1323:
    JR_GTEQF VGV_S3 15.0 and1324
    JR_LTF VGV_S2 15.0 whilebody1317
  and1324:
  endwhile1317:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 55.0 'true'

	DATA8 layer1326
	DATA8 nos1326
	DATA8 busy1326
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1326 nos1326
	JR_EQ8 0 nos1326 motornotbusy1326
  motorwaiting1326:
	OUTPUT_TEST layer1326 nos1326 busy1326
	JR_EQ8 busy1326 0 motornotbusy1326
	SLEEP
	JR motorwaiting1326
  motornotbusy1326:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1328
	DATA8 nos1328
	DATA8 busy1328
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1328 nos1328
	JR_EQ8 0 nos1328 motornotbusy1328
  motorwaiting1328:
	OUTPUT_TEST layer1328 nos1328 busy1328
	JR_EQ8 busy1328 0 motornotbusy1328
	SLEEP
	JR motorwaiting1328
  motornotbusy1328:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1329:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1330:
  while1331:
    JR_LTEQF VGV_S2 15.0 endwhile1331
  whilebody1331:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1332:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1333:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1331
  endwhile1331:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1336:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1337:
  while1338:
    JR_GTEQF VGV_S2 55.0 endwhile1338
  whilebody1338:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1339:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1340:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1338
  endwhile1338:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 54.0 'true'

	DATA8 layer1343
	DATA8 nos1343
	DATA8 busy1343
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1343 nos1343
	JR_EQ8 0 nos1343 motornotbusy1343
  motorwaiting1343:
	OUTPUT_TEST layer1343 nos1343 busy1343
	JR_EQ8 busy1343 0 motornotbusy1343
	SLEEP
	JR motorwaiting1343
  motornotbusy1343:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1345
	DATA8 nos1345
	DATA8 busy1345
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1345 nos1345
	JR_EQ8 0 nos1345 motornotbusy1345
  motorwaiting1345:
	OUTPUT_TEST layer1345 nos1345 busy1345
	JR_EQ8 busy1345 0 motornotbusy1345
	SLEEP
	JR motorwaiting1345
  motornotbusy1345:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1346:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1347:
  while1348:
    JR_LTEQF VGV_S3 15.0 endwhile1348
  whilebody1348:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1349:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1350:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1348
  endwhile1348:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1353:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1354:
  while1355:
    JR_GTEQF VGV_S3 60.0 endwhile1355
  whilebody1355:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1356:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1357:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1355
  endwhile1355:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1360:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 65.0 'true'

	DATA8 layer1361
	DATA8 nos1361
	DATA8 busy1361
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1361 nos1361
	JR_EQ8 0 nos1361 motornotbusy1361
  motorwaiting1361:
	OUTPUT_TEST layer1361 nos1361 busy1361
	JR_EQ8 busy1361 0 motornotbusy1361
	SLEEP
	JR motorwaiting1361
  motornotbusy1361:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 90.0 'true'

	DATA8 layer1363
	DATA8 nos1363
	DATA8 busy1363
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1363 nos1363
	JR_EQ8 0 nos1363 motornotbusy1363
  motorwaiting1363:
	OUTPUT_TEST layer1363 nos1363 busy1363
	JR_EQ8 busy1363 0 motornotbusy1363
	SLEEP
	JR motorwaiting1363
  motornotbusy1363:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1365:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1366:
  while1367:
    JR_LTEQF VGV_S2 10.0 endwhile1367
  whilebody1367:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1368:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1369:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 10.0 whilebody1367
  endwhile1367:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1371:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1372:
  while1373:
    JR_GTEQF VGV_S2 50.0 endwhile1373
  whilebody1373:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1374:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1375:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1373
  endwhile1373:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1378:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 53.0 'true'

	DATA8 layer1379
	DATA8 nos1379
	DATA8 busy1379
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1379 nos1379
	JR_EQ8 0 nos1379 motornotbusy1379
  motorwaiting1379:
	OUTPUT_TEST layer1379 nos1379 busy1379
	JR_EQ8 busy1379 0 motornotbusy1379
	SLEEP
	JR motorwaiting1379
  motornotbusy1379:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1381
	DATA8 nos1381
	DATA8 busy1381
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1381 nos1381
	JR_EQ8 0 nos1381 motornotbusy1381
  motorwaiting1381:
	OUTPUT_TEST layer1381 nos1381 busy1381
	JR_EQ8 busy1381 0 motornotbusy1381
	SLEEP
	JR motorwaiting1381
  motornotbusy1381:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1383:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1384:
  while1385:
    JR_LTEQF VGV_S3 8.0 endwhile1385
  whilebody1385:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1386:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1387:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 8.0 whilebody1385
  endwhile1385:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1389:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1390:
  while1391:
    JR_GTEQF VGV_S3 55.0 endwhile1391
  whilebody1391:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1392:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1393:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1391
  endwhile1391:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1396
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1396
    JR_NEQ32 0 tmp1396 alreadylaunched1396
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1396:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1397:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1398:
  while1399:
    JR_LTEQF VGV_S3 15.0 and1401
    JR_GTF VGV_S2 15.0 or1400
  and1401:
    JR_GTEQF VGV_S3 15.0 and1402
    JR_GTF VGV_S2 15.0 or1400
  and1402:
    JR_LTEQF VGV_S3 15.0 endwhile1399
    JR_GTEQF VGV_S2 15.0 endwhile1399
  or1400:
  whilebody1399:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1403:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1404:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1405:
    JR_LTEQF VGV_S3 15.0 and1406
    JR_GTF VGV_S2 15.0 whilebody1399
  and1406:
    JR_GTEQF VGV_S3 15.0 and1407
    JR_GTF VGV_S2 15.0 whilebody1399
  and1407:
    JR_LTEQF VGV_S3 15.0 and1408
    JR_LTF VGV_S2 15.0 whilebody1399
  and1408:
  endwhile1399:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1410
	DATA8 nos1410
	DATA8 busy1410
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1410 nos1410
	JR_EQ8 0 nos1410 motornotbusy1410
  motorwaiting1410:
	OUTPUT_TEST layer1410 nos1410 busy1410
	JR_EQ8 busy1410 0 motornotbusy1410
	SLEEP
	JR motorwaiting1410
  motornotbusy1410:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 185.0 'true'

	DATA8 layer1411
	DATA8 nos1411
	DATA8 busy1411
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1411 nos1411
	JR_EQ8 0 nos1411 motornotbusy1411
  motorwaiting1411:
	OUTPUT_TEST layer1411 nos1411 busy1411
	JR_EQ8 busy1411 0 motornotbusy1411
	SLEEP
	JR motorwaiting1411
  motornotbusy1411:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1414:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1415:
  while1416:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1416
  whilebody1416:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1418:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1419:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1420:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1416
  endwhile1416:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -60.0
    DATA32 milliseconds1424
	MOVEF_32 250.0 milliseconds1424
	DATA32 timer1424
	TIMER_WAIT milliseconds1424 timer1424
	TIMER_READY timer1424
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1426
	DATA8 nos1426
	DATA8 busy1426
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1426 nos1426
	JR_EQ8 0 nos1426 motornotbusy1426
  motorwaiting1426:
	OUTPUT_TEST layer1426 nos1426 busy1426
	JR_EQ8 busy1426 0 motornotbusy1426
	SLEEP
	JR motorwaiting1426
  motornotbusy1426:
    CALL MOTOR.STARTSYNC 'bc' -10.0 -100.0
    DATA32 milliseconds1428
	MOVEF_32 1400.0 milliseconds1428
	DATA32 timer1428
	TIMER_WAIT milliseconds1428 timer1428
	TIMER_READY timer1428
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 180.0 'true'

	DATA8 layer1430
	DATA8 nos1430
	DATA8 busy1430
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1430 nos1430
	JR_EQ8 0 nos1430 motornotbusy1430
  motorwaiting1430:
	OUTPUT_TEST layer1430 nos1430 busy1430
	JR_EQ8 busy1430 0 motornotbusy1430
	SLEEP
	JR motorwaiting1430
  motornotbusy1430:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 185.0 'true'

	DATA8 layer1431
	DATA8 nos1431
	DATA8 busy1431
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1431 nos1431
	JR_EQ8 0 nos1431 motornotbusy1431
  motorwaiting1431:
	OUTPUT_TEST layer1431 nos1431 busy1431
	JR_EQ8 busy1431 0 motornotbusy1431
	SLEEP
	JR motorwaiting1431
  motornotbusy1431:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1432:
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 45.0 'true'

	DATA8 layer1433
	DATA8 nos1433
	DATA8 busy1433
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1433 nos1433
	JR_EQ8 0 nos1433 motornotbusy1433
  motorwaiting1433:
	OUTPUT_TEST layer1433 nos1433 busy1433
	JR_EQ8 busy1433 0 motornotbusy1433
	SLEEP
	JR motorwaiting1433
  motornotbusy1433:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1434
	DATA8 nos1434
	DATA8 busy1434
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1434 nos1434
	JR_EQ8 0 nos1434 motornotbusy1434
  motorwaiting1434:
	OUTPUT_TEST layer1434 nos1434 busy1434
	JR_EQ8 busy1434 0 motornotbusy1434
	SLEEP
	JR motorwaiting1434
  motornotbusy1434:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1436:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1437:
  while1438:
    JR_LTEQF VGV_S2 15.0 endwhile1438
  whilebody1438:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1439:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1440:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1438
  endwhile1438:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1443:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1444:
  while1445:
    JR_GTEQF VGV_S2 50.0 endwhile1445
  whilebody1445:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1446:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1447:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1445
  endwhile1445:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1450:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1451:
  while1452:
    JR_LTEQF VGV_S3 15.0 and1454
    JR_GTF VGV_S2 15.0 or1453
  and1454:
    JR_GTEQF VGV_S3 15.0 endwhile1452
    JR_GTEQF VGV_S2 15.0 endwhile1452
  or1453:
  whilebody1452:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1455:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1456:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1457:
    JR_LTEQF VGV_S3 15.0 and1458
    JR_GTF VGV_S2 15.0 whilebody1452
  and1458:
    JR_GTEQF VGV_S3 15.0 and1459
    JR_LTF VGV_S2 15.0 whilebody1452
  and1459:
  endwhile1452:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1461:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1462:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1463:
    MOVEF_F 40.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1465:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1469
    DATA8 flag1469
    DIVF F.1 2.0 tmpf1469
    CP_EQF 0.0 2.0 flag1469
    SELECTF flag1469 0.0 tmpf1469 F.0

    JR_GTEQF F.0 200.0 endwhile1465
  whilebody1465:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1470:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1471:
    JR_LTEQF VGV_SPEED 30.0 else1472_1
    SUBF VGV_SPEED 0.1 VGV_SPEED
  else1472_1:
  endif1472:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1474:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1478
    DATA8 flag1478
    DIVF F.1 2.0 tmpf1478
    CP_EQF 0.0 2.0 flag1478
    SELECTF flag1478 0.0 tmpf1478 F.0

    JR_LTF F.0 200.0 whilebody1465
  endwhile1465:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1480:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1481:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1482:
    JR_GTF VGV_I 1.0 endfor1482
  forbody1482:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1483:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1484:
  while1485:
    JR_LTEQF VGV_S3 15.0 and1487
    JR_GTF VGV_S2 15.0 or1486
  and1487:
    JR_GTEQF VGV_S3 15.0 endwhile1485
    JR_GTEQF VGV_S2 15.0 endwhile1485
  or1486:
  whilebody1485:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1488:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1489:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1490:
    JR_LTEQF VGV_S3 15.0 and1491
    JR_GTF VGV_S2 15.0 whilebody1485
  and1491:
    JR_GTEQF VGV_S3 15.0 and1492
    JR_LTF VGV_S2 15.0 whilebody1485
  and1492:
  endwhile1485:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1494
	DATA8 nos1494
	DATA8 busy1494
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1494 nos1494
	JR_EQ8 0 nos1494 motornotbusy1494
  motorwaiting1494:
	OUTPUT_TEST layer1494 nos1494 busy1494
	JR_EQ8 busy1494 0 motornotbusy1494
	SLEEP
	JR motorwaiting1494
  motornotbusy1494:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1482
  endfor1482:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 5.0 'true'

	DATA8 layer1497
	DATA8 nos1497
	DATA8 busy1497
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1497 nos1497
	JR_EQ8 0 nos1497 motornotbusy1497
  motorwaiting1497:
	OUTPUT_TEST layer1497 nos1497 busy1497
	JR_EQ8 busy1497 0 motornotbusy1497
	SLEEP
	JR motorwaiting1497
  motornotbusy1497:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 197.0 'true'

	DATA8 layer1498
	DATA8 nos1498
	DATA8 busy1498
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1498 nos1498
	JR_EQ8 0 nos1498 motornotbusy1498
  motorwaiting1498:
	OUTPUT_TEST layer1498 nos1498 busy1498
	JR_EQ8 busy1498 0 motornotbusy1498
	SLEEP
	JR motorwaiting1498
  motornotbusy1498:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 121.0 'true'

	DATA8 layer1499
	DATA8 nos1499
	DATA8 busy1499
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1499 nos1499
	JR_EQ8 0 nos1499 motornotbusy1499
  motorwaiting1499:
	OUTPUT_TEST layer1499 nos1499 busy1499
	JR_EQ8 busy1499 0 motornotbusy1499
	SLEEP
	JR motorwaiting1499
  motornotbusy1499:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1501
	MOVEF_32 500.0 milliseconds1501
	DATA32 timer1501
	TIMER_WAIT milliseconds1501 timer1501
	TIMER_READY timer1501
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 110.0 'true'

	DATA8 layer1503
	DATA8 nos1503
	DATA8 busy1503
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1503 nos1503
	JR_EQ8 0 nos1503 motornotbusy1503
  motorwaiting1503:
	OUTPUT_TEST layer1503 nos1503 busy1503
	JR_EQ8 busy1503 0 motornotbusy1503
	SLEEP
	JR motorwaiting1503
  motornotbusy1503:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 0.0 400.0 'true'

	DATA8 layer1504
	DATA8 nos1504
	DATA8 busy1504
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1504 nos1504
	JR_EQ8 0 nos1504 motornotbusy1504
  motorwaiting1504:
	OUTPUT_TEST layer1504 nos1504 busy1504
	JR_EQ8 busy1504 0 motornotbusy1504
	SLEEP
	JR motorwaiting1504
  motornotbusy1504:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1505:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1506:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 48.0 'true'

	DATA8 layer1507
	DATA8 nos1507
	DATA8 busy1507
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1507 nos1507
	JR_EQ8 0 nos1507 motornotbusy1507
  motorwaiting1507:
	OUTPUT_TEST layer1507 nos1507 busy1507
	JR_EQ8 busy1507 0 motornotbusy1507
	SLEEP
	JR motorwaiting1507
  motornotbusy1507:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1509:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1510:
  while1511:
    JR_LTEQF VGV_S3 10.0 endwhile1511
  whilebody1511:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1512:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1513:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1511
  endwhile1511:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1516:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1517:
  while1518:
    JR_GTEQF VGV_S3 60.0 endwhile1518
  whilebody1518:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1519:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1520:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1518
  endwhile1518:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1523
	MOVEF_32 100.0 milliseconds1523
	DATA32 timer1523
	TIMER_WAIT milliseconds1523 timer1523
	TIMER_READY timer1523
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1524:
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1525:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1526:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1527:
    MOVEF_F 40.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1529:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1533
    DATA8 flag1533
    DIVF F.1 2.0 tmpf1533
    CP_EQF 0.0 2.0 flag1533
    SELECTF flag1533 0.0 tmpf1533 F.0

    JR_GTEQF F.0 200.0 endwhile1529
  whilebody1529:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1534:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1535:
    JR_LTEQF VGV_SPEED 30.0 else1536_1
    SUBF VGV_SPEED 0.1 VGV_SPEED
  else1536_1:
  endif1536:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1538:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1542
    DATA8 flag1542
    DIVF F.1 2.0 tmpf1542
    CP_EQF 0.0 2.0 flag1542
    SELECTF flag1542 0.0 tmpf1542 F.0

    JR_LTF F.0 200.0 whilebody1529
  endwhile1529:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1544:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1545:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1546:
    JR_GTF VGV_I 2.0 endfor1546
  forbody1546:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1547:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1548:
  while1549:
    JR_LTEQF VGV_S3 15.0 and1551
    JR_GTF VGV_S2 15.0 or1550
  and1551:
    JR_GTEQF VGV_S3 15.0 endwhile1549
    JR_GTEQF VGV_S2 15.0 endwhile1549
  or1550:
  whilebody1549:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1552:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1553:
    MOVEF_F 50.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1554:
    JR_LTEQF VGV_S3 15.0 and1555
    JR_GTF VGV_S2 15.0 whilebody1549
  and1555:
    JR_GTEQF VGV_S3 15.0 and1556
    JR_LTF VGV_S2 15.0 whilebody1549
  and1556:
  endwhile1549:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1558
	DATA8 nos1558
	DATA8 busy1558
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1558 nos1558
	JR_EQ8 0 nos1558 motornotbusy1558
  motorwaiting1558:
	OUTPUT_TEST layer1558 nos1558 busy1558
	JR_EQ8 busy1558 0 motornotbusy1558
	SLEEP
	JR motorwaiting1558
  motornotbusy1558:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1546
  endfor1546:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 15.0 'true'

	DATA8 layer1561
	DATA8 nos1561
	DATA8 busy1561
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1561 nos1561
	JR_EQ8 0 nos1561 motornotbusy1561
  motorwaiting1561:
	OUTPUT_TEST layer1561 nos1561 busy1561
	JR_EQ8 busy1561 0 motornotbusy1561
	SLEEP
	JR motorwaiting1561
  motornotbusy1561:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1563:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1564:
    MOVEF_F 80.0 VGV_J
  while1565:
    JR_LTEQF VGV_S3 10.0 endwhile1565
  whilebody1565:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1566:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1567:
    JR_LTEQF VGV_J 30.0 else1568_1
    SUBF VGV_J 0.1 VGV_J
  else1568_1:
  endif1568:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1565
  endwhile1565:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1572:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1573:
    MOVEF_F 80.0 VGV_J
  while1574:
    JR_GTEQF VGV_S3 15.0 endwhile1574
  whilebody1574:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1575:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1576:
    JR_LTEQF VGV_J 30.0 else1577_1
    SUBF VGV_J 0.1 VGV_J
  else1577_1:
  endif1577:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1574
  endwhile1574:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1582:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1586
    DATA8 flag1586
    DIVF F.1 2.0 tmpf1586
    CP_EQF 0.0 2.0 flag1586
    SELECTF flag1586 0.0 tmpf1586 F.0

    JR_GTEQF F.0 50.0 endwhile1582
  whilebody1582:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1587:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1588:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1589:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1590:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1592
    DATA8 flag1592
    DIVF F.1 2.0 tmpf1592
    CP_EQF 0.0 2.0 flag1592
    SELECTF flag1592 0.0 tmpf1592 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1604
    DATA8 flag1604
    DIVF F.1 2.0 tmpf1604
    CP_EQF 0.0 2.0 flag1604
    SELECTF flag1604 0.0 tmpf1604 F.0

    JR_LTF F.0 50.0 whilebody1582
  endwhile1582:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 95.0 'true'

	DATA8 layer1606
	DATA8 nos1606
	DATA8 busy1606
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1606 nos1606
	JR_EQ8 0 nos1606 motornotbusy1606
  motorwaiting1606:
	OUTPUT_TEST layer1606 nos1606 busy1606
	JR_EQ8 busy1606 0 motornotbusy1606
	SLEEP
	JR motorwaiting1606
  motornotbusy1606:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1608
	MOVEF_32 500.0 milliseconds1608
	DATA32 timer1608
	TIMER_WAIT milliseconds1608 timer1608
	TIMER_READY timer1608
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1611:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1615
    DATA8 flag1615
    DIVF F.1 2.0 tmpf1615
    CP_EQF 0.0 2.0 flag1615
    SELECTF flag1615 0.0 tmpf1615 F.0

    JR_LTEQF F.0 -240.0 endwhile1611
  whilebody1611:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1620
    DATA8 flag1620
    DIVF F.1 2.0 tmpf1620
    CP_EQF 0.0 2.0 flag1620
    SELECTF flag1620 0.0 tmpf1620 F.0

    JR_GTF F.0 -240.0 whilebody1611
  endwhile1611:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 190.0 'true'

	DATA8 layer1622
	DATA8 nos1622
	DATA8 busy1622
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1622 nos1622
	JR_EQ8 0 nos1622 motornotbusy1622
  motorwaiting1622:
	OUTPUT_TEST layer1622 nos1622 busy1622
	JR_EQ8 busy1622 0 motornotbusy1622
	SLEEP
	JR motorwaiting1622
  motornotbusy1622:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1624:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1625:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 44.0 'true'

	DATA8 layer1626
	DATA8 nos1626
	DATA8 busy1626
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1626 nos1626
	JR_EQ8 0 nos1626 motornotbusy1626
  motorwaiting1626:
	OUTPUT_TEST layer1626 nos1626 busy1626
	JR_EQ8 busy1626 0 motornotbusy1626
	SLEEP
	JR motorwaiting1626
  motornotbusy1626:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1627:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1628:
  while1629:
    JR_LTEQF VGV_S3 10.0 endwhile1629
  whilebody1629:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1630:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1631:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1629
  endwhile1629:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1633:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1634:
  while1635:
    JR_GTEQF VGV_S3 15.0 endwhile1635
  whilebody1635:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1636:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1637:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1635
  endwhile1635:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1640:
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1641
	DATA8 nos1641
	DATA8 busy1641
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1641 nos1641
	JR_EQ8 0 nos1641 motornotbusy1641
  motorwaiting1641:
	OUTPUT_TEST layer1641 nos1641 busy1641
	JR_EQ8 busy1641 0 motornotbusy1641
	SLEEP
	JR motorwaiting1641
  motornotbusy1641:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1642:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1643:
  while1644:
    JR_LTEQF VGV_S3 15.0 endwhile1644
  whilebody1644:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1645:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1646:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1644
  endwhile1644:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1649:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1650:
  while1651:
    JR_GTEQF VGV_S3 15.0 endwhile1651
  whilebody1651:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1652:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1653:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1651
  endwhile1651:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1657:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 270.0 endwhile1657
  whilebody1657:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1659:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 270.0 whilebody1657
  endwhile1657:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1662:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1663:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1664:
    JR_GTF VGV_I 3.0 endfor1664
  forbody1664:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1665:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1666:
  while1667:
    JR_LTEQF VGV_S3 15.0 and1669
    JR_GTF VGV_S2 15.0 or1668
  and1669:
    JR_GTEQF VGV_S3 15.0 endwhile1667
    JR_GTEQF VGV_S2 15.0 endwhile1667
  or1668:
  whilebody1667:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1670:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1671:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1672:
    JR_LTEQF VGV_S3 15.0 and1673
    JR_GTF VGV_S2 15.0 whilebody1667
  and1673:
    JR_GTEQF VGV_S3 15.0 and1674
    JR_LTF VGV_S2 15.0 whilebody1667
  and1674:
  endwhile1667:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1676
	DATA8 nos1676
	DATA8 busy1676
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1676 nos1676
	JR_EQ8 0 nos1676 motornotbusy1676
  motorwaiting1676:
	OUTPUT_TEST layer1676 nos1676 busy1676
	JR_EQ8 busy1676 0 motornotbusy1676
	SLEEP
	JR motorwaiting1676
  motornotbusy1676:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1664
  endfor1664:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 195.0 'true'

	DATA8 layer1679
	DATA8 nos1679
	DATA8 busy1679
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1679 nos1679
	JR_EQ8 0 nos1679 motornotbusy1679
  motorwaiting1679:
	OUTPUT_TEST layer1679 nos1679 busy1679
	JR_EQ8 busy1679 0 motornotbusy1679
	SLEEP
	JR motorwaiting1679
  motornotbusy1679:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 130.0 'true'

	DATA8 layer1680
	DATA8 nos1680
	DATA8 busy1680
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1680 nos1680
	JR_EQ8 0 nos1680 motornotbusy1680
  motorwaiting1680:
	OUTPUT_TEST layer1680 nos1680 busy1680
	JR_EQ8 busy1680 0 motornotbusy1680
	SLEEP
	JR motorwaiting1680
  motornotbusy1680:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1682
	MOVEF_32 500.0 milliseconds1682
	DATA32 timer1682
	TIMER_WAIT milliseconds1682 timer1682
	TIMER_READY timer1682
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1684
	DATA8 nos1684
	DATA8 busy1684
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1684 nos1684
	JR_EQ8 0 nos1684 motornotbusy1684
  motorwaiting1684:
	OUTPUT_TEST layer1684 nos1684 busy1684
	JR_EQ8 busy1684 0 motornotbusy1684
	SLEEP
	JR motorwaiting1684
  motornotbusy1684:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 370.0 'true'

	DATA8 layer1685
	DATA8 nos1685
	DATA8 busy1685
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1685 nos1685
	JR_EQ8 0 nos1685 motornotbusy1685
  motorwaiting1685:
	OUTPUT_TEST layer1685 nos1685 busy1685
	JR_EQ8 busy1685 0 motornotbusy1685
	SLEEP
	JR motorwaiting1685
  motornotbusy1685:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 199.0 'true'

	DATA8 layer1686
	DATA8 nos1686
	DATA8 busy1686
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1686 nos1686
	JR_EQ8 0 nos1686 motornotbusy1686
  motorwaiting1686:
	OUTPUT_TEST layer1686 nos1686 busy1686
	JR_EQ8 busy1686 0 motornotbusy1686
	SLEEP
	JR motorwaiting1686
  motornotbusy1686:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 300.0 'true'

	DATA8 layer1687
	DATA8 nos1687
	DATA8 busy1687
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1687 nos1687
	JR_EQ8 0 nos1687 motornotbusy1687
  motorwaiting1687:
	OUTPUT_TEST layer1687 nos1687 busy1687
	JR_EQ8 busy1687 0 motornotbusy1687
	SLEEP
	JR motorwaiting1687
  motornotbusy1687:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 300.0 'true'

	DATA8 layer1688
	DATA8 nos1688
	DATA8 busy1688
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1688 nos1688
	JR_EQ8 0 nos1688 motornotbusy1688
  motorwaiting1688:
	OUTPUT_TEST layer1688 nos1688 busy1688
	JR_EQ8 busy1688 0 motornotbusy1688
	SLEEP
	JR motorwaiting1688
  motornotbusy1688:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1689:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1690:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 55.0 'true'

	DATA8 layer1691
	DATA8 nos1691
	DATA8 busy1691
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1691 nos1691
	JR_EQ8 0 nos1691 motornotbusy1691
  motorwaiting1691:
	OUTPUT_TEST layer1691 nos1691 busy1691
	JR_EQ8 busy1691 0 motornotbusy1691
	SLEEP
	JR motorwaiting1691
  motornotbusy1691:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1693:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1694:
  while1695:
    JR_LTEQF VGV_S3 10.0 endwhile1695
  whilebody1695:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1696:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1697:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1695
  endwhile1695:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1700:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1701:
  while1702:
    JR_GTEQF VGV_S3 60.0 endwhile1702
  whilebody1702:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1703:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1704:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1702
  endwhile1702:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1707:
    JR_GTF VGV_I 1.0 endfor1707
  forbody1707:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1708:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1709:
  while1710:
    JR_LTEQF VGV_S3 10.0 and1712
    JR_GTF VGV_S2 10.0 or1711
  and1712:
    JR_GTEQF VGV_S3 10.0 endwhile1710
    JR_GTEQF VGV_S2 10.0 endwhile1710
  or1711:
  whilebody1710:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1713:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1714:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1715:
    JR_LTEQF VGV_S3 10.0 and1716
    JR_GTF VGV_S2 10.0 whilebody1710
  and1716:
    JR_GTEQF VGV_S3 10.0 and1717
    JR_LTF VGV_S2 10.0 whilebody1710
  and1717:
  endwhile1710:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1719
	DATA8 nos1719
	DATA8 busy1719
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1719 nos1719
	JR_EQ8 0 nos1719 motornotbusy1719
  motorwaiting1719:
	OUTPUT_TEST layer1719 nos1719 busy1719
	JR_EQ8 busy1719 0 motornotbusy1719
	SLEEP
	JR motorwaiting1719
  motornotbusy1719:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1707
  endfor1707:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 45.0 'true'

	DATA8 layer1722
	DATA8 nos1722
	DATA8 busy1722
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1722 nos1722
	JR_EQ8 0 nos1722 motornotbusy1722
  motorwaiting1722:
	OUTPUT_TEST layer1722 nos1722 busy1722
	JR_EQ8 busy1722 0 motornotbusy1722
	SLEEP
	JR motorwaiting1722
  motornotbusy1722:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1724
	DATA8 nos1724
	DATA8 busy1724
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1724 nos1724
	JR_EQ8 0 nos1724 motornotbusy1724
  motorwaiting1724:
	OUTPUT_TEST layer1724 nos1724 busy1724
	JR_EQ8 busy1724 0 motornotbusy1724
	SLEEP
	JR motorwaiting1724
  motornotbusy1724:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1725:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1726:
  while1727:
    JR_LTEQF VGV_S2 15.0 endwhile1727
  whilebody1727:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1728:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1729:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody1727
  endwhile1727:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1732:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1733:
  while1734:
    JR_GTEQF VGV_S2 55.0 endwhile1734
  whilebody1734:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1735:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1736:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody1734
  endwhile1734:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1740:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1744
    DATA8 flag1744
    DIVF F.1 2.0 tmpf1744
    CP_EQF 0.0 2.0 flag1744
    SELECTF flag1744 0.0 tmpf1744 F.0

    JR_GTEQF F.0 30.0 endwhile1740
  whilebody1740:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1745:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1749
    DATA8 flag1749
    DIVF F.1 2.0 tmpf1749
    CP_EQF 0.0 2.0 flag1749
    SELECTF flag1749 0.0 tmpf1749 F.0

    JR_LTF F.0 30.0 whilebody1740
  endwhile1740:
    CALL MOTOR.SCHEDULESYNC 'BC' 20.0 20.0 210.0 'true'

	DATA8 layer1750
	DATA8 nos1750
	DATA8 busy1750
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1750 nos1750
	JR_EQ8 0 nos1750 motornotbusy1750
  motorwaiting1750:
	OUTPUT_TEST layer1750 nos1750 busy1750
	JR_EQ8 busy1750 0 motornotbusy1750
	SLEEP
	JR motorwaiting1750
  motornotbusy1750:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1752
	MOVEF_32 100.0 milliseconds1752
	DATA32 timer1752
	TIMER_WAIT milliseconds1752 timer1752
	TIMER_READY timer1752
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1754
	MOVEF_32 500.0 milliseconds1754
	DATA32 timer1754
	TIMER_WAIT milliseconds1754 timer1754
	TIMER_READY timer1754
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB1756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB1756:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1757:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1758:
  while1759:
    JR_LTEQF VGV_S2 9.0 and1761
    JR_GTF VGV_S3 9.0 or1760
  and1761:
    JR_GTEQF VGV_S2 9.0 and1762
    JR_GTF VGV_S3 9.0 or1760
  and1762:
    JR_LTEQF VGV_S2 9.0 endwhile1759
    JR_GTEQF VGV_S3 9.0 endwhile1759
  or1760:
  whilebody1759:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1763:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1764:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1766
    JR_GTF VGV_S3 9.0 whilebody1759
  and1766:
    JR_GTEQF VGV_S2 9.0 and1767
    JR_GTF VGV_S3 9.0 whilebody1759
  and1767:
    JR_LTEQF VGV_S2 9.0 and1768
    JR_LTF VGV_S3 9.0 whilebody1759
  and1768:
  endwhile1759:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1769
	DATA8 nos1769
	DATA8 busy1769
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1769 nos1769
	JR_EQ8 0 nos1769 motornotbusy1769
  motorwaiting1769:
	OUTPUT_TEST layer1769 nos1769 busy1769
	JR_EQ8 busy1769 0 motornotbusy1769
	SLEEP
	JR motorwaiting1769
  motornotbusy1769:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1771
	DATA8 nos1771
	DATA8 busy1771
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1771 nos1771
	JR_EQ8 0 nos1771 motornotbusy1771
  motorwaiting1771:
	OUTPUT_TEST layer1771 nos1771 busy1771
	JR_EQ8 busy1771 0 motornotbusy1771
	SLEEP
	JR motorwaiting1771
  motornotbusy1771:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1773:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1774:
  while1775:
    JR_LTEQF VGV_S2 10.0 endwhile1775
  whilebody1775:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1776:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1777:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1775
  endwhile1775:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1779:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1780:
  while1781:
    JR_GTEQF VGV_S2 60.0 endwhile1781
  whilebody1781:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1782:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1783:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1781
  endwhile1781:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1786
    DATA8 flag1786
    DIVF 360.0 VGV_L tmpf1786
    CP_EQF 0.0 VGV_L flag1786
    SELECTF flag1786 0.0 tmpf1786 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1789:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1789
  whilebody1789:
    JR_GTEQF VGV_SPEED 90.0 else1791_1
    ADDF VGV_SPEED 0.4 VGV_SPEED
  else1791_1:
  endif1791:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1793:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1789
  endwhile1789:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1796:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1797:
    MOVEF_F 1400.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1798:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 55.0 'true'

	DATA8 layer1800
	DATA8 nos1800
	DATA8 busy1800
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1800 nos1800
	JR_EQ8 0 nos1800 motornotbusy1800
  motorwaiting1800:
	OUTPUT_TEST layer1800 nos1800 busy1800
	JR_EQ8 busy1800 0 motornotbusy1800
	SLEEP
	JR motorwaiting1800
  motornotbusy1800:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1802
	DATA8 nos1802
	DATA8 busy1802
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1802 nos1802
	JR_EQ8 0 nos1802 motornotbusy1802
  motorwaiting1802:
	OUTPUT_TEST layer1802 nos1802 busy1802
	JR_EQ8 busy1802 0 motornotbusy1802
	SLEEP
	JR motorwaiting1802
  motornotbusy1802:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1803:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1804:
  while1805:
    JR_LTEQF VGV_S2 15.0 endwhile1805
  whilebody1805:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1806:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1807:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody1805
  endwhile1805:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1810:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1811:
  while1812:
    JR_GTEQF VGV_S2 55.0 endwhile1812
  whilebody1812:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1813:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1814:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody1812
  endwhile1812:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1818:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1822
    DATA8 flag1822
    DIVF F.1 2.0 tmpf1822
    CP_EQF 0.0 2.0 flag1822
    SELECTF flag1822 0.0 tmpf1822 F.0

    JR_GTEQF F.0 70.0 endwhile1818
  whilebody1818:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1823:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1824:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1825:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1829
    DATA8 flag1829
    DIVF F.1 2.0 tmpf1829
    CP_EQF 0.0 2.0 flag1829
    SELECTF flag1829 0.0 tmpf1829 F.0

    JR_LTF F.0 70.0 whilebody1818
  endwhile1818:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1831
	DATA8 nos1831
	DATA8 busy1831
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1831 nos1831
	JR_EQ8 0 nos1831 motornotbusy1831
  motorwaiting1831:
	OUTPUT_TEST layer1831 nos1831 busy1831
	JR_EQ8 busy1831 0 motornotbusy1831
	SLEEP
	JR motorwaiting1831
  motornotbusy1831:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1833
	MOVEF_32 500.0 milliseconds1833
	DATA32 timer1833
	TIMER_WAIT milliseconds1833 timer1833
	TIMER_READY timer1833
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1835:
    MOVEF_F 190.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1836:
    WRITE32 ENDSUB_F_VIDVIG_0:CALLSUB1837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
CALLSUB1837:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1838:
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    DATA32 milliseconds1839
	MOVEF_32 400.0 milliseconds1839
	DATA32 timer1839
	TIMER_WAIT milliseconds1839 timer1839
	TIMER_READY timer1839
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -15.0 150.0 'true'

	DATA8 layer1840
	DATA8 nos1840
	DATA8 busy1840
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1840 nos1840
	JR_EQ8 0 nos1840 motornotbusy1840
  motorwaiting1840:
	OUTPUT_TEST layer1840 nos1840 busy1840
	JR_EQ8 busy1840 0 motornotbusy1840
	SLEEP
	JR motorwaiting1840
  motornotbusy1840:
    DATA32 milliseconds1841
	MOVEF_32 400.0 milliseconds1841
	DATA32 timer1841
	TIMER_WAIT milliseconds1841 timer1841
	TIMER_READY timer1841
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 200.0 'true'

	DATA8 layer1842
	DATA8 nos1842
	DATA8 busy1842
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1842 nos1842
	JR_EQ8 0 nos1842 motornotbusy1842
  motorwaiting1842:
	OUTPUT_TEST layer1842 nos1842 busy1842
	JR_EQ8 busy1842 0 motornotbusy1842
	SLEEP
	JR motorwaiting1842
  motornotbusy1842:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1844:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1845 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1845:
  while1846:
    JR_LTEQF VGV_S2 12.0 endwhile1846
  whilebody1846:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1847:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1848:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 12.0 whilebody1846
  endwhile1846:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1851:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1852:
  while1853:
    JR_GTEQF VGV_S2 60.0 endwhile1853
  whilebody1853:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1854:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1855:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1853
  endwhile1853:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1859:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1863
    DATA8 flag1863
    DIVF F.1 2.0 tmpf1863
    CP_EQF 0.0 2.0 flag1863
    SELECTF flag1863 0.0 tmpf1863 F.0

    JR_GTEQF F.0 300.0 endwhile1859
  whilebody1859:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1864:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1865:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1866:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1870
    DATA8 flag1870
    DIVF F.1 2.0 tmpf1870
    CP_EQF 0.0 2.0 flag1870
    SELECTF flag1870 0.0 tmpf1870 F.0

    JR_LTF F.0 300.0 whilebody1859
  endwhile1859:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.15 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1872:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1873:
  while1874:
    JR_LTEQF VGV_S3 15.0 and1876
    JR_GTF VGV_S2 15.0 or1875
  and1876:
    JR_GTEQF VGV_S3 10.0 endwhile1874
    JR_GTEQF VGV_S2 15.0 endwhile1874
  or1875:
  whilebody1874:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1877:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1878:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1879:
    JR_LTEQF VGV_S3 15.0 and1880
    JR_GTF VGV_S2 15.0 whilebody1874
  and1880:
    JR_GTEQF VGV_S3 10.0 and1881
    JR_LTF VGV_S2 15.0 whilebody1874
  and1881:
  endwhile1874:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1883
	DATA8 no1883
	DATA8 mode81883
	
	MOVEF_8 1.0 no1883
	SUB8 no1883 1 no1883
	DIV8 no1883 4 layer1883
	MATH MOD8 no1883 4 no1883

	MOVEF_8 2.0 mode81883
	
	INPUT_DEVICE READY_RAW layer1883 no1883 0 mode81883 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1890
    DATA8 flag1890
    DIVF VGV_SRED 255.0 tmpf1890
    CP_EQF 0.0 255.0 flag1890
    SELECTF flag1890 0.0 tmpf1890 VGV_SRED

    DATAF tmpf1891
    DATA8 flag1891
    DIVF VGV_SGREEN 255.0 tmpf1891
    CP_EQF 0.0 255.0 flag1891
    SELECTF flag1891 0.0 tmpf1891 VGV_SGREEN

    DATAF tmpf1892
    DATA8 flag1892
    DIVF VGV_SBLUE 255.0 tmpf1892
    CP_EQF 0.0 255.0 flag1892
    SELECTF flag1892 0.0 tmpf1892 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1893_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1893_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1893
  else1893_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1893_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1893_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1893
  else1893_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1893_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1893_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1893_3:
  endif1893:
    JR_GTEQF VGV_SRED VGV_SGREEN else1894_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1894_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1894
  else1894_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1894_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1894_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1894
  else1894_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1894_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1894_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1894_3:
  endif1894:
    JR_NEQF VGV_MAX VGV_MIN else1895_1
    MOVEF_F 0.0 VGV_H
    JR endif1895
  else1895_1:
    JR_NEQF VGV_SRED VGV_MAX else1896_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1897_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1901
    DATA8 flag1901
    DIVF F.0 F.1 tmpf1901
    CP_EQF 0.0 F.1 flag1901
    SELECTF flag1901 0.0 tmpf1901 VGV_H

    JR endif1897
  else1897_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1905
    DATA8 flag1905
    DIVF F.1 F.2 tmpf1905
    CP_EQF 0.0 F.2 flag1905
    SELECTF flag1905 0.0 tmpf1905 F.0

    ADDF F.0 360.0 VGV_H
  else1897_2:
  endif1897:
    JR endif1896
  else1896_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1907_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1911
    DATA8 flag1911
    DIVF F.1 F.2 tmpf1911
    CP_EQF 0.0 F.2 flag1911
    SELECTF flag1911 0.0 tmpf1911 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1907
  else1907_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1916
    DATA8 flag1916
    DIVF F.1 F.2 tmpf1916
    CP_EQF 0.0 F.2 flag1916
    SELECTF flag1916 0.0 tmpf1916 F.0

    ADDF F.0 240.0 VGV_H
  else1907_2:
  endif1907:
  else1896_2:
  endif1896:
  else1895_2:
  endif1895:
    JR_NEQF VGV_MAX 0.0 else1918_1
    MOVEF_F 0.0 VGV_S
    JR endif1918
  else1918_1:
    DATAF tmpf1919
    DATA8 flag1919
    DIVF VGV_MIN VGV_MAX tmpf1919
    CP_EQF 0.0 VGV_MAX flag1919
    SELECTF flag1919 0.0 tmpf1919 F.0

    SUBF 1.0 F.0 VGV_S
  else1918_2:
  endif1918:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1928
	DATA8 no1928
	DATA8 mode81928
	
	MOVEF_8 1.0 no1928
	SUB8 no1928 1 no1928
	DIV8 no1928 4 layer1928
	MATH MOD8 no1928 4 no1928

	MOVEF_8 2.0 mode81928
	
	INPUT_DEVICE READY_RAW layer1928 no1928 0 mode81928 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1929:
    JR_GTF VGV_P 100.0 endfor1929
  forbody1929:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1930:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1929
  endfor1929:
    DATAF tmpf1935
    DATA8 flag1935
    DIVF VGV_X 100.0 tmpf1935
    CP_EQF 0.0 100.0 flag1935
    SELECTF flag1935 0.0 tmpf1935 VGV_H

    DATAF tmpf1936
    DATA8 flag1936
    DIVF VGV_Z 100.0 tmpf1936
    CP_EQF 0.0 100.0 flag1936
    SELECTF flag1936 0.0 tmpf1936 VGV_S

    DATAF tmpf1937
    DATA8 flag1937
    DIVF VGV_D 100.0 tmpf1937
    CP_EQF 0.0 100.0 flag1937
    SELECTF flag1937 0.0 tmpf1937 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1945
	DATA8 no1945
	DATA8 mode81945
	
	MOVEF_8 1.0 no1945
	SUB8 no1945 1 no1945
	DIV8 no1945 4 layer1945
	MATH MOD8 no1945 4 no1945

	MOVEF_8 2.0 mode81945
	
	INPUT_DEVICE READY_RAW layer1945 no1945 0 mode81945 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1952
    DATA8 flag1952
    DIVF VGV_SRED 255.0 tmpf1952
    CP_EQF 0.0 255.0 flag1952
    SELECTF flag1952 0.0 tmpf1952 VGV_SRED

    DATAF tmpf1953
    DATA8 flag1953
    DIVF VGV_SGREEN 255.0 tmpf1953
    CP_EQF 0.0 255.0 flag1953
    SELECTF flag1953 0.0 tmpf1953 VGV_SGREEN

    DATAF tmpf1954
    DATA8 flag1954
    DIVF VGV_SBLUE 255.0 tmpf1954
    CP_EQF 0.0 255.0 flag1954
    SELECTF flag1954 0.0 tmpf1954 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1955_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1955_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1955
  else1955_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1955_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1955_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1955
  else1955_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1955_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1955_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1955_3:
  endif1955:
    JR_GTEQF VGV_SRED VGV_SGREEN else1956_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1956_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1956
  else1956_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1956_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1956_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1956
  else1956_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1956_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1956_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1956_3:
  endif1956:
    JR_NEQF VGV_MAX VGV_MIN else1957_1
    MOVEF_F 0.0 VGV_H
    JR endif1957
  else1957_1:
    JR_NEQF VGV_SRED VGV_MAX else1958_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1959_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1963
    DATA8 flag1963
    DIVF F.0 F.1 tmpf1963
    CP_EQF 0.0 F.1 flag1963
    SELECTF flag1963 0.0 tmpf1963 VGV_H

    JR endif1959
  else1959_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1967
    DATA8 flag1967
    DIVF F.1 F.2 tmpf1967
    CP_EQF 0.0 F.2 flag1967
    SELECTF flag1967 0.0 tmpf1967 F.0

    ADDF F.0 360.0 VGV_H
  else1959_2:
  endif1959:
    JR endif1958
  else1958_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1969_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1973
    DATA8 flag1973
    DIVF F.1 F.2 tmpf1973
    CP_EQF 0.0 F.2 flag1973
    SELECTF flag1973 0.0 tmpf1973 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1969
  else1969_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1978
    DATA8 flag1978
    DIVF F.1 F.2 tmpf1978
    CP_EQF 0.0 F.2 flag1978
    SELECTF flag1978 0.0 tmpf1978 F.0

    ADDF F.0 240.0 VGV_H
  else1969_2:
  endif1969:
  else1958_2:
  endif1958:
  else1957_2:
  endif1957:
    JR_NEQF VGV_MAX 0.0 else1980_1
    MOVEF_F 0.0 VGV_S
    JR endif1980
  else1980_1:
    DATAF tmpf1981
    DATA8 flag1981
    DIVF VGV_MIN VGV_MAX tmpf1981
    CP_EQF 0.0 VGV_MAX flag1981
    SELECTF flag1981 0.0 tmpf1981 F.0

    SUBF 1.0 F.0 VGV_S
  else1980_2:
  endif1980:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1985
    JR_LTF VGV_H 360.0 or1984
  and1985:
    JR_LTF VGV_H 0.0 else1983_1
    JR_GTF VGV_H 20.0 else1983_1
    JR_LTEQF VGV_S 0.3 else1983_1
    JR_GTF VGV_S 1.0 else1983_1
    JR_LTEQF VGV_V 0.025 else1983_1
    JR_GTEQF VGV_V 0.1 else1983_1
  or1984:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1983
  else1983_1:
    JR_LTF VGV_H 20.0 else1983_2
    JR_GTEQF VGV_H 60.0 else1983_2
    JR_LTF VGV_S 0.4 else1983_2
    JR_LTEQF VGV_V 0.03 else1983_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1983
  else1983_2:
    MOVEF_F 6.0 VGV_COLOR
  else1983_3:
  endif1983:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1986
	DATA8 no1986
	DATA8 mode81986
	
	MOVEF_8 1.0 no1986
	SUB8 no1986 1 no1986
	DIV8 no1986 4 layer1986
	MATH MOD8 no1986 4 no1986

	MOVEF_8 2.0 mode81986
	
	INPUT_DEVICE READY_RAW layer1986 no1986 0 mode81986 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1993
    DATA8 flag1993
    DIVF VGV_SRED 255.0 tmpf1993
    CP_EQF 0.0 255.0 flag1993
    SELECTF flag1993 0.0 tmpf1993 VGV_SRED

    DATAF tmpf1994
    DATA8 flag1994
    DIVF VGV_SGREEN 255.0 tmpf1994
    CP_EQF 0.0 255.0 flag1994
    SELECTF flag1994 0.0 tmpf1994 VGV_SGREEN

    DATAF tmpf1995
    DATA8 flag1995
    DIVF VGV_SBLUE 255.0 tmpf1995
    CP_EQF 0.0 255.0 flag1995
    SELECTF flag1995 0.0 tmpf1995 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1996_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1996_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1996
  else1996_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1996_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1996_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1996
  else1996_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1996_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1996_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1996_3:
  endif1996:
    JR_GTEQF VGV_SRED VGV_SGREEN else1997_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1997_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1997
  else1997_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1997_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1997_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1997
  else1997_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1997_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1997_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1997_3:
  endif1997:
    JR_NEQF VGV_MAX VGV_MIN else1998_1
    MOVEF_F 0.0 VGV_H
    JR endif1998
  else1998_1:
    JR_NEQF VGV_SRED VGV_MAX else1999_1
    JR_LTF VGV_SGREEN VGV_SBLUE else2000_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf2004
    DATA8 flag2004
    DIVF F.0 F.1 tmpf2004
    CP_EQF 0.0 F.1 flag2004
    SELECTF flag2004 0.0 tmpf2004 VGV_H

    JR endif2000
  else2000_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf2008
    DATA8 flag2008
    DIVF F.1 F.2 tmpf2008
    CP_EQF 0.0 F.2 flag2008
    SELECTF flag2008 0.0 tmpf2008 F.0

    ADDF F.0 360.0 VGV_H
  else2000_2:
  endif2000:
    JR endif1999
  else1999_1:
    JR_NEQF VGV_MAX VGV_SGREEN else2010_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf2014
    DATA8 flag2014
    DIVF F.1 F.2 tmpf2014
    CP_EQF 0.0 F.2 flag2014
    SELECTF flag2014 0.0 tmpf2014 F.0

    ADDF F.0 120.0 VGV_H
    JR endif2010
  else2010_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf2019
    DATA8 flag2019
    DIVF F.1 F.2 tmpf2019
    CP_EQF 0.0 F.2 flag2019
    SELECTF flag2019 0.0 tmpf2019 F.0

    ADDF F.0 240.0 VGV_H
  else2010_2:
  endif2010:
  else1999_2:
  endif1999:
  else1998_2:
  endif1998:
    JR_NEQF VGV_MAX 0.0 else2021_1
    MOVEF_F 0.0 VGV_S
    JR endif2021
  else2021_1:
    DATAF tmpf2022
    DATA8 flag2022
    DIVF VGV_MIN VGV_MAX tmpf2022
    CP_EQF 0.0 VGV_MAX flag2022
    SELECTF flag2022 0.0 tmpf2022 F.0

    SUBF 1.0 F.0 VGV_S
  else2021_2:
  endif2021:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and2026
    JR_LTF VGV_H 360.0 or2025
  and2026:
    JR_LTF VGV_H 0.0 else2024_1
    JR_GTF VGV_H 30.0 else2024_1
    JR_LTEQF VGV_S 0.3 else2024_1
    JR_GTF VGV_S 1.0 else2024_1
    JR_LTF VGV_V 0.0 else2024_1
    JR_GTEQF VGV_V 0.02 else2024_1
  or2025:
    MOVEF_F 5.0 VGV_COLOR
    JR endif2024
  else2024_1:
    JR_LTF VGV_H 0.0 else2024_2
    JR_GTEQF VGV_H 60.0 else2024_2
    JR_LTF VGV_S 0.4 else2024_2
    JR_GTF VGV_S 1.0 else2024_2
    JR_LTEQF VGV_V 0.003 else2024_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif2024
  else2024_2:
    MOVEF_F 6.0 VGV_COLOR
  else2024_3:
  endif2024:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf2031
    DATA8 flag2031
    DIVF F.0 F.1 tmpf2031
    CP_EQF 0.0 F.1 flag2031
    SELECTF flag2031 0.0 tmpf2031 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf2036
    DATA8 flag2036
    DIVF F.0 F.1 tmpf2036
    CP_EQF 0.0 F.1 flag2036
    SELECTF flag2036 0.0 tmpf2036 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2037:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2038:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K3 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_POLIN2DUS_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2048:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2049:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF 0.15 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF 8.0 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2DUS_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2DUS_0:
SUB_F_ZAMOROZ_0:
    JR_NEQF VGV_AB 0.0 else2059_1
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
  else2059_1:
  endif2059:
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds2064
	MOVEF_32 100.0 milliseconds2064
	DATA32 timer2064
	TIMER_WAIT milliseconds2064 timer2064
	TIMER_READY timer2064
  while2065:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile2065
  whilebody2065:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody2065
  endwhile2065:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds2071
	MOVEF_32 250.0 milliseconds2071
	DATA32 timer2071
	TIMER_WAIT milliseconds2071 timer2071
	TIMER_READY timer2071
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2073:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2074:
  while2075:
    JR_LTEQF VGV_S2 9.0 and2077
    JR_GTF VGV_S3 9.0 or2076
  and2077:
    JR_GTEQF VGV_S2 9.0 and2078
    JR_GTF VGV_S3 9.0 or2076
  and2078:
    JR_LTEQF VGV_S2 9.0 endwhile2075
    JR_GTEQF VGV_S3 9.0 endwhile2075
  or2076:
  whilebody2075:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2079:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2080:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and2082
    JR_GTF VGV_S3 9.0 whilebody2075
  and2082:
    JR_GTEQF VGV_S2 9.0 and2083
    JR_GTF VGV_S3 9.0 whilebody2075
  and2083:
    JR_LTEQF VGV_S2 9.0 and2084
    JR_LTF VGV_S3 9.0 whilebody2075
  and2084:
  endwhile2075:
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2085
	DATA8 no2085
	DATA8 mode82085
	
	MOVEF_8 2.0 no2085
	SUB8 no2085 1 no2085
	DIV8 no2085 4 layer2085
	MATH MOD8 no2085 4 no2085

	MOVEF_8 0.0 mode82085
	
	INPUT_DEVICE READY_RAW layer2085 no2085 0 mode82085 0
    DATA8 layer2086
	DATA8 no2086
	DATA8 mode82086
	
	MOVEF_8 3.0 no2086
	SUB8 no2086 1 no2086
	DIV8 no2086 4 layer2086
	MATH MOD8 no2086 4 no2086

	MOVEF_8 0.0 mode82086
	
	INPUT_DEVICE READY_RAW layer2086 no2086 0 mode82086 0
  while2087:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2087
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2087
  whilebody2087:
    CALL MOTOR.STARTSYNC 'BC' 40.0 40.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2091
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2087
  and2091:
  endwhile2087:
    CALL MOTOR.STOP 'BC' 'True'
  while2095:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2095
  whilebody2095:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2095
  endwhile2095:
    CALL MOTOR.STOP 'B' 'True'
  while2100:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2100
  whilebody2100:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2100
  endwhile2100:
    CALL MOTOR.STOP 'C' 'True'
  while2105:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2105
  whilebody2105:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2105
  endwhile2105:
    CALL MOTOR.STOP 'B' 'True'
  while2110:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2110
  whilebody2110:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2110
  endwhile2110:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
