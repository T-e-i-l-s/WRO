DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2087
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2087:
    JR_NEQ32 SUBPROGRAM 1 dispatch2088
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2088:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 30.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB60:
    WRITE32 ENDSUB_F_A2_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB61:
  while62:
    JR_LTEQF VGV_S3 10.0 and64
    JR_GTF VGV_S2 10.0 or63
  and64:
    JR_GTEQF VGV_S3 10.0 endwhile62
    JR_GTEQF VGV_S2 10.0 endwhile62
  or63:
  whilebody62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB65:
    WRITE32 ENDSUB_F_A2_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB66:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB67:
    JR_LTEQF VGV_S3 10.0 and68
    JR_GTF VGV_S2 10.0 whilebody62
  and68:
    JR_GTEQF VGV_S3 10.0 and69
    JR_LTF VGV_S2 10.0 whilebody62
  and69:
  endwhile62:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB71:
    JR_GTF VGV_H 100.0 or73
    JR_LTF VGV_H 0.0 else72_1
    JR_GTF VGV_H 27.0 else72_1
  or73:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif72
  else72_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else72_2:
  endif72:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    DATA32 tmp77
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp77
    JR_NEQ32 0 tmp77 alreadylaunched77
    OBJECT_START TF_ZADVIG_0
  alreadylaunched77:
    JR_NEQF VGV_COLOR 4.0 else78_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB79:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer80
	DATA8 nos80
	DATA8 busy80
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer80 nos80
	JR_EQ8 0 nos80 motornotbusy80
  motorwaiting80:
	OUTPUT_TEST layer80 nos80 busy80
	JR_EQ8 busy80 0 motornotbusy80
	SLEEP
	JR motorwaiting80
  motornotbusy80:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer82
	DATA8 nos82
	DATA8 busy82
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer82 nos82
	JR_EQ8 0 nos82 motornotbusy82
  motorwaiting82:
	OUTPUT_TEST layer82 nos82 busy82
	JR_EQ8 busy82 0 motornotbusy82
	SLEEP
	JR motorwaiting82
  motornotbusy82:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while86:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 625.0 endwhile86
  whilebody86:
    WRITE32 ENDSUB_F_A3_0:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB88:
    WRITE32 ENDSUB_F_A2_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB89:
    JR_GTEQF VGV_SPEED 50.0 else90_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else90_1:
  endif90:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB92:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 625.0 whilebody86
  endwhile86:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB95:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer96
	DATA8 nos96
	DATA8 busy96
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer96 nos96
	JR_EQ8 0 nos96 motornotbusy96
  motorwaiting96:
	OUTPUT_TEST layer96 nos96 busy96
	JR_EQ8 busy96 0 motornotbusy96
	SLEEP
	JR motorwaiting96
  motornotbusy96:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer98
	DATA8 nos98
	DATA8 busy98
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer98 nos98
	JR_EQ8 0 nos98 motornotbusy98
  motorwaiting98:
	OUTPUT_TEST layer98 nos98 busy98
	JR_EQ8 busy98 0 motornotbusy98
	SLEEP
	JR motorwaiting98
  motornotbusy98:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 20.0 VGV_SPEED
  while100:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 100.0 endwhile100
  whilebody100:
    WRITE32 ENDSUB_F_A3_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB102:
    WRITE32 ENDSUB_F_A2_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB103:
    JR_GTEQF VGV_SPEED 50.0 else104_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else104_1:
  endif104:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB106:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 100.0 whilebody100
  endwhile100:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB109:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else111_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB112:
    ADDF VGV_C 1.0 VGV_C
    JR endif111
  else111_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer115
	DATA8 nos115
	DATA8 busy115
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer115 nos115
	JR_EQ8 0 nos115 motornotbusy115
  motorwaiting115:
	OUTPUT_TEST layer115 nos115 busy115
	JR_EQ8 busy115 0 motornotbusy115
	SLEEP
	JR motorwaiting115
  motornotbusy115:
  while116:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and118
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or117
  and118:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and121
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or117
  and121:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile116
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile116
  or117:
  whilebody116:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and130
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody116
  and130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and133
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and133:
  endwhile116:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB136:
    WRITE32 ENDSUB_F_A2_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB137:
  while138:
    JR_LTEQF VGV_S3 10.0 and140
    JR_GTF VGV_S2 10.0 or139
  and140:
    JR_GTEQF VGV_S3 10.0 endwhile138
    JR_GTEQF VGV_S2 10.0 endwhile138
  or139:
  whilebody138:
    WRITE32 ENDSUB_F_A3_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB141:
    WRITE32 ENDSUB_F_A2_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB142:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB143:
    JR_LTEQF VGV_S3 10.0 and144
    JR_GTF VGV_S2 10.0 whilebody138
  and144:
    JR_GTEQF VGV_S3 10.0 and145
    JR_LTF VGV_S2 10.0 whilebody138
  and145:
  endwhile138:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
  else111_2:
  endif111:
    JR endif78
  else78_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
    MOVEF_F 20.0 VGV_SPEED
  while160:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 625.0 endwhile160
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB162:
    WRITE32 ENDSUB_F_A2_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB163:
    JR_GTEQF VGV_SPEED 50.0 else164_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else164_1:
  endif164:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB166:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 625.0 whilebody160
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer170
	DATA8 nos170
	DATA8 busy170
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer170 nos170
	JR_EQ8 0 nos170 motornotbusy170
  motorwaiting170:
	OUTPUT_TEST layer170 nos170 busy170
	JR_EQ8 busy170 0 motornotbusy170
	SLEEP
	JR motorwaiting170
  motornotbusy170:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer171
	DATA8 nos171
	DATA8 busy171
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer171 nos171
	JR_EQ8 0 nos171 motornotbusy171
  motorwaiting171:
	OUTPUT_TEST layer171 nos171 busy171
	JR_EQ8 busy171 0 motornotbusy171
	SLEEP
	JR motorwaiting171
  motornotbusy171:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds174
	MOVEF_32 500.0 milliseconds174
	DATA32 timer174
	TIMER_WAIT milliseconds174 timer174
	TIMER_READY timer174
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB176:
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while178:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile178
  whilebody178:
    WRITE32 ENDSUB_F_A3_0:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB180:
    WRITE32 ENDSUB_F_A2_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB181:
    JR_GTEQF VGV_SPEED 50.0 else182_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else182_1:
  endif182:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB184:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody178
  endwhile178:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else187_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB188:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer189
	DATA8 nos189
	DATA8 busy189
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer189 nos189
	JR_EQ8 0 nos189 motornotbusy189
  motorwaiting189:
	OUTPUT_TEST layer189 nos189 busy189
	JR_EQ8 busy189 0 motornotbusy189
	SLEEP
	JR motorwaiting189
  motornotbusy189:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB191:
    WRITE32 ENDSUB_F_A2_0:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB192:
  while193:
    JR_LTEQF VGV_S3 15.0 endwhile193
  whilebody193:
    WRITE32 ENDSUB_F_A3_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB194:
    WRITE32 ENDSUB_F_A2_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB195:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody193
  endwhile193:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB198:
    WRITE32 ENDSUB_F_A2_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB199:
  while200:
    JR_GTEQF VGV_S3 35.0 endwhile200
  whilebody200:
    WRITE32 ENDSUB_F_A3_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB201:
    WRITE32 ENDSUB_F_A2_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB202:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody200
  endwhile200:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB207:
  while208:
    JR_LTEQF VGV_S3 10.0 and210
    JR_GTF VGV_S2 10.0 or209
  and210:
    JR_GTEQF VGV_S3 10.0 endwhile208
    JR_GTEQF VGV_S2 10.0 endwhile208
  or209:
  whilebody208:
    WRITE32 ENDSUB_F_A3_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB211:
    WRITE32 ENDSUB_F_A2_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB212:
    MOVEF_F 0.1 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB213:
    JR_LTEQF VGV_S3 10.0 and214
    JR_GTF VGV_S2 10.0 whilebody208
  and214:
    JR_GTEQF VGV_S3 10.0 and215
    JR_LTF VGV_S2 10.0 whilebody208
  and215:
  endwhile208:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB217:
    ADDF VGV_C 1.0 VGV_C
    JR endif187
  else187_1:
    DATA32 tmp219
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp219
    JR_NEQ32 0 tmp219 alreadylaunched219
    OBJECT_START TF_VIDVIG_0
  alreadylaunched219:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB220:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer222
	DATA8 nos222
	DATA8 busy222
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer222 nos222
	JR_EQ8 0 nos222 motornotbusy222
  motorwaiting222:
	OUTPUT_TEST layer222 nos222 busy222
	JR_EQ8 busy222 0 motornotbusy222
	SLEEP
	JR motorwaiting222
  motornotbusy222:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB225:
  while226:
    JR_LTEQF VGV_S3 10.0 and228
    JR_GTF VGV_S2 10.0 or227
  and228:
    JR_GTEQF VGV_S3 10.0 endwhile226
    JR_GTEQF VGV_S2 10.0 endwhile226
  or227:
  whilebody226:
    WRITE32 ENDSUB_F_A3_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB229:
    WRITE32 ENDSUB_F_A2_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB230:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB231:
    JR_LTEQF VGV_S3 10.0 and232
    JR_GTF VGV_S2 10.0 whilebody226
  and232:
    JR_GTEQF VGV_S3 10.0 and233
    JR_LTF VGV_S2 10.0 whilebody226
  and233:
  endwhile226:
    CALL MOTOR.STOP 'bc' 'true'
  else187_2:
  endif187:
  else78_2:
  endif78:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB235:
    JR_LTF VGV_H 21.0 or237
    JR_LTEQF VGV_H 100.0 else236_1
  or237:
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif236
  else236_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else236_2:
  endif236:
    JR_NEQF VGV_COLOR2 4.0 else240_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer241
	DATA8 nos241
	DATA8 busy241
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer241 nos241
	JR_EQ8 0 nos241 motornotbusy241
  motorwaiting241:
	OUTPUT_TEST layer241 nos241 busy241
	JR_EQ8 busy241 0 motornotbusy241
	SLEEP
	JR motorwaiting241
  motornotbusy241:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB242:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif240
  else240_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB244:
    CALL MOTOR.RESETCOUNT 'bc'
  while246:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 210.0 endwhile246
  whilebody246:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB248:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 210.0 whilebody246
  endwhile246:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer251
	DATA8 nos251
	DATA8 busy251
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer251 nos251
	JR_EQ8 0 nos251 motornotbusy251
  motorwaiting251:
	OUTPUT_TEST layer251 nos251 busy251
	JR_EQ8 busy251 0 motornotbusy251
	SLEEP
	JR motorwaiting251
  motornotbusy251:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds253
	MOVEF_32 100.0 milliseconds253
	DATA32 timer253
	TIMER_WAIT milliseconds253 timer253
	TIMER_READY timer253
    WRITE32 ENDSUB_F_NPL_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB254:
    MOVEF_F 1230.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf255
    DATA8 flag255
    DIVF 360.0 VGV_L tmpf255
    CP_EQF 0.0 VGV_L flag255
    SELECTF flag255 0.0 tmpf255 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while259:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf263
    DATA8 flag263
    DIVF F.1 2.0 tmpf263
    CP_EQF 0.0 2.0 flag263
    SELECTF flag263 0.0 tmpf263 F.0

    JR_GTEQF F.0 VGV_X endwhile259
  whilebody259:
    WRITE32 ENDSUB_F_A3_0:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB264:
    WRITE32 ENDSUB_F_A2_0:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB265:
    JR_GTEQF VGV_SPEED 60.0 else266_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else266_1:
  endif266:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB268:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf272
    DATA8 flag272
    DIVF F.1 2.0 tmpf272
    CP_EQF 0.0 2.0 flag272
    SELECTF flag272 0.0 tmpf272 F.0

    JR_LTF F.0 VGV_X whilebody259
  endwhile259:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB274:
    JR_NEQF VGV_C 1.0 else275_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB276:
    JR endif275
  else275_1:
    JR_NEQF VGV_C 0.0 else275_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB277:
  else275_2:
  endif275:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB278:
    WRITE32 ENDSUB_F_A3_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB279:
    WRITE32 ENDSUB_F_A2_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB280:
  while281:
    JR_LTEQF VGV_S3 10.0 and283
    JR_GTF VGV_S2 10.0 or282
  and283:
    JR_GTEQF VGV_S3 10.0 endwhile281
    JR_GTEQF VGV_S2 10.0 endwhile281
  or282:
  whilebody281:
    WRITE32 ENDSUB_F_A3_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB285:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB286:
    JR_LTEQF VGV_S3 10.0 and287
    JR_GTF VGV_S2 10.0 whilebody281
  and287:
    JR_GTEQF VGV_S3 10.0 and288
    JR_LTF VGV_S2 10.0 whilebody281
  and288:
  endwhile281:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer290
	DATA8 nos290
	DATA8 busy290
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer290 nos290
	JR_EQ8 0 nos290 motornotbusy290
  motorwaiting290:
	OUTPUT_TEST layer290 nos290 busy290
	JR_EQ8 busy290 0 motornotbusy290
	SLEEP
	JR motorwaiting290
  motornotbusy290:
    WRITE32 ENDSUB_F_A3_0:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB291:
    WRITE32 ENDSUB_F_A2_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB292:
  while293:
    JR_LTEQF VGV_S3 10.0 and295
    JR_GTF VGV_S2 10.0 or294
  and295:
    JR_GTEQF VGV_S3 10.0 endwhile293
    JR_GTEQF VGV_S2 10.0 endwhile293
  or294:
  whilebody293:
    WRITE32 ENDSUB_F_A3_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB296:
    WRITE32 ENDSUB_F_A2_0:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB297:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB298:
    JR_LTEQF VGV_S3 10.0 and299
    JR_GTF VGV_S2 10.0 whilebody293
  and299:
    JR_GTEQF VGV_S3 10.0 and300
    JR_LTF VGV_S2 10.0 whilebody293
  and300:
  endwhile293:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB302:
    CALL MOTOR.RESETCOUNT 'bc'
  while304:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf308
    DATA8 flag308
    DIVF F.1 2.0 tmpf308
    CP_EQF 0.0 2.0 flag308
    SELECTF flag308 0.0 tmpf308 F.0

    JR_GTEQF F.0 160.0 endwhile304
  whilebody304:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB309:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf313
    DATA8 flag313
    DIVF F.1 2.0 tmpf313
    CP_EQF 0.0 2.0 flag313
    SELECTF flag313 0.0 tmpf313 F.0

    JR_LTF F.0 160.0 whilebody304
  endwhile304:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer315
	DATA8 nos315
	DATA8 busy315
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer315 nos315
	JR_EQ8 0 nos315 motornotbusy315
  motorwaiting315:
	OUTPUT_TEST layer315 nos315 busy315
	JR_EQ8 busy315 0 motornotbusy315
	SLEEP
	JR motorwaiting315
  motornotbusy315:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds317
	MOVEF_32 500.0 milliseconds317
	DATA32 timer317
	TIMER_WAIT milliseconds317 timer317
	TIMER_READY timer317
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer319
	DATA8 nos319
	DATA8 busy319
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer319 nos319
	JR_EQ8 0 nos319 motornotbusy319
  motorwaiting319:
	OUTPUT_TEST layer319 nos319 busy319
	JR_EQ8 busy319 0 motornotbusy319
	SLEEP
	JR motorwaiting319
  motornotbusy319:
    DATA32 tmp320
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp320
    JR_NEQ32 0 tmp320 alreadylaunched320
    OBJECT_START TF_VIDVIG_0
  alreadylaunched320:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB321:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB322:
    ADDF VGV_C 1.0 VGV_C
  else240_2:
  endif240:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB324:
    JR_LTEQF VGV_H 100.0 and327
    JR_NEQF VGV_H 240.0 or326
  and327:
    JR_LTF VGV_H 0.0 else325_1
    JR_GTF VGV_H 21.0 else325_1
  or326:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif325
  else325_1:
    JR_GTEQF VGV_H 120.0 else325_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif325
  else325_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else325_3:
  endif325:
    JR_NEQF VGV_COLOR3 4.0 else331_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer332
	DATA8 nos332
	DATA8 busy332
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer332 nos332
	JR_EQ8 0 nos332 motornotbusy332
  motorwaiting332:
	OUTPUT_TEST layer332 nos332 busy332
	JR_EQ8 busy332 0 motornotbusy332
	SLEEP
	JR motorwaiting332
  motornotbusy332:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB333:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else335_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB336:
    CALL MOTOR.RESETCOUNT 'bc'
  while338:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf342
    DATA8 flag342
    DIVF F.1 2.0 tmpf342
    CP_EQF 0.0 2.0 flag342
    SELECTF flag342 0.0 tmpf342 F.0

    JR_GTEQF F.0 210.0 endwhile338
  whilebody338:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB343:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf347
    DATA8 flag347
    DIVF F.1 2.0 tmpf347
    CP_EQF 0.0 2.0 flag347
    SELECTF flag347 0.0 tmpf347 F.0

    JR_LTF F.0 210.0 whilebody338
  endwhile338:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer349
	DATA8 nos349
	DATA8 busy349
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer349 nos349
	JR_EQ8 0 nos349 motornotbusy349
  motorwaiting349:
	OUTPUT_TEST layer349 nos349 busy349
	JR_EQ8 busy349 0 motornotbusy349
	SLEEP
	JR motorwaiting349
  motornotbusy349:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds351
	MOVEF_32 500.0 milliseconds351
	DATA32 timer351
	TIMER_WAIT milliseconds351 timer351
	TIMER_READY timer351
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB353:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf354
    DATA8 flag354
    DIVF 360.0 VGV_L tmpf354
    CP_EQF 0.0 VGV_L flag354
    SELECTF flag354 0.0 tmpf354 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while357:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf361
    DATA8 flag361
    DIVF F.1 2.0 tmpf361
    CP_EQF 0.0 2.0 flag361
    SELECTF flag361 0.0 tmpf361 F.0

    JR_GTEQF F.0 VGV_X endwhile357
  whilebody357:
    WRITE32 ENDSUB_F_A3_0:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB362:
    WRITE32 ENDSUB_F_A2_0:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB363:
    JR_GTEQF VGV_SPEED 80.0 else364_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else364_1:
  endif364:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB366:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf370
    DATA8 flag370
    DIVF F.1 2.0 tmpf370
    CP_EQF 0.0 2.0 flag370
    SELECTF flag370 0.0 tmpf370 F.0

    JR_LTF F.0 VGV_X whilebody357
  endwhile357:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB372:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB373:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB374:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB376:
    CALL MOTOR.RESETCOUNT 'bc'
  while378:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf382
    DATA8 flag382
    DIVF F.1 2.0 tmpf382
    CP_EQF 0.0 2.0 flag382
    SELECTF flag382 0.0 tmpf382 F.0

    JR_GTEQF F.0 210.0 endwhile378
  whilebody378:
    MOVEF_F 40.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB383:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf387
    DATA8 flag387
    DIVF F.1 2.0 tmpf387
    CP_EQF 0.0 2.0 flag387
    SELECTF flag387 0.0 tmpf387 F.0

    JR_LTF F.0 210.0 whilebody378
  endwhile378:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer389
	DATA8 nos389
	DATA8 busy389
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer389 nos389
	JR_EQ8 0 nos389 motornotbusy389
  motorwaiting389:
	OUTPUT_TEST layer389 nos389 busy389
	JR_EQ8 busy389 0 motornotbusy389
	SLEEP
	JR motorwaiting389
  motornotbusy389:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds391
	MOVEF_32 500.0 milliseconds391
	DATA32 timer391
	TIMER_WAIT milliseconds391 timer391
	TIMER_READY timer391
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB393:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB394:
    WRITE32 ENDSUB_F_PR_0:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB395:
    CALL MOTOR.RESETCOUNT 'bc'
  while397:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf401
    DATA8 flag401
    DIVF F.1 2.0 tmpf401
    CP_EQF 0.0 2.0 flag401
    SELECTF flag401 0.0 tmpf401 F.0

    JR_GTEQF F.0 400.0 endwhile397
  whilebody397:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB402:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf406
    DATA8 flag406
    DIVF F.1 2.0 tmpf406
    CP_EQF 0.0 2.0 flag406
    SELECTF flag406 0.0 tmpf406 F.0

    JR_LTF F.0 400.0 whilebody397
  endwhile397:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds409
	MOVEF_32 500.0 milliseconds409
	DATA32 timer409
	TIMER_WAIT milliseconds409 timer409
	TIMER_READY timer409
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB411:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf412
    DATA8 flag412
    DIVF 360.0 VGV_L tmpf412
    CP_EQF 0.0 VGV_L flag412
    SELECTF flag412 0.0 tmpf412 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while415:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf419
    DATA8 flag419
    DIVF F.1 2.0 tmpf419
    CP_EQF 0.0 2.0 flag419
    SELECTF flag419 0.0 tmpf419 F.0

    JR_GTEQF F.0 VGV_X endwhile415
  whilebody415:
    WRITE32 ENDSUB_F_A3_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB420:
    WRITE32 ENDSUB_F_A2_0:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB421:
    JR_GTEQF VGV_SPEED 80.0 else422_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else422_1:
  endif422:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB424:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf428
    DATA8 flag428
    DIVF F.1 2.0 tmpf428
    CP_EQF 0.0 2.0 flag428
    SELECTF flag428 0.0 tmpf428 F.0

    JR_LTF F.0 VGV_X whilebody415
  endwhile415:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB430:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB431:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB432:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB434:
    CALL MOTOR.RESETCOUNT 'bc'
  while436:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf440
    DATA8 flag440
    DIVF F.1 2.0 tmpf440
    CP_EQF 0.0 2.0 flag440
    SELECTF flag440 0.0 tmpf440 F.0

    JR_GTEQF F.0 160.0 endwhile436
  whilebody436:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB441:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf445
    DATA8 flag445
    DIVF F.1 2.0 tmpf445
    CP_EQF 0.0 2.0 flag445
    SELECTF flag445 0.0 tmpf445 F.0

    JR_LTF F.0 160.0 whilebody436
  endwhile436:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer447
	DATA8 nos447
	DATA8 busy447
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer447 nos447
	JR_EQ8 0 nos447 motornotbusy447
  motorwaiting447:
	OUTPUT_TEST layer447 nos447 busy447
	JR_EQ8 busy447 0 motornotbusy447
	SLEEP
	JR motorwaiting447
  motornotbusy447:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds449
	MOVEF_32 500.0 milliseconds449
	DATA32 timer449
	TIMER_WAIT milliseconds449 timer449
	TIMER_READY timer449
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB451:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB452:
    WRITE32 ENDSUB_F_PR_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB453:
    CALL MOTOR.RESETCOUNT 'bc'
  while455:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf459
    DATA8 flag459
    DIVF F.1 2.0 tmpf459
    CP_EQF 0.0 2.0 flag459
    SELECTF flag459 0.0 tmpf459 F.0

    JR_GTEQF F.0 80.0 endwhile455
  whilebody455:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB460:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf464
    DATA8 flag464
    DIVF F.1 2.0 tmpf464
    CP_EQF 0.0 2.0 flag464
    SELECTF flag464 0.0 tmpf464 F.0

    JR_LTF F.0 80.0 whilebody455
  endwhile455:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer466
	DATA8 nos466
	DATA8 busy466
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer466 nos466
	JR_EQ8 0 nos466 motornotbusy466
  motorwaiting466:
	OUTPUT_TEST layer466 nos466 busy466
	JR_EQ8 busy466 0 motornotbusy466
	SLEEP
	JR motorwaiting466
  motornotbusy466:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds468
	MOVEF_32 500.0 milliseconds468
	DATA32 timer468
	TIMER_WAIT milliseconds468 timer468
	TIMER_READY timer468
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB470:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf471
    DATA8 flag471
    DIVF 360.0 VGV_L tmpf471
    CP_EQF 0.0 VGV_L flag471
    SELECTF flag471 0.0 tmpf471 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while474:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf478
    DATA8 flag478
    DIVF F.1 2.0 tmpf478
    CP_EQF 0.0 2.0 flag478
    SELECTF flag478 0.0 tmpf478 F.0

    JR_GTEQF F.0 VGV_X endwhile474
  whilebody474:
    WRITE32 ENDSUB_F_A3_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB479:
    WRITE32 ENDSUB_F_A2_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB480:
    JR_GTEQF VGV_SPEED 80.0 else481_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else481_1:
  endif481:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB483:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf487
    DATA8 flag487
    DIVF F.1 2.0 tmpf487
    CP_EQF 0.0 2.0 flag487
    SELECTF flag487 0.0 tmpf487 F.0

    JR_LTF F.0 VGV_X whilebody474
  endwhile474:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB489:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB490:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB491:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB493:
    CALL MOTOR.RESETCOUNT 'bc'
  while495:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf499
    DATA8 flag499
    DIVF F.1 2.0 tmpf499
    CP_EQF 0.0 2.0 flag499
    SELECTF flag499 0.0 tmpf499 F.0

    JR_GTEQF F.0 50.0 endwhile495
  whilebody495:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB500:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf504
    DATA8 flag504
    DIVF F.1 2.0 tmpf504
    CP_EQF 0.0 2.0 flag504
    SELECTF flag504 0.0 tmpf504 F.0

    JR_LTF F.0 50.0 whilebody495
  endwhile495:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer506
	DATA8 nos506
	DATA8 busy506
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer506 nos506
	JR_EQ8 0 nos506 motornotbusy506
  motorwaiting506:
	OUTPUT_TEST layer506 nos506 busy506
	JR_EQ8 busy506 0 motornotbusy506
	SLEEP
	JR motorwaiting506
  motornotbusy506:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds508
	MOVEF_32 500.0 milliseconds508
	DATA32 timer508
	TIMER_WAIT milliseconds508 timer508
	TIMER_READY timer508
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB510:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB511:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB512:
  else335_1:
  endif335:
  else331_1:
  endif331:
    JR_NEQF VGV_COLOR3 5.0 else513_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB514:
    CALL MOTOR.RESETCOUNT 'bc'
  while516:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf520
    DATA8 flag520
    DIVF F.1 2.0 tmpf520
    CP_EQF 0.0 2.0 flag520
    SELECTF flag520 0.0 tmpf520 F.0

    JR_GTEQF F.0 180.0 endwhile516
  whilebody516:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB521:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf525
    DATA8 flag525
    DIVF F.1 2.0 tmpf525
    CP_EQF 0.0 2.0 flag525
    SELECTF flag525 0.0 tmpf525 F.0

    JR_LTF F.0 180.0 whilebody516
  endwhile516:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds529
	MOVEF_32 500.0 milliseconds529
	DATA32 timer529
	TIMER_WAIT milliseconds529 timer529
	TIMER_READY timer529
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB531:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf532
    DATA8 flag532
    DIVF 360.0 VGV_L tmpf532
    CP_EQF 0.0 VGV_L flag532
    SELECTF flag532 0.0 tmpf532 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while535:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf539
    DATA8 flag539
    DIVF F.1 2.0 tmpf539
    CP_EQF 0.0 2.0 flag539
    SELECTF flag539 0.0 tmpf539 F.0

    JR_GTEQF F.0 VGV_X endwhile535
  whilebody535:
    WRITE32 ENDSUB_F_A3_0:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB540:
    WRITE32 ENDSUB_F_A2_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB541:
    JR_GTEQF VGV_SPEED 80.0 else542_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else542_1:
  endif542:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB544:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf548
    DATA8 flag548
    DIVF F.1 2.0 tmpf548
    CP_EQF 0.0 2.0 flag548
    SELECTF flag548 0.0 tmpf548 F.0

    JR_LTF F.0 VGV_X whilebody535
  endwhile535:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB550:
    JR_NEQF VGV_C 1.0 else551_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB552:
    JR endif551
  else551_1:
    JR_NEQF VGV_C 0.0 else551_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB553:
    JR endif551
  else551_2:
    JR_NEQF VGV_C 2.0 else551_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB554:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB555:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds557
	MOVEF_32 100.0 milliseconds557
	DATA32 timer557
	TIMER_WAIT milliseconds557 timer557
	TIMER_READY timer557
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer558
	DATA8 nos558
	DATA8 busy558
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer558 nos558
	JR_EQ8 0 nos558 motornotbusy558
  motorwaiting558:
	OUTPUT_TEST layer558 nos558 busy558
	JR_EQ8 busy558 0 motornotbusy558
	SLEEP
	JR motorwaiting558
  motornotbusy558:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer560
	DATA8 nos560
	DATA8 busy560
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer560 nos560
	JR_EQ8 0 nos560 motornotbusy560
  motorwaiting560:
	OUTPUT_TEST layer560 nos560 busy560
	JR_EQ8 busy560 0 motornotbusy560
	SLEEP
	JR motorwaiting560
  motornotbusy560:
    WRITE32 ENDSUB_F_A3_0:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB561:
    WRITE32 ENDSUB_F_A2_0:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB562:
  while563:
    JR_LTEQF VGV_S2 15.0 endwhile563
  whilebody563:
    WRITE32 ENDSUB_F_A3_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB564:
    WRITE32 ENDSUB_F_A2_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB565:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody563
  endwhile563:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB568:
    WRITE32 ENDSUB_F_A2_0:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB569:
  while570:
    JR_GTEQF VGV_S2 55.0 endwhile570
  whilebody570:
    WRITE32 ENDSUB_F_A3_0:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB571:
    WRITE32 ENDSUB_F_A2_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB572:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody570
  endwhile570:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while576:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf580
    DATA8 flag580
    DIVF F.1 2.0 tmpf580
    CP_EQF 0.0 2.0 flag580
    SELECTF flag580 0.0 tmpf580 F.0

    JR_GTEQF F.0 230.0 endwhile576
  whilebody576:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB581:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf585
    DATA8 flag585
    DIVF F.1 2.0 tmpf585
    CP_EQF 0.0 2.0 flag585
    SELECTF flag585 0.0 tmpf585 F.0

    JR_LTF F.0 230.0 whilebody576
  endwhile576:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds588
	MOVEF_32 500.0 milliseconds588
	DATA32 timer588
	TIMER_WAIT milliseconds588 timer588
	TIMER_READY timer588
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB590:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB591:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB593:
  else551_3:
  endif551:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB594:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer596
	DATA8 nos596
	DATA8 busy596
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer596 nos596
	JR_EQ8 0 nos596 motornotbusy596
  motorwaiting596:
	OUTPUT_TEST layer596 nos596 busy596
	JR_EQ8 busy596 0 motornotbusy596
	SLEEP
	JR motorwaiting596
  motornotbusy596:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer598
	DATA8 nos598
	DATA8 busy598
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer598 nos598
	JR_EQ8 0 nos598 motornotbusy598
  motorwaiting598:
	OUTPUT_TEST layer598 nos598 busy598
	JR_EQ8 busy598 0 motornotbusy598
	SLEEP
	JR motorwaiting598
  motornotbusy598:
    WRITE32 ENDSUB_F_A3_0:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB599:
    WRITE32 ENDSUB_F_A2_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB600:
  while601:
    JR_LTEQF VGV_S2 15.0 endwhile601
  whilebody601:
    WRITE32 ENDSUB_F_A3_0:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB602:
    WRITE32 ENDSUB_F_A2_0:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB603:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody601
  endwhile601:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB606:
    WRITE32 ENDSUB_F_A2_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB607:
  while608:
    JR_GTEQF VGV_S2 55.0 endwhile608
  whilebody608:
    WRITE32 ENDSUB_F_A3_0:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB609:
    WRITE32 ENDSUB_F_A2_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB610:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody608
  endwhile608:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while614:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf618
    DATA8 flag618
    DIVF F.1 2.0 tmpf618
    CP_EQF 0.0 2.0 flag618
    SELECTF flag618 0.0 tmpf618 F.0

    JR_GTEQF F.0 10.0 endwhile614
  whilebody614:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB619:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf623
    DATA8 flag623
    DIVF F.1 2.0 tmpf623
    CP_EQF 0.0 2.0 flag623
    SELECTF flag623 0.0 tmpf623 F.0

    JR_LTF F.0 10.0 whilebody614
  endwhile614:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer624
	DATA8 nos624
	DATA8 busy624
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer624 nos624
	JR_EQ8 0 nos624 motornotbusy624
  motorwaiting624:
	OUTPUT_TEST layer624 nos624 busy624
	JR_EQ8 busy624 0 motornotbusy624
	SLEEP
	JR motorwaiting624
  motornotbusy624:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds627
	MOVEF_32 500.0 milliseconds627
	DATA32 timer627
	TIMER_WAIT milliseconds627 timer627
	TIMER_READY timer627
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB629:
    DATA32 tmp630
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp630
    JR_NEQ32 0 tmp630 alreadylaunched630
    OBJECT_START TF_VIDVIG_0
  alreadylaunched630:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB631:
    ADDF VGV_C 1.0 VGV_C
  else513_1:
  endif513:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB633:
    JR_LTF VGV_H 21.0 or635
    JR_LTEQF VGV_H 100.0 else634_1
  or635:
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif634
  else634_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else634_2:
  endif634:
    JR_NEQF VGV_COLOR4 4.0 else638_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer639
	DATA8 nos639
	DATA8 busy639
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer639 nos639
	JR_EQ8 0 nos639 motornotbusy639
  motorwaiting639:
	OUTPUT_TEST layer639 nos639 busy639
	JR_EQ8 busy639 0 motornotbusy639
	SLEEP
	JR motorwaiting639
  motornotbusy639:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB640:
    JR_NEQF VGV_C 1.0 else641_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB642:
    CALL MOTOR.RESETCOUNT 'bc'
  while644:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf648
    DATA8 flag648
    DIVF F.1 2.0 tmpf648
    CP_EQF 0.0 2.0 flag648
    SELECTF flag648 0.0 tmpf648 F.0

    JR_GTEQF F.0 210.0 endwhile644
  whilebody644:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB649:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf653
    DATA8 flag653
    DIVF F.1 2.0 tmpf653
    CP_EQF 0.0 2.0 flag653
    SELECTF flag653 0.0 tmpf653 F.0

    JR_LTF F.0 210.0 whilebody644
  endwhile644:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer655
	DATA8 nos655
	DATA8 busy655
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer655 nos655
	JR_EQ8 0 nos655 motornotbusy655
  motorwaiting655:
	OUTPUT_TEST layer655 nos655 busy655
	JR_EQ8 busy655 0 motornotbusy655
	SLEEP
	JR motorwaiting655
  motornotbusy655:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds657
	MOVEF_32 500.0 milliseconds657
	DATA32 timer657
	TIMER_WAIT milliseconds657 timer657
	TIMER_READY timer657
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB659:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf660
    DATA8 flag660
    DIVF 360.0 VGV_L tmpf660
    CP_EQF 0.0 VGV_L flag660
    SELECTF flag660 0.0 tmpf660 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while663:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf667
    DATA8 flag667
    DIVF F.1 2.0 tmpf667
    CP_EQF 0.0 2.0 flag667
    SELECTF flag667 0.0 tmpf667 F.0

    JR_GTEQF F.0 VGV_X endwhile663
  whilebody663:
    WRITE32 ENDSUB_F_A3_0:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB668:
    WRITE32 ENDSUB_F_A2_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB669:
    JR_GTEQF VGV_SPEED 80.0 else670_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else670_1:
  endif670:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB672:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf676
    DATA8 flag676
    DIVF F.1 2.0 tmpf676
    CP_EQF 0.0 2.0 flag676
    SELECTF flag676 0.0 tmpf676 F.0

    JR_LTF F.0 VGV_X whilebody663
  endwhile663:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB678:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB679:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB680:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer682
	DATA8 nos682
	DATA8 busy682
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer682 nos682
	JR_EQ8 0 nos682 motornotbusy682
  motorwaiting682:
	OUTPUT_TEST layer682 nos682 busy682
	JR_EQ8 busy682 0 motornotbusy682
	SLEEP
	JR motorwaiting682
  motornotbusy682:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB683:
    WRITE32 ENDSUB_F_PR_0:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB684:
    CALL MOTOR.RESETCOUNT 'bc'
  while686:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf690
    DATA8 flag690
    DIVF F.1 2.0 tmpf690
    CP_EQF 0.0 2.0 flag690
    SELECTF flag690 0.0 tmpf690 F.0

    JR_GTEQF F.0 110.0 endwhile686
  whilebody686:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB691:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf695
    DATA8 flag695
    DIVF F.1 2.0 tmpf695
    CP_EQF 0.0 2.0 flag695
    SELECTF flag695 0.0 tmpf695 F.0

    JR_LTF F.0 110.0 whilebody686
  endwhile686:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 180.0 'true'

	DATA8 layer697
	DATA8 nos697
	DATA8 busy697
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer697 nos697
	JR_EQ8 0 nos697 motornotbusy697
  motorwaiting697:
	OUTPUT_TEST layer697 nos697 busy697
	JR_EQ8 busy697 0 motornotbusy697
	SLEEP
	JR motorwaiting697
  motornotbusy697:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds699
	MOVEF_32 500.0 milliseconds699
	DATA32 timer699
	TIMER_WAIT milliseconds699 timer699
	TIMER_READY timer699
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB701:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB702:
    WRITE32 ENDSUB_F_PR_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB703:
    CALL MOTOR.RESETCOUNT 'bc'
  while705:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf709
    DATA8 flag709
    DIVF F.1 2.0 tmpf709
    CP_EQF 0.0 2.0 flag709
    SELECTF flag709 0.0 tmpf709 F.0

    JR_GTEQF F.0 80.0 endwhile705
  whilebody705:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB710:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf714
    DATA8 flag714
    DIVF F.1 2.0 tmpf714
    CP_EQF 0.0 2.0 flag714
    SELECTF flag714 0.0 tmpf714 F.0

    JR_LTF F.0 80.0 whilebody705
  endwhile705:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer716
	DATA8 nos716
	DATA8 busy716
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer716 nos716
	JR_EQ8 0 nos716 motornotbusy716
  motorwaiting716:
	OUTPUT_TEST layer716 nos716 busy716
	JR_EQ8 busy716 0 motornotbusy716
	SLEEP
	JR motorwaiting716
  motornotbusy716:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds718
	MOVEF_32 500.0 milliseconds718
	DATA32 timer718
	TIMER_WAIT milliseconds718 timer718
	TIMER_READY timer718
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB720:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf721
    DATA8 flag721
    DIVF 360.0 VGV_L tmpf721
    CP_EQF 0.0 VGV_L flag721
    SELECTF flag721 0.0 tmpf721 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while724:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf728
    DATA8 flag728
    DIVF F.1 2.0 tmpf728
    CP_EQF 0.0 2.0 flag728
    SELECTF flag728 0.0 tmpf728 F.0

    JR_GTEQF F.0 VGV_X endwhile724
  whilebody724:
    WRITE32 ENDSUB_F_A3_0:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB729:
    WRITE32 ENDSUB_F_A2_0:CALLSUB730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB730:
    JR_GTEQF VGV_SPEED 80.0 else731_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else731_1:
  endif731:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB733:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf737
    DATA8 flag737
    DIVF F.1 2.0 tmpf737
    CP_EQF 0.0 2.0 flag737
    SELECTF flag737 0.0 tmpf737 F.0

    JR_LTF F.0 VGV_X whilebody724
  endwhile724:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB739:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB740:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB741:
    WRITE32 ENDSUB_F_PR_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB742:
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while744:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf748
    DATA8 flag748
    DIVF F.1 2.0 tmpf748
    CP_EQF 0.0 2.0 flag748
    SELECTF flag748 0.0 tmpf748 F.0

    JR_GTEQF F.0 110.0 endwhile744
  whilebody744:
    WRITE32 ENDSUB_F_A3_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB749:
    WRITE32 ENDSUB_F_A2_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB750:
    JR_GTEQF VGV_SPEED 80.0 else751_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else751_1:
  endif751:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB753:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 2.0 tmpf757
    CP_EQF 0.0 2.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    JR_LTF F.0 110.0 whilebody744
  endwhile744:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer759
	DATA8 nos759
	DATA8 busy759
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer759 nos759
	JR_EQ8 0 nos759 motornotbusy759
  motorwaiting759:
	OUTPUT_TEST layer759 nos759 busy759
	JR_EQ8 busy759 0 motornotbusy759
	SLEEP
	JR motorwaiting759
  motornotbusy759:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds761
	MOVEF_32 500.0 milliseconds761
	DATA32 timer761
	TIMER_WAIT milliseconds761 timer761
	TIMER_READY timer761
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB763:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB764:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB765:
  else641_1:
  endif641:
  else638_1:
  endif638:
    JR_NEQF VGV_COLOR4 5.0 else766_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB767:
    CALL MOTOR.RESETCOUNT 'bc'
  while769:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf773
    DATA8 flag773
    DIVF F.1 2.0 tmpf773
    CP_EQF 0.0 2.0 flag773
    SELECTF flag773 0.0 tmpf773 F.0

    JR_GTEQF F.0 260.0 endwhile769
  whilebody769:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB774:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf778
    DATA8 flag778
    DIVF F.1 2.0 tmpf778
    CP_EQF 0.0 2.0 flag778
    SELECTF flag778 0.0 tmpf778 F.0

    JR_LTF F.0 260.0 whilebody769
  endwhile769:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer780
	DATA8 nos780
	DATA8 busy780
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer780 nos780
	JR_EQ8 0 nos780 motornotbusy780
  motorwaiting780:
	OUTPUT_TEST layer780 nos780 busy780
	JR_EQ8 busy780 0 motornotbusy780
	SLEEP
	JR motorwaiting780
  motornotbusy780:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds782
	MOVEF_32 500.0 milliseconds782
	DATA32 timer782
	TIMER_WAIT milliseconds782 timer782
	TIMER_READY timer782
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB784:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf785
    DATA8 flag785
    DIVF 360.0 VGV_L tmpf785
    CP_EQF 0.0 VGV_L flag785
    SELECTF flag785 0.0 tmpf785 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while788:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf792
    DATA8 flag792
    DIVF F.1 2.0 tmpf792
    CP_EQF 0.0 2.0 flag792
    SELECTF flag792 0.0 tmpf792 F.0

    JR_GTEQF F.0 VGV_X endwhile788
  whilebody788:
    WRITE32 ENDSUB_F_A3_0:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB793:
    WRITE32 ENDSUB_F_A2_0:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB794:
    JR_GTEQF VGV_SPEED 80.0 else795_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else795_1:
  endif795:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB797:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf801
    DATA8 flag801
    DIVF F.1 2.0 tmpf801
    CP_EQF 0.0 2.0 flag801
    SELECTF flag801 0.0 tmpf801 F.0

    JR_LTF F.0 VGV_X whilebody788
  endwhile788:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB803:
    JR_NEQF VGV_C 1.0 else804_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB805:
    JR endif804
  else804_1:
    JR_NEQF VGV_C 0.0 else804_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB806:
    JR endif804
  else804_2:
    JR_NEQF VGV_C 2.0 else804_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB807:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB808:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB810:
    CALL MOTOR.RESETCOUNT 'bc'
  while812:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf816
    DATA8 flag816
    DIVF F.1 2.0 tmpf816
    CP_EQF 0.0 2.0 flag816
    SELECTF flag816 0.0 tmpf816 F.0

    JR_GTEQF F.0 210.0 endwhile812
  whilebody812:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB817:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf821
    DATA8 flag821
    DIVF F.1 2.0 tmpf821
    CP_EQF 0.0 2.0 flag821
    SELECTF flag821 0.0 tmpf821 F.0

    JR_LTF F.0 210.0 whilebody812
  endwhile812:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer823
	DATA8 nos823
	DATA8 busy823
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer823 nos823
	JR_EQ8 0 nos823 motornotbusy823
  motorwaiting823:
	OUTPUT_TEST layer823 nos823 busy823
	JR_EQ8 busy823 0 motornotbusy823
	SLEEP
	JR motorwaiting823
  motornotbusy823:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds825
	MOVEF_32 500.0 milliseconds825
	DATA32 timer825
	TIMER_WAIT milliseconds825 timer825
	TIMER_READY timer825
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB827:
    CALL MOTOR.RESETCOUNT 'bc'
  while829:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf833
    DATA8 flag833
    DIVF F.1 2.0 tmpf833
    CP_EQF 0.0 2.0 flag833
    SELECTF flag833 0.0 tmpf833 F.0

    JR_GTEQF F.0 100.0 endwhile829
  whilebody829:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB834:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf838
    DATA8 flag838
    DIVF F.1 2.0 tmpf838
    CP_EQF 0.0 2.0 flag838
    SELECTF flag838 0.0 tmpf838 F.0

    JR_LTF F.0 100.0 whilebody829
  endwhile829:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB840:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB842:
  else804_3:
  endif804:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB843:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB845 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB845:
    CALL MOTOR.RESETCOUNT 'bc'
  while847:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf851
    DATA8 flag851
    DIVF F.1 2.0 tmpf851
    CP_EQF 0.0 2.0 flag851
    SELECTF flag851 0.0 tmpf851 F.0

    JR_GTEQF F.0 210.0 endwhile847
  whilebody847:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB852:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf856
    DATA8 flag856
    DIVF F.1 2.0 tmpf856
    CP_EQF 0.0 2.0 flag856
    SELECTF flag856 0.0 tmpf856 F.0

    JR_LTF F.0 210.0 whilebody847
  endwhile847:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds859
	MOVEF_32 500.0 milliseconds859
	DATA32 timer859
	TIMER_WAIT milliseconds859 timer859
	TIMER_READY timer859
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp861
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp861
    JR_NEQ32 0 tmp861 alreadylaunched861
    OBJECT_START TF_VIDVIG_0
  alreadylaunched861:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB862 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB862:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB863:
    ADDF VGV_C 1.0 VGV_C
  else766_1:
  endif766:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB865:
    JR_LTF VGV_H 32.0 or867
    JR_LTEQF VGV_H 100.0 else866_1
  or867:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif866
  else866_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else866_2:
  endif866:
    JR_NEQF VGV_COLOR5 4.0 else870_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer871
	DATA8 nos871
	DATA8 busy871
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer871 nos871
	JR_EQ8 0 nos871 motornotbusy871
  motorwaiting871:
	OUTPUT_TEST layer871 nos871 busy871
	JR_EQ8 busy871 0 motornotbusy871
	SLEEP
	JR motorwaiting871
  motornotbusy871:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB872:
    WRITE32 ENDSUB_F_PR_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB873:
    CALL MOTOR.RESETCOUNT 'bc'
  while875:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf879
    DATA8 flag879
    DIVF F.1 2.0 tmpf879
    CP_EQF 0.0 2.0 flag879
    SELECTF flag879 0.0 tmpf879 F.0

    JR_GTEQF F.0 270.0 endwhile875
  whilebody875:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB880:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf884
    DATA8 flag884
    DIVF F.1 2.0 tmpf884
    CP_EQF 0.0 2.0 flag884
    SELECTF flag884 0.0 tmpf884 F.0

    JR_LTF F.0 270.0 whilebody875
  endwhile875:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds887
	MOVEF_32 500.0 milliseconds887
	DATA32 timer887
	TIMER_WAIT milliseconds887 timer887
	TIMER_READY timer887
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB889:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB890:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf891
    DATA8 flag891
    DIVF 360.0 VGV_L tmpf891
    CP_EQF 0.0 VGV_L flag891
    SELECTF flag891 0.0 tmpf891 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while894:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf898
    DATA8 flag898
    DIVF F.1 2.0 tmpf898
    CP_EQF 0.0 2.0 flag898
    SELECTF flag898 0.0 tmpf898 F.0

    JR_GTEQF F.0 VGV_X endwhile894
  whilebody894:
    WRITE32 ENDSUB_F_A3_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB899:
    WRITE32 ENDSUB_F_A2_0:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB900:
    JR_GTEQF VGV_SPEED 80.0 else901_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else901_1:
  endif901:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB903:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf907
    DATA8 flag907
    DIVF F.1 2.0 tmpf907
    CP_EQF 0.0 2.0 flag907
    SELECTF flag907 0.0 tmpf907 F.0

    JR_LTF F.0 VGV_X whilebody894
  endwhile894:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB909:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB910:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB911:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer913
	DATA8 nos913
	DATA8 busy913
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer913 nos913
	JR_EQ8 0 nos913 motornotbusy913
  motorwaiting913:
	OUTPUT_TEST layer913 nos913 busy913
	JR_EQ8 busy913 0 motornotbusy913
	SLEEP
	JR motorwaiting913
  motornotbusy913:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer915
	DATA8 nos915
	DATA8 busy915
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer915 nos915
	JR_EQ8 0 nos915 motornotbusy915
  motorwaiting915:
	OUTPUT_TEST layer915 nos915 busy915
	JR_EQ8 busy915 0 motornotbusy915
	SLEEP
	JR motorwaiting915
  motornotbusy915:
    WRITE32 ENDSUB_F_A3_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB916:
    WRITE32 ENDSUB_F_A2_0:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB917:
  while918:
    JR_LTEQF VGV_S3 15.0 endwhile918
  whilebody918:
    WRITE32 ENDSUB_F_A3_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB919:
    WRITE32 ENDSUB_F_A2_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB920:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody918
  endwhile918:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB923:
    WRITE32 ENDSUB_F_A2_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB924:
  while925:
    JR_GTEQF VGV_S3 60.0 endwhile925
  whilebody925:
    WRITE32 ENDSUB_F_A3_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB926:
    WRITE32 ENDSUB_F_A2_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB927:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody925
  endwhile925:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while931:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf935
    DATA8 flag935
    DIVF F.1 2.0 tmpf935
    CP_EQF 0.0 2.0 flag935
    SELECTF flag935 0.0 tmpf935 F.0

    JR_GTEQF F.0 80.0 endwhile931
  whilebody931:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB936:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf940
    DATA8 flag940
    DIVF F.1 2.0 tmpf940
    CP_EQF 0.0 2.0 flag940
    SELECTF flag940 0.0 tmpf940 F.0

    JR_LTF F.0 80.0 whilebody931
  endwhile931:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer941
	DATA8 nos941
	DATA8 busy941
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer941 nos941
	JR_EQ8 0 nos941 motornotbusy941
  motorwaiting941:
	OUTPUT_TEST layer941 nos941 busy941
	JR_EQ8 busy941 0 motornotbusy941
	SLEEP
	JR motorwaiting941
  motornotbusy941:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds944
	MOVEF_32 500.0 milliseconds944
	DATA32 timer944
	TIMER_WAIT milliseconds944 timer944
	TIMER_READY timer944
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB946:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB947:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB948:
  else870_1:
  endif870:
    JR_NEQF VGV_COLOR5 5.0 else949_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB950:
    CALL MOTOR.RESETCOUNT 'bc'
  while952:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf956
    DATA8 flag956
    DIVF F.1 2.0 tmpf956
    CP_EQF 0.0 2.0 flag956
    SELECTF flag956 0.0 tmpf956 F.0

    JR_GTEQF F.0 210.0 endwhile952
  whilebody952:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB957:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf961
    DATA8 flag961
    DIVF F.1 2.0 tmpf961
    CP_EQF 0.0 2.0 flag961
    SELECTF flag961 0.0 tmpf961 F.0

    JR_LTF F.0 210.0 whilebody952
  endwhile952:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer963
	DATA8 nos963
	DATA8 busy963
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer963 nos963
	JR_EQ8 0 nos963 motornotbusy963
  motorwaiting963:
	OUTPUT_TEST layer963 nos963 busy963
	JR_EQ8 busy963 0 motornotbusy963
	SLEEP
	JR motorwaiting963
  motornotbusy963:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds965
	MOVEF_32 500.0 milliseconds965
	DATA32 timer965
	TIMER_WAIT milliseconds965 timer965
	TIMER_READY timer965
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB967:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf968
    DATA8 flag968
    DIVF 360.0 VGV_L tmpf968
    CP_EQF 0.0 VGV_L flag968
    SELECTF flag968 0.0 tmpf968 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while971:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf975
    DATA8 flag975
    DIVF F.1 2.0 tmpf975
    CP_EQF 0.0 2.0 flag975
    SELECTF flag975 0.0 tmpf975 F.0

    JR_GTEQF F.0 VGV_X endwhile971
  whilebody971:
    WRITE32 ENDSUB_F_A3_0:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB976:
    WRITE32 ENDSUB_F_A2_0:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB977:
    JR_GTEQF VGV_SPEED 80.0 else978_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else978_1:
  endif978:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB980 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB980:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf984
    DATA8 flag984
    DIVF F.1 2.0 tmpf984
    CP_EQF 0.0 2.0 flag984
    SELECTF flag984 0.0 tmpf984 F.0

    JR_LTF F.0 VGV_X whilebody971
  endwhile971:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB986:
    JR_NEQF VGV_C 1.0 else987_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB988:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB989:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB991:
    CALL MOTOR.RESETCOUNT 'bc'
  while993:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf997
    DATA8 flag997
    DIVF F.1 2.0 tmpf997
    CP_EQF 0.0 2.0 flag997
    SELECTF flag997 0.0 tmpf997 F.0

    JR_GTEQF F.0 160.0 endwhile993
  whilebody993:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB998:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1002
    DATA8 flag1002
    DIVF F.1 2.0 tmpf1002
    CP_EQF 0.0 2.0 flag1002
    SELECTF flag1002 0.0 tmpf1002 F.0

    JR_LTF F.0 160.0 whilebody993
  endwhile993:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1005
	MOVEF_32 500.0 milliseconds1005
	DATA32 timer1005
	TIMER_WAIT milliseconds1005 timer1005
	TIMER_READY timer1005
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1007:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1008:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1009:
    CALL MOTOR.RESETCOUNT 'bc'
  while1011:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1015
    DATA8 flag1015
    DIVF F.1 2.0 tmpf1015
    CP_EQF 0.0 2.0 flag1015
    SELECTF flag1015 0.0 tmpf1015 F.0

    JR_GTEQF F.0 80.0 endwhile1011
  whilebody1011:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1016 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1016:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1020
    DATA8 flag1020
    DIVF F.1 2.0 tmpf1020
    CP_EQF 0.0 2.0 flag1020
    SELECTF flag1020 0.0 tmpf1020 F.0

    JR_LTF F.0 80.0 whilebody1011
  endwhile1011:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1022
	DATA8 nos1022
	DATA8 busy1022
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1022 nos1022
	JR_EQ8 0 nos1022 motornotbusy1022
  motorwaiting1022:
	OUTPUT_TEST layer1022 nos1022 busy1022
	JR_EQ8 busy1022 0 motornotbusy1022
	SLEEP
	JR motorwaiting1022
  motornotbusy1022:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1024
	MOVEF_32 500.0 milliseconds1024
	DATA32 timer1024
	TIMER_WAIT milliseconds1024 timer1024
	TIMER_READY timer1024
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1026
	DATA8 no1026
	DATA8 mode81026
	
	MOVEF_8 2.0 no1026
	SUB8 no1026 1 no1026
	DIV8 no1026 4 layer1026
	MATH MOD8 no1026 4 no1026

	MOVEF_8 0.0 mode81026
	
	INPUT_DEVICE READY_RAW layer1026 no1026 0 mode81026 0
    DATA8 layer1027
	DATA8 no1027
	DATA8 mode81027
	
	MOVEF_8 3.0 no1027
	SUB8 no1027 1 no1027
	DIV8 no1027 4 layer1027
	MATH MOD8 no1027 4 no1027

	MOVEF_8 0.0 mode81027
	
	INPUT_DEVICE READY_RAW layer1027 no1027 0 mode81027 0
  while1028:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1030
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1029
  and1030:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1033
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1029
  and1033:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1028
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1028
  or1029:
  whilebody1028:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1039
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1028
  and1039:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1042
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1028
  and1042:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1045
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1028
  and1045:
  endwhile1028:
  while1048:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1048
  whilebody1048:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1048
  endwhile1048:
    CALL MOTOR.STOP 'B' 'True'
  while1053:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1053
  whilebody1053:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1053
  endwhile1053:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1058
	DATA8 nos1058
	DATA8 busy1058
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1058 nos1058
	JR_EQ8 0 nos1058 motornotbusy1058
  motorwaiting1058:
	OUTPUT_TEST layer1058 nos1058 busy1058
	JR_EQ8 busy1058 0 motornotbusy1058
	SLEEP
	JR motorwaiting1058
  motornotbusy1058:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1060
	DATA8 nos1060
	DATA8 busy1060
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1060 nos1060
	JR_EQ8 0 nos1060 motornotbusy1060
  motorwaiting1060:
	OUTPUT_TEST layer1060 nos1060 busy1060
	JR_EQ8 busy1060 0 motornotbusy1060
	SLEEP
	JR motorwaiting1060
  motornotbusy1060:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1062:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1063:
  while1064:
    JR_LTEQF VGV_S3 10.0 endwhile1064
  whilebody1064:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1065:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1066:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1064
  endwhile1064:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1068:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1069:
  while1070:
    JR_GTEQF VGV_S3 55.0 endwhile1070
  whilebody1070:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1071:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1072:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1070
  endwhile1070:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1075
    DATA8 flag1075
    DIVF 360.0 VGV_L tmpf1075
    CP_EQF 0.0 VGV_L flag1075
    SELECTF flag1075 0.0 tmpf1075 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1078:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1082
    DATA8 flag1082
    DIVF F.1 2.0 tmpf1082
    CP_EQF 0.0 2.0 flag1082
    SELECTF flag1082 0.0 tmpf1082 F.0

    JR_GTEQF F.0 VGV_X endwhile1078
  whilebody1078:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1083:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1084 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1084:
    JR_GTEQF VGV_SPEED 80.0 else1085_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1085_1:
  endif1085:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1087:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1091
    DATA8 flag1091
    DIVF F.1 2.0 tmpf1091
    CP_EQF 0.0 2.0 flag1091
    SELECTF flag1091 0.0 tmpf1091 F.0

    JR_LTF F.0 VGV_X whilebody1078
  endwhile1078:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1093 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1093:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1094:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1095:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1097:
    CALL MOTOR.RESETCOUNT 'bc'
  while1099:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1103
    DATA8 flag1103
    DIVF F.1 2.0 tmpf1103
    CP_EQF 0.0 2.0 flag1103
    SELECTF flag1103 0.0 tmpf1103 F.0

    JR_GTEQF F.0 80.0 endwhile1099
  whilebody1099:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1104:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1108
    DATA8 flag1108
    DIVF F.1 2.0 tmpf1108
    CP_EQF 0.0 2.0 flag1108
    SELECTF flag1108 0.0 tmpf1108 F.0

    JR_LTF F.0 80.0 whilebody1099
  endwhile1099:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1110
	DATA8 nos1110
	DATA8 busy1110
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1110 nos1110
	JR_EQ8 0 nos1110 motornotbusy1110
  motorwaiting1110:
	OUTPUT_TEST layer1110 nos1110 busy1110
	JR_EQ8 busy1110 0 motornotbusy1110
	SLEEP
	JR motorwaiting1110
  motornotbusy1110:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1112
	MOVEF_32 500.0 milliseconds1112
	DATA32 timer1112
	TIMER_WAIT milliseconds1112 timer1112
	TIMER_READY timer1112
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1114:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1115:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1116:
    JR endif987
  else987_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1117:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1118:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1120:
    CALL MOTOR.RESETCOUNT 'bc'
  while1122:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1126
    DATA8 flag1126
    DIVF F.1 2.0 tmpf1126
    CP_EQF 0.0 2.0 flag1126
    SELECTF flag1126 0.0 tmpf1126 F.0

    JR_GTEQF F.0 160.0 endwhile1122
  whilebody1122:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1127:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1131
    DATA8 flag1131
    DIVF F.1 2.0 tmpf1131
    CP_EQF 0.0 2.0 flag1131
    SELECTF flag1131 0.0 tmpf1131 F.0

    JR_LTF F.0 160.0 whilebody1122
  endwhile1122:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1133
	DATA8 nos1133
	DATA8 busy1133
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1133 nos1133
	JR_EQ8 0 nos1133 motornotbusy1133
  motorwaiting1133:
	OUTPUT_TEST layer1133 nos1133 busy1133
	JR_EQ8 busy1133 0 motornotbusy1133
	SLEEP
	JR motorwaiting1133
  motornotbusy1133:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1135
	MOVEF_32 500.0 milliseconds1135
	DATA32 timer1135
	TIMER_WAIT milliseconds1135 timer1135
	TIMER_READY timer1135
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1137:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1138:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1139:
  else987_2:
  endif987:
  else949_1:
  endif949:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1141
	DATA8 nos1141
	DATA8 busy1141
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1141 nos1141
	JR_EQ8 0 nos1141 motornotbusy1141
  motorwaiting1141:
	OUTPUT_TEST layer1141 nos1141 busy1141
	JR_EQ8 busy1141 0 motornotbusy1141
	SLEEP
	JR motorwaiting1141
  motornotbusy1141:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1142
	DATA8 nos1142
	DATA8 busy1142
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1142 nos1142
	JR_EQ8 0 nos1142 motornotbusy1142
  motorwaiting1142:
	OUTPUT_TEST layer1142 nos1142 busy1142
	JR_EQ8 busy1142 0 motornotbusy1142
	SLEEP
	JR motorwaiting1142
  motornotbusy1142:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1144
	DATA8 nos1144
	DATA8 busy1144
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1144 nos1144
	JR_EQ8 0 nos1144 motornotbusy1144
  motorwaiting1144:
	OUTPUT_TEST layer1144 nos1144 busy1144
	JR_EQ8 busy1144 0 motornotbusy1144
	SLEEP
	JR motorwaiting1144
  motornotbusy1144:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1145
	DATA8 nos1145
	DATA8 busy1145
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1145 nos1145
	JR_EQ8 0 nos1145 motornotbusy1145
  motorwaiting1145:
	OUTPUT_TEST layer1145 nos1145 busy1145
	JR_EQ8 busy1145 0 motornotbusy1145
	SLEEP
	JR motorwaiting1145
  motornotbusy1145:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1147
    DATA8 flag1147
    DIVF 360.0 VGV_L tmpf1147
    CP_EQF 0.0 VGV_L flag1147
    SELECTF flag1147 0.0 tmpf1147 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1150:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1154
    DATA8 flag1154
    DIVF F.1 2.0 tmpf1154
    CP_EQF 0.0 2.0 flag1154
    SELECTF flag1154 0.0 tmpf1154 F.0

    JR_GTEQF F.0 VGV_X endwhile1150
  whilebody1150:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1155:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1156:
    JR_GTEQF VGV_SPEED 80.0 else1157_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1157_1:
  endif1157:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1159:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1163
    DATA8 flag1163
    DIVF F.1 2.0 tmpf1163
    CP_EQF 0.0 2.0 flag1163
    SELECTF flag1163 0.0 tmpf1163 F.0

    JR_LTF F.0 VGV_X whilebody1150
  endwhile1150:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1165:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1167
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1167
    JR_NEQ32 0 tmp1167 alreadylaunched1167
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1167:
ENDTHREAD:
    RETURN
SUB_F_FINISH_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 146.0 'true'

	DATA8 layer1168
	DATA8 nos1168
	DATA8 busy1168
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1168 nos1168
	JR_EQ8 0 nos1168 motornotbusy1168
  motorwaiting1168:
	OUTPUT_TEST layer1168 nos1168 busy1168
	JR_EQ8 busy1168 0 motornotbusy1168
	SLEEP
	JR motorwaiting1168
  motornotbusy1168:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 146.0 'true'

	DATA8 layer1169
	DATA8 nos1169
	DATA8 busy1169
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1169 nos1169
	JR_EQ8 0 nos1169 motornotbusy1169
  motorwaiting1169:
	OUTPUT_TEST layer1169 nos1169 busy1169
	JR_EQ8 busy1169 0 motornotbusy1169
	SLEEP
	JR motorwaiting1169
  motornotbusy1169:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1170
	DATA8 nos1170
	DATA8 busy1170
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1170 nos1170
	JR_EQ8 0 nos1170 motornotbusy1170
  motorwaiting1170:
	OUTPUT_TEST layer1170 nos1170 busy1170
	JR_EQ8 busy1170 0 motornotbusy1170
	SLEEP
	JR motorwaiting1170
  motornotbusy1170:
    PROGRAM_STOP -1
RETSUB_F_FINISH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_0:
SUB_F_SB2_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1172:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1173:
  while1174:
    JR_LTEQF VGV_S3 10.0 and1176
    JR_GTF VGV_S2 10.0 or1175
  and1176:
    JR_GTEQF VGV_S3 10.0 endwhile1174
    JR_GTEQF VGV_S2 10.0 endwhile1174
  or1175:
  whilebody1174:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1177:
    JR_LTEQF VGV_S3 10.0 and1178
    JR_GTF VGV_S2 10.0 whilebody1174
  and1178:
    JR_GTEQF VGV_S3 10.0 and1179
    JR_LTF VGV_S2 10.0 whilebody1174
  and1179:
  endwhile1174:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1181
	DATA8 nos1181
	DATA8 busy1181
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1181 nos1181
	JR_EQ8 0 nos1181 motornotbusy1181
  motorwaiting1181:
	OUTPUT_TEST layer1181 nos1181 busy1181
	JR_EQ8 busy1181 0 motornotbusy1181
	SLEEP
	JR motorwaiting1181
  motornotbusy1181:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1182
	DATA8 nos1182
	DATA8 busy1182
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1182 nos1182
	JR_EQ8 0 nos1182 motornotbusy1182
  motorwaiting1182:
	OUTPUT_TEST layer1182 nos1182 busy1182
	JR_EQ8 busy1182 0 motornotbusy1182
	SLEEP
	JR motorwaiting1182
  motornotbusy1182:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer1183
	DATA8 nos1183
	DATA8 busy1183
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1183 nos1183
	JR_EQ8 0 nos1183 motornotbusy1183
  motorwaiting1183:
	OUTPUT_TEST layer1183 nos1183 busy1183
	JR_EQ8 busy1183 0 motornotbusy1183
	SLEEP
	JR motorwaiting1183
  motornotbusy1183:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1184:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1185:
  while1186:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1186
  whilebody1186:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1186
  endwhile1186:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1191:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1192:
  while1193:
    JR_GTEQF VGV_S3 55.0 endwhile1193
  whilebody1193:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1194:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1195:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 55.0 whilebody1193
  endwhile1193:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1198
	DATA8 nos1198
	DATA8 busy1198
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1198 nos1198
	JR_EQ8 0 nos1198 motornotbusy1198
  motorwaiting1198:
	OUTPUT_TEST layer1198 nos1198 busy1198
	JR_EQ8 busy1198 0 motornotbusy1198
	SLEEP
	JR motorwaiting1198
  motornotbusy1198:
  while1199:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 61.0 or1200
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 61.0 endwhile1199
  or1200:
  whilebody1199:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 61.0 whilebody1199
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 61.0 whilebody1199
  endwhile1199:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1207:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1208
    DATA8 flag1208
    DIVF 360.0 VGV_L tmpf1208
    CP_EQF 0.0 VGV_L flag1208
    SELECTF flag1208 0.0 tmpf1208 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1211:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1215
    DATA8 flag1215
    DIVF F.1 2.0 tmpf1215
    CP_EQF 0.0 2.0 flag1215
    SELECTF flag1215 0.0 tmpf1215 F.0

    JR_GTEQF F.0 VGV_X endwhile1211
  whilebody1211:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1216:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1217:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1218:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1222
    DATA8 flag1222
    DIVF F.1 2.0 tmpf1222
    CP_EQF 0.0 2.0 flag1222
    SELECTF flag1222 0.0 tmpf1222 F.0

    JR_LTF F.0 VGV_X whilebody1211
  endwhile1211:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1225:
  while1226:
    JR_LTEQF VGV_S3 15.0 and1228
    JR_GTF VGV_S2 15.0 or1227
  and1228:
    JR_GTEQF VGV_S3 15.0 endwhile1226
    JR_GTEQF VGV_S2 15.0 endwhile1226
  or1227:
  whilebody1226:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1229:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1230:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1231:
    JR_LTEQF VGV_S3 15.0 and1232
    JR_GTF VGV_S2 15.0 whilebody1226
  and1232:
    JR_GTEQF VGV_S3 15.0 and1233
    JR_LTF VGV_S2 15.0 whilebody1226
  and1233:
  endwhile1226:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1235
	DATA8 nos1235
	DATA8 busy1235
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1235 nos1235
	JR_EQ8 0 nos1235 motornotbusy1235
  motorwaiting1235:
	OUTPUT_TEST layer1235 nos1235 busy1235
	JR_EQ8 busy1235 0 motornotbusy1235
	SLEEP
	JR motorwaiting1235
  motornotbusy1235:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1236:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1237:
  while1238:
    JR_GTEQF VGV_S2 60.0 endwhile1238
  whilebody1238:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1238
  endwhile1238:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1241:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1242:
  while1243:
    JR_LTEQF VGV_S3 10.0 and1245
    JR_GTF VGV_S2 10.0 or1244
  and1245:
    JR_GTEQF VGV_S3 10.0 endwhile1243
    JR_GTEQF VGV_S2 10.0 endwhile1243
  or1244:
  whilebody1243:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1246:
    JR_LTEQF VGV_S3 10.0 and1247
    JR_GTF VGV_S2 10.0 whilebody1243
  and1247:
    JR_GTEQF VGV_S3 10.0 and1248
    JR_LTF VGV_S2 10.0 whilebody1243
  and1248:
  endwhile1243:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1250
    DATA8 flag1250
    DIVF 360.0 VGV_L tmpf1250
    CP_EQF 0.0 VGV_L flag1250
    SELECTF flag1250 0.0 tmpf1250 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1253:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1257
    DATA8 flag1257
    DIVF F.1 2.0 tmpf1257
    CP_EQF 0.0 2.0 flag1257
    SELECTF flag1257 0.0 tmpf1257 F.0

    JR_GTEQF F.0 VGV_X endwhile1253
  whilebody1253:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1258:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1259:
    JR_GTEQF VGV_SPEED 80.0 else1260_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1260_1:
  endif1260:
    WRITE32 ENDSUB_F_POLIN2DUS_0:CALLSUB1262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2DUS_0
CALLSUB1262:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1266
    DATA8 flag1266
    DIVF F.1 2.0 tmpf1266
    CP_EQF 0.0 2.0 flag1266
    SELECTF flag1266 0.0 tmpf1266 F.0

    JR_LTF F.0 VGV_X whilebody1253
  endwhile1253:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1268:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1269:
  while1270:
    JR_LTEQF VGV_S3 15.0 and1272
    JR_GTF VGV_S2 15.0 or1271
  and1272:
    JR_GTEQF VGV_S3 15.0 endwhile1270
    JR_GTEQF VGV_S2 15.0 endwhile1270
  or1271:
  whilebody1270:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1273:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1274:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1275:
    JR_LTEQF VGV_S3 15.0 and1276
    JR_GTF VGV_S2 15.0 whilebody1270
  and1276:
    JR_GTEQF VGV_S3 15.0 and1277
    JR_LTF VGV_S2 15.0 whilebody1270
  and1277:
  endwhile1270:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer1279
	DATA8 nos1279
	DATA8 busy1279
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1279 nos1279
	JR_EQ8 0 nos1279 motornotbusy1279
  motorwaiting1279:
	OUTPUT_TEST layer1279 nos1279 busy1279
	JR_EQ8 busy1279 0 motornotbusy1279
	SLEEP
	JR motorwaiting1279
  motornotbusy1279:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1281
	DATA8 nos1281
	DATA8 busy1281
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1281 nos1281
	JR_EQ8 0 nos1281 motornotbusy1281
  motorwaiting1281:
	OUTPUT_TEST layer1281 nos1281 busy1281
	JR_EQ8 busy1281 0 motornotbusy1281
	SLEEP
	JR motorwaiting1281
  motornotbusy1281:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1282:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1283:
  while1284:
    JR_LTEQF VGV_S2 15.0 endwhile1284
  whilebody1284:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1285:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1286:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody1284
  endwhile1284:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1289:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1290:
  while1291:
    JR_GTEQF VGV_S2 55.0 endwhile1291
  whilebody1291:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1292:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1293:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody1291
  endwhile1291:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer1296
	DATA8 nos1296
	DATA8 busy1296
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1296 nos1296
	JR_EQ8 0 nos1296 motornotbusy1296
  motorwaiting1296:
	OUTPUT_TEST layer1296 nos1296 busy1296
	JR_EQ8 busy1296 0 motornotbusy1296
	SLEEP
	JR motorwaiting1296
  motornotbusy1296:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1298
	DATA8 nos1298
	DATA8 busy1298
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1298 nos1298
	JR_EQ8 0 nos1298 motornotbusy1298
  motorwaiting1298:
	OUTPUT_TEST layer1298 nos1298 busy1298
	JR_EQ8 busy1298 0 motornotbusy1298
	SLEEP
	JR motorwaiting1298
  motornotbusy1298:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1299:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1300:
  while1301:
    JR_LTEQF VGV_S3 15.0 endwhile1301
  whilebody1301:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1302:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1303:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1301
  endwhile1301:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1306:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1307:
  while1308:
    JR_GTEQF VGV_S3 60.0 endwhile1308
  whilebody1308:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1309:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1310:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1308
  endwhile1308:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1313:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1314:
  while1315:
    JR_LTEQF VGV_S2 9.0 and1317
    JR_GTF VGV_S3 9.0 or1316
  and1317:
    JR_GTEQF VGV_S2 9.0 and1318
    JR_GTF VGV_S3 9.0 or1316
  and1318:
    JR_LTEQF VGV_S2 9.0 endwhile1315
    JR_GTEQF VGV_S3 9.0 endwhile1315
  or1316:
  whilebody1315:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1319:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1320:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1322
    JR_GTF VGV_S3 9.0 whilebody1315
  and1322:
    JR_GTEQF VGV_S2 9.0 and1323
    JR_GTF VGV_S3 9.0 whilebody1315
  and1323:
    JR_LTEQF VGV_S2 9.0 and1324
    JR_LTF VGV_S3 9.0 whilebody1315
  and1324:
  endwhile1315:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1325
	DATA8 nos1325
	DATA8 busy1325
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1325 nos1325
	JR_EQ8 0 nos1325 motornotbusy1325
  motorwaiting1325:
	OUTPUT_TEST layer1325 nos1325 busy1325
	JR_EQ8 busy1325 0 motornotbusy1325
	SLEEP
	JR motorwaiting1325
  motornotbusy1325:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1327
	DATA8 nos1327
	DATA8 busy1327
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1327 nos1327
	JR_EQ8 0 nos1327 motornotbusy1327
  motorwaiting1327:
	OUTPUT_TEST layer1327 nos1327 busy1327
	JR_EQ8 busy1327 0 motornotbusy1327
	SLEEP
	JR motorwaiting1327
  motornotbusy1327:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1329:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1330:
  while1331:
    JR_LTEQF VGV_S2 10.0 endwhile1331
  whilebody1331:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1332:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1333:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1331
  endwhile1331:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1335:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1336:
  while1337:
    JR_GTEQF VGV_S2 60.0 endwhile1337
  whilebody1337:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1338:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1339:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1337
  endwhile1337:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1342:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 20.0 'true'

	DATA8 layer1343
	DATA8 nos1343
	DATA8 busy1343
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1343 nos1343
	JR_EQ8 0 nos1343 motornotbusy1343
  motorwaiting1343:
	OUTPUT_TEST layer1343 nos1343 busy1343
	JR_EQ8 busy1343 0 motornotbusy1343
	SLEEP
	JR motorwaiting1343
  motornotbusy1343:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1345
	DATA8 nos1345
	DATA8 busy1345
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1345 nos1345
	JR_EQ8 0 nos1345 motornotbusy1345
  motorwaiting1345:
	OUTPUT_TEST layer1345 nos1345 busy1345
	JR_EQ8 busy1345 0 motornotbusy1345
	SLEEP
	JR motorwaiting1345
  motornotbusy1345:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1347:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1348:
  while1349:
    JR_LTEQF VGV_S3 8.0 endwhile1349
  whilebody1349:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1350:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1351:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1349
  endwhile1349:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1353:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1354:
  while1355:
    JR_GTEQF VGV_S3 55.0 endwhile1355
  whilebody1355:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1356:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1357:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1355
  endwhile1355:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1360
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1360
    JR_NEQ32 0 tmp1360 alreadylaunched1360
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1360:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1361:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1362:
  while1363:
    JR_LTEQF VGV_S3 15.0 and1365
    JR_GTF VGV_S2 15.0 or1364
  and1365:
    JR_GTEQF VGV_S3 15.0 and1366
    JR_GTF VGV_S2 15.0 or1364
  and1366:
    JR_LTEQF VGV_S3 15.0 endwhile1363
    JR_GTEQF VGV_S2 15.0 endwhile1363
  or1364:
  whilebody1363:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1367:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1368:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1369:
    JR_LTEQF VGV_S3 15.0 and1370
    JR_GTF VGV_S2 15.0 whilebody1363
  and1370:
    JR_GTEQF VGV_S3 15.0 and1371
    JR_GTF VGV_S2 15.0 whilebody1363
  and1371:
    JR_LTEQF VGV_S3 15.0 and1372
    JR_LTF VGV_S2 15.0 whilebody1363
  and1372:
  endwhile1363:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1374
	DATA8 nos1374
	DATA8 busy1374
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1374 nos1374
	JR_EQ8 0 nos1374 motornotbusy1374
  motorwaiting1374:
	OUTPUT_TEST layer1374 nos1374 busy1374
	JR_EQ8 busy1374 0 motornotbusy1374
	SLEEP
	JR motorwaiting1374
  motornotbusy1374:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1375
	DATA8 nos1375
	DATA8 busy1375
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1375 nos1375
	JR_EQ8 0 nos1375 motornotbusy1375
  motorwaiting1375:
	OUTPUT_TEST layer1375 nos1375 busy1375
	JR_EQ8 busy1375 0 motornotbusy1375
	SLEEP
	JR motorwaiting1375
  motornotbusy1375:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1378:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1379:
  while1380:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1380
  whilebody1380:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1382:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1383:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1384:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1380
  endwhile1380:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -60.0
    DATA32 milliseconds1388
	MOVEF_32 250.0 milliseconds1388
	DATA32 timer1388
	TIMER_WAIT milliseconds1388 timer1388
	TIMER_READY timer1388
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1390
	DATA8 nos1390
	DATA8 busy1390
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1390 nos1390
	JR_EQ8 0 nos1390 motornotbusy1390
  motorwaiting1390:
	OUTPUT_TEST layer1390 nos1390 busy1390
	JR_EQ8 busy1390 0 motornotbusy1390
	SLEEP
	JR motorwaiting1390
  motornotbusy1390:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -100.0
    DATA32 milliseconds1392
	MOVEF_32 1400.0 milliseconds1392
	DATA32 timer1392
	TIMER_WAIT milliseconds1392 timer1392
	TIMER_READY timer1392
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1394
	DATA8 nos1394
	DATA8 busy1394
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1394 nos1394
	JR_EQ8 0 nos1394 motornotbusy1394
  motorwaiting1394:
	OUTPUT_TEST layer1394 nos1394 busy1394
	JR_EQ8 busy1394 0 motornotbusy1394
	SLEEP
	JR motorwaiting1394
  motornotbusy1394:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1395
	DATA8 nos1395
	DATA8 busy1395
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1395 nos1395
	JR_EQ8 0 nos1395 motornotbusy1395
  motorwaiting1395:
	OUTPUT_TEST layer1395 nos1395 busy1395
	JR_EQ8 busy1395 0 motornotbusy1395
	SLEEP
	JR motorwaiting1395
  motornotbusy1395:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1396
	DATA8 nos1396
	DATA8 busy1396
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1396 nos1396
	JR_EQ8 0 nos1396 motornotbusy1396
  motorwaiting1396:
	OUTPUT_TEST layer1396 nos1396 busy1396
	JR_EQ8 busy1396 0 motornotbusy1396
	SLEEP
	JR motorwaiting1396
  motornotbusy1396:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1397:
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 45.0 'true'

	DATA8 layer1398
	DATA8 nos1398
	DATA8 busy1398
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1398 nos1398
	JR_EQ8 0 nos1398 motornotbusy1398
  motorwaiting1398:
	OUTPUT_TEST layer1398 nos1398 busy1398
	JR_EQ8 busy1398 0 motornotbusy1398
	SLEEP
	JR motorwaiting1398
  motornotbusy1398:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1399
	DATA8 nos1399
	DATA8 busy1399
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1399 nos1399
	JR_EQ8 0 nos1399 motornotbusy1399
  motorwaiting1399:
	OUTPUT_TEST layer1399 nos1399 busy1399
	JR_EQ8 busy1399 0 motornotbusy1399
	SLEEP
	JR motorwaiting1399
  motornotbusy1399:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1401:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1402:
  while1403:
    JR_LTEQF VGV_S2 15.0 endwhile1403
  whilebody1403:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1404:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1405:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1403
  endwhile1403:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1408:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1409:
  while1410:
    JR_GTEQF VGV_S2 50.0 endwhile1410
  whilebody1410:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1411:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1412:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1410
  endwhile1410:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1415:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1416:
  while1417:
    JR_LTEQF VGV_S3 15.0 and1419
    JR_GTF VGV_S2 15.0 or1418
  and1419:
    JR_GTEQF VGV_S3 15.0 endwhile1417
    JR_GTEQF VGV_S2 15.0 endwhile1417
  or1418:
  whilebody1417:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1420:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1421:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1422:
    JR_LTEQF VGV_S3 15.0 and1423
    JR_GTF VGV_S2 15.0 whilebody1417
  and1423:
    JR_GTEQF VGV_S3 15.0 and1424
    JR_LTF VGV_S2 15.0 whilebody1417
  and1424:
  endwhile1417:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1426:
    CALL MOTOR.RESETCOUNT 'bc'
  while1428:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1432
    DATA8 flag1432
    DIVF F.1 2.0 tmpf1432
    CP_EQF 0.0 2.0 flag1432
    SELECTF flag1432 0.0 tmpf1432 F.0

    JR_GTEQF F.0 200.0 endwhile1428
  whilebody1428:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1433:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1437
    DATA8 flag1437
    DIVF F.1 2.0 tmpf1437
    CP_EQF 0.0 2.0 flag1437
    SELECTF flag1437 0.0 tmpf1437 F.0

    JR_LTF F.0 200.0 whilebody1428
  endwhile1428:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1439:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1440:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1441:
    JR_GTF VGV_I 1.0 endfor1441
  forbody1441:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1442:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1443:
  while1444:
    JR_LTEQF VGV_S3 15.0 and1446
    JR_GTF VGV_S2 15.0 or1445
  and1446:
    JR_GTEQF VGV_S3 15.0 endwhile1444
    JR_GTEQF VGV_S2 15.0 endwhile1444
  or1445:
  whilebody1444:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1447:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1448:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1449:
    JR_LTEQF VGV_S3 15.0 and1450
    JR_GTF VGV_S2 15.0 whilebody1444
  and1450:
    JR_GTEQF VGV_S3 15.0 and1451
    JR_LTF VGV_S2 15.0 whilebody1444
  and1451:
  endwhile1444:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1453
	DATA8 nos1453
	DATA8 busy1453
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1453 nos1453
	JR_EQ8 0 nos1453 motornotbusy1453
  motorwaiting1453:
	OUTPUT_TEST layer1453 nos1453 busy1453
	JR_EQ8 busy1453 0 motornotbusy1453
	SLEEP
	JR motorwaiting1453
  motornotbusy1453:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1441
  endfor1441:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 15.0 'true'

	DATA8 layer1456
	DATA8 nos1456
	DATA8 busy1456
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1456 nos1456
	JR_EQ8 0 nos1456 motornotbusy1456
  motorwaiting1456:
	OUTPUT_TEST layer1456 nos1456 busy1456
	JR_EQ8 busy1456 0 motornotbusy1456
	SLEEP
	JR motorwaiting1456
  motornotbusy1456:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 193.0 'true'

	DATA8 layer1457
	DATA8 nos1457
	DATA8 busy1457
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1457 nos1457
	JR_EQ8 0 nos1457 motornotbusy1457
  motorwaiting1457:
	OUTPUT_TEST layer1457 nos1457 busy1457
	JR_EQ8 busy1457 0 motornotbusy1457
	SLEEP
	JR motorwaiting1457
  motornotbusy1457:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1458
	DATA8 nos1458
	DATA8 busy1458
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1458 nos1458
	JR_EQ8 0 nos1458 motornotbusy1458
  motorwaiting1458:
	OUTPUT_TEST layer1458 nos1458 busy1458
	JR_EQ8 busy1458 0 motornotbusy1458
	SLEEP
	JR motorwaiting1458
  motornotbusy1458:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1460
	MOVEF_32 500.0 milliseconds1460
	DATA32 timer1460
	TIMER_WAIT milliseconds1460 timer1460
	TIMER_READY timer1460
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 110.0 'true'

	DATA8 layer1462
	DATA8 nos1462
	DATA8 busy1462
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1462 nos1462
	JR_EQ8 0 nos1462 motornotbusy1462
  motorwaiting1462:
	OUTPUT_TEST layer1462 nos1462 busy1462
	JR_EQ8 busy1462 0 motornotbusy1462
	SLEEP
	JR motorwaiting1462
  motornotbusy1462:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 415.0 'true'

	DATA8 layer1463
	DATA8 nos1463
	DATA8 busy1463
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1463 nos1463
	JR_EQ8 0 nos1463 motornotbusy1463
  motorwaiting1463:
	OUTPUT_TEST layer1463 nos1463 busy1463
	JR_EQ8 busy1463 0 motornotbusy1463
	SLEEP
	JR motorwaiting1463
  motornotbusy1463:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1464:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1465:
  while1466:
    JR_LTEQF VGV_S3 10.0 and1468
    JR_GTF VGV_S2 10.0 or1467
  and1468:
    JR_GTEQF VGV_S3 10.0 and1469
    JR_GTF VGV_S2 10.0 or1467
  and1469:
    JR_LTEQF VGV_S3 6.0 endwhile1466
    JR_GTEQF VGV_S2 6.0 endwhile1466
  or1467:
  whilebody1466:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1470:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1471:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1473
    JR_GTF VGV_S2 10.0 whilebody1466
  and1473:
    JR_GTEQF VGV_S3 10.0 and1474
    JR_GTF VGV_S2 10.0 whilebody1466
  and1474:
    JR_LTEQF VGV_S3 6.0 and1475
    JR_LTF VGV_S2 6.0 whilebody1466
  and1475:
  endwhile1466:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1477
	DATA8 nos1477
	DATA8 busy1477
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1477 nos1477
	JR_EQ8 0 nos1477 motornotbusy1477
  motorwaiting1477:
	OUTPUT_TEST layer1477 nos1477 busy1477
	JR_EQ8 busy1477 0 motornotbusy1477
	SLEEP
	JR motorwaiting1477
  motornotbusy1477:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1479:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1480:
  while1481:
    JR_LTEQF VGV_S3 10.0 endwhile1481
  whilebody1481:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1482:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1483:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1481
  endwhile1481:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1486:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1487:
  while1488:
    JR_GTEQF VGV_S3 60.0 endwhile1488
  whilebody1488:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1489:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1490:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1488
  endwhile1488:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1493
	MOVEF_32 100.0 milliseconds1493
	DATA32 timer1493
	TIMER_WAIT milliseconds1493 timer1493
	TIMER_READY timer1493
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1494:
    CALL MOTOR.RESETCOUNT 'bc'
  while1496:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1500
    DATA8 flag1500
    DIVF F.1 2.0 tmpf1500
    CP_EQF 0.0 2.0 flag1500
    SELECTF flag1500 0.0 tmpf1500 F.0

    JR_GTEQF F.0 200.0 endwhile1496
  whilebody1496:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1501:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1505
    DATA8 flag1505
    DIVF F.1 2.0 tmpf1505
    CP_EQF 0.0 2.0 flag1505
    SELECTF flag1505 0.0 tmpf1505 F.0

    JR_LTF F.0 200.0 whilebody1496
  endwhile1496:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1507:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1508:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1509:
    JR_GTF VGV_I 2.0 endfor1509
  forbody1509:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1510:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1511:
  while1512:
    JR_LTEQF VGV_S3 15.0 and1514
    JR_GTF VGV_S2 15.0 or1513
  and1514:
    JR_GTEQF VGV_S3 15.0 endwhile1512
    JR_GTEQF VGV_S2 15.0 endwhile1512
  or1513:
  whilebody1512:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1515:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1516:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1517:
    JR_LTEQF VGV_S3 15.0 and1518
    JR_GTF VGV_S2 15.0 whilebody1512
  and1518:
    JR_GTEQF VGV_S3 15.0 and1519
    JR_LTF VGV_S2 15.0 whilebody1512
  and1519:
  endwhile1512:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1521
	DATA8 nos1521
	DATA8 busy1521
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1521 nos1521
	JR_EQ8 0 nos1521 motornotbusy1521
  motorwaiting1521:
	OUTPUT_TEST layer1521 nos1521 busy1521
	JR_EQ8 busy1521 0 motornotbusy1521
	SLEEP
	JR motorwaiting1521
  motornotbusy1521:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1509
  endfor1509:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 5.0 'true'

	DATA8 layer1524
	DATA8 nos1524
	DATA8 busy1524
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1524 nos1524
	JR_EQ8 0 nos1524 motornotbusy1524
  motorwaiting1524:
	OUTPUT_TEST layer1524 nos1524 busy1524
	JR_EQ8 busy1524 0 motornotbusy1524
	SLEEP
	JR motorwaiting1524
  motornotbusy1524:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1526:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1527:
    MOVEF_F 80.0 VGV_J
  while1528:
    JR_LTEQF VGV_S3 10.0 endwhile1528
  whilebody1528:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1529:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1530:
    JR_LTEQF VGV_J 30.0 else1531_1
    SUBF VGV_J 0.1 VGV_J
  else1531_1:
  endif1531:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1528
  endwhile1528:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1535:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1536:
    MOVEF_F 80.0 VGV_J
  while1537:
    JR_GTEQF VGV_S3 15.0 endwhile1537
  whilebody1537:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1538:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1539:
    JR_LTEQF VGV_J 30.0 else1540_1
    SUBF VGV_J 0.1 VGV_J
  else1540_1:
  endif1540:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1537
  endwhile1537:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1545:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1549
    DATA8 flag1549
    DIVF F.1 2.0 tmpf1549
    CP_EQF 0.0 2.0 flag1549
    SELECTF flag1549 0.0 tmpf1549 F.0

    JR_GTEQF F.0 50.0 endwhile1545
  whilebody1545:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1550:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1551:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1552:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1553:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1555
    DATA8 flag1555
    DIVF F.1 2.0 tmpf1555
    CP_EQF 0.0 2.0 flag1555
    SELECTF flag1555 0.0 tmpf1555 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1567
    DATA8 flag1567
    DIVF F.1 2.0 tmpf1567
    CP_EQF 0.0 2.0 flag1567
    SELECTF flag1567 0.0 tmpf1567 F.0

    JR_LTF F.0 50.0 whilebody1545
  endwhile1545:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 18.0 95.0 'true'

	DATA8 layer1569
	DATA8 nos1569
	DATA8 busy1569
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1569 nos1569
	JR_EQ8 0 nos1569 motornotbusy1569
  motorwaiting1569:
	OUTPUT_TEST layer1569 nos1569 busy1569
	JR_EQ8 busy1569 0 motornotbusy1569
	SLEEP
	JR motorwaiting1569
  motornotbusy1569:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1571
	MOVEF_32 500.0 milliseconds1571
	DATA32 timer1571
	TIMER_WAIT milliseconds1571 timer1571
	TIMER_READY timer1571
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1574:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1578
    DATA8 flag1578
    DIVF F.1 2.0 tmpf1578
    CP_EQF 0.0 2.0 flag1578
    SELECTF flag1578 0.0 tmpf1578 F.0

    JR_LTEQF F.0 -240.0 endwhile1574
  whilebody1574:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1583
    DATA8 flag1583
    DIVF F.1 2.0 tmpf1583
    CP_EQF 0.0 2.0 flag1583
    SELECTF flag1583 0.0 tmpf1583 F.0

    JR_GTF F.0 -240.0 whilebody1574
  endwhile1574:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1585
	DATA8 nos1585
	DATA8 busy1585
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1585 nos1585
	JR_EQ8 0 nos1585 motornotbusy1585
  motorwaiting1585:
	OUTPUT_TEST layer1585 nos1585 busy1585
	JR_EQ8 busy1585 0 motornotbusy1585
	SLEEP
	JR motorwaiting1585
  motornotbusy1585:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1587:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1588:
  while1589:
    JR_LTEQF VGV_S3 10.0 and1591
    JR_GTF VGV_S2 10.0 or1590
  and1591:
    JR_LTEQF VGV_S3 10.0 and1592
    JR_LTF VGV_S2 10.0 or1590
  and1592:
    JR_GTEQF VGV_S3 10.0 endwhile1589
    JR_LTEQF VGV_S2 10.0 endwhile1589
  or1590:
  whilebody1589:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1593:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1594:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1596
    JR_GTF VGV_S2 10.0 whilebody1589
  and1596:
    JR_LTEQF VGV_S3 10.0 and1597
    JR_LTF VGV_S2 10.0 whilebody1589
  and1597:
    JR_GTEQF VGV_S3 10.0 and1598
    JR_GTF VGV_S2 10.0 whilebody1589
  and1598:
  endwhile1589:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1600
	DATA8 nos1600
	DATA8 busy1600
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1600 nos1600
	JR_EQ8 0 nos1600 motornotbusy1600
  motorwaiting1600:
	OUTPUT_TEST layer1600 nos1600 busy1600
	JR_EQ8 busy1600 0 motornotbusy1600
	SLEEP
	JR motorwaiting1600
  motornotbusy1600:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1601:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1602:
  while1603:
    JR_LTEQF VGV_S3 10.0 endwhile1603
  whilebody1603:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1604:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1605:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1603
  endwhile1603:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1607:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1608:
  while1609:
    JR_GTEQF VGV_S3 15.0 endwhile1609
  whilebody1609:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1610:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1611:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1609
  endwhile1609:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1614
	DATA8 nos1614
	DATA8 busy1614
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1614 nos1614
	JR_EQ8 0 nos1614 motornotbusy1614
  motorwaiting1614:
	OUTPUT_TEST layer1614 nos1614 busy1614
	JR_EQ8 busy1614 0 motornotbusy1614
	SLEEP
	JR motorwaiting1614
  motornotbusy1614:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1615:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1616:
  while1617:
    JR_LTEQF VGV_S3 15.0 endwhile1617
  whilebody1617:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1618:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1619:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1617
  endwhile1617:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1622:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1623:
  while1624:
    JR_GTEQF VGV_S3 15.0 endwhile1624
  whilebody1624:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1625:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1626:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1624
  endwhile1624:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.4 VGV_K3
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.RESETCOUNT 'bc'
  while1630:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 270.0 endwhile1630
  whilebody1630:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1632:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 270.0 whilebody1630
  endwhile1630:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1635:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1636:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1637:
    JR_GTF VGV_I 3.0 endfor1637
  forbody1637:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1638:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1639:
  while1640:
    JR_LTEQF VGV_S3 15.0 and1642
    JR_GTF VGV_S2 15.0 or1641
  and1642:
    JR_GTEQF VGV_S3 15.0 endwhile1640
    JR_GTEQF VGV_S2 15.0 endwhile1640
  or1641:
  whilebody1640:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1643:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1644:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1645:
    JR_LTEQF VGV_S3 15.0 and1646
    JR_GTF VGV_S2 15.0 whilebody1640
  and1646:
    JR_GTEQF VGV_S3 15.0 and1647
    JR_LTF VGV_S2 15.0 whilebody1640
  and1647:
  endwhile1640:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1649
	DATA8 nos1649
	DATA8 busy1649
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1649 nos1649
	JR_EQ8 0 nos1649 motornotbusy1649
  motorwaiting1649:
	OUTPUT_TEST layer1649 nos1649 busy1649
	JR_EQ8 busy1649 0 motornotbusy1649
	SLEEP
	JR motorwaiting1649
  motornotbusy1649:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1637
  endfor1637:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 200.0 'true'

	DATA8 layer1652
	DATA8 nos1652
	DATA8 busy1652
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1652 nos1652
	JR_EQ8 0 nos1652 motornotbusy1652
  motorwaiting1652:
	OUTPUT_TEST layer1652 nos1652 busy1652
	JR_EQ8 busy1652 0 motornotbusy1652
	SLEEP
	JR motorwaiting1652
  motornotbusy1652:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1653
	DATA8 nos1653
	DATA8 busy1653
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1653 nos1653
	JR_EQ8 0 nos1653 motornotbusy1653
  motorwaiting1653:
	OUTPUT_TEST layer1653 nos1653 busy1653
	JR_EQ8 busy1653 0 motornotbusy1653
	SLEEP
	JR motorwaiting1653
  motornotbusy1653:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1655
	MOVEF_32 500.0 milliseconds1655
	DATA32 timer1655
	TIMER_WAIT milliseconds1655 timer1655
	TIMER_READY timer1655
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1657
	DATA8 nos1657
	DATA8 busy1657
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1657 nos1657
	JR_EQ8 0 nos1657 motornotbusy1657
  motorwaiting1657:
	OUTPUT_TEST layer1657 nos1657 busy1657
	JR_EQ8 busy1657 0 motornotbusy1657
	SLEEP
	JR motorwaiting1657
  motornotbusy1657:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 375.0 'true'

	DATA8 layer1658
	DATA8 nos1658
	DATA8 busy1658
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1658 nos1658
	JR_EQ8 0 nos1658 motornotbusy1658
  motorwaiting1658:
	OUTPUT_TEST layer1658 nos1658 busy1658
	JR_EQ8 busy1658 0 motornotbusy1658
	SLEEP
	JR motorwaiting1658
  motornotbusy1658:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 199.0 'true'

	DATA8 layer1659
	DATA8 nos1659
	DATA8 busy1659
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1659 nos1659
	JR_EQ8 0 nos1659 motornotbusy1659
  motorwaiting1659:
	OUTPUT_TEST layer1659 nos1659 busy1659
	JR_EQ8 busy1659 0 motornotbusy1659
	SLEEP
	JR motorwaiting1659
  motornotbusy1659:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1660
	DATA8 nos1660
	DATA8 busy1660
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1660 nos1660
	JR_EQ8 0 nos1660 motornotbusy1660
  motorwaiting1660:
	OUTPUT_TEST layer1660 nos1660 busy1660
	JR_EQ8 busy1660 0 motornotbusy1660
	SLEEP
	JR motorwaiting1660
  motornotbusy1660:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1661
	DATA8 nos1661
	DATA8 busy1661
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1661 nos1661
	JR_EQ8 0 nos1661 motornotbusy1661
  motorwaiting1661:
	OUTPUT_TEST layer1661 nos1661 busy1661
	JR_EQ8 busy1661 0 motornotbusy1661
	SLEEP
	JR motorwaiting1661
  motornotbusy1661:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1662:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1663:
  while1664:
    JR_LTEQF VGV_S3 10.0 and1666
    JR_GTF VGV_S2 10.0 or1665
  and1666:
    JR_GTEQF VGV_S3 10.0 and1667
    JR_GTF VGV_S2 10.0 or1665
  and1667:
    JR_LTEQF VGV_S3 10.0 endwhile1664
    JR_GTEQF VGV_S2 10.0 endwhile1664
  or1665:
  whilebody1664:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1668:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1669:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1671
    JR_GTF VGV_S2 10.0 whilebody1664
  and1671:
    JR_GTEQF VGV_S3 10.0 and1672
    JR_GTF VGV_S2 10.0 whilebody1664
  and1672:
    JR_LTEQF VGV_S3 10.0 and1673
    JR_LTF VGV_S2 10.0 whilebody1664
  and1673:
  endwhile1664:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1675
	DATA8 nos1675
	DATA8 busy1675
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1675 nos1675
	JR_EQ8 0 nos1675 motornotbusy1675
  motorwaiting1675:
	OUTPUT_TEST layer1675 nos1675 busy1675
	JR_EQ8 busy1675 0 motornotbusy1675
	SLEEP
	JR motorwaiting1675
  motornotbusy1675:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1677
	DATA8 nos1677
	DATA8 busy1677
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1677 nos1677
	JR_EQ8 0 nos1677 motornotbusy1677
  motorwaiting1677:
	OUTPUT_TEST layer1677 nos1677 busy1677
	JR_EQ8 busy1677 0 motornotbusy1677
	SLEEP
	JR motorwaiting1677
  motornotbusy1677:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1678:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1679:
  while1680:
    JR_LTEQF VGV_S3 15.0 endwhile1680
  whilebody1680:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1681:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1682:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1680
  endwhile1680:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1685:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1686:
  while1687:
    JR_GTEQF VGV_S3 60.0 endwhile1687
  whilebody1687:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1688:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1689:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1687
  endwhile1687:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1692:
    JR_GTF VGV_I 1.0 endfor1692
  forbody1692:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1693:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1694:
  while1695:
    JR_LTEQF VGV_S3 10.0 and1697
    JR_GTF VGV_S2 10.0 or1696
  and1697:
    JR_GTEQF VGV_S3 10.0 endwhile1695
    JR_GTEQF VGV_S2 10.0 endwhile1695
  or1696:
  whilebody1695:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1698:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1699:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1700:
    JR_LTEQF VGV_S3 10.0 and1701
    JR_GTF VGV_S2 10.0 whilebody1695
  and1701:
    JR_GTEQF VGV_S3 10.0 and1702
    JR_LTF VGV_S2 10.0 whilebody1695
  and1702:
  endwhile1695:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1704
	DATA8 nos1704
	DATA8 busy1704
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1704 nos1704
	JR_EQ8 0 nos1704 motornotbusy1704
  motorwaiting1704:
	OUTPUT_TEST layer1704 nos1704 busy1704
	JR_EQ8 busy1704 0 motornotbusy1704
	SLEEP
	JR motorwaiting1704
  motornotbusy1704:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1692
  endfor1692:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1707:
    CALL MOTOR.RESETCOUNT 'bc'
  while1709:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1713
    DATA8 flag1713
    DIVF F.1 2.0 tmpf1713
    CP_EQF 0.0 2.0 flag1713
    SELECTF flag1713 0.0 tmpf1713 F.0

    JR_GTEQF F.0 30.0 endwhile1709
  whilebody1709:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1714:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1718
    DATA8 flag1718
    DIVF F.1 2.0 tmpf1718
    CP_EQF 0.0 2.0 flag1718
    SELECTF flag1718 0.0 tmpf1718 F.0

    JR_LTF F.0 30.0 whilebody1709
  endwhile1709:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer1719
	DATA8 nos1719
	DATA8 busy1719
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1719 nos1719
	JR_EQ8 0 nos1719 motornotbusy1719
  motorwaiting1719:
	OUTPUT_TEST layer1719 nos1719 busy1719
	JR_EQ8 busy1719 0 motornotbusy1719
	SLEEP
	JR motorwaiting1719
  motornotbusy1719:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1721
	MOVEF_32 100.0 milliseconds1721
	DATA32 timer1721
	TIMER_WAIT milliseconds1721 timer1721
	TIMER_READY timer1721
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1723
	MOVEF_32 500.0 milliseconds1723
	DATA32 timer1723
	TIMER_WAIT milliseconds1723 timer1723
	TIMER_READY timer1723
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1725:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1726:
  while1727:
    JR_LTEQF VGV_S2 9.0 and1729
    JR_GTF VGV_S3 9.0 or1728
  and1729:
    JR_GTEQF VGV_S2 9.0 and1730
    JR_GTF VGV_S3 9.0 or1728
  and1730:
    JR_LTEQF VGV_S2 9.0 endwhile1727
    JR_GTEQF VGV_S3 9.0 endwhile1727
  or1728:
  whilebody1727:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1731:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1732:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1734
    JR_GTF VGV_S3 9.0 whilebody1727
  and1734:
    JR_GTEQF VGV_S2 9.0 and1735
    JR_GTF VGV_S3 9.0 whilebody1727
  and1735:
    JR_LTEQF VGV_S2 9.0 and1736
    JR_LTF VGV_S3 9.0 whilebody1727
  and1736:
  endwhile1727:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1737
	DATA8 nos1737
	DATA8 busy1737
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1737 nos1737
	JR_EQ8 0 nos1737 motornotbusy1737
  motorwaiting1737:
	OUTPUT_TEST layer1737 nos1737 busy1737
	JR_EQ8 busy1737 0 motornotbusy1737
	SLEEP
	JR motorwaiting1737
  motornotbusy1737:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1739
	DATA8 nos1739
	DATA8 busy1739
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1739 nos1739
	JR_EQ8 0 nos1739 motornotbusy1739
  motorwaiting1739:
	OUTPUT_TEST layer1739 nos1739 busy1739
	JR_EQ8 busy1739 0 motornotbusy1739
	SLEEP
	JR motorwaiting1739
  motornotbusy1739:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1741:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1742:
  while1743:
    JR_LTEQF VGV_S2 10.0 endwhile1743
  whilebody1743:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1744:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1745:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1743
  endwhile1743:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1747:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1748:
  while1749:
    JR_GTEQF VGV_S2 60.0 endwhile1749
  whilebody1749:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1750:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1751:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1749
  endwhile1749:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1754
    DATA8 flag1754
    DIVF 360.0 VGV_L tmpf1754
    CP_EQF 0.0 VGV_L flag1754
    SELECTF flag1754 0.0 tmpf1754 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1757:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1757
  whilebody1757:
    JR_GTEQF VGV_SPEED 80.0 else1759_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1759_1:
  endif1759:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1761:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1757
  endwhile1757:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1764:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1765:
    MOVEF_F 1300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1766:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1768
	DATA8 nos1768
	DATA8 busy1768
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1768 nos1768
	JR_EQ8 0 nos1768 motornotbusy1768
  motorwaiting1768:
	OUTPUT_TEST layer1768 nos1768 busy1768
	JR_EQ8 busy1768 0 motornotbusy1768
	SLEEP
	JR motorwaiting1768
  motornotbusy1768:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1769:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1770:
  while1771:
    JR_LTEQF VGV_S3 10.0 and1773
    JR_GTF VGV_S2 10.0 or1772
  and1773:
    JR_GTEQF VGV_S3 10.0 endwhile1771
    JR_GTEQF VGV_S2 10.0 endwhile1771
  or1772:
  whilebody1771:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1774:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1775:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1776:
    JR_LTEQF VGV_S3 10.0 and1777
    JR_GTF VGV_S2 10.0 whilebody1771
  and1777:
    JR_GTEQF VGV_S3 10.0 and1778
    JR_LTF VGV_S2 10.0 whilebody1771
  and1778:
  endwhile1771:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1780:
    CALL MOTOR.RESETCOUNT 'bc'
  while1782:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1786
    DATA8 flag1786
    DIVF F.1 2.0 tmpf1786
    CP_EQF 0.0 2.0 flag1786
    SELECTF flag1786 0.0 tmpf1786 F.0

    JR_GTEQF F.0 10.0 endwhile1782
  whilebody1782:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1787:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1788:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1789:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1793
    DATA8 flag1793
    DIVF F.1 2.0 tmpf1793
    CP_EQF 0.0 2.0 flag1793
    SELECTF flag1793 0.0 tmpf1793 F.0

    JR_LTF F.0 10.0 whilebody1782
  endwhile1782:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1795
	DATA8 nos1795
	DATA8 busy1795
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1795 nos1795
	JR_EQ8 0 nos1795 motornotbusy1795
  motorwaiting1795:
	OUTPUT_TEST layer1795 nos1795 busy1795
	JR_EQ8 busy1795 0 motornotbusy1795
	SLEEP
	JR motorwaiting1795
  motornotbusy1795:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1797
	MOVEF_32 500.0 milliseconds1797
	DATA32 timer1797
	TIMER_WAIT milliseconds1797 timer1797
	TIMER_READY timer1797
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1799:
    DATA32 tmp1800
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1800
    JR_NEQ32 0 tmp1800 alreadylaunched1800
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1800:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1801:
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    DATA32 milliseconds1802
	MOVEF_32 400.0 milliseconds1802
	DATA32 timer1802
	TIMER_WAIT milliseconds1802 timer1802
	TIMER_READY timer1802
    CALL MOTOR.SCHEDULESYNC 'bc' -25.0 -20.0 150.0 'true'

	DATA8 layer1803
	DATA8 nos1803
	DATA8 busy1803
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1803 nos1803
	JR_EQ8 0 nos1803 motornotbusy1803
  motorwaiting1803:
	OUTPUT_TEST layer1803 nos1803 busy1803
	JR_EQ8 busy1803 0 motornotbusy1803
	SLEEP
	JR motorwaiting1803
  motornotbusy1803:
    DATA32 milliseconds1804
	MOVEF_32 400.0 milliseconds1804
	DATA32 timer1804
	TIMER_WAIT milliseconds1804 timer1804
	TIMER_READY timer1804
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 25.0 200.0 'true'

	DATA8 layer1805
	DATA8 nos1805
	DATA8 busy1805
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1805 nos1805
	JR_EQ8 0 nos1805 motornotbusy1805
  motorwaiting1805:
	OUTPUT_TEST layer1805 nos1805 busy1805
	JR_EQ8 busy1805 0 motornotbusy1805
	SLEEP
	JR motorwaiting1805
  motornotbusy1805:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1807:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1808:
  while1809:
    JR_LTEQF VGV_S2 12.0 endwhile1809
  whilebody1809:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1810:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1811:
    CALL MOTOR.STARTSYNC 'bc' -30.0 25.0
    JR_GTF VGV_S2 12.0 whilebody1809
  endwhile1809:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1814:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1815:
  while1816:
    JR_GTEQF VGV_S2 60.0 endwhile1816
  whilebody1816:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1817:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1818:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1816
  endwhile1816:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1822:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1826
    DATA8 flag1826
    DIVF F.1 2.0 tmpf1826
    CP_EQF 0.0 2.0 flag1826
    SELECTF flag1826 0.0 tmpf1826 F.0

    JR_GTEQF F.0 300.0 endwhile1822
  whilebody1822:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1827:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1828:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1829:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1833
    DATA8 flag1833
    DIVF F.1 2.0 tmpf1833
    CP_EQF 0.0 2.0 flag1833
    SELECTF flag1833 0.0 tmpf1833 F.0

    JR_LTF F.0 300.0 whilebody1822
  endwhile1822:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.15 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1835:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1836:
  while1837:
    JR_LTEQF VGV_S3 15.0 and1839
    JR_GTF VGV_S2 15.0 or1838
  and1839:
    JR_GTEQF VGV_S3 10.0 endwhile1837
    JR_GTEQF VGV_S2 15.0 endwhile1837
  or1838:
  whilebody1837:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1840:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1841:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1842:
    JR_LTEQF VGV_S3 15.0 and1843
    JR_GTF VGV_S2 15.0 whilebody1837
  and1843:
    JR_GTEQF VGV_S3 10.0 and1844
    JR_LTF VGV_S2 15.0 whilebody1837
  and1844:
  endwhile1837:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1846
	DATA8 no1846
	DATA8 mode81846
	
	MOVEF_8 1.0 no1846
	SUB8 no1846 1 no1846
	DIV8 no1846 4 layer1846
	MATH MOD8 no1846 4 no1846

	MOVEF_8 2.0 mode81846
	
	INPUT_DEVICE READY_RAW layer1846 no1846 0 mode81846 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1853
    DATA8 flag1853
    DIVF VGV_SRED 255.0 tmpf1853
    CP_EQF 0.0 255.0 flag1853
    SELECTF flag1853 0.0 tmpf1853 VGV_SRED

    DATAF tmpf1854
    DATA8 flag1854
    DIVF VGV_SGREEN 255.0 tmpf1854
    CP_EQF 0.0 255.0 flag1854
    SELECTF flag1854 0.0 tmpf1854 VGV_SGREEN

    DATAF tmpf1855
    DATA8 flag1855
    DIVF VGV_SBLUE 255.0 tmpf1855
    CP_EQF 0.0 255.0 flag1855
    SELECTF flag1855 0.0 tmpf1855 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1856_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1856_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1856
  else1856_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1856_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1856_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1856
  else1856_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1856_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1856_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1856_3:
  endif1856:
    JR_GTEQF VGV_SRED VGV_SGREEN else1857_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1857_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1857
  else1857_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1857_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1857_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1857
  else1857_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1857_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1857_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1857_3:
  endif1857:
    JR_NEQF VGV_MAX VGV_MIN else1858_1
    MOVEF_F 0.0 VGV_H
    JR endif1858
  else1858_1:
    JR_NEQF VGV_SRED VGV_MAX else1859_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1860_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1864
    DATA8 flag1864
    DIVF F.0 F.1 tmpf1864
    CP_EQF 0.0 F.1 flag1864
    SELECTF flag1864 0.0 tmpf1864 VGV_H

    JR endif1860
  else1860_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1868
    DATA8 flag1868
    DIVF F.1 F.2 tmpf1868
    CP_EQF 0.0 F.2 flag1868
    SELECTF flag1868 0.0 tmpf1868 F.0

    ADDF F.0 360.0 VGV_H
  else1860_2:
  endif1860:
    JR endif1859
  else1859_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1870_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1874
    DATA8 flag1874
    DIVF F.1 F.2 tmpf1874
    CP_EQF 0.0 F.2 flag1874
    SELECTF flag1874 0.0 tmpf1874 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1870
  else1870_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1879
    DATA8 flag1879
    DIVF F.1 F.2 tmpf1879
    CP_EQF 0.0 F.2 flag1879
    SELECTF flag1879 0.0 tmpf1879 F.0

    ADDF F.0 240.0 VGV_H
  else1870_2:
  endif1870:
  else1859_2:
  endif1859:
  else1858_2:
  endif1858:
    JR_NEQF VGV_MAX 0.0 else1881_1
    MOVEF_F 0.0 VGV_S
    JR endif1881
  else1881_1:
    DATAF tmpf1882
    DATA8 flag1882
    DIVF VGV_MIN VGV_MAX tmpf1882
    CP_EQF 0.0 VGV_MAX flag1882
    SELECTF flag1882 0.0 tmpf1882 F.0

    SUBF 1.0 F.0 VGV_S
  else1881_2:
  endif1881:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1891
	DATA8 no1891
	DATA8 mode81891
	
	MOVEF_8 1.0 no1891
	SUB8 no1891 1 no1891
	DIV8 no1891 4 layer1891
	MATH MOD8 no1891 4 no1891

	MOVEF_8 2.0 mode81891
	
	INPUT_DEVICE READY_RAW layer1891 no1891 0 mode81891 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1892:
    JR_GTF VGV_P 100.0 endfor1892
  forbody1892:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1893:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1892
  endfor1892:
    DATAF tmpf1898
    DATA8 flag1898
    DIVF VGV_X 100.0 tmpf1898
    CP_EQF 0.0 100.0 flag1898
    SELECTF flag1898 0.0 tmpf1898 VGV_H

    DATAF tmpf1899
    DATA8 flag1899
    DIVF VGV_Z 100.0 tmpf1899
    CP_EQF 0.0 100.0 flag1899
    SELECTF flag1899 0.0 tmpf1899 VGV_S

    DATAF tmpf1900
    DATA8 flag1900
    DIVF VGV_D 100.0 tmpf1900
    CP_EQF 0.0 100.0 flag1900
    SELECTF flag1900 0.0 tmpf1900 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1908
	DATA8 no1908
	DATA8 mode81908
	
	MOVEF_8 1.0 no1908
	SUB8 no1908 1 no1908
	DIV8 no1908 4 layer1908
	MATH MOD8 no1908 4 no1908

	MOVEF_8 2.0 mode81908
	
	INPUT_DEVICE READY_RAW layer1908 no1908 0 mode81908 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1915
    DATA8 flag1915
    DIVF VGV_SRED 255.0 tmpf1915
    CP_EQF 0.0 255.0 flag1915
    SELECTF flag1915 0.0 tmpf1915 VGV_SRED

    DATAF tmpf1916
    DATA8 flag1916
    DIVF VGV_SGREEN 255.0 tmpf1916
    CP_EQF 0.0 255.0 flag1916
    SELECTF flag1916 0.0 tmpf1916 VGV_SGREEN

    DATAF tmpf1917
    DATA8 flag1917
    DIVF VGV_SBLUE 255.0 tmpf1917
    CP_EQF 0.0 255.0 flag1917
    SELECTF flag1917 0.0 tmpf1917 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1918_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1918_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1918
  else1918_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1918_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1918_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1918
  else1918_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1918_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1918_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1918_3:
  endif1918:
    JR_GTEQF VGV_SRED VGV_SGREEN else1919_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1919_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1919
  else1919_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1919_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1919_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1919
  else1919_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1919_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1919_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1919_3:
  endif1919:
    JR_NEQF VGV_MAX VGV_MIN else1920_1
    MOVEF_F 0.0 VGV_H
    JR endif1920
  else1920_1:
    JR_NEQF VGV_SRED VGV_MAX else1921_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1922_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1926
    DATA8 flag1926
    DIVF F.0 F.1 tmpf1926
    CP_EQF 0.0 F.1 flag1926
    SELECTF flag1926 0.0 tmpf1926 VGV_H

    JR endif1922
  else1922_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1930
    DATA8 flag1930
    DIVF F.1 F.2 tmpf1930
    CP_EQF 0.0 F.2 flag1930
    SELECTF flag1930 0.0 tmpf1930 F.0

    ADDF F.0 360.0 VGV_H
  else1922_2:
  endif1922:
    JR endif1921
  else1921_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1932_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1936
    DATA8 flag1936
    DIVF F.1 F.2 tmpf1936
    CP_EQF 0.0 F.2 flag1936
    SELECTF flag1936 0.0 tmpf1936 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1932
  else1932_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1941
    DATA8 flag1941
    DIVF F.1 F.2 tmpf1941
    CP_EQF 0.0 F.2 flag1941
    SELECTF flag1941 0.0 tmpf1941 F.0

    ADDF F.0 240.0 VGV_H
  else1932_2:
  endif1932:
  else1921_2:
  endif1921:
  else1920_2:
  endif1920:
    JR_NEQF VGV_MAX 0.0 else1943_1
    MOVEF_F 0.0 VGV_S
    JR endif1943
  else1943_1:
    DATAF tmpf1944
    DATA8 flag1944
    DIVF VGV_MIN VGV_MAX tmpf1944
    CP_EQF 0.0 VGV_MAX flag1944
    SELECTF flag1944 0.0 tmpf1944 F.0

    SUBF 1.0 F.0 VGV_S
  else1943_2:
  endif1943:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1948
    JR_LTF VGV_H 360.0 or1947
  and1948:
    JR_LTF VGV_H 0.0 else1946_1
    JR_GTF VGV_H 20.0 else1946_1
    JR_LTEQF VGV_S 0.3 else1946_1
    JR_GTF VGV_S 1.0 else1946_1
    JR_LTEQF VGV_V 0.025 else1946_1
    JR_GTEQF VGV_V 0.1 else1946_1
  or1947:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1946
  else1946_1:
    JR_LTF VGV_H 20.0 else1946_2
    JR_GTEQF VGV_H 60.0 else1946_2
    JR_LTF VGV_S 0.4 else1946_2
    JR_LTEQF VGV_V 0.03 else1946_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1946
  else1946_2:
    MOVEF_F 6.0 VGV_COLOR
  else1946_3:
  endif1946:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1949
	DATA8 no1949
	DATA8 mode81949
	
	MOVEF_8 1.0 no1949
	SUB8 no1949 1 no1949
	DIV8 no1949 4 layer1949
	MATH MOD8 no1949 4 no1949

	MOVEF_8 2.0 mode81949
	
	INPUT_DEVICE READY_RAW layer1949 no1949 0 mode81949 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1956
    DATA8 flag1956
    DIVF VGV_SRED 255.0 tmpf1956
    CP_EQF 0.0 255.0 flag1956
    SELECTF flag1956 0.0 tmpf1956 VGV_SRED

    DATAF tmpf1957
    DATA8 flag1957
    DIVF VGV_SGREEN 255.0 tmpf1957
    CP_EQF 0.0 255.0 flag1957
    SELECTF flag1957 0.0 tmpf1957 VGV_SGREEN

    DATAF tmpf1958
    DATA8 flag1958
    DIVF VGV_SBLUE 255.0 tmpf1958
    CP_EQF 0.0 255.0 flag1958
    SELECTF flag1958 0.0 tmpf1958 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1959_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1959_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1959
  else1959_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1959_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1959_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1959
  else1959_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1959_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1959_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1959_3:
  endif1959:
    JR_GTEQF VGV_SRED VGV_SGREEN else1960_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1960_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1960
  else1960_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1960_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1960_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1960
  else1960_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1960_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1960_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1960_3:
  endif1960:
    JR_NEQF VGV_MAX VGV_MIN else1961_1
    MOVEF_F 0.0 VGV_H
    JR endif1961
  else1961_1:
    JR_NEQF VGV_SRED VGV_MAX else1962_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1963_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1967
    DATA8 flag1967
    DIVF F.0 F.1 tmpf1967
    CP_EQF 0.0 F.1 flag1967
    SELECTF flag1967 0.0 tmpf1967 VGV_H

    JR endif1963
  else1963_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1971
    DATA8 flag1971
    DIVF F.1 F.2 tmpf1971
    CP_EQF 0.0 F.2 flag1971
    SELECTF flag1971 0.0 tmpf1971 F.0

    ADDF F.0 360.0 VGV_H
  else1963_2:
  endif1963:
    JR endif1962
  else1962_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1973_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1977
    DATA8 flag1977
    DIVF F.1 F.2 tmpf1977
    CP_EQF 0.0 F.2 flag1977
    SELECTF flag1977 0.0 tmpf1977 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1973
  else1973_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1982
    DATA8 flag1982
    DIVF F.1 F.2 tmpf1982
    CP_EQF 0.0 F.2 flag1982
    SELECTF flag1982 0.0 tmpf1982 F.0

    ADDF F.0 240.0 VGV_H
  else1973_2:
  endif1973:
  else1962_2:
  endif1962:
  else1961_2:
  endif1961:
    JR_NEQF VGV_MAX 0.0 else1984_1
    MOVEF_F 0.0 VGV_S
    JR endif1984
  else1984_1:
    DATAF tmpf1985
    DATA8 flag1985
    DIVF VGV_MIN VGV_MAX tmpf1985
    CP_EQF 0.0 VGV_MAX flag1985
    SELECTF flag1985 0.0 tmpf1985 F.0

    SUBF 1.0 F.0 VGV_S
  else1984_2:
  endif1984:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1989
    JR_LTF VGV_H 360.0 or1988
  and1989:
    JR_LTF VGV_H 0.0 else1987_1
    JR_GTF VGV_H 30.0 else1987_1
    JR_LTEQF VGV_S 0.3 else1987_1
    JR_GTF VGV_S 1.0 else1987_1
    JR_LTF VGV_V 0.0 else1987_1
    JR_GTEQF VGV_V 0.02 else1987_1
  or1988:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1987
  else1987_1:
    JR_LTF VGV_H 0.0 else1987_2
    JR_GTEQF VGV_H 60.0 else1987_2
    JR_LTF VGV_S 0.4 else1987_2
    JR_GTF VGV_S 1.0 else1987_2
    JR_LTEQF VGV_V 0.003 else1987_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1987
  else1987_2:
    MOVEF_F 6.0 VGV_COLOR
  else1987_3:
  endif1987:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1994
    DATA8 flag1994
    DIVF F.0 F.1 tmpf1994
    CP_EQF 0.0 F.1 flag1994
    SELECTF flag1994 0.0 tmpf1994 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1999
    DATA8 flag1999
    DIVF F.0 F.1 tmpf1999
    CP_EQF 0.0 F.1 flag1999
    SELECTF flag1999 0.0 tmpf1999 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2000:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2001:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF 0.2 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF 0.0 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_POLIN2DUS_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2011:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2012:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF 0.15 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF 8.0 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2DUS_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2DUS_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds2026
	MOVEF_32 100.0 milliseconds2026
	DATA32 timer2026
	TIMER_WAIT milliseconds2026 timer2026
	TIMER_READY timer2026
  while2027:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile2027
  whilebody2027:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody2027
  endwhile2027:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds2033
	MOVEF_32 250.0 milliseconds2033
	DATA32 timer2033
	TIMER_WAIT milliseconds2033 timer2033
	TIMER_READY timer2033
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2035:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2036:
  while2037:
    JR_LTEQF VGV_S2 9.0 and2039
    JR_GTF VGV_S3 9.0 or2038
  and2039:
    JR_GTEQF VGV_S2 9.0 and2040
    JR_GTF VGV_S3 9.0 or2038
  and2040:
    JR_LTEQF VGV_S2 9.0 endwhile2037
    JR_GTEQF VGV_S3 9.0 endwhile2037
  or2038:
  whilebody2037:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2041:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2042:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and2044
    JR_GTF VGV_S3 9.0 whilebody2037
  and2044:
    JR_GTEQF VGV_S2 9.0 and2045
    JR_GTF VGV_S3 9.0 whilebody2037
  and2045:
    JR_LTEQF VGV_S2 9.0 and2046
    JR_LTF VGV_S3 9.0 whilebody2037
  and2046:
  endwhile2037:
  while2047:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile2047
  whilebody2047:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody2047
  endwhile2047:
    CALL MOTOR.STOP 'B' 'True'
  while2052:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2052
  whilebody2052:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2052
  endwhile2052:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2057
	DATA8 no2057
	DATA8 mode82057
	
	MOVEF_8 2.0 no2057
	SUB8 no2057 1 no2057
	DIV8 no2057 4 layer2057
	MATH MOD8 no2057 4 no2057

	MOVEF_8 0.0 mode82057
	
	INPUT_DEVICE READY_RAW layer2057 no2057 0 mode82057 0
    DATA8 layer2058
	DATA8 no2058
	DATA8 mode82058
	
	MOVEF_8 3.0 no2058
	SUB8 no2058 1 no2058
	DIV8 no2058 4 layer2058
	MATH MOD8 no2058 4 no2058

	MOVEF_8 0.0 mode82058
	
	INPUT_DEVICE READY_RAW layer2058 no2058 0 mode82058 0
  while2059:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2059
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2059
  whilebody2059:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2063
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2059
  and2063:
  endwhile2059:
    CALL MOTOR.STOP 'BC' 'True'
  while2067:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2067
  whilebody2067:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2067
  endwhile2067:
    CALL MOTOR.STOP 'B' 'True'
  while2072:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2072
  whilebody2072:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2072
  endwhile2072:
    CALL MOTOR.STOP 'C' 'True'
  while2077:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2077
  whilebody2077:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2077
  endwhile2077:
    CALL MOTOR.STOP 'B' 'True'
  while2082:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2082
  whilebody2082:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2082
  endwhile2082:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
