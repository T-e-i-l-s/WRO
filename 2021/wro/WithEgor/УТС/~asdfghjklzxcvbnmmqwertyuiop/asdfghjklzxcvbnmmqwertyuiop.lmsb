DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_J
DATAF VGV_COLOR2
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2082
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2082:
    JR_NEQ32 SUBPROGRAM 1 dispatch2083
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2083:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 45.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB60:
    CALL EV3FILE.OPENWRITE 'a123/colib.dat' VGV_F
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    CALL EV3FILE.CLOSE VGV_F
    WRITE32 ENDSUB_F_A3_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB71:
    WRITE32 ENDSUB_F_A2_0:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB72:
  while73:
    JR_LTEQF VGV_S3 10.0 and75
    JR_GTF VGV_S2 10.0 or74
  and75:
    JR_GTEQF VGV_S3 10.0 endwhile73
    JR_GTEQF VGV_S2 10.0 endwhile73
  or74:
  whilebody73:
    WRITE32 ENDSUB_F_A3_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB76:
    WRITE32 ENDSUB_F_A2_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB77:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB78:
    JR_LTEQF VGV_S3 10.0 and79
    JR_GTF VGV_S2 10.0 whilebody73
  and79:
    JR_GTEQF VGV_S3 10.0 and80
    JR_LTF VGV_S2 10.0 whilebody73
  and80:
  endwhile73:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB82:
    JR_GTF VGV_H 120.0 or84
    JR_EQF VGV_H 0.0 or84
    JR_LTF VGV_H 0.0 else83_1
    JR_GTF VGV_H 20.0 else83_1
  or84:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif83
  else83_1:
    JR_GTEQF VGV_H 120.0 else83_2
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif83
  else83_2:
    MOVEF_F 5.0 VGV_COLOR1
  else83_3:
  endif83:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer87
	DATA8 nos87
	DATA8 busy87
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer87 nos87
	JR_EQ8 0 nos87 motornotbusy87
  motorwaiting87:
	OUTPUT_TEST layer87 nos87 busy87
	JR_EQ8 busy87 0 motornotbusy87
	SLEEP
	JR motorwaiting87
  motornotbusy87:
    JR_NEQF VGV_COLOR 4.0 else88_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB89:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer90
	DATA8 nos90
	DATA8 busy90
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer90 nos90
	JR_EQ8 0 nos90 motornotbusy90
  motorwaiting90:
	OUTPUT_TEST layer90 nos90 busy90
	JR_EQ8 busy90 0 motornotbusy90
	SLEEP
	JR motorwaiting90
  motornotbusy90:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while96:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 500.0 endwhile96
  whilebody96:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB98:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 500.0 whilebody96
  endwhile96:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB101:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer102
	DATA8 nos102
	DATA8 busy102
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer102 nos102
	JR_EQ8 0 nos102 motornotbusy102
  motorwaiting102:
	OUTPUT_TEST layer102 nos102 busy102
	JR_EQ8 busy102 0 motornotbusy102
	SLEEP
	JR motorwaiting102
  motornotbusy102:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer104
	DATA8 nos104
	DATA8 busy104
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer104 nos104
	JR_EQ8 0 nos104 motornotbusy104
  motorwaiting104:
	OUTPUT_TEST layer104 nos104 busy104
	JR_EQ8 busy104 0 motornotbusy104
	SLEEP
	JR motorwaiting104
  motornotbusy104:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while107:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf111
    DATA8 flag111
    DIVF F.1 2.0 tmpf111
    CP_EQF 0.0 2.0 flag111
    SELECTF flag111 0.0 tmpf111 F.0

    JR_GTEQF F.0 100.0 endwhile107
  whilebody107:
    WRITE32 ENDSUB_F_A3_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB112:
    WRITE32 ENDSUB_F_A2_0:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB113:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB114:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf118
    DATA8 flag118
    DIVF F.1 2.0 tmpf118
    CP_EQF 0.0 2.0 flag118
    SELECTF flag118 0.0 tmpf118 F.0

    JR_LTF F.0 100.0 whilebody107
  endwhile107:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB120:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else122_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB123:
    ADDF VGV_C 1.0 VGV_C
    JR endif122
  else122_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer125
	DATA8 nos125
	DATA8 busy125
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer125 nos125
	JR_EQ8 0 nos125 motornotbusy125
  motorwaiting125:
	OUTPUT_TEST layer125 nos125 busy125
	JR_EQ8 busy125 0 motornotbusy125
	SLEEP
	JR motorwaiting125
  motornotbusy125:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer126
	DATA8 nos126
	DATA8 busy126
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer126 nos126
	JR_EQ8 0 nos126 motornotbusy126
  motorwaiting126:
	OUTPUT_TEST layer126 nos126 busy126
	JR_EQ8 busy126 0 motornotbusy126
	SLEEP
	JR motorwaiting126
  motornotbusy126:
  while127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and129
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or128
  and129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and132
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or128
  and132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile127
  or128:
  whilebody127:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and138
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody127
  and138:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and141
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody127
  and141:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and144
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody127
  and144:
  endwhile127:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
  while160:
    JR_LTEQF VGV_S3 10.0 and162
    JR_GTF VGV_S2 10.0 or161
  and162:
    JR_GTEQF VGV_S3 10.0 endwhile160
    JR_GTEQF VGV_S2 10.0 endwhile160
  or161:
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB163:
    WRITE32 ENDSUB_F_A2_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB164:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB165:
    JR_LTEQF VGV_S3 10.0 and166
    JR_GTF VGV_S2 10.0 whilebody160
  and166:
    JR_GTEQF VGV_S3 10.0 and167
    JR_LTF VGV_S2 10.0 whilebody160
  and167:
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
  else122_2:
  endif122:
    JR endif88
  else88_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB169:
    WRITE32 ENDSUB_F_A2_0:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB170:
  while171:
    JR_LTEQF VGV_S3 10.0 and173
    JR_GTF VGV_S2 10.0 or172
  and173:
    JR_GTEQF VGV_S3 10.0 endwhile171
    JR_GTEQF VGV_S2 10.0 endwhile171
  or172:
  whilebody171:
    WRITE32 ENDSUB_F_A3_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB174:
    WRITE32 ENDSUB_F_A2_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB175:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB176:
    JR_LTEQF VGV_S3 10.0 and177
    JR_GTF VGV_S2 10.0 whilebody171
  and177:
    JR_GTEQF VGV_S3 10.0 and178
    JR_LTF VGV_S2 10.0 whilebody171
  and178:
  endwhile171:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer181
	DATA8 nos181
	DATA8 busy181
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer181 nos181
	JR_EQ8 0 nos181 motornotbusy181
  motorwaiting181:
	OUTPUT_TEST layer181 nos181 busy181
	JR_EQ8 busy181 0 motornotbusy181
	SLEEP
	JR motorwaiting181
  motornotbusy181:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds184
	MOVEF_32 500.0 milliseconds184
	DATA32 timer184
	TIMER_WAIT milliseconds184 timer184
	TIMER_READY timer184
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB186:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while188:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile188
  whilebody188:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB190:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody188
  endwhile188:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else193_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB194:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer195
	DATA8 nos195
	DATA8 busy195
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer195 nos195
	JR_EQ8 0 nos195 motornotbusy195
  motorwaiting195:
	OUTPUT_TEST layer195 nos195 busy195
	JR_EQ8 busy195 0 motornotbusy195
	SLEEP
	JR motorwaiting195
  motornotbusy195:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB197:
    WRITE32 ENDSUB_F_A2_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB198:
  while199:
    JR_LTEQF VGV_S3 15.0 endwhile199
  whilebody199:
    WRITE32 ENDSUB_F_A3_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB200:
    WRITE32 ENDSUB_F_A2_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB201:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody199
  endwhile199:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB204:
    WRITE32 ENDSUB_F_A2_0:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB205:
  while206:
    JR_GTEQF VGV_S3 35.0 endwhile206
  whilebody206:
    WRITE32 ENDSUB_F_A3_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB207:
    WRITE32 ENDSUB_F_A2_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB208:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody206
  endwhile206:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB212:
    WRITE32 ENDSUB_F_A2_0:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB213:
  while214:
    JR_LTEQF VGV_S3 10.0 and216
    JR_GTF VGV_S2 10.0 or215
  and216:
    JR_GTEQF VGV_S3 10.0 endwhile214
    JR_GTEQF VGV_S2 10.0 endwhile214
  or215:
  whilebody214:
    WRITE32 ENDSUB_F_A3_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB217:
    WRITE32 ENDSUB_F_A2_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB218:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB219:
    JR_LTEQF VGV_S3 10.0 and220
    JR_GTF VGV_S2 10.0 whilebody214
  and220:
    JR_GTEQF VGV_S3 10.0 and221
    JR_LTF VGV_S2 10.0 whilebody214
  and221:
  endwhile214:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB223:
    ADDF VGV_C 1.0 VGV_C
    JR endif193
  else193_1:
    DATA32 tmp225
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp225
    JR_NEQ32 0 tmp225 alreadylaunched225
    OBJECT_START TF_VIDVIG_0
  alreadylaunched225:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB226:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB230:
    WRITE32 ENDSUB_F_A2_0:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB231:
  while232:
    JR_LTEQF VGV_S3 10.0 and234
    JR_GTF VGV_S2 10.0 or233
  and234:
    JR_GTEQF VGV_S3 10.0 endwhile232
    JR_GTEQF VGV_S2 10.0 endwhile232
  or233:
  whilebody232:
    WRITE32 ENDSUB_F_A3_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB235:
    WRITE32 ENDSUB_F_A2_0:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB236:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB237:
    JR_LTEQF VGV_S3 10.0 and238
    JR_GTF VGV_S2 10.0 whilebody232
  and238:
    JR_GTEQF VGV_S3 10.0 and239
    JR_LTF VGV_S2 10.0 whilebody232
  and239:
  endwhile232:
    CALL MOTOR.STOP 'bc' 'true'
  else193_2:
  endif193:
  else88_2:
  endif88:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB241:
    JR_GTEQF VGV_V 0.048 else242_1
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif242
  else242_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else242_2:
  endif242:
    JR_NEQF VGV_COLOR2 4.0 else245_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB247:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif245
  else245_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB249:
    CALL MOTOR.RESETCOUNT 'bc'
  while251:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile251
  whilebody251:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB253:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody251
  endwhile251:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds257
	MOVEF_32 100.0 milliseconds257
	DATA32 timer257
	TIMER_WAIT milliseconds257 timer257
	TIMER_READY timer257
    WRITE32 ENDSUB_F_NPL_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB258:
    MOVEF_F 1100.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf259
    DATA8 flag259
    DIVF 360.0 VGV_L tmpf259
    CP_EQF 0.0 VGV_L flag259
    SELECTF flag259 0.0 tmpf259 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while263:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf267
    DATA8 flag267
    DIVF F.1 2.0 tmpf267
    CP_EQF 0.0 2.0 flag267
    SELECTF flag267 0.0 tmpf267 F.0

    JR_GTEQF F.0 VGV_X endwhile263
  whilebody263:
    WRITE32 ENDSUB_F_A3_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB268:
    WRITE32 ENDSUB_F_A2_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB269:
    JR_GTEQF VGV_SPEED 90.0 else270_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else270_1:
  endif270:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB272:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf276
    DATA8 flag276
    DIVF F.1 2.0 tmpf276
    CP_EQF 0.0 2.0 flag276
    SELECTF flag276 0.0 tmpf276 F.0

    JR_LTF F.0 VGV_X whilebody263
  endwhile263:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB278:
    JR_NEQF VGV_C 1.0 else279_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB280:
    JR endif279
  else279_1:
    JR_NEQF VGV_C 0.0 else279_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB281:
  else279_2:
  endif279:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB282:
    WRITE32 ENDSUB_F_A3_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB283:
    WRITE32 ENDSUB_F_A2_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB284:
  while285:
    JR_LTEQF VGV_S3 10.0 and287
    JR_GTF VGV_S2 10.0 or286
  and287:
    JR_GTEQF VGV_S3 10.0 endwhile285
    JR_GTEQF VGV_S2 10.0 endwhile285
  or286:
  whilebody285:
    WRITE32 ENDSUB_F_A3_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB288:
    WRITE32 ENDSUB_F_A2_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB289:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB290:
    JR_LTEQF VGV_S3 10.0 and291
    JR_GTF VGV_S2 10.0 whilebody285
  and291:
    JR_GTEQF VGV_S3 10.0 and292
    JR_LTF VGV_S2 10.0 whilebody285
  and292:
  endwhile285:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer294
	DATA8 nos294
	DATA8 busy294
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer294 nos294
	JR_EQ8 0 nos294 motornotbusy294
  motorwaiting294:
	OUTPUT_TEST layer294 nos294 busy294
	JR_EQ8 busy294 0 motornotbusy294
	SLEEP
	JR motorwaiting294
  motornotbusy294:
    WRITE32 ENDSUB_F_A3_0:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB295:
    WRITE32 ENDSUB_F_A2_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB296:
  while297:
    JR_LTEQF VGV_S3 10.0 and299
    JR_GTF VGV_S2 10.0 or298
  and299:
    JR_GTEQF VGV_S3 10.0 endwhile297
    JR_GTEQF VGV_S2 10.0 endwhile297
  or298:
  whilebody297:
    WRITE32 ENDSUB_F_A3_0:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB300:
    WRITE32 ENDSUB_F_A2_0:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB301:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB302:
    JR_LTEQF VGV_S3 10.0 and303
    JR_GTF VGV_S2 10.0 whilebody297
  and303:
    JR_GTEQF VGV_S3 10.0 and304
    JR_LTF VGV_S2 10.0 whilebody297
  and304:
  endwhile297:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB306:
    CALL MOTOR.RESETCOUNT 'bc'
  while308:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf312
    DATA8 flag312
    DIVF F.1 2.0 tmpf312
    CP_EQF 0.0 2.0 flag312
    SELECTF flag312 0.0 tmpf312 F.0

    JR_GTEQF F.0 350.0 endwhile308
  whilebody308:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB313:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf317
    DATA8 flag317
    DIVF F.1 2.0 tmpf317
    CP_EQF 0.0 2.0 flag317
    SELECTF flag317 0.0 tmpf317 F.0

    JR_LTF F.0 350.0 whilebody308
  endwhile308:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer319
	DATA8 nos319
	DATA8 busy319
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer319 nos319
	JR_EQ8 0 nos319 motornotbusy319
  motorwaiting319:
	OUTPUT_TEST layer319 nos319 busy319
	JR_EQ8 busy319 0 motornotbusy319
	SLEEP
	JR motorwaiting319
  motornotbusy319:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds321
	MOVEF_32 500.0 milliseconds321
	DATA32 timer321
	TIMER_WAIT milliseconds321 timer321
	TIMER_READY timer321
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer324
	DATA8 nos324
	DATA8 busy324
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer324 nos324
	JR_EQ8 0 nos324 motornotbusy324
  motorwaiting324:
	OUTPUT_TEST layer324 nos324 busy324
	JR_EQ8 busy324 0 motornotbusy324
	SLEEP
	JR motorwaiting324
  motornotbusy324:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    DATA32 tmp326
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp326
    JR_NEQ32 0 tmp326 alreadylaunched326
    OBJECT_START TF_VIDVIG_0
  alreadylaunched326:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB327:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB328:
    ADDF VGV_C 1.0 VGV_C
  else245_2:
  endif245:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB330:
    JR_GTF VGV_H 120.0 or332
    JR_EQF VGV_H 0.0 or332
    JR_LTF VGV_H 0.0 else331_1
    JR_GTF VGV_H 20.0 else331_1
  or332:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif331
  else331_1:
    JR_GTEQF VGV_H 120.0 else331_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif331
  else331_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else331_3:
  endif331:
    JR_NEQF VGV_COLOR3 4.0 else336_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer337
	DATA8 nos337
	DATA8 busy337
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer337 nos337
	JR_EQ8 0 nos337 motornotbusy337
  motorwaiting337:
	OUTPUT_TEST layer337 nos337 busy337
	JR_EQ8 busy337 0 motornotbusy337
	SLEEP
	JR motorwaiting337
  motornotbusy337:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB338:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else340_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB341:
    CALL MOTOR.RESETCOUNT 'bc'
  while343:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf347
    DATA8 flag347
    DIVF F.1 2.0 tmpf347
    CP_EQF 0.0 2.0 flag347
    SELECTF flag347 0.0 tmpf347 F.0

    JR_GTEQF F.0 450.0 endwhile343
  whilebody343:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB348:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf352
    DATA8 flag352
    DIVF F.1 2.0 tmpf352
    CP_EQF 0.0 2.0 flag352
    SELECTF flag352 0.0 tmpf352 F.0

    JR_LTF F.0 450.0 whilebody343
  endwhile343:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds355
	MOVEF_32 500.0 milliseconds355
	DATA32 timer355
	TIMER_WAIT milliseconds355 timer355
	TIMER_READY timer355
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB357:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf358
    DATA8 flag358
    DIVF 360.0 VGV_L tmpf358
    CP_EQF 0.0 VGV_L flag358
    SELECTF flag358 0.0 tmpf358 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while361:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile361
  whilebody361:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB363:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody361
  endwhile361:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB366:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB367:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB368:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB370:
    CALL MOTOR.RESETCOUNT 'bc'
  while372:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf376
    DATA8 flag376
    DIVF F.1 2.0 tmpf376
    CP_EQF 0.0 2.0 flag376
    SELECTF flag376 0.0 tmpf376 F.0

    JR_GTEQF F.0 300.0 endwhile372
  whilebody372:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB377:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf381
    DATA8 flag381
    DIVF F.1 2.0 tmpf381
    CP_EQF 0.0 2.0 flag381
    SELECTF flag381 0.0 tmpf381 F.0

    JR_LTF F.0 300.0 whilebody372
  endwhile372:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer383
	DATA8 nos383
	DATA8 busy383
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer383 nos383
	JR_EQ8 0 nos383 motornotbusy383
  motorwaiting383:
	OUTPUT_TEST layer383 nos383 busy383
	JR_EQ8 busy383 0 motornotbusy383
	SLEEP
	JR motorwaiting383
  motornotbusy383:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds385
	MOVEF_32 500.0 milliseconds385
	DATA32 timer385
	TIMER_WAIT milliseconds385 timer385
	TIMER_READY timer385
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer387
	DATA8 nos387
	DATA8 busy387
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer387 nos387
	JR_EQ8 0 nos387 motornotbusy387
  motorwaiting387:
	OUTPUT_TEST layer387 nos387 busy387
	JR_EQ8 busy387 0 motornotbusy387
	SLEEP
	JR motorwaiting387
  motornotbusy387:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer388
	DATA8 nos388
	DATA8 busy388
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer388 nos388
	JR_EQ8 0 nos388 motornotbusy388
  motorwaiting388:
	OUTPUT_TEST layer388 nos388 busy388
	JR_EQ8 busy388 0 motornotbusy388
	SLEEP
	JR motorwaiting388
  motornotbusy388:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB389:
    WRITE32 ENDSUB_F_A3_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB390:
    WRITE32 ENDSUB_F_A2_0:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB391:
  while392:
    JR_LTEQF VGV_S3 10.0 and394
    JR_GTF VGV_S2 10.0 or393
  and394:
    JR_GTEQF VGV_S3 10.0 endwhile392
    JR_GTEQF VGV_S2 10.0 endwhile392
  or393:
  whilebody392:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB395:
    JR_LTEQF VGV_S3 10.0 and396
    JR_GTF VGV_S2 10.0 whilebody392
  and396:
    JR_GTEQF VGV_S3 10.0 and397
    JR_LTF VGV_S2 10.0 whilebody392
  and397:
  endwhile392:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer399
	DATA8 nos399
	DATA8 busy399
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer399 nos399
	JR_EQ8 0 nos399 motornotbusy399
  motorwaiting399:
	OUTPUT_TEST layer399 nos399 busy399
	JR_EQ8 busy399 0 motornotbusy399
	SLEEP
	JR motorwaiting399
  motornotbusy399:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer400
	DATA8 nos400
	DATA8 busy400
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer400 nos400
	JR_EQ8 0 nos400 motornotbusy400
  motorwaiting400:
	OUTPUT_TEST layer400 nos400 busy400
	JR_EQ8 busy400 0 motornotbusy400
	SLEEP
	JR motorwaiting400
  motornotbusy400:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer401
	DATA8 nos401
	DATA8 busy401
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer401 nos401
	JR_EQ8 0 nos401 motornotbusy401
  motorwaiting401:
	OUTPUT_TEST layer401 nos401 busy401
	JR_EQ8 busy401 0 motornotbusy401
	SLEEP
	JR motorwaiting401
  motornotbusy401:
    WRITE32 ENDSUB_F_A2_0:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB402:
    WRITE32 ENDSUB_F_A3_0:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB403:
  while404:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 8.0 endwhile404
  whilebody404:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody404
  endwhile404:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB409:
    WRITE32 ENDSUB_F_A3_0:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB410:
  while411:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile411
  whilebody411:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody411
  endwhile411:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB416:
    WRITE32 ENDSUB_F_A2_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB417:
  while418:
    JR_LTEQF VGV_S3 10.0 and420
    JR_GTF VGV_S2 10.0 or419
  and420:
    JR_GTEQF VGV_S3 10.0 endwhile418
    JR_GTEQF VGV_S2 10.0 endwhile418
  or419:
  whilebody418:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB421:
    JR_LTEQF VGV_S3 10.0 and422
    JR_GTF VGV_S2 10.0 whilebody418
  and422:
    JR_GTEQF VGV_S3 10.0 and423
    JR_LTF VGV_S2 10.0 whilebody418
  and423:
  endwhile418:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB425:
    WRITE32 ENDSUB_F_PR_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB426:
    CALL MOTOR.RESETCOUNT 'bc'
  while428:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf432
    DATA8 flag432
    DIVF F.1 2.0 tmpf432
    CP_EQF 0.0 2.0 flag432
    SELECTF flag432 0.0 tmpf432 F.0

    JR_GTEQF F.0 500.0 endwhile428
  whilebody428:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB433:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf437
    DATA8 flag437
    DIVF F.1 2.0 tmpf437
    CP_EQF 0.0 2.0 flag437
    SELECTF flag437 0.0 tmpf437 F.0

    JR_LTF F.0 500.0 whilebody428
  endwhile428:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds440
	MOVEF_32 500.0 milliseconds440
	DATA32 timer440
	TIMER_WAIT milliseconds440 timer440
	TIMER_READY timer440
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB442:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf443
    DATA8 flag443
    DIVF 360.0 VGV_L tmpf443
    CP_EQF 0.0 VGV_L flag443
    SELECTF flag443 0.0 tmpf443 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while446:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile446
  whilebody446:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB448:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody446
  endwhile446:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB451:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB452:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB453:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB455:
    CALL MOTOR.RESETCOUNT 'bc'
  while457:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf461
    DATA8 flag461
    DIVF F.1 2.0 tmpf461
    CP_EQF 0.0 2.0 flag461
    SELECTF flag461 0.0 tmpf461 F.0

    JR_GTEQF F.0 470.0 endwhile457
  whilebody457:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB462:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf466
    DATA8 flag466
    DIVF F.1 2.0 tmpf466
    CP_EQF 0.0 2.0 flag466
    SELECTF flag466 0.0 tmpf466 F.0

    JR_LTF F.0 470.0 whilebody457
  endwhile457:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer468
	DATA8 nos468
	DATA8 busy468
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer468 nos468
	JR_EQ8 0 nos468 motornotbusy468
  motorwaiting468:
	OUTPUT_TEST layer468 nos468 busy468
	JR_EQ8 busy468 0 motornotbusy468
	SLEEP
	JR motorwaiting468
  motornotbusy468:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds470
	MOVEF_32 500.0 milliseconds470
	DATA32 timer470
	TIMER_WAIT milliseconds470 timer470
	TIMER_READY timer470
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer472
	DATA8 nos472
	DATA8 busy472
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer472 nos472
	JR_EQ8 0 nos472 motornotbusy472
  motorwaiting472:
	OUTPUT_TEST layer472 nos472 busy472
	JR_EQ8 busy472 0 motornotbusy472
	SLEEP
	JR motorwaiting472
  motornotbusy472:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer473
	DATA8 nos473
	DATA8 busy473
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer473 nos473
	JR_EQ8 0 nos473 motornotbusy473
  motorwaiting473:
	OUTPUT_TEST layer473 nos473 busy473
	JR_EQ8 busy473 0 motornotbusy473
	SLEEP
	JR motorwaiting473
  motornotbusy473:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB474:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB475:
    WRITE32 ENDSUB_F_PR_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB476:
    CALL MOTOR.RESETCOUNT 'bc'
  while478:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf482
    DATA8 flag482
    DIVF F.1 2.0 tmpf482
    CP_EQF 0.0 2.0 flag482
    SELECTF flag482 0.0 tmpf482 F.0

    JR_GTEQF F.0 270.0 endwhile478
  whilebody478:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB483:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf487
    DATA8 flag487
    DIVF F.1 2.0 tmpf487
    CP_EQF 0.0 2.0 flag487
    SELECTF flag487 0.0 tmpf487 F.0

    JR_LTF F.0 270.0 whilebody478
  endwhile478:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds490
	MOVEF_32 500.0 milliseconds490
	DATA32 timer490
	TIMER_WAIT milliseconds490 timer490
	TIMER_READY timer490
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB492:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf493
    DATA8 flag493
    DIVF 360.0 VGV_L tmpf493
    CP_EQF 0.0 VGV_L flag493
    SELECTF flag493 0.0 tmpf493 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while496:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile496
  whilebody496:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB498:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody496
  endwhile496:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB501:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB502:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB503:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB505:
    CALL MOTOR.RESETCOUNT 'bc'
  while507:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf511
    DATA8 flag511
    DIVF F.1 2.0 tmpf511
    CP_EQF 0.0 2.0 flag511
    SELECTF flag511 0.0 tmpf511 F.0

    JR_GTEQF F.0 270.0 endwhile507
  whilebody507:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB512:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf516
    DATA8 flag516
    DIVF F.1 2.0 tmpf516
    CP_EQF 0.0 2.0 flag516
    SELECTF flag516 0.0 tmpf516 F.0

    JR_LTF F.0 270.0 whilebody507
  endwhile507:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer518
	DATA8 nos518
	DATA8 busy518
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer518 nos518
	JR_EQ8 0 nos518 motornotbusy518
  motorwaiting518:
	OUTPUT_TEST layer518 nos518 busy518
	JR_EQ8 busy518 0 motornotbusy518
	SLEEP
	JR motorwaiting518
  motornotbusy518:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds520
	MOVEF_32 500.0 milliseconds520
	DATA32 timer520
	TIMER_WAIT milliseconds520 timer520
	TIMER_READY timer520
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer522
	DATA8 nos522
	DATA8 busy522
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer522 nos522
	JR_EQ8 0 nos522 motornotbusy522
  motorwaiting522:
	OUTPUT_TEST layer522 nos522 busy522
	JR_EQ8 busy522 0 motornotbusy522
	SLEEP
	JR motorwaiting522
  motornotbusy522:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer523
	DATA8 nos523
	DATA8 busy523
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer523 nos523
	JR_EQ8 0 nos523 motornotbusy523
  motorwaiting523:
	OUTPUT_TEST layer523 nos523 busy523
	JR_EQ8 busy523 0 motornotbusy523
	SLEEP
	JR motorwaiting523
  motornotbusy523:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB524:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB525:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    PROGRAM_STOP -1
  else340_1:
  endif340:
  else336_1:
  endif336:
    JR_NEQF VGV_COLOR3 5.0 else528_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB529:
    CALL MOTOR.RESETCOUNT 'bc'
  while531:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf535
    DATA8 flag535
    DIVF F.1 2.0 tmpf535
    CP_EQF 0.0 2.0 flag535
    SELECTF flag535 0.0 tmpf535 F.0

    JR_GTEQF F.0 300.0 endwhile531
  whilebody531:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB536:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf540
    DATA8 flag540
    DIVF F.1 2.0 tmpf540
    CP_EQF 0.0 2.0 flag540
    SELECTF flag540 0.0 tmpf540 F.0

    JR_LTF F.0 300.0 whilebody531
  endwhile531:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds543
	MOVEF_32 500.0 milliseconds543
	DATA32 timer543
	TIMER_WAIT milliseconds543 timer543
	TIMER_READY timer543
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB545:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf546
    DATA8 flag546
    DIVF 360.0 VGV_L tmpf546
    CP_EQF 0.0 VGV_L flag546
    SELECTF flag546 0.0 tmpf546 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while549:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile549
  whilebody549:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB551:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody549
  endwhile549:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB554:
    JR_NEQF VGV_C 1.0 else555_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB556:
    JR endif555
  else555_1:
    JR_NEQF VGV_C 0.0 else555_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB557:
    JR endif555
  else555_2:
    JR_NEQF VGV_C 2.0 else555_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB558:
    MOVEF_F 640.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB559:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds561
	MOVEF_32 100.0 milliseconds561
	DATA32 timer561
	TIMER_WAIT milliseconds561 timer561
	TIMER_READY timer561
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer562
	DATA8 nos562
	DATA8 busy562
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer562 nos562
	JR_EQ8 0 nos562 motornotbusy562
  motorwaiting562:
	OUTPUT_TEST layer562 nos562 busy562
	JR_EQ8 busy562 0 motornotbusy562
	SLEEP
	JR motorwaiting562
  motornotbusy562:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer564
	DATA8 nos564
	DATA8 busy564
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer564 nos564
	JR_EQ8 0 nos564 motornotbusy564
  motorwaiting564:
	OUTPUT_TEST layer564 nos564 busy564
	JR_EQ8 busy564 0 motornotbusy564
	SLEEP
	JR motorwaiting564
  motornotbusy564:
    WRITE32 ENDSUB_F_A3_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB565:
    WRITE32 ENDSUB_F_A2_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB566:
  while567:
    JR_LTEQF VGV_S2 15.0 endwhile567
  whilebody567:
    WRITE32 ENDSUB_F_A3_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB568:
    WRITE32 ENDSUB_F_A2_0:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB569:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody567
  endwhile567:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB572:
    WRITE32 ENDSUB_F_A2_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB573:
  while574:
    JR_GTEQF VGV_S2 55.0 endwhile574
  whilebody574:
    WRITE32 ENDSUB_F_A3_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB575:
    WRITE32 ENDSUB_F_A2_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB576:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody574
  endwhile574:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while580:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf584
    DATA8 flag584
    DIVF F.1 2.0 tmpf584
    CP_EQF 0.0 2.0 flag584
    SELECTF flag584 0.0 tmpf584 F.0

    JR_GTEQF F.0 270.0 endwhile580
  whilebody580:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB585:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf589
    DATA8 flag589
    DIVF F.1 2.0 tmpf589
    CP_EQF 0.0 2.0 flag589
    SELECTF flag589 0.0 tmpf589 F.0

    JR_LTF F.0 270.0 whilebody580
  endwhile580:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer591
	DATA8 nos591
	DATA8 busy591
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer591 nos591
	JR_EQ8 0 nos591 motornotbusy591
  motorwaiting591:
	OUTPUT_TEST layer591 nos591 busy591
	JR_EQ8 busy591 0 motornotbusy591
	SLEEP
	JR motorwaiting591
  motornotbusy591:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds593
	MOVEF_32 500.0 milliseconds593
	DATA32 timer593
	TIMER_WAIT milliseconds593 timer593
	TIMER_READY timer593
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer595
	DATA8 nos595
	DATA8 busy595
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer595 nos595
	JR_EQ8 0 nos595 motornotbusy595
  motorwaiting595:
	OUTPUT_TEST layer595 nos595 busy595
	JR_EQ8 busy595 0 motornotbusy595
	SLEEP
	JR motorwaiting595
  motornotbusy595:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer596
	DATA8 nos596
	DATA8 busy596
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer596 nos596
	JR_EQ8 0 nos596 motornotbusy596
  motorwaiting596:
	OUTPUT_TEST layer596 nos596 busy596
	JR_EQ8 busy596 0 motornotbusy596
	SLEEP
	JR motorwaiting596
  motornotbusy596:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB597:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB598:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer600
	DATA8 nos600
	DATA8 busy600
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer600 nos600
	JR_EQ8 0 nos600 motornotbusy600
  motorwaiting600:
	OUTPUT_TEST layer600 nos600 busy600
	JR_EQ8 busy600 0 motornotbusy600
	SLEEP
	JR motorwaiting600
  motornotbusy600:
    PROGRAM_STOP -1
  else555_3:
  endif555:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB602:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer606
	DATA8 nos606
	DATA8 busy606
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer606 nos606
	JR_EQ8 0 nos606 motornotbusy606
  motorwaiting606:
	OUTPUT_TEST layer606 nos606 busy606
	JR_EQ8 busy606 0 motornotbusy606
	SLEEP
	JR motorwaiting606
  motornotbusy606:
    WRITE32 ENDSUB_F_A3_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB607:
    WRITE32 ENDSUB_F_A2_0:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB608:
  while609:
    JR_LTEQF VGV_S2 15.0 endwhile609
  whilebody609:
    WRITE32 ENDSUB_F_A3_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB610:
    WRITE32 ENDSUB_F_A2_0:CALLSUB611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB611:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody609
  endwhile609:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB614:
    WRITE32 ENDSUB_F_A2_0:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB615:
  while616:
    JR_GTEQF VGV_S2 55.0 endwhile616
  whilebody616:
    WRITE32 ENDSUB_F_A3_0:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB617:
    WRITE32 ENDSUB_F_A2_0:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB618:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody616
  endwhile616:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while622:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf626
    DATA8 flag626
    DIVF F.1 2.0 tmpf626
    CP_EQF 0.0 2.0 flag626
    SELECTF flag626 0.0 tmpf626 F.0

    JR_GTEQF F.0 200.0 endwhile622
  whilebody622:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB627:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf631
    DATA8 flag631
    DIVF F.1 2.0 tmpf631
    CP_EQF 0.0 2.0 flag631
    SELECTF flag631 0.0 tmpf631 F.0

    JR_LTF F.0 200.0 whilebody622
  endwhile622:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer633
	DATA8 nos633
	DATA8 busy633
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer633 nos633
	JR_EQ8 0 nos633 motornotbusy633
  motorwaiting633:
	OUTPUT_TEST layer633 nos633 busy633
	JR_EQ8 busy633 0 motornotbusy633
	SLEEP
	JR motorwaiting633
  motornotbusy633:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds635
	MOVEF_32 500.0 milliseconds635
	DATA32 timer635
	TIMER_WAIT milliseconds635 timer635
	TIMER_READY timer635
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer637
	DATA8 nos637
	DATA8 busy637
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer637 nos637
	JR_EQ8 0 nos637 motornotbusy637
  motorwaiting637:
	OUTPUT_TEST layer637 nos637 busy637
	JR_EQ8 busy637 0 motornotbusy637
	SLEEP
	JR motorwaiting637
  motornotbusy637:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer638
	DATA8 nos638
	DATA8 busy638
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer638 nos638
	JR_EQ8 0 nos638 motornotbusy638
  motorwaiting638:
	OUTPUT_TEST layer638 nos638 busy638
	JR_EQ8 busy638 0 motornotbusy638
	SLEEP
	JR motorwaiting638
  motornotbusy638:
    DATA32 tmp639
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp639
    JR_NEQ32 0 tmp639 alreadylaunched639
    OBJECT_START TF_VIDVIG_0
  alreadylaunched639:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB640:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB641:
    ADDF VGV_C 1.0 VGV_C
  else528_1:
  endif528:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB643:
    JR_GTEQF VGV_H 30.0 else644_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif644
  else644_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else644_2:
  endif644:
    JR_NEQF VGV_COLOR4 4.0 else647_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer648
	DATA8 nos648
	DATA8 busy648
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer648 nos648
	JR_EQ8 0 nos648 motornotbusy648
  motorwaiting648:
	OUTPUT_TEST layer648 nos648 busy648
	JR_EQ8 busy648 0 motornotbusy648
	SLEEP
	JR motorwaiting648
  motornotbusy648:
    WRITE32 ENDSUB_F_A3_0:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB649:
    WRITE32 ENDSUB_F_A2_0:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB650:
  while651:
    JR_LTEQF VGV_S3 10.0 and653
    JR_GTF VGV_S2 10.0 or652
  and653:
    JR_GTEQF VGV_S3 10.0 endwhile651
    JR_GTEQF VGV_S2 10.0 endwhile651
  or652:
  whilebody651:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB654:
    JR_LTEQF VGV_S3 10.0 and655
    JR_GTF VGV_S2 10.0 whilebody651
  and655:
    JR_GTEQF VGV_S3 10.0 and656
    JR_LTF VGV_S2 10.0 whilebody651
  and656:
  endwhile651:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer658
	DATA8 nos658
	DATA8 busy658
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer658 nos658
	JR_EQ8 0 nos658 motornotbusy658
  motorwaiting658:
	OUTPUT_TEST layer658 nos658 busy658
	JR_EQ8 busy658 0 motornotbusy658
	SLEEP
	JR motorwaiting658
  motornotbusy658:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer660
	DATA8 nos660
	DATA8 busy660
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer660 nos660
	JR_EQ8 0 nos660 motornotbusy660
  motorwaiting660:
	OUTPUT_TEST layer660 nos660 busy660
	JR_EQ8 busy660 0 motornotbusy660
	SLEEP
	JR motorwaiting660
  motornotbusy660:
    WRITE32 ENDSUB_F_A2_0:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB661:
    WRITE32 ENDSUB_F_A3_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB662:
  while663:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile663
  whilebody663:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody663
  endwhile663:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB668:
    WRITE32 ENDSUB_F_A3_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB669:
  while670:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile670
  whilebody670:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody670
  endwhile670:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB675:
    WRITE32 ENDSUB_F_A2_0:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB676:
  while677:
    JR_LTEQF VGV_S3 10.0 and679
    JR_GTF VGV_S2 10.0 or678
  and679:
    JR_GTEQF VGV_S3 10.0 endwhile677
    JR_GTEQF VGV_S2 10.0 endwhile677
  or678:
  whilebody677:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB680:
    JR_LTEQF VGV_S3 10.0 and681
    JR_GTF VGV_S2 10.0 whilebody677
  and681:
    JR_GTEQF VGV_S3 10.0 and682
    JR_LTF VGV_S2 10.0 whilebody677
  and682:
  endwhile677:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer684
	DATA8 nos684
	DATA8 busy684
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer684 nos684
	JR_EQ8 0 nos684 motornotbusy684
  motorwaiting684:
	OUTPUT_TEST layer684 nos684 busy684
	JR_EQ8 busy684 0 motornotbusy684
	SLEEP
	JR motorwaiting684
  motornotbusy684:
    WRITE32 ENDSUB_F_A3_0:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB685:
    WRITE32 ENDSUB_F_A2_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB686:
  while687:
    JR_GTEQF VGV_S2 60.0 endwhile687
  whilebody687:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody687
  endwhile687:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB690:
    WRITE32 ENDSUB_F_A2_0:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB691:
  while692:
    JR_LTEQF VGV_S3 10.0 and694
    JR_GTF VGV_S2 10.0 or693
  and694:
    JR_GTEQF VGV_S3 10.0 endwhile692
    JR_GTEQF VGV_S2 10.0 endwhile692
  or693:
  whilebody692:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB695:
    JR_LTEQF VGV_S3 10.0 and696
    JR_GTF VGV_S2 10.0 whilebody692
  and696:
    JR_GTEQF VGV_S3 10.0 and697
    JR_LTF VGV_S2 10.0 whilebody692
  and697:
  endwhile692:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 1.0 else699_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB700:
    CALL MOTOR.RESETCOUNT 'bc'
  while702:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf706
    DATA8 flag706
    DIVF F.1 2.0 tmpf706
    CP_EQF 0.0 2.0 flag706
    SELECTF flag706 0.0 tmpf706 F.0

    JR_GTEQF F.0 500.0 endwhile702
  whilebody702:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB707:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf711
    DATA8 flag711
    DIVF F.1 2.0 tmpf711
    CP_EQF 0.0 2.0 flag711
    SELECTF flag711 0.0 tmpf711 F.0

    JR_LTF F.0 500.0 whilebody702
  endwhile702:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds714
	MOVEF_32 500.0 milliseconds714
	DATA32 timer714
	TIMER_WAIT milliseconds714 timer714
	TIMER_READY timer714
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB716:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf717
    DATA8 flag717
    DIVF 360.0 VGV_L tmpf717
    CP_EQF 0.0 VGV_L flag717
    SELECTF flag717 0.0 tmpf717 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while720:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile720
  whilebody720:
    JR_GTEQF VGV_SPEED 80.0 else722_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else722_1:
  endif722:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB724:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody720
  endwhile720:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB727:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB728:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB729:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB731:
    CALL MOTOR.RESETCOUNT 'bc'
  while733:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf737
    DATA8 flag737
    DIVF F.1 2.0 tmpf737
    CP_EQF 0.0 2.0 flag737
    SELECTF flag737 0.0 tmpf737 F.0

    JR_GTEQF F.0 400.0 endwhile733
  whilebody733:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB738:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf742
    DATA8 flag742
    DIVF F.1 2.0 tmpf742
    CP_EQF 0.0 2.0 flag742
    SELECTF flag742 0.0 tmpf742 F.0

    JR_LTF F.0 400.0 whilebody733
  endwhile733:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer744
	DATA8 nos744
	DATA8 busy744
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer744 nos744
	JR_EQ8 0 nos744 motornotbusy744
  motorwaiting744:
	OUTPUT_TEST layer744 nos744 busy744
	JR_EQ8 busy744 0 motornotbusy744
	SLEEP
	JR motorwaiting744
  motornotbusy744:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds746
	MOVEF_32 500.0 milliseconds746
	DATA32 timer746
	TIMER_WAIT milliseconds746 timer746
	TIMER_READY timer746
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer748
	DATA8 nos748
	DATA8 busy748
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer748 nos748
	JR_EQ8 0 nos748 motornotbusy748
  motorwaiting748:
	OUTPUT_TEST layer748 nos748 busy748
	JR_EQ8 busy748 0 motornotbusy748
	SLEEP
	JR motorwaiting748
  motornotbusy748:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer749
	DATA8 nos749
	DATA8 busy749
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer749 nos749
	JR_EQ8 0 nos749 motornotbusy749
  motorwaiting749:
	OUTPUT_TEST layer749 nos749 busy749
	JR_EQ8 busy749 0 motornotbusy749
	SLEEP
	JR motorwaiting749
  motornotbusy749:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB750:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB751:
    WRITE32 ENDSUB_F_PR_0:CALLSUB752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB752:
    CALL MOTOR.RESETCOUNT 'bc'
  while754:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf758
    DATA8 flag758
    DIVF F.1 2.0 tmpf758
    CP_EQF 0.0 2.0 flag758
    SELECTF flag758 0.0 tmpf758 F.0

    JR_GTEQF F.0 270.0 endwhile754
  whilebody754:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB759:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf763
    DATA8 flag763
    DIVF F.1 2.0 tmpf763
    CP_EQF 0.0 2.0 flag763
    SELECTF flag763 0.0 tmpf763 F.0

    JR_LTF F.0 270.0 whilebody754
  endwhile754:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds766
	MOVEF_32 500.0 milliseconds766
	DATA32 timer766
	TIMER_WAIT milliseconds766 timer766
	TIMER_READY timer766
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB768:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf769
    DATA8 flag769
    DIVF 360.0 VGV_L tmpf769
    CP_EQF 0.0 VGV_L flag769
    SELECTF flag769 0.0 tmpf769 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while772:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile772
  whilebody772:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB774:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody772
  endwhile772:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB777:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB778:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB779:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB781:
    CALL MOTOR.RESETCOUNT 'bc'
  while783:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf787
    DATA8 flag787
    DIVF F.1 2.0 tmpf787
    CP_EQF 0.0 2.0 flag787
    SELECTF flag787 0.0 tmpf787 F.0

    JR_GTEQF F.0 270.0 endwhile783
  whilebody783:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB788:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf792
    DATA8 flag792
    DIVF F.1 2.0 tmpf792
    CP_EQF 0.0 2.0 flag792
    SELECTF flag792 0.0 tmpf792 F.0

    JR_LTF F.0 270.0 whilebody783
  endwhile783:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer794
	DATA8 nos794
	DATA8 busy794
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer794 nos794
	JR_EQ8 0 nos794 motornotbusy794
  motorwaiting794:
	OUTPUT_TEST layer794 nos794 busy794
	JR_EQ8 busy794 0 motornotbusy794
	SLEEP
	JR motorwaiting794
  motornotbusy794:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds796
	MOVEF_32 500.0 milliseconds796
	DATA32 timer796
	TIMER_WAIT milliseconds796 timer796
	TIMER_READY timer796
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer798
	DATA8 nos798
	DATA8 busy798
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer798 nos798
	JR_EQ8 0 nos798 motornotbusy798
  motorwaiting798:
	OUTPUT_TEST layer798 nos798 busy798
	JR_EQ8 busy798 0 motornotbusy798
	SLEEP
	JR motorwaiting798
  motornotbusy798:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer799
	DATA8 nos799
	DATA8 busy799
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer799 nos799
	JR_EQ8 0 nos799 motornotbusy799
  motorwaiting799:
	OUTPUT_TEST layer799 nos799 busy799
	JR_EQ8 busy799 0 motornotbusy799
	SLEEP
	JR motorwaiting799
  motornotbusy799:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB800:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB801:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer802
	DATA8 nos802
	DATA8 busy802
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer802 nos802
	JR_EQ8 0 nos802 motornotbusy802
  motorwaiting802:
	OUTPUT_TEST layer802 nos802 busy802
	JR_EQ8 busy802 0 motornotbusy802
	SLEEP
	JR motorwaiting802
  motornotbusy802:
    PROGRAM_STOP -1
  else699_1:
  endif699:
  else647_1:
  endif647:
    JR_NEQF VGV_COLOR4 5.0 else804_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB805:
    CALL MOTOR.RESETCOUNT 'bc'
  while807:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf811
    DATA8 flag811
    DIVF F.1 2.0 tmpf811
    CP_EQF 0.0 2.0 flag811
    SELECTF flag811 0.0 tmpf811 F.0

    JR_GTEQF F.0 450.0 endwhile807
  whilebody807:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB812:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf816
    DATA8 flag816
    DIVF F.1 2.0 tmpf816
    CP_EQF 0.0 2.0 flag816
    SELECTF flag816 0.0 tmpf816 F.0

    JR_LTF F.0 450.0 whilebody807
  endwhile807:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds819
	MOVEF_32 500.0 milliseconds819
	DATA32 timer819
	TIMER_WAIT milliseconds819 timer819
	TIMER_READY timer819
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB821:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf822
    DATA8 flag822
    DIVF 360.0 VGV_L tmpf822
    CP_EQF 0.0 VGV_L flag822
    SELECTF flag822 0.0 tmpf822 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while825:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile825
  whilebody825:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB827:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody825
  endwhile825:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB830:
    JR_NEQF VGV_C 1.0 else831_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB832:
    JR endif831
  else831_1:
    JR_NEQF VGV_C 0.0 else831_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB833:
    JR endif831
  else831_2:
    JR_NEQF VGV_C 2.0 else831_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB834:
    MOVEF_F 160.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB835:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB837:
    CALL MOTOR.RESETCOUNT 'bc'
  while839:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf843
    DATA8 flag843
    DIVF F.1 2.0 tmpf843
    CP_EQF 0.0 2.0 flag843
    SELECTF flag843 0.0 tmpf843 F.0

    JR_GTEQF F.0 250.0 endwhile839
  whilebody839:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB844:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf848
    DATA8 flag848
    DIVF F.1 2.0 tmpf848
    CP_EQF 0.0 2.0 flag848
    SELECTF flag848 0.0 tmpf848 F.0

    JR_LTF F.0 250.0 whilebody839
  endwhile839:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer850
	DATA8 nos850
	DATA8 busy850
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer850 nos850
	JR_EQ8 0 nos850 motornotbusy850
  motorwaiting850:
	OUTPUT_TEST layer850 nos850 busy850
	JR_EQ8 busy850 0 motornotbusy850
	SLEEP
	JR motorwaiting850
  motornotbusy850:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds852
	MOVEF_32 500.0 milliseconds852
	DATA32 timer852
	TIMER_WAIT milliseconds852 timer852
	TIMER_READY timer852
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer854
	DATA8 nos854
	DATA8 busy854
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer854 nos854
	JR_EQ8 0 nos854 motornotbusy854
  motorwaiting854:
	OUTPUT_TEST layer854 nos854 busy854
	JR_EQ8 busy854 0 motornotbusy854
	SLEEP
	JR motorwaiting854
  motornotbusy854:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer855
	DATA8 nos855
	DATA8 busy855
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer855 nos855
	JR_EQ8 0 nos855 motornotbusy855
  motorwaiting855:
	OUTPUT_TEST layer855 nos855 busy855
	JR_EQ8 busy855 0 motornotbusy855
	SLEEP
	JR motorwaiting855
  motornotbusy855:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB856:
    CALL MOTOR.RESETCOUNT 'bc'
  while858:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf862
    DATA8 flag862
    DIVF F.1 2.0 tmpf862
    CP_EQF 0.0 2.0 flag862
    SELECTF flag862 0.0 tmpf862 F.0

    JR_GTEQF F.0 100.0 endwhile858
  whilebody858:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB863:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf867
    DATA8 flag867
    DIVF F.1 2.0 tmpf867
    CP_EQF 0.0 2.0 flag867
    SELECTF flag867 0.0 tmpf867 F.0

    JR_LTF F.0 100.0 whilebody858
  endwhile858:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB869:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer871
	DATA8 nos871
	DATA8 busy871
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer871 nos871
	JR_EQ8 0 nos871 motornotbusy871
  motorwaiting871:
	OUTPUT_TEST layer871 nos871 busy871
	JR_EQ8 busy871 0 motornotbusy871
	SLEEP
	JR motorwaiting871
  motornotbusy871:
    PROGRAM_STOP -1
  else831_3:
  endif831:
    MOVEF_F 150.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB873:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB875:
    CALL MOTOR.RESETCOUNT 'bc'
  while877:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf881
    DATA8 flag881
    DIVF F.1 2.0 tmpf881
    CP_EQF 0.0 2.0 flag881
    SELECTF flag881 0.0 tmpf881 F.0

    JR_GTEQF F.0 250.0 endwhile877
  whilebody877:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB882:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf886
    DATA8 flag886
    DIVF F.1 2.0 tmpf886
    CP_EQF 0.0 2.0 flag886
    SELECTF flag886 0.0 tmpf886 F.0

    JR_LTF F.0 250.0 whilebody877
  endwhile877:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer888
	DATA8 nos888
	DATA8 busy888
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer888 nos888
	JR_EQ8 0 nos888 motornotbusy888
  motorwaiting888:
	OUTPUT_TEST layer888 nos888 busy888
	JR_EQ8 busy888 0 motornotbusy888
	SLEEP
	JR motorwaiting888
  motornotbusy888:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds890
	MOVEF_32 500.0 milliseconds890
	DATA32 timer890
	TIMER_WAIT milliseconds890 timer890
	TIMER_READY timer890
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer892
	DATA8 nos892
	DATA8 busy892
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer892 nos892
	JR_EQ8 0 nos892 motornotbusy892
  motorwaiting892:
	OUTPUT_TEST layer892 nos892 busy892
	JR_EQ8 busy892 0 motornotbusy892
	SLEEP
	JR motorwaiting892
  motornotbusy892:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer893
	DATA8 nos893
	DATA8 busy893
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer893 nos893
	JR_EQ8 0 nos893 motornotbusy893
  motorwaiting893:
	OUTPUT_TEST layer893 nos893 busy893
	JR_EQ8 busy893 0 motornotbusy893
	SLEEP
	JR motorwaiting893
  motornotbusy893:
    DATA32 tmp894
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp894
    JR_NEQ32 0 tmp894 alreadylaunched894
    OBJECT_START TF_VIDVIG_0
  alreadylaunched894:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB895:
    WRITE32 ENDSUB_F_A3_0:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB896:
    WRITE32 ENDSUB_F_A2_0:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB897:
  while898:
    JR_LTEQF VGV_S3 10.0 and900
    JR_GTF VGV_S2 10.0 or899
  and900:
    JR_GTEQF VGV_S3 10.0 endwhile898
    JR_GTEQF VGV_S2 10.0 endwhile898
  or899:
  whilebody898:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB901:
    JR_LTEQF VGV_S3 10.0 and902
    JR_GTF VGV_S2 10.0 whilebody898
  and902:
    JR_GTEQF VGV_S3 10.0 and903
    JR_LTF VGV_S2 10.0 whilebody898
  and903:
  endwhile898:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer905
	DATA8 nos905
	DATA8 busy905
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer905 nos905
	JR_EQ8 0 nos905 motornotbusy905
  motorwaiting905:
	OUTPUT_TEST layer905 nos905 busy905
	JR_EQ8 busy905 0 motornotbusy905
	SLEEP
	JR motorwaiting905
  motornotbusy905:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer906
	DATA8 nos906
	DATA8 busy906
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer906 nos906
	JR_EQ8 0 nos906 motornotbusy906
  motorwaiting906:
	OUTPUT_TEST layer906 nos906 busy906
	JR_EQ8 busy906 0 motornotbusy906
	SLEEP
	JR motorwaiting906
  motornotbusy906:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer907
	DATA8 nos907
	DATA8 busy907
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer907 nos907
	JR_EQ8 0 nos907 motornotbusy907
  motorwaiting907:
	OUTPUT_TEST layer907 nos907 busy907
	JR_EQ8 busy907 0 motornotbusy907
	SLEEP
	JR motorwaiting907
  motornotbusy907:
    WRITE32 ENDSUB_F_A2_0:CALLSUB908 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB908:
    WRITE32 ENDSUB_F_A3_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB909:
  while910:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile910
  whilebody910:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody910
  endwhile910:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB915:
    WRITE32 ENDSUB_F_A3_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB916:
  while917:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile917
  whilebody917:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody917
  endwhile917:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB922:
    WRITE32 ENDSUB_F_A2_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB923:
  while924:
    JR_LTEQF VGV_S3 10.0 and926
    JR_GTF VGV_S2 10.0 or925
  and926:
    JR_GTEQF VGV_S3 10.0 endwhile924
    JR_GTEQF VGV_S2 10.0 endwhile924
  or925:
  whilebody924:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB927:
    JR_LTEQF VGV_S3 10.0 and928
    JR_GTF VGV_S2 10.0 whilebody924
  and928:
    JR_GTEQF VGV_S3 10.0 and929
    JR_LTF VGV_S2 10.0 whilebody924
  and929:
  endwhile924:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer931
	DATA8 nos931
	DATA8 busy931
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer931 nos931
	JR_EQ8 0 nos931 motornotbusy931
  motorwaiting931:
	OUTPUT_TEST layer931 nos931 busy931
	JR_EQ8 busy931 0 motornotbusy931
	SLEEP
	JR motorwaiting931
  motornotbusy931:
    WRITE32 ENDSUB_F_A3_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB932:
    WRITE32 ENDSUB_F_A2_0:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB933:
  while934:
    JR_LTEQF VGV_S3 10.0 and936
    JR_GTF VGV_S2 10.0 or935
  and936:
    JR_GTEQF VGV_S3 10.0 endwhile934
    JR_GTEQF VGV_S2 10.0 endwhile934
  or935:
  whilebody934:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB937:
    JR_LTEQF VGV_S3 10.0 and938
    JR_GTF VGV_S2 10.0 whilebody934
  and938:
    JR_GTEQF VGV_S3 10.0 and939
    JR_LTF VGV_S2 10.0 whilebody934
  and939:
  endwhile934:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VGV_C 1.0 VGV_C
  else804_1:
  endif804:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB942:
    JR_LTF VGV_H 25.0 or944
    JR_LTEQF VGV_H 280.0 else943_1
  or944:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif943
  else943_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else943_2:
  endif943:
    JR_NEQF VGV_COLOR5 4.0 else947_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer948
	DATA8 nos948
	DATA8 busy948
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer948 nos948
	JR_EQ8 0 nos948 motornotbusy948
  motorwaiting948:
	OUTPUT_TEST layer948 nos948 busy948
	JR_EQ8 busy948 0 motornotbusy948
	SLEEP
	JR motorwaiting948
  motornotbusy948:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB949:
    WRITE32 ENDSUB_F_PR_0:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB950:
    CALL MOTOR.RESETCOUNT 'bc'
  while952:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf956
    DATA8 flag956
    DIVF F.1 2.0 tmpf956
    CP_EQF 0.0 2.0 flag956
    SELECTF flag956 0.0 tmpf956 F.0

    JR_GTEQF F.0 270.0 endwhile952
  whilebody952:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB957:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf961
    DATA8 flag961
    DIVF F.1 2.0 tmpf961
    CP_EQF 0.0 2.0 flag961
    SELECTF flag961 0.0 tmpf961 F.0

    JR_LTF F.0 270.0 whilebody952
  endwhile952:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds964
	MOVEF_32 500.0 milliseconds964
	DATA32 timer964
	TIMER_WAIT milliseconds964 timer964
	TIMER_READY timer964
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB966:
    CALL MOTOR.RESETCOUNT 'bc'
  while968:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf972
    DATA8 flag972
    DIVF F.1 2.0 tmpf972
    CP_EQF 0.0 2.0 flag972
    SELECTF flag972 0.0 tmpf972 F.0

    JR_GTEQF F.0 100.0 endwhile968
  whilebody968:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB973:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf977
    DATA8 flag977
    DIVF F.1 2.0 tmpf977
    CP_EQF 0.0 2.0 flag977
    SELECTF flag977 0.0 tmpf977 F.0

    JR_LTF F.0 100.0 whilebody968
  endwhile968:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 750.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf979
    DATA8 flag979
    DIVF 360.0 VGV_L tmpf979
    CP_EQF 0.0 VGV_L flag979
    SELECTF flag979 0.0 tmpf979 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while982:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile982
  whilebody982:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB984:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody982
  endwhile982:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB987:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB988:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB989:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB991:
    CALL MOTOR.RESETCOUNT 'bc'
  while993:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf997
    DATA8 flag997
    DIVF F.1 2.0 tmpf997
    CP_EQF 0.0 2.0 flag997
    SELECTF flag997 0.0 tmpf997 F.0

    JR_GTEQF F.0 270.0 endwhile993
  whilebody993:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB998:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1002
    DATA8 flag1002
    DIVF F.1 2.0 tmpf1002
    CP_EQF 0.0 2.0 flag1002
    SELECTF flag1002 0.0 tmpf1002 F.0

    JR_LTF F.0 270.0 whilebody993
  endwhile993:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1004
	DATA8 nos1004
	DATA8 busy1004
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1004 nos1004
	JR_EQ8 0 nos1004 motornotbusy1004
  motorwaiting1004:
	OUTPUT_TEST layer1004 nos1004 busy1004
	JR_EQ8 busy1004 0 motornotbusy1004
	SLEEP
	JR motorwaiting1004
  motornotbusy1004:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1006
	MOVEF_32 500.0 milliseconds1006
	DATA32 timer1006
	TIMER_WAIT milliseconds1006 timer1006
	TIMER_READY timer1006
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1008
	DATA8 nos1008
	DATA8 busy1008
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1008 nos1008
	JR_EQ8 0 nos1008 motornotbusy1008
  motorwaiting1008:
	OUTPUT_TEST layer1008 nos1008 busy1008
	JR_EQ8 busy1008 0 motornotbusy1008
	SLEEP
	JR motorwaiting1008
  motornotbusy1008:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1009
	DATA8 nos1009
	DATA8 busy1009
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1009 nos1009
	JR_EQ8 0 nos1009 motornotbusy1009
  motorwaiting1009:
	OUTPUT_TEST layer1009 nos1009 busy1009
	JR_EQ8 busy1009 0 motornotbusy1009
	SLEEP
	JR motorwaiting1009
  motornotbusy1009:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1010:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1011:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1012
	DATA8 nos1012
	DATA8 busy1012
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1012 nos1012
	JR_EQ8 0 nos1012 motornotbusy1012
  motorwaiting1012:
	OUTPUT_TEST layer1012 nos1012 busy1012
	JR_EQ8 busy1012 0 motornotbusy1012
	SLEEP
	JR motorwaiting1012
  motornotbusy1012:
    PROGRAM_STOP -1
  else947_1:
  endif947:
    JR_NEQF VGV_COLOR5 5.0 else1014_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1015:
    CALL MOTOR.RESETCOUNT 'bc'
  while1017:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1021
    DATA8 flag1021
    DIVF F.1 2.0 tmpf1021
    CP_EQF 0.0 2.0 flag1021
    SELECTF flag1021 0.0 tmpf1021 F.0

    JR_GTEQF F.0 500.0 endwhile1017
  whilebody1017:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1022 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1022:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1026
    DATA8 flag1026
    DIVF F.1 2.0 tmpf1026
    CP_EQF 0.0 2.0 flag1026
    SELECTF flag1026 0.0 tmpf1026 F.0

    JR_LTF F.0 500.0 whilebody1017
  endwhile1017:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1029
	MOVEF_32 500.0 milliseconds1029
	DATA32 timer1029
	TIMER_WAIT milliseconds1029 timer1029
	TIMER_READY timer1029
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB1031:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1032
    DATA8 flag1032
    DIVF 360.0 VGV_L tmpf1032
    CP_EQF 0.0 VGV_L flag1032
    SELECTF flag1032 0.0 tmpf1032 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1035:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1035
  whilebody1035:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1037:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1035
  endwhile1035:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1040:
    JR_NEQF VGV_C 1.0 else1041_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB1042:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1043:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1045:
    CALL MOTOR.RESETCOUNT 'bc'
  while1047:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1051
    DATA8 flag1051
    DIVF F.1 2.0 tmpf1051
    CP_EQF 0.0 2.0 flag1051
    SELECTF flag1051 0.0 tmpf1051 F.0

    JR_GTEQF F.0 470.0 endwhile1047
  whilebody1047:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1052 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1052:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1056
    DATA8 flag1056
    DIVF F.1 2.0 tmpf1056
    CP_EQF 0.0 2.0 flag1056
    SELECTF flag1056 0.0 tmpf1056 F.0

    JR_LTF F.0 470.0 whilebody1047
  endwhile1047:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1058
	DATA8 nos1058
	DATA8 busy1058
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1058 nos1058
	JR_EQ8 0 nos1058 motornotbusy1058
  motorwaiting1058:
	OUTPUT_TEST layer1058 nos1058 busy1058
	JR_EQ8 busy1058 0 motornotbusy1058
	SLEEP
	JR motorwaiting1058
  motornotbusy1058:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1060
	MOVEF_32 500.0 milliseconds1060
	DATA32 timer1060
	TIMER_WAIT milliseconds1060 timer1060
	TIMER_READY timer1060
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1062
	DATA8 nos1062
	DATA8 busy1062
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1062 nos1062
	JR_EQ8 0 nos1062 motornotbusy1062
  motorwaiting1062:
	OUTPUT_TEST layer1062 nos1062 busy1062
	JR_EQ8 busy1062 0 motornotbusy1062
	SLEEP
	JR motorwaiting1062
  motornotbusy1062:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1063
	DATA8 nos1063
	DATA8 busy1063
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1063 nos1063
	JR_EQ8 0 nos1063 motornotbusy1063
  motorwaiting1063:
	OUTPUT_TEST layer1063 nos1063 busy1063
	JR_EQ8 busy1063 0 motornotbusy1063
	SLEEP
	JR motorwaiting1063
  motornotbusy1063:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1064:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1065:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1066:
    CALL MOTOR.RESETCOUNT 'bc'
  while1068:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1072
    DATA8 flag1072
    DIVF F.1 2.0 tmpf1072
    CP_EQF 0.0 2.0 flag1072
    SELECTF flag1072 0.0 tmpf1072 F.0

    JR_GTEQF F.0 270.0 endwhile1068
  whilebody1068:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1073:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1077
    DATA8 flag1077
    DIVF F.1 2.0 tmpf1077
    CP_EQF 0.0 2.0 flag1077
    SELECTF flag1077 0.0 tmpf1077 F.0

    JR_LTF F.0 270.0 whilebody1068
  endwhile1068:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1080
	MOVEF_32 500.0 milliseconds1080
	DATA32 timer1080
	TIMER_WAIT milliseconds1080 timer1080
	TIMER_READY timer1080
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1082
	DATA8 no1082
	DATA8 mode81082
	
	MOVEF_8 2.0 no1082
	SUB8 no1082 1 no1082
	DIV8 no1082 4 layer1082
	MATH MOD8 no1082 4 no1082

	MOVEF_8 0.0 mode81082
	
	INPUT_DEVICE READY_RAW layer1082 no1082 0 mode81082 0
    DATA8 layer1083
	DATA8 no1083
	DATA8 mode81083
	
	MOVEF_8 3.0 no1083
	SUB8 no1083 1 no1083
	DIV8 no1083 4 layer1083
	MATH MOD8 no1083 4 no1083

	MOVEF_8 0.0 mode81083
	
	INPUT_DEVICE READY_RAW layer1083 no1083 0 mode81083 0
  while1084:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1086
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1085
  and1086:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1089
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1085
  and1089:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1084
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1084
  or1085:
  whilebody1084:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1095
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1084
  and1095:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1098
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1084
  and1098:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1101
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1084
  and1101:
  endwhile1084:
  while1104:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1104
  whilebody1104:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1104
  endwhile1104:
    CALL MOTOR.STOP 'B' 'True'
  while1109:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1109
  whilebody1109:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1109
  endwhile1109:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1114
	DATA8 nos1114
	DATA8 busy1114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1114 nos1114
	JR_EQ8 0 nos1114 motornotbusy1114
  motorwaiting1114:
	OUTPUT_TEST layer1114 nos1114 busy1114
	JR_EQ8 busy1114 0 motornotbusy1114
	SLEEP
	JR motorwaiting1114
  motornotbusy1114:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1116
	DATA8 nos1116
	DATA8 busy1116
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1116 nos1116
	JR_EQ8 0 nos1116 motornotbusy1116
  motorwaiting1116:
	OUTPUT_TEST layer1116 nos1116 busy1116
	JR_EQ8 busy1116 0 motornotbusy1116
	SLEEP
	JR motorwaiting1116
  motornotbusy1116:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1118:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1119:
  while1120:
    JR_LTEQF VGV_S3 10.0 endwhile1120
  whilebody1120:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1121:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1122:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1120
  endwhile1120:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1124:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1125:
  while1126:
    JR_GTEQF VGV_S3 55.0 endwhile1126
  whilebody1126:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1127:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1128:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1126
  endwhile1126:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1000.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1131
    DATA8 flag1131
    DIVF 360.0 VGV_L tmpf1131
    CP_EQF 0.0 VGV_L flag1131
    SELECTF flag1131 0.0 tmpf1131 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1134:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1134
  whilebody1134:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1136:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1134
  endwhile1134:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1139:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1140:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1141:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1143:
    CALL MOTOR.RESETCOUNT 'bc'
  while1145:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1149
    DATA8 flag1149
    DIVF F.1 2.0 tmpf1149
    CP_EQF 0.0 2.0 flag1149
    SELECTF flag1149 0.0 tmpf1149 F.0

    JR_GTEQF F.0 270.0 endwhile1145
  whilebody1145:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1150:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1154
    DATA8 flag1154
    DIVF F.1 2.0 tmpf1154
    CP_EQF 0.0 2.0 flag1154
    SELECTF flag1154 0.0 tmpf1154 F.0

    JR_LTF F.0 270.0 whilebody1145
  endwhile1145:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1156
	DATA8 nos1156
	DATA8 busy1156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1156 nos1156
	JR_EQ8 0 nos1156 motornotbusy1156
  motorwaiting1156:
	OUTPUT_TEST layer1156 nos1156 busy1156
	JR_EQ8 busy1156 0 motornotbusy1156
	SLEEP
	JR motorwaiting1156
  motornotbusy1156:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1158
	MOVEF_32 500.0 milliseconds1158
	DATA32 timer1158
	TIMER_WAIT milliseconds1158 timer1158
	TIMER_READY timer1158
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1160
	DATA8 nos1160
	DATA8 busy1160
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1160 nos1160
	JR_EQ8 0 nos1160 motornotbusy1160
  motorwaiting1160:
	OUTPUT_TEST layer1160 nos1160 busy1160
	JR_EQ8 busy1160 0 motornotbusy1160
	SLEEP
	JR motorwaiting1160
  motornotbusy1160:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1161
	DATA8 nos1161
	DATA8 busy1161
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1161 nos1161
	JR_EQ8 0 nos1161 motornotbusy1161
  motorwaiting1161:
	OUTPUT_TEST layer1161 nos1161 busy1161
	JR_EQ8 busy1161 0 motornotbusy1161
	SLEEP
	JR motorwaiting1161
  motornotbusy1161:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1162:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1163:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1164
	DATA8 nos1164
	DATA8 busy1164
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1164 nos1164
	JR_EQ8 0 nos1164 motornotbusy1164
  motorwaiting1164:
	OUTPUT_TEST layer1164 nos1164 busy1164
	JR_EQ8 busy1164 0 motornotbusy1164
	SLEEP
	JR motorwaiting1164
  motornotbusy1164:
    PROGRAM_STOP -1
    JR endif1041
  else1041_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1166:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1167:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1169:
    CALL MOTOR.RESETCOUNT 'bc'
  while1171:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1175
    DATA8 flag1175
    DIVF F.1 2.0 tmpf1175
    CP_EQF 0.0 2.0 flag1175
    SELECTF flag1175 0.0 tmpf1175 F.0

    JR_GTEQF F.0 470.0 endwhile1171
  whilebody1171:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1176:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1180
    DATA8 flag1180
    DIVF F.1 2.0 tmpf1180
    CP_EQF 0.0 2.0 flag1180
    SELECTF flag1180 0.0 tmpf1180 F.0

    JR_LTF F.0 470.0 whilebody1171
  endwhile1171:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1182
	DATA8 nos1182
	DATA8 busy1182
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1182 nos1182
	JR_EQ8 0 nos1182 motornotbusy1182
  motorwaiting1182:
	OUTPUT_TEST layer1182 nos1182 busy1182
	JR_EQ8 busy1182 0 motornotbusy1182
	SLEEP
	JR motorwaiting1182
  motornotbusy1182:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1184
	MOVEF_32 500.0 milliseconds1184
	DATA32 timer1184
	TIMER_WAIT milliseconds1184 timer1184
	TIMER_READY timer1184
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1186
	DATA8 nos1186
	DATA8 busy1186
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1186 nos1186
	JR_EQ8 0 nos1186 motornotbusy1186
  motorwaiting1186:
	OUTPUT_TEST layer1186 nos1186 busy1186
	JR_EQ8 busy1186 0 motornotbusy1186
	SLEEP
	JR motorwaiting1186
  motornotbusy1186:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1187
	DATA8 nos1187
	DATA8 busy1187
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1187 nos1187
	JR_EQ8 0 nos1187 motornotbusy1187
  motorwaiting1187:
	OUTPUT_TEST layer1187 nos1187 busy1187
	JR_EQ8 busy1187 0 motornotbusy1187
	SLEEP
	JR motorwaiting1187
  motornotbusy1187:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1188:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1189:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1190
	DATA8 nos1190
	DATA8 busy1190
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1190 nos1190
	JR_EQ8 0 nos1190 motornotbusy1190
  motorwaiting1190:
	OUTPUT_TEST layer1190 nos1190 busy1190
	JR_EQ8 busy1190 0 motornotbusy1190
	SLEEP
	JR motorwaiting1190
  motornotbusy1190:
    PROGRAM_STOP -1
  else1041_2:
  endif1041:
  else1014_1:
  endif1014:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1193
	DATA8 nos1193
	DATA8 busy1193
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1193 nos1193
	JR_EQ8 0 nos1193 motornotbusy1193
  motorwaiting1193:
	OUTPUT_TEST layer1193 nos1193 busy1193
	JR_EQ8 busy1193 0 motornotbusy1193
	SLEEP
	JR motorwaiting1193
  motornotbusy1193:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1194
	DATA8 nos1194
	DATA8 busy1194
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1194 nos1194
	JR_EQ8 0 nos1194 motornotbusy1194
  motorwaiting1194:
	OUTPUT_TEST layer1194 nos1194 busy1194
	JR_EQ8 busy1194 0 motornotbusy1194
	SLEEP
	JR motorwaiting1194
  motornotbusy1194:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1196
	DATA8 nos1196
	DATA8 busy1196
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1196 nos1196
	JR_EQ8 0 nos1196 motornotbusy1196
  motorwaiting1196:
	OUTPUT_TEST layer1196 nos1196 busy1196
	JR_EQ8 busy1196 0 motornotbusy1196
	SLEEP
	JR motorwaiting1196
  motornotbusy1196:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1197
	DATA8 nos1197
	DATA8 busy1197
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1197 nos1197
	JR_EQ8 0 nos1197 motornotbusy1197
  motorwaiting1197:
	OUTPUT_TEST layer1197 nos1197 busy1197
	JR_EQ8 busy1197 0 motornotbusy1197
	SLEEP
	JR motorwaiting1197
  motornotbusy1197:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1199
    DATA8 flag1199
    DIVF 360.0 VGV_L tmpf1199
    CP_EQF 0.0 VGV_L flag1199
    SELECTF flag1199 0.0 tmpf1199 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1202:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1202
  whilebody1202:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1204:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1202
  endwhile1202:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1207:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1209
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1209
    JR_NEQ32 0 tmp1209 alreadylaunched1209
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1209:
ENDTHREAD:
    RETURN
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1210
    DATA8 flag1210
    DIVF 360.0 VGV_L tmpf1210
    CP_EQF 0.0 VGV_L flag1210
    SELECTF flag1210 0.0 tmpf1210 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1213:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1217
    DATA8 flag1217
    DIVF F.1 2.0 tmpf1217
    CP_EQF 0.0 2.0 flag1217
    SELECTF flag1217 0.0 tmpf1217 F.0

    JR_GTEQF F.0 VGV_X endwhile1213
  whilebody1213:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1218:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1219:
    JR_GTEQF VGV_SPEED 80.0 else1220_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else1220_1:
  endif1220:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1222:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1226
    DATA8 flag1226
    DIVF F.1 2.0 tmpf1226
    CP_EQF 0.0 2.0 flag1226
    SELECTF flag1226 0.0 tmpf1226 F.0

    JR_LTF F.0 VGV_X whilebody1213
  endwhile1213:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1228:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1229:
  while1230:
    JR_LTEQF VGV_S3 15.0 and1232
    JR_GTF VGV_S2 15.0 or1231
  and1232:
    JR_GTEQF VGV_S3 15.0 endwhile1230
    JR_GTEQF VGV_S2 15.0 endwhile1230
  or1231:
  whilebody1230:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1233:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1234:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1235:
    JR_LTEQF VGV_S3 15.0 and1236
    JR_GTF VGV_S2 15.0 whilebody1230
  and1236:
    JR_GTEQF VGV_S3 15.0 and1237
    JR_LTF VGV_S2 15.0 whilebody1230
  and1237:
  endwhile1230:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer1239
	DATA8 nos1239
	DATA8 busy1239
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1239 nos1239
	JR_EQ8 0 nos1239 motornotbusy1239
  motorwaiting1239:
	OUTPUT_TEST layer1239 nos1239 busy1239
	JR_EQ8 busy1239 0 motornotbusy1239
	SLEEP
	JR motorwaiting1239
  motornotbusy1239:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1241
	DATA8 nos1241
	DATA8 busy1241
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1241 nos1241
	JR_EQ8 0 nos1241 motornotbusy1241
  motorwaiting1241:
	OUTPUT_TEST layer1241 nos1241 busy1241
	JR_EQ8 busy1241 0 motornotbusy1241
	SLEEP
	JR motorwaiting1241
  motornotbusy1241:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1242:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1243:
  while1244:
    JR_LTEQF VGV_S2 15.0 endwhile1244
  whilebody1244:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1245:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1246:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1244
  endwhile1244:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1249:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1250:
  while1251:
    JR_GTEQF VGV_S2 55.0 endwhile1251
  whilebody1251:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1252:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1253:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1251
  endwhile1251:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer1256
	DATA8 nos1256
	DATA8 busy1256
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1256 nos1256
	JR_EQ8 0 nos1256 motornotbusy1256
  motorwaiting1256:
	OUTPUT_TEST layer1256 nos1256 busy1256
	JR_EQ8 busy1256 0 motornotbusy1256
	SLEEP
	JR motorwaiting1256
  motornotbusy1256:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1258
	DATA8 nos1258
	DATA8 busy1258
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1258 nos1258
	JR_EQ8 0 nos1258 motornotbusy1258
  motorwaiting1258:
	OUTPUT_TEST layer1258 nos1258 busy1258
	JR_EQ8 busy1258 0 motornotbusy1258
	SLEEP
	JR motorwaiting1258
  motornotbusy1258:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1259:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1260:
  while1261:
    JR_LTEQF VGV_S3 15.0 endwhile1261
  whilebody1261:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1262:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1263:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1261
  endwhile1261:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1266:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1267:
  while1268:
    JR_GTEQF VGV_S3 60.0 endwhile1268
  whilebody1268:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1269:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1270:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1268
  endwhile1268:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1274:
  while1275:
    JR_LTEQF VGV_S2 9.0 and1277
    JR_GTF VGV_S3 9.0 or1276
  and1277:
    JR_GTEQF VGV_S2 9.0 and1278
    JR_GTF VGV_S3 9.0 or1276
  and1278:
    JR_LTEQF VGV_S2 9.0 endwhile1275
    JR_GTEQF VGV_S3 9.0 endwhile1275
  or1276:
  whilebody1275:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1279:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1280:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1282
    JR_GTF VGV_S3 9.0 whilebody1275
  and1282:
    JR_GTEQF VGV_S2 9.0 and1283
    JR_GTF VGV_S3 9.0 whilebody1275
  and1283:
    JR_LTEQF VGV_S2 9.0 and1284
    JR_LTF VGV_S3 9.0 whilebody1275
  and1284:
  endwhile1275:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer1285
	DATA8 nos1285
	DATA8 busy1285
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1285 nos1285
	JR_EQ8 0 nos1285 motornotbusy1285
  motorwaiting1285:
	OUTPUT_TEST layer1285 nos1285 busy1285
	JR_EQ8 busy1285 0 motornotbusy1285
	SLEEP
	JR motorwaiting1285
  motornotbusy1285:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1287
	DATA8 nos1287
	DATA8 busy1287
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1287 nos1287
	JR_EQ8 0 nos1287 motornotbusy1287
  motorwaiting1287:
	OUTPUT_TEST layer1287 nos1287 busy1287
	JR_EQ8 busy1287 0 motornotbusy1287
	SLEEP
	JR motorwaiting1287
  motornotbusy1287:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1289:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1290:
  while1291:
    JR_LTEQF VGV_S2 10.0 endwhile1291
  whilebody1291:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1292:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1293:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1291
  endwhile1291:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1295:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1296:
  while1297:
    JR_GTEQF VGV_S2 60.0 endwhile1297
  whilebody1297:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1298:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1299:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1297
  endwhile1297:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1302:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1303
	DATA8 nos1303
	DATA8 busy1303
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1303 nos1303
	JR_EQ8 0 nos1303 motornotbusy1303
  motorwaiting1303:
	OUTPUT_TEST layer1303 nos1303 busy1303
	JR_EQ8 busy1303 0 motornotbusy1303
	SLEEP
	JR motorwaiting1303
  motornotbusy1303:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1305
	DATA8 nos1305
	DATA8 busy1305
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1305 nos1305
	JR_EQ8 0 nos1305 motornotbusy1305
  motorwaiting1305:
	OUTPUT_TEST layer1305 nos1305 busy1305
	JR_EQ8 busy1305 0 motornotbusy1305
	SLEEP
	JR motorwaiting1305
  motornotbusy1305:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1307:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1308:
  while1309:
    JR_LTEQF VGV_S3 8.0 endwhile1309
  whilebody1309:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1310:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1311:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1309
  endwhile1309:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1313:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1314:
  while1315:
    JR_GTEQF VGV_S3 55.0 endwhile1315
  whilebody1315:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1316:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1317:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1315
  endwhile1315:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1320
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1320
    JR_NEQ32 0 tmp1320 alreadylaunched1320
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1320:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1321:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1322:
  while1323:
    JR_LTEQF VGV_S3 10.0 and1325
    JR_GTF VGV_S2 10.0 or1324
  and1325:
    JR_GTEQF VGV_S3 10.0 and1326
    JR_GTF VGV_S2 10.0 or1324
  and1326:
    JR_LTEQF VGV_S3 10.0 endwhile1323
    JR_GTEQF VGV_S2 10.0 endwhile1323
  or1324:
  whilebody1323:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1327:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1328:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1329:
    JR_LTEQF VGV_S3 10.0 and1330
    JR_GTF VGV_S2 10.0 whilebody1323
  and1330:
    JR_GTEQF VGV_S3 10.0 and1331
    JR_GTF VGV_S2 10.0 whilebody1323
  and1331:
    JR_LTEQF VGV_S3 10.0 and1332
    JR_LTF VGV_S2 10.0 whilebody1323
  and1332:
  endwhile1323:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1334
	DATA8 nos1334
	DATA8 busy1334
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1334 nos1334
	JR_EQ8 0 nos1334 motornotbusy1334
  motorwaiting1334:
	OUTPUT_TEST layer1334 nos1334 busy1334
	JR_EQ8 busy1334 0 motornotbusy1334
	SLEEP
	JR motorwaiting1334
  motornotbusy1334:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1335
	DATA8 nos1335
	DATA8 busy1335
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1335 nos1335
	JR_EQ8 0 nos1335 motornotbusy1335
  motorwaiting1335:
	OUTPUT_TEST layer1335 nos1335 busy1335
	JR_EQ8 busy1335 0 motornotbusy1335
	SLEEP
	JR motorwaiting1335
  motornotbusy1335:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1338:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1339:
  while1340:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1340
  whilebody1340:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1342:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1343:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1344:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1340
  endwhile1340:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1348
	MOVEF_32 500.0 milliseconds1348
	DATA32 timer1348
	TIMER_WAIT milliseconds1348 timer1348
	TIMER_READY timer1348
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1350
	DATA8 nos1350
	DATA8 busy1350
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1350 nos1350
	JR_EQ8 0 nos1350 motornotbusy1350
  motorwaiting1350:
	OUTPUT_TEST layer1350 nos1350 busy1350
	JR_EQ8 busy1350 0 motornotbusy1350
	SLEEP
	JR motorwaiting1350
  motornotbusy1350:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -80.0
    DATA32 milliseconds1352
	MOVEF_32 2000.0 milliseconds1352
	DATA32 timer1352
	TIMER_WAIT milliseconds1352 timer1352
	TIMER_READY timer1352
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1354
	DATA8 nos1354
	DATA8 busy1354
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1354 nos1354
	JR_EQ8 0 nos1354 motornotbusy1354
  motorwaiting1354:
	OUTPUT_TEST layer1354 nos1354 busy1354
	JR_EQ8 busy1354 0 motornotbusy1354
	SLEEP
	JR motorwaiting1354
  motornotbusy1354:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1355
	DATA8 nos1355
	DATA8 busy1355
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1355 nos1355
	JR_EQ8 0 nos1355 motornotbusy1355
  motorwaiting1355:
	OUTPUT_TEST layer1355 nos1355 busy1355
	JR_EQ8 busy1355 0 motornotbusy1355
	SLEEP
	JR motorwaiting1355
  motornotbusy1355:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1356
	DATA8 nos1356
	DATA8 busy1356
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1356 nos1356
	JR_EQ8 0 nos1356 motornotbusy1356
  motorwaiting1356:
	OUTPUT_TEST layer1356 nos1356 busy1356
	JR_EQ8 busy1356 0 motornotbusy1356
	SLEEP
	JR motorwaiting1356
  motornotbusy1356:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1357:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1358
	DATA8 nos1358
	DATA8 busy1358
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1358 nos1358
	JR_EQ8 0 nos1358 motornotbusy1358
  motorwaiting1358:
	OUTPUT_TEST layer1358 nos1358 busy1358
	JR_EQ8 busy1358 0 motornotbusy1358
	SLEEP
	JR motorwaiting1358
  motornotbusy1358:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1359
	DATA8 nos1359
	DATA8 busy1359
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1359 nos1359
	JR_EQ8 0 nos1359 motornotbusy1359
  motorwaiting1359:
	OUTPUT_TEST layer1359 nos1359 busy1359
	JR_EQ8 busy1359 0 motornotbusy1359
	SLEEP
	JR motorwaiting1359
  motornotbusy1359:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1361:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1362:
  while1363:
    JR_LTEQF VGV_S2 15.0 endwhile1363
  whilebody1363:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1364:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1365:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1363
  endwhile1363:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1368:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1369:
  while1370:
    JR_GTEQF VGV_S2 55.0 endwhile1370
  whilebody1370:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1371:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1372:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1370
  endwhile1370:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1375:
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1376:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1377:
  while1378:
    JR_LTEQF VGV_S3 15.0 and1380
    JR_GTF VGV_S2 15.0 or1379
  and1380:
    JR_GTEQF VGV_S3 15.0 endwhile1378
    JR_GTEQF VGV_S2 15.0 endwhile1378
  or1379:
  whilebody1378:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1381:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1382:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1383:
    JR_LTEQF VGV_S3 15.0 and1384
    JR_GTF VGV_S2 15.0 whilebody1378
  and1384:
    JR_GTEQF VGV_S3 15.0 and1385
    JR_LTF VGV_S2 15.0 whilebody1378
  and1385:
  endwhile1378:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1387:
    CALL MOTOR.RESETCOUNT 'bc'
  while1389:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1393
    DATA8 flag1393
    DIVF F.1 2.0 tmpf1393
    CP_EQF 0.0 2.0 flag1393
    SELECTF flag1393 0.0 tmpf1393 F.0

    JR_GTEQF F.0 200.0 endwhile1389
  whilebody1389:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1394:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1398
    DATA8 flag1398
    DIVF F.1 2.0 tmpf1398
    CP_EQF 0.0 2.0 flag1398
    SELECTF flag1398 0.0 tmpf1398 F.0

    JR_LTF F.0 200.0 whilebody1389
  endwhile1389:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1400:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1401:
    MOVEF_F 1.0 VGV_I
  for1402:
    JR_GTF VGV_I 1.0 endfor1402
  forbody1402:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1403:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1404:
  while1405:
    JR_LTEQF VGV_S3 15.0 and1407
    JR_GTF VGV_S2 15.0 or1406
  and1407:
    JR_GTEQF VGV_S3 15.0 endwhile1405
    JR_GTEQF VGV_S2 15.0 endwhile1405
  or1406:
  whilebody1405:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1408:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1409:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1410:
    JR_LTEQF VGV_S3 15.0 and1411
    JR_GTF VGV_S2 15.0 whilebody1405
  and1411:
    JR_GTEQF VGV_S3 15.0 and1412
    JR_LTF VGV_S2 15.0 whilebody1405
  and1412:
  endwhile1405:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1414
	DATA8 nos1414
	DATA8 busy1414
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1414 nos1414
	JR_EQ8 0 nos1414 motornotbusy1414
  motorwaiting1414:
	OUTPUT_TEST layer1414 nos1414 busy1414
	JR_EQ8 busy1414 0 motornotbusy1414
	SLEEP
	JR motorwaiting1414
  motornotbusy1414:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1402
  endfor1402:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1417:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1418:
    MOVEF_F 80.0 VGV_J
  while1419:
    JR_LTEQF VGV_S3 15.0 endwhile1419
  whilebody1419:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1420:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1421:
    JR_LTEQF VGV_J 30.0 else1422_1
    SUBF VGV_J 0.1 VGV_J
  else1422_1:
  endif1422:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody1419
  endwhile1419:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1426:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1427:
    MOVEF_F 80.0 VGV_J
  while1428:
    JR_GTEQF VGV_S3 25.0 endwhile1428
  whilebody1428:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1429:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1430:
    JR_LTEQF VGV_J 30.0 else1431_1
    SUBF VGV_J 0.1 VGV_J
  else1431_1:
  endif1431:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 25.0 whilebody1428
  endwhile1428:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1436:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1440
    DATA8 flag1440
    DIVF F.1 2.0 tmpf1440
    CP_EQF 0.0 2.0 flag1440
    SELECTF flag1440 0.0 tmpf1440 F.0

    JR_GTEQF F.0 50.0 endwhile1436
  whilebody1436:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1441:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1442:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1443:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1444:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1446
    DATA8 flag1446
    DIVF F.1 2.0 tmpf1446
    CP_EQF 0.0 2.0 flag1446
    SELECTF flag1446 0.0 tmpf1446 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1458
    DATA8 flag1458
    DIVF F.1 2.0 tmpf1458
    CP_EQF 0.0 2.0 flag1458
    SELECTF flag1458 0.0 tmpf1458 F.0

    JR_LTF F.0 50.0 whilebody1436
  endwhile1436:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1460
	DATA8 nos1460
	DATA8 busy1460
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1460 nos1460
	JR_EQ8 0 nos1460 motornotbusy1460
  motorwaiting1460:
	OUTPUT_TEST layer1460 nos1460 busy1460
	JR_EQ8 busy1460 0 motornotbusy1460
	SLEEP
	JR motorwaiting1460
  motornotbusy1460:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1462
	MOVEF_32 500.0 milliseconds1462
	DATA32 timer1462
	TIMER_WAIT milliseconds1462 timer1462
	TIMER_READY timer1462
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 50.0 'true'

	DATA8 layer1464
	DATA8 nos1464
	DATA8 busy1464
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1464 nos1464
	JR_EQ8 0 nos1464 motornotbusy1464
  motorwaiting1464:
	OUTPUT_TEST layer1464 nos1464 busy1464
	JR_EQ8 busy1464 0 motornotbusy1464
	SLEEP
	JR motorwaiting1464
  motornotbusy1464:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 320.0 'true'

	DATA8 layer1465
	DATA8 nos1465
	DATA8 busy1465
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1465 nos1465
	JR_EQ8 0 nos1465 motornotbusy1465
  motorwaiting1465:
	OUTPUT_TEST layer1465 nos1465 busy1465
	JR_EQ8 busy1465 0 motornotbusy1465
	SLEEP
	JR motorwaiting1465
  motornotbusy1465:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1466:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1467:
  while1468:
    JR_LTEQF VGV_S3 10.0 and1470
    JR_GTF VGV_S2 10.0 or1469
  and1470:
    JR_GTEQF VGV_S3 10.0 and1471
    JR_GTF VGV_S2 10.0 or1469
  and1471:
    JR_LTEQF VGV_S3 6.0 endwhile1468
    JR_GTEQF VGV_S2 6.0 endwhile1468
  or1469:
  whilebody1468:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1472:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1473:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1475
    JR_GTF VGV_S2 10.0 whilebody1468
  and1475:
    JR_GTEQF VGV_S3 10.0 and1476
    JR_GTF VGV_S2 10.0 whilebody1468
  and1476:
    JR_LTEQF VGV_S3 6.0 and1477
    JR_LTF VGV_S2 6.0 whilebody1468
  and1477:
  endwhile1468:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1479
	DATA8 nos1479
	DATA8 busy1479
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1479 nos1479
	JR_EQ8 0 nos1479 motornotbusy1479
  motorwaiting1479:
	OUTPUT_TEST layer1479 nos1479 busy1479
	JR_EQ8 busy1479 0 motornotbusy1479
	SLEEP
	JR motorwaiting1479
  motornotbusy1479:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1481:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1482:
  while1483:
    JR_LTEQF VGV_S3 10.0 endwhile1483
  whilebody1483:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1484:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1485:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1483
  endwhile1483:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1488:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1489:
  while1490:
    JR_GTEQF VGV_S3 60.0 endwhile1490
  whilebody1490:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1491:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1492:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1490
  endwhile1490:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1495
	MOVEF_32 100.0 milliseconds1495
	DATA32 timer1495
	TIMER_WAIT milliseconds1495 timer1495
	TIMER_READY timer1495
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1496:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1497:
  while1498:
    JR_LTEQF VGV_S3 15.0 and1500
    JR_GTF VGV_S2 15.0 or1499
  and1500:
    JR_GTEQF VGV_S3 15.0 endwhile1498
    JR_GTEQF VGV_S2 15.0 endwhile1498
  or1499:
  whilebody1498:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1501:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1502:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1503:
    JR_LTEQF VGV_S3 15.0 and1504
    JR_GTF VGV_S2 15.0 whilebody1498
  and1504:
    JR_GTEQF VGV_S3 15.0 and1505
    JR_LTF VGV_S2 15.0 whilebody1498
  and1505:
  endwhile1498:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_PR_0:CALLSUB1507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1507:
    CALL MOTOR.RESETCOUNT 'bc'
  while1509:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1513
    DATA8 flag1513
    DIVF F.1 2.0 tmpf1513
    CP_EQF 0.0 2.0 flag1513
    SELECTF flag1513 0.0 tmpf1513 F.0

    JR_GTEQF F.0 200.0 endwhile1509
  whilebody1509:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1514:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1518
    DATA8 flag1518
    DIVF F.1 2.0 tmpf1518
    CP_EQF 0.0 2.0 flag1518
    SELECTF flag1518 0.0 tmpf1518 F.0

    JR_LTF F.0 200.0 whilebody1509
  endwhile1509:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1520:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1521:
    MOVEF_F 1.0 VGV_I
  for1522:
    JR_GTF VGV_I 2.0 endfor1522
  forbody1522:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1523
	DATA8 nos1523
	DATA8 busy1523
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1523 nos1523
	JR_EQ8 0 nos1523 motornotbusy1523
  motorwaiting1523:
	OUTPUT_TEST layer1523 nos1523 busy1523
	JR_EQ8 busy1523 0 motornotbusy1523
	SLEEP
	JR motorwaiting1523
  motornotbusy1523:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1524:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1525:
  while1526:
    JR_LTEQF VGV_S3 15.0 and1528
    JR_GTF VGV_S2 15.0 or1527
  and1528:
    JR_GTEQF VGV_S3 15.0 endwhile1526
    JR_GTEQF VGV_S2 15.0 endwhile1526
  or1527:
  whilebody1526:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1529:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1530:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1531:
    JR_LTEQF VGV_S3 15.0 and1532
    JR_GTF VGV_S2 15.0 whilebody1526
  and1532:
    JR_GTEQF VGV_S3 15.0 and1533
    JR_LTF VGV_S2 15.0 whilebody1526
  and1533:
  endwhile1526:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1522
  endfor1522:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1536
	DATA8 nos1536
	DATA8 busy1536
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1536 nos1536
	JR_EQ8 0 nos1536 motornotbusy1536
  motorwaiting1536:
	OUTPUT_TEST layer1536 nos1536 busy1536
	JR_EQ8 busy1536 0 motornotbusy1536
	SLEEP
	JR motorwaiting1536
  motornotbusy1536:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1538:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1539:
    MOVEF_F 80.0 VGV_J
  while1540:
    JR_LTEQF VGV_S3 10.0 endwhile1540
  whilebody1540:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1541:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1542:
    JR_LTEQF VGV_J 30.0 else1543_1
    SUBF VGV_J 0.1 VGV_J
  else1543_1:
  endif1543:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1540
  endwhile1540:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1547:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1548:
    MOVEF_F 80.0 VGV_J
  while1549:
    JR_GTEQF VGV_S3 15.0 endwhile1549
  whilebody1549:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1550:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1551:
    JR_LTEQF VGV_J 30.0 else1552_1
    SUBF VGV_J 0.1 VGV_J
  else1552_1:
  endif1552:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 15.0 whilebody1549
  endwhile1549:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1557:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1561
    DATA8 flag1561
    DIVF F.1 2.0 tmpf1561
    CP_EQF 0.0 2.0 flag1561
    SELECTF flag1561 0.0 tmpf1561 F.0

    JR_GTEQF F.0 50.0 endwhile1557
  whilebody1557:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1562:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1563:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1564:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1565:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1567
    DATA8 flag1567
    DIVF F.1 2.0 tmpf1567
    CP_EQF 0.0 2.0 flag1567
    SELECTF flag1567 0.0 tmpf1567 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1579
    DATA8 flag1579
    DIVF F.1 2.0 tmpf1579
    CP_EQF 0.0 2.0 flag1579
    SELECTF flag1579 0.0 tmpf1579 F.0

    JR_LTF F.0 50.0 whilebody1557
  endwhile1557:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 70.0 'true'

	DATA8 layer1581
	DATA8 nos1581
	DATA8 busy1581
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1581 nos1581
	JR_EQ8 0 nos1581 motornotbusy1581
  motorwaiting1581:
	OUTPUT_TEST layer1581 nos1581 busy1581
	JR_EQ8 busy1581 0 motornotbusy1581
	SLEEP
	JR motorwaiting1581
  motornotbusy1581:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1582
	DATA8 nos1582
	DATA8 busy1582
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1582 nos1582
	JR_EQ8 0 nos1582 motornotbusy1582
  motorwaiting1582:
	OUTPUT_TEST layer1582 nos1582 busy1582
	JR_EQ8 busy1582 0 motornotbusy1582
	SLEEP
	JR motorwaiting1582
  motornotbusy1582:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1584
	MOVEF_32 500.0 milliseconds1584
	DATA32 timer1584
	TIMER_WAIT milliseconds1584 timer1584
	TIMER_READY timer1584
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1587:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1591
    DATA8 flag1591
    DIVF F.1 2.0 tmpf1591
    CP_EQF 0.0 2.0 flag1591
    SELECTF flag1591 0.0 tmpf1591 F.0

    JR_LTEQF F.0 -200.0 endwhile1587
  whilebody1587:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1596
    DATA8 flag1596
    DIVF F.1 2.0 tmpf1596
    CP_EQF 0.0 2.0 flag1596
    SELECTF flag1596 0.0 tmpf1596 F.0

    JR_GTF F.0 -200.0 whilebody1587
  endwhile1587:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1598
	DATA8 nos1598
	DATA8 busy1598
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1598 nos1598
	JR_EQ8 0 nos1598 motornotbusy1598
  motorwaiting1598:
	OUTPUT_TEST layer1598 nos1598 busy1598
	JR_EQ8 busy1598 0 motornotbusy1598
	SLEEP
	JR motorwaiting1598
  motornotbusy1598:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1599
	DATA8 nos1599
	DATA8 busy1599
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1599 nos1599
	JR_EQ8 0 nos1599 motornotbusy1599
  motorwaiting1599:
	OUTPUT_TEST layer1599 nos1599 busy1599
	JR_EQ8 busy1599 0 motornotbusy1599
	SLEEP
	JR motorwaiting1599
  motornotbusy1599:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1601:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1602:
  while1603:
    JR_LTEQF VGV_S3 10.0 and1605
    JR_GTF VGV_S2 10.0 or1604
  and1605:
    JR_LTEQF VGV_S3 10.0 and1606
    JR_LTF VGV_S2 10.0 or1604
  and1606:
    JR_GTEQF VGV_S3 10.0 endwhile1603
    JR_LTEQF VGV_S2 10.0 endwhile1603
  or1604:
  whilebody1603:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1607:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1608:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1610
    JR_GTF VGV_S2 10.0 whilebody1603
  and1610:
    JR_LTEQF VGV_S3 10.0 and1611
    JR_LTF VGV_S2 10.0 whilebody1603
  and1611:
    JR_GTEQF VGV_S3 10.0 and1612
    JR_GTF VGV_S2 10.0 whilebody1603
  and1612:
  endwhile1603:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1614
	DATA8 nos1614
	DATA8 busy1614
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1614 nos1614
	JR_EQ8 0 nos1614 motornotbusy1614
  motorwaiting1614:
	OUTPUT_TEST layer1614 nos1614 busy1614
	JR_EQ8 busy1614 0 motornotbusy1614
	SLEEP
	JR motorwaiting1614
  motornotbusy1614:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1615:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1616:
  while1617:
    JR_LTEQF VGV_S3 10.0 endwhile1617
  whilebody1617:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1618:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1619:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1617
  endwhile1617:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1621:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1622:
  while1623:
    JR_GTEQF VGV_S3 15.0 endwhile1623
  whilebody1623:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1624:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1625:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1623
  endwhile1623:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1628:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1629:
  while1630:
    JR_LTEQF VGV_S3 15.0 and1632
    JR_GTF VGV_S2 15.0 or1631
  and1632:
    JR_GTEQF VGV_S3 15.0 endwhile1630
    JR_GTEQF VGV_S2 15.0 endwhile1630
  or1631:
  whilebody1630:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1633:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1634:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1635:
    JR_LTEQF VGV_S3 15.0 and1636
    JR_GTF VGV_S2 15.0 whilebody1630
  and1636:
    JR_GTEQF VGV_S3 15.0 and1637
    JR_LTF VGV_S2 15.0 whilebody1630
  and1637:
  endwhile1630:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1639
	DATA8 nos1639
	DATA8 busy1639
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1639 nos1639
	JR_EQ8 0 nos1639 motornotbusy1639
  motorwaiting1639:
	OUTPUT_TEST layer1639 nos1639 busy1639
	JR_EQ8 busy1639 0 motornotbusy1639
	SLEEP
	JR motorwaiting1639
  motornotbusy1639:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1640:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1641:
  while1642:
    JR_LTEQF VGV_S3 15.0 endwhile1642
  whilebody1642:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1643:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1644:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1642
  endwhile1642:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1647:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1648:
  while1649:
    JR_GTEQF VGV_S3 15.0 endwhile1649
  whilebody1649:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1650:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1651:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1649
  endwhile1649:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1655:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile1655
  whilebody1655:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1657:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody1655
  endwhile1655:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1660:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1661:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1662:
    JR_GTF VGV_I 3.0 endfor1662
  forbody1662:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1663:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1664:
  while1665:
    JR_LTEQF VGV_S3 15.0 and1667
    JR_GTF VGV_S2 15.0 or1666
  and1667:
    JR_GTEQF VGV_S3 15.0 endwhile1665
    JR_GTEQF VGV_S2 15.0 endwhile1665
  or1666:
  whilebody1665:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1668:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1669:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1670:
    JR_LTEQF VGV_S3 15.0 and1671
    JR_GTF VGV_S2 15.0 whilebody1665
  and1671:
    JR_GTEQF VGV_S3 15.0 and1672
    JR_LTF VGV_S2 15.0 whilebody1665
  and1672:
  endwhile1665:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1674
	DATA8 nos1674
	DATA8 busy1674
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1674 nos1674
	JR_EQ8 0 nos1674 motornotbusy1674
  motorwaiting1674:
	OUTPUT_TEST layer1674 nos1674 busy1674
	JR_EQ8 busy1674 0 motornotbusy1674
	SLEEP
	JR motorwaiting1674
  motornotbusy1674:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1662
  endfor1662:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1677
	DATA8 nos1677
	DATA8 busy1677
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1677 nos1677
	JR_EQ8 0 nos1677 motornotbusy1677
  motorwaiting1677:
	OUTPUT_TEST layer1677 nos1677 busy1677
	JR_EQ8 busy1677 0 motornotbusy1677
	SLEEP
	JR motorwaiting1677
  motornotbusy1677:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1678
	DATA8 nos1678
	DATA8 busy1678
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1678 nos1678
	JR_EQ8 0 nos1678 motornotbusy1678
  motorwaiting1678:
	OUTPUT_TEST layer1678 nos1678 busy1678
	JR_EQ8 busy1678 0 motornotbusy1678
	SLEEP
	JR motorwaiting1678
  motornotbusy1678:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1680
	MOVEF_32 500.0 milliseconds1680
	DATA32 timer1680
	TIMER_WAIT milliseconds1680 timer1680
	TIMER_READY timer1680
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 80.0 'true'

	DATA8 layer1682
	DATA8 nos1682
	DATA8 busy1682
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1682 nos1682
	JR_EQ8 0 nos1682 motornotbusy1682
  motorwaiting1682:
	OUTPUT_TEST layer1682 nos1682 busy1682
	JR_EQ8 busy1682 0 motornotbusy1682
	SLEEP
	JR motorwaiting1682
  motornotbusy1682:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 380.0 'true'

	DATA8 layer1683
	DATA8 nos1683
	DATA8 busy1683
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1683 nos1683
	JR_EQ8 0 nos1683 motornotbusy1683
  motorwaiting1683:
	OUTPUT_TEST layer1683 nos1683 busy1683
	JR_EQ8 busy1683 0 motornotbusy1683
	SLEEP
	JR motorwaiting1683
  motornotbusy1683:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer1684
	DATA8 nos1684
	DATA8 busy1684
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1684 nos1684
	JR_EQ8 0 nos1684 motornotbusy1684
  motorwaiting1684:
	OUTPUT_TEST layer1684 nos1684 busy1684
	JR_EQ8 busy1684 0 motornotbusy1684
	SLEEP
	JR motorwaiting1684
  motornotbusy1684:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1685
	DATA8 nos1685
	DATA8 busy1685
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1685 nos1685
	JR_EQ8 0 nos1685 motornotbusy1685
  motorwaiting1685:
	OUTPUT_TEST layer1685 nos1685 busy1685
	JR_EQ8 busy1685 0 motornotbusy1685
	SLEEP
	JR motorwaiting1685
  motornotbusy1685:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1686
	DATA8 nos1686
	DATA8 busy1686
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1686 nos1686
	JR_EQ8 0 nos1686 motornotbusy1686
  motorwaiting1686:
	OUTPUT_TEST layer1686 nos1686 busy1686
	JR_EQ8 busy1686 0 motornotbusy1686
	SLEEP
	JR motorwaiting1686
  motornotbusy1686:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1687:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1688:
  while1689:
    JR_LTEQF VGV_S3 10.0 and1691
    JR_GTF VGV_S2 10.0 or1690
  and1691:
    JR_GTEQF VGV_S3 10.0 and1692
    JR_GTF VGV_S2 10.0 or1690
  and1692:
    JR_LTEQF VGV_S3 10.0 endwhile1689
    JR_GTEQF VGV_S2 10.0 endwhile1689
  or1690:
  whilebody1689:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1693:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1694:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1696
    JR_GTF VGV_S2 10.0 whilebody1689
  and1696:
    JR_GTEQF VGV_S3 10.0 and1697
    JR_GTF VGV_S2 10.0 whilebody1689
  and1697:
    JR_LTEQF VGV_S3 10.0 and1698
    JR_LTF VGV_S2 10.0 whilebody1689
  and1698:
  endwhile1689:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1700
	DATA8 nos1700
	DATA8 busy1700
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1700 nos1700
	JR_EQ8 0 nos1700 motornotbusy1700
  motorwaiting1700:
	OUTPUT_TEST layer1700 nos1700 busy1700
	JR_EQ8 busy1700 0 motornotbusy1700
	SLEEP
	JR motorwaiting1700
  motornotbusy1700:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1702
	DATA8 nos1702
	DATA8 busy1702
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1702 nos1702
	JR_EQ8 0 nos1702 motornotbusy1702
  motorwaiting1702:
	OUTPUT_TEST layer1702 nos1702 busy1702
	JR_EQ8 busy1702 0 motornotbusy1702
	SLEEP
	JR motorwaiting1702
  motornotbusy1702:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1703:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1704:
  while1705:
    JR_LTEQF VGV_S3 15.0 endwhile1705
  whilebody1705:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1706:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1707:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1705
  endwhile1705:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1710:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1711:
  while1712:
    JR_GTEQF VGV_S3 60.0 endwhile1712
  whilebody1712:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1713:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1714:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1712
  endwhile1712:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1717:
    JR_GTF VGV_I 1.0 endfor1717
  forbody1717:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1718:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1719:
  while1720:
    JR_LTEQF VGV_S3 10.0 and1722
    JR_GTF VGV_S2 10.0 or1721
  and1722:
    JR_GTEQF VGV_S3 10.0 endwhile1720
    JR_GTEQF VGV_S2 10.0 endwhile1720
  or1721:
  whilebody1720:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1723:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1724:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1725:
    JR_LTEQF VGV_S3 10.0 and1726
    JR_GTF VGV_S2 10.0 whilebody1720
  and1726:
    JR_GTEQF VGV_S3 10.0 and1727
    JR_LTF VGV_S2 10.0 whilebody1720
  and1727:
  endwhile1720:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1729
	DATA8 nos1729
	DATA8 busy1729
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1729 nos1729
	JR_EQ8 0 nos1729 motornotbusy1729
  motorwaiting1729:
	OUTPUT_TEST layer1729 nos1729 busy1729
	JR_EQ8 busy1729 0 motornotbusy1729
	SLEEP
	JR motorwaiting1729
  motornotbusy1729:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1717
  endfor1717:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1732:
    CALL MOTOR.RESETCOUNT 'bc'
  while1734:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1738
    DATA8 flag1738
    DIVF F.1 2.0 tmpf1738
    CP_EQF 0.0 2.0 flag1738
    SELECTF flag1738 0.0 tmpf1738 F.0

    JR_GTEQF F.0 220.0 endwhile1734
  whilebody1734:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1739:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1743
    DATA8 flag1743
    DIVF F.1 2.0 tmpf1743
    CP_EQF 0.0 2.0 flag1743
    SELECTF flag1743 0.0 tmpf1743 F.0

    JR_LTF F.0 220.0 whilebody1734
  endwhile1734:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1745
	MOVEF_32 100.0 milliseconds1745
	DATA32 timer1745
	TIMER_WAIT milliseconds1745 timer1745
	TIMER_READY timer1745
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1747
	MOVEF_32 500.0 milliseconds1747
	DATA32 timer1747
	TIMER_WAIT milliseconds1747 timer1747
	TIMER_READY timer1747
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1749:
    MOVEF_F 950.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1750
    DATA8 flag1750
    DIVF 360.0 VGV_L tmpf1750
    CP_EQF 0.0 VGV_L flag1750
    SELECTF flag1750 0.0 tmpf1750 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1753:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1753
  whilebody1753:
    JR_GTEQF VGV_SPEED 80.0 else1755_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1755_1:
  endif1755:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1757:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1753
  endwhile1753:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1760:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1761:
    MOVEF_F 1400.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1762:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1764:
    CALL MOTOR.RESETCOUNT 'bc'
  while1766:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1770
    DATA8 flag1770
    DIVF F.1 2.0 tmpf1770
    CP_EQF 0.0 2.0 flag1770
    SELECTF flag1770 0.0 tmpf1770 F.0

    JR_GTEQF F.0 200.0 endwhile1766
  whilebody1766:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1771:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1772:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1773:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1777
    DATA8 flag1777
    DIVF F.1 2.0 tmpf1777
    CP_EQF 0.0 2.0 flag1777
    SELECTF flag1777 0.0 tmpf1777 F.0

    JR_LTF F.0 200.0 whilebody1766
  endwhile1766:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1779
	DATA8 nos1779
	DATA8 busy1779
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1779 nos1779
	JR_EQ8 0 nos1779 motornotbusy1779
  motorwaiting1779:
	OUTPUT_TEST layer1779 nos1779 busy1779
	JR_EQ8 busy1779 0 motornotbusy1779
	SLEEP
	JR motorwaiting1779
  motornotbusy1779:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1781
	MOVEF_32 500.0 milliseconds1781
	DATA32 timer1781
	TIMER_WAIT milliseconds1781 timer1781
	TIMER_READY timer1781
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1783
	DATA8 nos1783
	DATA8 busy1783
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1783 nos1783
	JR_EQ8 0 nos1783 motornotbusy1783
  motorwaiting1783:
	OUTPUT_TEST layer1783 nos1783 busy1783
	JR_EQ8 busy1783 0 motornotbusy1783
	SLEEP
	JR motorwaiting1783
  motornotbusy1783:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1784
	DATA8 nos1784
	DATA8 busy1784
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1784 nos1784
	JR_EQ8 0 nos1784 motornotbusy1784
  motorwaiting1784:
	OUTPUT_TEST layer1784 nos1784 busy1784
	JR_EQ8 busy1784 0 motornotbusy1784
	SLEEP
	JR motorwaiting1784
  motornotbusy1784:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer1785
	DATA8 nos1785
	DATA8 busy1785
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1785 nos1785
	JR_EQ8 0 nos1785 motornotbusy1785
  motorwaiting1785:
	OUTPUT_TEST layer1785 nos1785 busy1785
	JR_EQ8 busy1785 0 motornotbusy1785
	SLEEP
	JR motorwaiting1785
  motornotbusy1785:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1786:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1787:
    DATA32 tmp1788
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1788
    JR_NEQ32 0 tmp1788 alreadylaunched1788
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1788:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1789:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1790:
  while1791:
    JR_LTEQF VGV_S3 15.0 and1793
    JR_GTF VGV_S2 15.0 or1792
  and1793:
    JR_GTEQF VGV_S3 15.0 endwhile1791
    JR_GTEQF VGV_S2 15.0 endwhile1791
  or1792:
  whilebody1791:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1794:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1795:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1796:
    JR_LTEQF VGV_S3 15.0 and1797
    JR_GTF VGV_S2 15.0 whilebody1791
  and1797:
    JR_GTEQF VGV_S3 15.0 and1798
    JR_LTF VGV_S2 15.0 whilebody1791
  and1798:
  endwhile1791:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1800
	DATA8 nos1800
	DATA8 busy1800
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1800 nos1800
	JR_EQ8 0 nos1800 motornotbusy1800
  motorwaiting1800:
	OUTPUT_TEST layer1800 nos1800 busy1800
	JR_EQ8 busy1800 0 motornotbusy1800
	SLEEP
	JR motorwaiting1800
  motornotbusy1800:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1801:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1802:
  while1803:
    JR_LTEQF VGV_S3 15.0 and1805
    JR_GTF VGV_S2 15.0 or1804
  and1805:
    JR_GTEQF VGV_S3 15.0 endwhile1803
    JR_GTEQF VGV_S2 15.0 endwhile1803
  or1804:
  whilebody1803:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1806:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1807:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1808:
    JR_LTEQF VGV_S3 15.0 and1809
    JR_GTF VGV_S2 15.0 whilebody1803
  and1809:
    JR_GTEQF VGV_S3 15.0 and1810
    JR_LTF VGV_S2 15.0 whilebody1803
  and1810:
  endwhile1803:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1812
	DATA8 nos1812
	DATA8 busy1812
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1812 nos1812
	JR_EQ8 0 nos1812 motornotbusy1812
  motorwaiting1812:
	OUTPUT_TEST layer1812 nos1812 busy1812
	JR_EQ8 busy1812 0 motornotbusy1812
	SLEEP
	JR motorwaiting1812
  motornotbusy1812:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer1813
	DATA8 nos1813
	DATA8 busy1813
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1813 nos1813
	JR_EQ8 0 nos1813 motornotbusy1813
  motorwaiting1813:
	OUTPUT_TEST layer1813 nos1813 busy1813
	JR_EQ8 busy1813 0 motornotbusy1813
	SLEEP
	JR motorwaiting1813
  motornotbusy1813:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1815:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1816 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1816:
  while1817:
    JR_LTEQF VGV_S2 10.0 endwhile1817
  whilebody1817:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1818:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1819:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1817
  endwhile1817:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1822:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1823:
  while1824:
    JR_GTEQF VGV_S2 60.0 endwhile1824
  whilebody1824:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1825:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1826:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1824
  endwhile1824:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1830:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1834
    DATA8 flag1834
    DIVF F.1 2.0 tmpf1834
    CP_EQF 0.0 2.0 flag1834
    SELECTF flag1834 0.0 tmpf1834 F.0

    JR_GTEQF F.0 300.0 endwhile1830
  whilebody1830:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1835:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1836:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1837:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1841
    DATA8 flag1841
    DIVF F.1 2.0 tmpf1841
    CP_EQF 0.0 2.0 flag1841
    SELECTF flag1841 0.0 tmpf1841 F.0

    JR_LTF F.0 300.0 whilebody1830
  endwhile1830:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1843:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1844:
  while1845:
    JR_LTEQF VGV_S3 15.0 and1847
    JR_GTF VGV_S2 15.0 or1846
  and1847:
    JR_GTEQF VGV_S3 10.0 endwhile1845
    JR_GTEQF VGV_S2 15.0 endwhile1845
  or1846:
  whilebody1845:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1848:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1849:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1850:
    JR_LTEQF VGV_S3 15.0 and1851
    JR_GTF VGV_S2 15.0 whilebody1845
  and1851:
    JR_GTEQF VGV_S3 10.0 and1852
    JR_LTF VGV_S2 15.0 whilebody1845
  and1852:
  endwhile1845:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1854
	DATA8 no1854
	DATA8 mode81854
	
	MOVEF_8 1.0 no1854
	SUB8 no1854 1 no1854
	DIV8 no1854 4 layer1854
	MATH MOD8 no1854 4 no1854

	MOVEF_8 2.0 mode81854
	
	INPUT_DEVICE READY_RAW layer1854 no1854 0 mode81854 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1861
    DATA8 flag1861
    DIVF VGV_SRED 255.0 tmpf1861
    CP_EQF 0.0 255.0 flag1861
    SELECTF flag1861 0.0 tmpf1861 VGV_SRED

    DATAF tmpf1862
    DATA8 flag1862
    DIVF VGV_SGREEN 255.0 tmpf1862
    CP_EQF 0.0 255.0 flag1862
    SELECTF flag1862 0.0 tmpf1862 VGV_SGREEN

    DATAF tmpf1863
    DATA8 flag1863
    DIVF VGV_SBLUE 255.0 tmpf1863
    CP_EQF 0.0 255.0 flag1863
    SELECTF flag1863 0.0 tmpf1863 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1864_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1864_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1864
  else1864_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1864_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1864_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1864
  else1864_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1864_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1864_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1864_3:
  endif1864:
    JR_GTEQF VGV_SRED VGV_SGREEN else1865_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1865_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1865
  else1865_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1865_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1865_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1865
  else1865_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1865_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1865_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1865_3:
  endif1865:
    JR_NEQF VGV_MAX VGV_MIN else1866_1
    MOVEF_F 0.0 VGV_H
    JR endif1866
  else1866_1:
    JR_NEQF VGV_SRED VGV_MAX else1867_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1868_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1872
    DATA8 flag1872
    DIVF F.0 F.1 tmpf1872
    CP_EQF 0.0 F.1 flag1872
    SELECTF flag1872 0.0 tmpf1872 VGV_H

    JR endif1868
  else1868_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1876
    DATA8 flag1876
    DIVF F.1 F.2 tmpf1876
    CP_EQF 0.0 F.2 flag1876
    SELECTF flag1876 0.0 tmpf1876 F.0

    ADDF F.0 360.0 VGV_H
  else1868_2:
  endif1868:
    JR endif1867
  else1867_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1878_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1882
    DATA8 flag1882
    DIVF F.1 F.2 tmpf1882
    CP_EQF 0.0 F.2 flag1882
    SELECTF flag1882 0.0 tmpf1882 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1878
  else1878_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1887
    DATA8 flag1887
    DIVF F.1 F.2 tmpf1887
    CP_EQF 0.0 F.2 flag1887
    SELECTF flag1887 0.0 tmpf1887 F.0

    ADDF F.0 240.0 VGV_H
  else1878_2:
  endif1878:
  else1867_2:
  endif1867:
  else1866_2:
  endif1866:
    JR_NEQF VGV_MAX 0.0 else1889_1
    MOVEF_F 0.0 VGV_S
    JR endif1889
  else1889_1:
    DATAF tmpf1890
    DATA8 flag1890
    DIVF VGV_MIN VGV_MAX tmpf1890
    CP_EQF 0.0 VGV_MAX flag1890
    SELECTF flag1890 0.0 tmpf1890 F.0

    SUBF 1.0 F.0 VGV_S
  else1889_2:
  endif1889:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1899
	DATA8 no1899
	DATA8 mode81899
	
	MOVEF_8 1.0 no1899
	SUB8 no1899 1 no1899
	DIV8 no1899 4 layer1899
	MATH MOD8 no1899 4 no1899

	MOVEF_8 2.0 mode81899
	
	INPUT_DEVICE READY_RAW layer1899 no1899 0 mode81899 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1900:
    JR_GTF VGV_P 100.0 endfor1900
  forbody1900:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1901:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1900
  endfor1900:
    DATAF tmpf1906
    DATA8 flag1906
    DIVF VGV_X 100.0 tmpf1906
    CP_EQF 0.0 100.0 flag1906
    SELECTF flag1906 0.0 tmpf1906 VGV_H

    DATAF tmpf1907
    DATA8 flag1907
    DIVF VGV_Z 100.0 tmpf1907
    CP_EQF 0.0 100.0 flag1907
    SELECTF flag1907 0.0 tmpf1907 VGV_S

    DATAF tmpf1908
    DATA8 flag1908
    DIVF VGV_D 100.0 tmpf1908
    CP_EQF 0.0 100.0 flag1908
    SELECTF flag1908 0.0 tmpf1908 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1916
	DATA8 no1916
	DATA8 mode81916
	
	MOVEF_8 1.0 no1916
	SUB8 no1916 1 no1916
	DIV8 no1916 4 layer1916
	MATH MOD8 no1916 4 no1916

	MOVEF_8 2.0 mode81916
	
	INPUT_DEVICE READY_RAW layer1916 no1916 0 mode81916 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1923
    DATA8 flag1923
    DIVF VGV_SRED 255.0 tmpf1923
    CP_EQF 0.0 255.0 flag1923
    SELECTF flag1923 0.0 tmpf1923 VGV_SRED

    DATAF tmpf1924
    DATA8 flag1924
    DIVF VGV_SGREEN 255.0 tmpf1924
    CP_EQF 0.0 255.0 flag1924
    SELECTF flag1924 0.0 tmpf1924 VGV_SGREEN

    DATAF tmpf1925
    DATA8 flag1925
    DIVF VGV_SBLUE 255.0 tmpf1925
    CP_EQF 0.0 255.0 flag1925
    SELECTF flag1925 0.0 tmpf1925 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1926_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1926_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1926
  else1926_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1926_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1926_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1926
  else1926_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1926_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1926_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1926_3:
  endif1926:
    JR_GTEQF VGV_SRED VGV_SGREEN else1927_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1927_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1927
  else1927_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1927_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1927_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1927
  else1927_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1927_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1927_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1927_3:
  endif1927:
    JR_NEQF VGV_MAX VGV_MIN else1928_1
    MOVEF_F 0.0 VGV_H
    JR endif1928
  else1928_1:
    JR_NEQF VGV_SRED VGV_MAX else1929_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1930_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1934
    DATA8 flag1934
    DIVF F.0 F.1 tmpf1934
    CP_EQF 0.0 F.1 flag1934
    SELECTF flag1934 0.0 tmpf1934 VGV_H

    JR endif1930
  else1930_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1938
    DATA8 flag1938
    DIVF F.1 F.2 tmpf1938
    CP_EQF 0.0 F.2 flag1938
    SELECTF flag1938 0.0 tmpf1938 F.0

    ADDF F.0 360.0 VGV_H
  else1930_2:
  endif1930:
    JR endif1929
  else1929_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1940_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1944
    DATA8 flag1944
    DIVF F.1 F.2 tmpf1944
    CP_EQF 0.0 F.2 flag1944
    SELECTF flag1944 0.0 tmpf1944 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1940
  else1940_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1949
    DATA8 flag1949
    DIVF F.1 F.2 tmpf1949
    CP_EQF 0.0 F.2 flag1949
    SELECTF flag1949 0.0 tmpf1949 F.0

    ADDF F.0 240.0 VGV_H
  else1940_2:
  endif1940:
  else1929_2:
  endif1929:
  else1928_2:
  endif1928:
    JR_NEQF VGV_MAX 0.0 else1951_1
    MOVEF_F 0.0 VGV_S
    JR endif1951
  else1951_1:
    DATAF tmpf1952
    DATA8 flag1952
    DIVF VGV_MIN VGV_MAX tmpf1952
    CP_EQF 0.0 VGV_MAX flag1952
    SELECTF flag1952 0.0 tmpf1952 F.0

    SUBF 1.0 F.0 VGV_S
  else1951_2:
  endif1951:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1956
    JR_LTF VGV_H 360.0 or1955
  and1956:
    JR_LTF VGV_H 0.0 else1954_1
    JR_GTF VGV_H 20.0 else1954_1
    JR_LTEQF VGV_S 0.3 else1954_1
    JR_GTF VGV_S 1.0 else1954_1
    JR_LTEQF VGV_V 0.025 else1954_1
    JR_GTEQF VGV_V 0.1 else1954_1
  or1955:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1954
  else1954_1:
    JR_LTF VGV_H 20.0 else1954_2
    JR_GTEQF VGV_H 60.0 else1954_2
    JR_LTF VGV_S 0.4 else1954_2
    JR_LTEQF VGV_V 0.03 else1954_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1954
  else1954_2:
    MOVEF_F 6.0 VGV_COLOR
  else1954_3:
  endif1954:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1957
	DATA8 no1957
	DATA8 mode81957
	
	MOVEF_8 1.0 no1957
	SUB8 no1957 1 no1957
	DIV8 no1957 4 layer1957
	MATH MOD8 no1957 4 no1957

	MOVEF_8 2.0 mode81957
	
	INPUT_DEVICE READY_RAW layer1957 no1957 0 mode81957 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1964
    DATA8 flag1964
    DIVF VGV_SRED 255.0 tmpf1964
    CP_EQF 0.0 255.0 flag1964
    SELECTF flag1964 0.0 tmpf1964 VGV_SRED

    DATAF tmpf1965
    DATA8 flag1965
    DIVF VGV_SGREEN 255.0 tmpf1965
    CP_EQF 0.0 255.0 flag1965
    SELECTF flag1965 0.0 tmpf1965 VGV_SGREEN

    DATAF tmpf1966
    DATA8 flag1966
    DIVF VGV_SBLUE 255.0 tmpf1966
    CP_EQF 0.0 255.0 flag1966
    SELECTF flag1966 0.0 tmpf1966 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1967_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1967_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1967
  else1967_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1967_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1967_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1967
  else1967_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1967_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1967_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1967_3:
  endif1967:
    JR_GTEQF VGV_SRED VGV_SGREEN else1968_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1968_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1968
  else1968_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1968_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1968_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1968
  else1968_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1968_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1968_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1968_3:
  endif1968:
    JR_NEQF VGV_MAX VGV_MIN else1969_1
    MOVEF_F 0.0 VGV_H
    JR endif1969
  else1969_1:
    JR_NEQF VGV_SRED VGV_MAX else1970_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1971_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1975
    DATA8 flag1975
    DIVF F.0 F.1 tmpf1975
    CP_EQF 0.0 F.1 flag1975
    SELECTF flag1975 0.0 tmpf1975 VGV_H

    JR endif1971
  else1971_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1979
    DATA8 flag1979
    DIVF F.1 F.2 tmpf1979
    CP_EQF 0.0 F.2 flag1979
    SELECTF flag1979 0.0 tmpf1979 F.0

    ADDF F.0 360.0 VGV_H
  else1971_2:
  endif1971:
    JR endif1970
  else1970_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1981_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1985
    DATA8 flag1985
    DIVF F.1 F.2 tmpf1985
    CP_EQF 0.0 F.2 flag1985
    SELECTF flag1985 0.0 tmpf1985 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1981
  else1981_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1990
    DATA8 flag1990
    DIVF F.1 F.2 tmpf1990
    CP_EQF 0.0 F.2 flag1990
    SELECTF flag1990 0.0 tmpf1990 F.0

    ADDF F.0 240.0 VGV_H
  else1981_2:
  endif1981:
  else1970_2:
  endif1970:
  else1969_2:
  endif1969:
    JR_NEQF VGV_MAX 0.0 else1992_1
    MOVEF_F 0.0 VGV_S
    JR endif1992
  else1992_1:
    DATAF tmpf1993
    DATA8 flag1993
    DIVF VGV_MIN VGV_MAX tmpf1993
    CP_EQF 0.0 VGV_MAX flag1993
    SELECTF flag1993 0.0 tmpf1993 F.0

    SUBF 1.0 F.0 VGV_S
  else1992_2:
  endif1992:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1997
    JR_LTF VGV_H 360.0 or1996
  and1997:
    JR_LTF VGV_H 0.0 else1995_1
    JR_GTF VGV_H 30.0 else1995_1
    JR_LTEQF VGV_S 0.3 else1995_1
    JR_GTF VGV_S 1.0 else1995_1
    JR_LTF VGV_V 0.0 else1995_1
    JR_GTEQF VGV_V 0.02 else1995_1
  or1996:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1995
  else1995_1:
    JR_LTF VGV_H 0.0 else1995_2
    JR_GTEQF VGV_H 60.0 else1995_2
    JR_LTF VGV_S 0.4 else1995_2
    JR_GTF VGV_S 1.0 else1995_2
    JR_LTEQF VGV_V 0.003 else1995_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1995
  else1995_2:
    MOVEF_F 6.0 VGV_COLOR
  else1995_3:
  endif1995:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf2002
    DATA8 flag2002
    DIVF F.0 F.1 tmpf2002
    CP_EQF 0.0 F.1 flag2002
    SELECTF flag2002 0.0 tmpf2002 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf2007
    DATA8 flag2007
    DIVF F.0 F.1 tmpf2007
    CP_EQF 0.0 F.1 flag2007
    SELECTF flag2007 0.0 tmpf2007 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2008:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2009:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds2023
	MOVEF_32 100.0 milliseconds2023
	DATA32 timer2023
	TIMER_WAIT milliseconds2023 timer2023
	TIMER_READY timer2023
  while2024:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile2024
  whilebody2024:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody2024
  endwhile2024:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds2030
	MOVEF_32 350.0 milliseconds2030
	DATA32 timer2030
	TIMER_WAIT milliseconds2030 timer2030
	TIMER_READY timer2030
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    DATA8 layer2032
	DATA8 no2032
	DATA8 mode82032
	
	MOVEF_8 2.0 no2032
	SUB8 no2032 1 no2032
	DIV8 no2032 4 layer2032
	MATH MOD8 no2032 4 no2032

	MOVEF_8 0.0 mode82032
	
	INPUT_DEVICE READY_RAW layer2032 no2032 0 mode82032 0
    DATA8 layer2033
	DATA8 no2033
	DATA8 mode82033
	
	MOVEF_8 3.0 no2033
	SUB8 no2033 1 no2033
	DIV8 no2033 4 layer2033
	MATH MOD8 no2033 4 no2033

	MOVEF_8 0.0 mode82033
	
	INPUT_DEVICE READY_RAW layer2033 no2033 0 mode82033 0
  while2034:
    JR_LTEQF VGV_S2 6.0 and2036
    JR_GTF VGV_S3 6.0 or2035
  and2036:
    JR_GTEQF VGV_S2 6.0 and2037
    JR_GTF VGV_S3 6.0 or2035
  and2037:
    JR_LTEQF VGV_S2 6.0 endwhile2034
    JR_GTEQF VGV_S3 6.0 endwhile2034
  or2035:
  whilebody2034:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 6.0 and2039
    JR_GTF VGV_S3 6.0 whilebody2034
  and2039:
    JR_GTEQF VGV_S2 6.0 and2040
    JR_GTF VGV_S3 6.0 whilebody2034
  and2040:
    JR_LTEQF VGV_S2 6.0 and2041
    JR_LTF VGV_S3 6.0 whilebody2034
  and2041:
  endwhile2034:
  while2042:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile2042
  whilebody2042:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody2042
  endwhile2042:
    CALL MOTOR.STOP 'B' 'True'
  while2047:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2047
  whilebody2047:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2047
  endwhile2047:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2052
	DATA8 no2052
	DATA8 mode82052
	
	MOVEF_8 2.0 no2052
	SUB8 no2052 1 no2052
	DIV8 no2052 4 layer2052
	MATH MOD8 no2052 4 no2052

	MOVEF_8 0.0 mode82052
	
	INPUT_DEVICE READY_RAW layer2052 no2052 0 mode82052 0
    DATA8 layer2053
	DATA8 no2053
	DATA8 mode82053
	
	MOVEF_8 3.0 no2053
	SUB8 no2053 1 no2053
	DIV8 no2053 4 layer2053
	MATH MOD8 no2053 4 no2053

	MOVEF_8 0.0 mode82053
	
	INPUT_DEVICE READY_RAW layer2053 no2053 0 mode82053 0
  while2054:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2054
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2054
  whilebody2054:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2058
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2054
  and2058:
  endwhile2054:
    CALL MOTOR.STOP 'BC' 'True'
  while2062:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2062
  whilebody2062:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2062
  endwhile2062:
    CALL MOTOR.STOP 'B' 'True'
  while2067:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2067
  whilebody2067:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2067
  endwhile2067:
    CALL MOTOR.STOP 'C' 'True'
  while2072:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2072
  whilebody2072:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2072
  endwhile2072:
    CALL MOTOR.STOP 'B' 'True'
  while2077:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2077
  whilebody2077:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2077
  endwhile2077:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall EV3FILE.OPENWRITE       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_WRITE fullname handle16

	MOVE16_F handle16 handle
}
subcall EV3FILE.WRITELINE     // FSV
{
	IN_F handle
	IN_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE WRITE_TEXT handle16 6 text
invalidhandle:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
