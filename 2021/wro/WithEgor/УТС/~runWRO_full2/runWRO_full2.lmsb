DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VG_M
DATAF VR_M
DATAF VY_M
DATAF VW_M
DATAF VCOLOR_M
DATAF VX_M
DATAF VC_M
DATAF VS_M
DATAF VMAX2_M
DATAF VMAX3_M
DATAF VMIN2_M
DATAF VMIN3_M
DATAF VK1_M
DATAF VK2_M
DATAF VK3_M
DATAF VS3_M
DATAF VS2_M
DATAF VSPEED_M
DATAF VSPEEDL_M
DATAF VSPEEDR_M
DATAF VEOLD_M
DATAF VN_M
DATAF VCOLOR1_M
DATAF VP_M
DATAF VI_M
DATAF VI2CPORT_M
DATAF VI2CSLVADDR_M
DATAF VL_M
DATAF VJ_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VSNUM_M
DATAF VSRED_M
DATAF VSGREEN_M
DATAF VSBLUE_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VV_M
DATAF VD_M
DATAF VZ_M
DATAF VE_M
DATAF VU_M
ARRAY16 VA_M 2
DATAF VF_M
DATAF VO_M
DATAF VCOLOR2_M
DATAF VCOLOR3_M
DATAF VCOLOR4_M
DATAF VCOLOR5_M
DATA32 RUNCOUNTER_ZADVIG
DATA32 RUNCOUNTER_VIDVIG

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYCREATE_FLOAT VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VO_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVE32_32 0 RUNCOUNTER_ZADVIG
    MOVE32_32 0 RUNCOUNTER_VIDVIG
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TZADVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_ZADVIG 0
    CALL GETANDINC32 RUNCOUNTER_ZADVIG -1 RUNCOUNTER_ZADVIG tmp
    JR_GT32 tmp 1 launch
}
vmthread TVIDVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_VIDVIG 1
    CALL GETANDINC32 RUNCOUNTER_VIDVIG -1 RUNCOUNTER_VIDVIG tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_ZADVIG
subcall PROGRAM_VIDVIG
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1494
    WRITE32 ENDSUB_ZADVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZADVIG
  dispatch1494:
    JR_NEQ32 SUBPROGRAM 1 dispatch1495
    WRITE32 ENDSUB_VIDVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_VIDVIG
  dispatch1495:
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VO_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.2 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.2 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 4.0 VCOLOR1_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL EV3FILE.OPENREAD 'WRO2021/colib.dat' VF_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN3_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX3_M
    CALL EV3FILE.CLOSE VF_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VMIN2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMIN3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds1139
	MOVEF_32 100.0 milliseconds1139
	DATA32 timer1139
	TIMER_WAIT milliseconds1139 timer1139
	TIMER_READY timer1139
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    WRITE32 ENDSUB_HSV:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1140:
    JR_LTEQF VH_M 120.0 else1141_1
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1141
  else1141_1:
    JR_LTEQF VH_M 20.0 else1141_2
    JR_GTEQF VH_M 120.0 else1141_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    JR endif1141
  else1141_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else1141_3:
  endif1141:
    DATA32 tmp1145
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1145
    JR_NEQ32 0 tmp1145 alreadylaunched1145
    OBJECT_START TVIDVIG
  alreadylaunched1145:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while1148:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1152
    DATA8 flag1152
    DIVF F.1 2.0 tmpf1152
    CP_EQF 0.0 2.0 flag1152
    SELECTF flag1152 0.0 tmpf1152 F.0

    JR_GTEQF F.0 500.0 endwhile1148
  whilebody1148:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VMAX2_M else1153_1
    CALL SENSOR.READPERCENT 2.0 VMAX2_M
  else1153_1:
  endif1153:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VMIN2_M else1156_1
    CALL SENSOR.READPERCENT 2.0 VMIN2_M
  else1156_1:
  endif1156:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VMAX3_M else1159_1
    CALL SENSOR.READPERCENT 3.0 VMAX3_M
  else1159_1:
  endif1159:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VMIN3_M else1162_1
    CALL SENSOR.READPERCENT 3.0 VMIN3_M
  else1162_1:
  endif1162:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1168
    DATA8 flag1168
    DIVF F.1 2.0 tmpf1168
    CP_EQF 0.0 2.0 flag1168
    SELECTF flag1168 0.0 tmpf1168 F.0

    JR_LTF F.0 500.0 whilebody1148
  endwhile1148:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1170:
    WRITE32 ENDSUB_A2:CALLSUB1171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1171:
  while1172:
    JR_LTEQF VS3_M 10.0 and1174
    JR_GTF VS2_M 10.0 or1173
  and1174:
    JR_GTEQF VS3_M 10.0 endwhile1172
    JR_GTEQF VS2_M 10.0 endwhile1172
  or1173:
  whilebody1172:
    WRITE32 ENDSUB_A3:CALLSUB1175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1175:
    WRITE32 ENDSUB_A2:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1176:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1177:
    JR_LTEQF VS3_M 10.0 and1178
    JR_GTF VS2_M 10.0 whilebody1172
  and1178:
    JR_GTEQF VS3_M 10.0 and1179
    JR_LTF VS2_M 10.0 whilebody1172
  and1179:
  endwhile1172:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_HSV:CALLSUB1181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1181:
    JR_GTF VH_M 120.0 or1183
    JR_NEQF VH_M 0.0 else1182_1
  or1183:
    MOVEF_F 5.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1182
  else1182_1:
    JR_LTEQF VH_M 200.0 and1186
    JR_LTF VH_M 300.0 or1185
  and1186:
    JR_GTEQF VH_M 120.0 else1182_2
  or1185:
    MOVEF_F 4.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1182
  else1182_2:
    MOVEF_F 5.0 VCOLOR1_M
  else1182_3:
  endif1182:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1188
	DATA8 nos1188
	DATA8 busy1188
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1188 nos1188
	JR_EQ8 0 nos1188 motornotbusy1188
  motorwaiting1188:
	OUTPUT_TEST layer1188 nos1188 busy1188
	JR_EQ8 busy1188 0 motornotbusy1188
	SLEEP
	JR motorwaiting1188
  motornotbusy1188:
    DATA32 tmp1189
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp1189
    JR_NEQ32 0 tmp1189 alreadylaunched1189
    OBJECT_START TZADVIG
  alreadylaunched1189:
    WRITE32 ENDSUB_A3:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1190:
    WRITE32 ENDSUB_A2:CALLSUB1191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1191:
  while1192:
    JR_LTEQF VS3_M 10.0 and1194
    JR_GTF VS2_M 10.0 or1193
  and1194:
    JR_GTEQF VS3_M 10.0 endwhile1192
    JR_GTEQF VS2_M 10.0 endwhile1192
  or1193:
  whilebody1192:
    WRITE32 ENDSUB_A3:CALLSUB1195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1195:
    WRITE32 ENDSUB_A2:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1196:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1197:
    JR_LTEQF VS3_M 10.0 and1198
    JR_GTF VS2_M 10.0 whilebody1192
  and1198:
    JR_GTEQF VS3_M 10.0 and1199
    JR_LTF VS2_M 10.0 whilebody1192
  and1199:
  endwhile1192:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1201
	DATA8 nos1201
	DATA8 busy1201
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1201 nos1201
	JR_EQ8 0 nos1201 motornotbusy1201
  motorwaiting1201:
	OUTPUT_TEST layer1201 nos1201 busy1201
	JR_EQ8 busy1201 0 motornotbusy1201
	SLEEP
	JR motorwaiting1201
  motornotbusy1201:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer1202
	DATA8 nos1202
	DATA8 busy1202
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1202 nos1202
	JR_EQ8 0 nos1202 motornotbusy1202
  motorwaiting1202:
	OUTPUT_TEST layer1202 nos1202 busy1202
	JR_EQ8 busy1202 0 motornotbusy1202
	SLEEP
	JR motorwaiting1202
  motornotbusy1202:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 100.0 'true'

	DATA8 layer1204
	DATA8 nos1204
	DATA8 busy1204
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1204 nos1204
	JR_EQ8 0 nos1204 motornotbusy1204
  motorwaiting1204:
	OUTPUT_TEST layer1204 nos1204 busy1204
	JR_EQ8 busy1204 0 motornotbusy1204
	SLEEP
	JR motorwaiting1204
  motornotbusy1204:
    WRITE32 ENDSUB_A3:CALLSUB1205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1205:
    WRITE32 ENDSUB_A2:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1206:
  while1207:
    JR_LTEQF VS3_M 10.0 and1209
    JR_GTF VS2_M 10.0 or1208
  and1209:
    JR_GTEQF VS3_M 10.0 endwhile1207
    JR_GTEQF VS2_M 10.0 endwhile1207
  or1208:
  whilebody1207:
    WRITE32 ENDSUB_A3:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1210:
    WRITE32 ENDSUB_A2:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1211:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1212:
    JR_LTEQF VS3_M 10.0 and1213
    JR_GTF VS2_M 10.0 whilebody1207
  and1213:
    JR_GTEQF VS3_M 10.0 and1214
    JR_LTF VS2_M 10.0 whilebody1207
  and1214:
  endwhile1207:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_HSV_100:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1216:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1217
	DATA8 nos1217
	DATA8 busy1217
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1217 nos1217
	JR_EQ8 0 nos1217 motornotbusy1217
  motorwaiting1217:
	OUTPUT_TEST layer1217 nos1217 busy1217
	JR_EQ8 busy1217 0 motornotbusy1217
	SLEEP
	JR motorwaiting1217
  motornotbusy1217:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1218
	DATA8 nos1218
	DATA8 busy1218
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1218 nos1218
	JR_EQ8 0 nos1218 motornotbusy1218
  motorwaiting1218:
	OUTPUT_TEST layer1218 nos1218 busy1218
	JR_EQ8 busy1218 0 motornotbusy1218
	SLEEP
	JR motorwaiting1218
  motornotbusy1218:
    MOVEF_F 90.0 VSPEED_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1220:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1220
  whilebody1220:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1222:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1220
  endwhile1220:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1224
	DATA8 nos1224
	DATA8 busy1224
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1224 nos1224
	JR_EQ8 0 nos1224 motornotbusy1224
  motorwaiting1224:
	OUTPUT_TEST layer1224 nos1224 busy1224
	JR_EQ8 busy1224 0 motornotbusy1224
	SLEEP
	JR motorwaiting1224
  motornotbusy1224:
    WRITE32 ENDSUB_HSV_100:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1225:
    JR_EQF VH_M 0.0 or1227
    JR_GTF VH_M 200.0 or1227
    JR_GTEQF VH_M 150.0 else1226_1
  or1227:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1228
	DATA8 nos1228
	DATA8 busy1228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1228 nos1228
	JR_EQ8 0 nos1228 motornotbusy1228
  motorwaiting1228:
	OUTPUT_TEST layer1228 nos1228 busy1228
	JR_EQ8 busy1228 0 motornotbusy1228
	SLEEP
	JR motorwaiting1228
  motornotbusy1228:
  else1226_1:
  endif1226:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1231
	MOVEF_32 500.0 milliseconds1231
	DATA32 timer1231
	TIMER_WAIT milliseconds1231 timer1231
	TIMER_READY timer1231
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1234:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 220.0 endwhile1234
  whilebody1234:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1236:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 220.0 whilebody1234
  endwhile1234:
    JR_NEQF VCOLOR1_M 5.0 else1238_1
    WRITE32 ENDSUB_SB1:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1239:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1240
	DATA8 nos1240
	DATA8 busy1240
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1240 nos1240
	JR_EQ8 0 nos1240 motornotbusy1240
  motorwaiting1240:
	OUTPUT_TEST layer1240 nos1240 busy1240
	JR_EQ8 busy1240 0 motornotbusy1240
	SLEEP
	JR motorwaiting1240
  motornotbusy1240:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1241
	DATA8 nos1241
	DATA8 busy1241
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1241 nos1241
	JR_EQ8 0 nos1241 motornotbusy1241
  motorwaiting1241:
	OUTPUT_TEST layer1241 nos1241 busy1241
	JR_EQ8 busy1241 0 motornotbusy1241
	SLEEP
	JR motorwaiting1241
  motornotbusy1241:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1243
	MOVEF_32 100.0 milliseconds1243
	DATA32 timer1243
	TIMER_WAIT milliseconds1243 timer1243
	TIMER_READY timer1243
    WRITE32 ENDSUB_A3:CALLSUB1244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1244:
    WRITE32 ENDSUB_A2:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1245:
  while1246:
    JR_LTEQF VS3_M 10.0 and1248
    JR_GTF VS2_M 10.0 or1247
  and1248:
    JR_GTEQF VS3_M 10.0 endwhile1246
    JR_GTEQF VS2_M 10.0 endwhile1246
  or1247:
  whilebody1246:
    WRITE32 ENDSUB_A3:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1249:
    WRITE32 ENDSUB_A2:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1250:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1251:
    JR_LTEQF VS3_M 10.0 and1252
    JR_GTF VS2_M 10.0 whilebody1246
  and1252:
    JR_GTEQF VS3_M 10.0 and1253
    JR_LTF VS2_M 10.0 whilebody1246
  and1253:
  endwhile1246:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_RED_1:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1255:
    ADDF VC_M 1.0 VC_M
    JR endif1238
  else1238_1:
    DATA32 tmp1257
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1257
    JR_NEQ32 0 tmp1257 alreadylaunched1257
    OBJECT_START TVIDVIG
  alreadylaunched1257:
    WRITE32 ENDSUB_SB1:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1258:
    MOVEF_F 1.0 VO_M
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1259
	DATA8 nos1259
	DATA8 busy1259
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1259 nos1259
	JR_EQ8 0 nos1259 motornotbusy1259
  motorwaiting1259:
	OUTPUT_TEST layer1259 nos1259 busy1259
	JR_EQ8 busy1259 0 motornotbusy1259
	SLEEP
	JR motorwaiting1259
  motornotbusy1259:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1260
	DATA8 nos1260
	DATA8 busy1260
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1260 nos1260
	JR_EQ8 0 nos1260 motornotbusy1260
  motorwaiting1260:
	OUTPUT_TEST layer1260 nos1260 busy1260
	JR_EQ8 busy1260 0 motornotbusy1260
	SLEEP
	JR motorwaiting1260
  motornotbusy1260:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1262:
    WRITE32 ENDSUB_A2:CALLSUB1263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1263:
  while1264:
    JR_LTEQF VS3_M 10.0 and1266
    JR_GTF VS2_M 10.0 or1265
  and1266:
    JR_GTEQF VS3_M 10.0 endwhile1264
    JR_GTEQF VS2_M 10.0 endwhile1264
  or1265:
  whilebody1264:
    WRITE32 ENDSUB_A3:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1267:
    WRITE32 ENDSUB_A2:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1268:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1269:
    JR_LTEQF VS3_M 10.0 and1270
    JR_GTF VS2_M 10.0 whilebody1264
  and1270:
    JR_GTEQF VS3_M 10.0 and1271
    JR_LTF VS2_M 10.0 whilebody1264
  and1271:
  endwhile1264:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 25.0 'true'

	DATA8 layer1273
	DATA8 nos1273
	DATA8 busy1273
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1273 nos1273
	JR_EQ8 0 nos1273 motornotbusy1273
  motorwaiting1273:
	OUTPUT_TEST layer1273 nos1273 busy1273
	JR_EQ8 busy1273 0 motornotbusy1273
	SLEEP
	JR motorwaiting1273
  motornotbusy1273:
  else1238_2:
  endif1238:
    WRITE32 ENDSUB_HSV_100:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1274:
    JR_GTEQF VV_M 0.02 else1275_1
    MOVEF_F 5.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1275
  else1275_1:
    MOVEF_F 4.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1275_2:
  endif1275:
    JR_NEQF VCOLOR2_M 5.0 else1278_1
    WRITE32 ENDSUB_PR:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1279:
    CALL MOTOR.RESETCOUNT 'bc'
  while1281:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 600.0 endwhile1281
  whilebody1281:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1283:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 600.0 whilebody1281
  endwhile1281:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 tmp1286
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1286
    JR_NEQ32 0 tmp1286 alreadylaunched1286
    OBJECT_START TVIDVIG
  alreadylaunched1286:
    WRITE32 ENDSUB_NPL:CALLSUB1287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1287:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1288:
    ADDF VC_M 1.0 VC_M
    JR endif1278
  else1278_1:
    MOVEF_F 2.0 VO_M
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1290
	DATA8 nos1290
	DATA8 busy1290
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1290 nos1290
	JR_EQ8 0 nos1290 motornotbusy1290
  motorwaiting1290:
	OUTPUT_TEST layer1290 nos1290 busy1290
	JR_EQ8 busy1290 0 motornotbusy1290
	SLEEP
	JR motorwaiting1290
  motornotbusy1290:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1292:
    WRITE32 ENDSUB_A2:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1293:
  while1294:
    JR_LTEQF VS3_M 10.0 and1296
    JR_GTF VS2_M 10.0 or1295
  and1296:
    JR_GTEQF VS3_M 10.0 endwhile1294
    JR_GTEQF VS2_M 10.0 endwhile1294
  or1295:
  whilebody1294:
    WRITE32 ENDSUB_A3:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1297:
    WRITE32 ENDSUB_A2:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1298:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1299:
    JR_LTEQF VS3_M 10.0 and1300
    JR_GTF VS2_M 10.0 whilebody1294
  and1300:
    JR_GTEQF VS3_M 10.0 and1301
    JR_LTF VS2_M 10.0 whilebody1294
  and1301:
  endwhile1294:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1303
	DATA8 nos1303
	DATA8 busy1303
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1303 nos1303
	JR_EQ8 0 nos1303 motornotbusy1303
  motorwaiting1303:
	OUTPUT_TEST layer1303 nos1303 busy1303
	JR_EQ8 busy1303 0 motornotbusy1303
	SLEEP
	JR motorwaiting1303
  motornotbusy1303:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1305:
    WRITE32 ENDSUB_A2:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1306:
  while1307:
    JR_LTEQF VS3_M 10.0 and1309
    JR_GTF VS2_M 10.0 or1308
  and1309:
    JR_GTEQF VS3_M 10.0 endwhile1307
    JR_GTEQF VS2_M 10.0 endwhile1307
  or1308:
  whilebody1307:
    WRITE32 ENDSUB_A3:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1310:
    WRITE32 ENDSUB_A2:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1311:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1312:
    JR_LTEQF VS3_M 10.0 and1313
    JR_GTF VS2_M 10.0 whilebody1307
  and1313:
    JR_GTEQF VS3_M 10.0 and1314
    JR_LTF VS2_M 10.0 whilebody1307
  and1314:
  endwhile1307:
    CALL MOTOR.STOP 'bc' 'true'
  else1278_2:
  endif1278:
    WRITE32 ENDSUB_HSV_100:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1316:
    JR_LTEQF VH_M 120.0 and1319
    JR_LTEQF VH_M 360.0 or1318
  and1319:
    JR_LTF VH_M 0.0 and1320
    JR_LTEQF VH_M 10.0 or1318
  and1320:
    JR_LTEQF VS_M 0.3 else1317_1
    JR_GTEQF VS_M 0.5 else1317_1
  or1318:
    MOVEF_F 5.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1317
  else1317_1:
    MOVEF_F 4.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1317_2:
  endif1317:
    JR_NEQF VCOLOR3_M 4.0 else1323_1
    MOVEF_F 3.0 VO_M
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1324
	DATA8 nos1324
	DATA8 busy1324
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1324 nos1324
	JR_EQ8 0 nos1324 motornotbusy1324
  motorwaiting1324:
	OUTPUT_TEST layer1324 nos1324 busy1324
	JR_EQ8 busy1324 0 motornotbusy1324
	SLEEP
	JR motorwaiting1324
  motornotbusy1324:
    MOVEF_F 360.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1325:
    CALL MOTOR.STOP 'bc' 'true'
  else1323_1:
  endif1323:
    JR_NEQF VCOLOR3_M 5.0 else1327_1
    WRITE32 ENDSUB_PR:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1328:
    CALL MOTOR.RESETCOUNT 'bc'
  while1330:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1334
    DATA8 flag1334
    DIVF F.1 2.0 tmpf1334
    CP_EQF 0.0 2.0 flag1334
    SELECTF flag1334 0.0 tmpf1334 F.0

    JR_GTEQF F.0 400.0 endwhile1330
  whilebody1330:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1335:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1339
    DATA8 flag1339
    DIVF F.1 2.0 tmpf1339
    CP_EQF 0.0 2.0 flag1339
    SELECTF flag1339 0.0 tmpf1339 F.0

    JR_LTF F.0 400.0 whilebody1330
  endwhile1330:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 tmp1341
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1341
    JR_NEQ32 0 tmp1341 alreadylaunched1341
    OBJECT_START TVIDVIG
  alreadylaunched1341:
    WRITE32 ENDSUB_NPL:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1342:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1343:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1344
	DATA8 nos1344
	DATA8 busy1344
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1344 nos1344
	JR_EQ8 0 nos1344 motornotbusy1344
  motorwaiting1344:
	OUTPUT_TEST layer1344 nos1344 busy1344
	JR_EQ8 busy1344 0 motornotbusy1344
	SLEEP
	JR motorwaiting1344
  motornotbusy1344:
    WRITE32 ENDSUB_A3:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1345:
    WRITE32 ENDSUB_A2:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1346:
  while1347:
    JR_LTEQF VS3_M 10.0 and1349
    JR_GTF VS2_M 10.0 or1348
  and1349:
    JR_GTEQF VS3_M 10.0 endwhile1347
    JR_GTEQF VS2_M 10.0 endwhile1347
  or1348:
  whilebody1347:
    WRITE32 ENDSUB_A3:CALLSUB1350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1350:
    WRITE32 ENDSUB_A2:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1351:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1352:
    JR_LTEQF VS3_M 10.0 and1353
    JR_GTF VS2_M 10.0 whilebody1347
  and1353:
    JR_GTEQF VS3_M 10.0 and1354
    JR_LTF VS2_M 10.0 whilebody1347
  and1354:
  endwhile1347:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1327_1:
  endif1327:
    WRITE32 ENDSUB_HSV_100:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1357:
    JR_GTEQF VV_M 0.022 else1358_1
    MOVEF_F 5.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1358
  else1358_1:
    MOVEF_F 4.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1358_2:
  endif1358:
    JR_NEQF VCOLOR4_M 4.0 else1361_1
    MOVEF_F 4.0 VO_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1362
	DATA8 nos1362
	DATA8 busy1362
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1362 nos1362
	JR_EQ8 0 nos1362 motornotbusy1362
  motorwaiting1362:
	OUTPUT_TEST layer1362 nos1362 busy1362
	JR_EQ8 busy1362 0 motornotbusy1362
	SLEEP
	JR motorwaiting1362
  motornotbusy1362:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 400.0 'true'

	DATA8 layer1363
	DATA8 nos1363
	DATA8 busy1363
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1363 nos1363
	JR_EQ8 0 nos1363 motornotbusy1363
  motorwaiting1363:
	OUTPUT_TEST layer1363 nos1363 busy1363
	JR_EQ8 busy1363 0 motornotbusy1363
	SLEEP
	JR motorwaiting1363
  motornotbusy1363:
    WRITE32 ENDSUB_A3:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1364:
    WRITE32 ENDSUB_A2:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1365:
  while1366:
    JR_LTEQF VS3_M 60.0 endwhile1366
  whilebody1366:
    WRITE32 ENDSUB_A3:CALLSUB1367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1367:
    WRITE32 ENDSUB_A2:CALLSUB1368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1368:
    CALL MOTOR.STARTSYNC 'bc' 0.0 20.0
    JR_GTF VS3_M 60.0 whilebody1366
  endwhile1366:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1371:
    WRITE32 ENDSUB_A2:CALLSUB1372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1372:
  while1373:
    JR_LTEQF VS3_M 15.0 and1375
    JR_GTF VS2_M 15.0 or1374
  and1375:
    JR_GTEQF VS3_M 15.0 endwhile1373
    JR_GTEQF VS2_M 15.0 endwhile1373
  or1374:
  whilebody1373:
    WRITE32 ENDSUB_A3:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1376:
    WRITE32 ENDSUB_A2:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1377:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1378:
    JR_LTEQF VS3_M 15.0 and1379
    JR_GTF VS2_M 15.0 whilebody1373
  and1379:
    JR_GTEQF VS3_M 15.0 and1380
    JR_LTF VS2_M 15.0 whilebody1373
  and1380:
  endwhile1373:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1382
	DATA8 nos1382
	DATA8 busy1382
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1382 nos1382
	JR_EQ8 0 nos1382 motornotbusy1382
  motorwaiting1382:
	OUTPUT_TEST layer1382 nos1382 busy1382
	JR_EQ8 busy1382 0 motornotbusy1382
	SLEEP
	JR motorwaiting1382
  motornotbusy1382:
    WRITE32 ENDSUB_A3:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1383:
    WRITE32 ENDSUB_A2:CALLSUB1384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1384:
  while1385:
    JR_LTEQF VS3_M 15.0 and1387
    JR_GTF VS2_M 15.0 or1386
  and1387:
    JR_GTEQF VS3_M 15.0 endwhile1385
    JR_GTEQF VS2_M 15.0 endwhile1385
  or1386:
  whilebody1385:
    WRITE32 ENDSUB_A3:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1388:
    WRITE32 ENDSUB_A2:CALLSUB1389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1389:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1390:
    JR_LTEQF VS3_M 15.0 and1391
    JR_GTF VS2_M 15.0 whilebody1385
  and1391:
    JR_GTEQF VS3_M 15.0 and1392
    JR_LTF VS2_M 15.0 whilebody1385
  and1392:
  endwhile1385:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1394
	DATA8 nos1394
	DATA8 busy1394
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1394 nos1394
	JR_EQ8 0 nos1394 motornotbusy1394
  motorwaiting1394:
	OUTPUT_TEST layer1394 nos1394 busy1394
	JR_EQ8 busy1394 0 motornotbusy1394
	SLEEP
	JR motorwaiting1394
  motornotbusy1394:
    WRITE32 ENDSUB_A3:CALLSUB1395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1395:
    WRITE32 ENDSUB_A2:CALLSUB1396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1396:
  while1397:
    JR_LTEQF VS3_M 15.0 and1399
    JR_GTF VS2_M 15.0 or1398
  and1399:
    JR_GTEQF VS3_M 15.0 endwhile1397
    JR_GTEQF VS2_M 15.0 endwhile1397
  or1398:
  whilebody1397:
    WRITE32 ENDSUB_A3:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1400:
    WRITE32 ENDSUB_A2:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1401:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1402:
    JR_LTEQF VS3_M 15.0 and1403
    JR_GTF VS2_M 15.0 whilebody1397
  and1403:
    JR_GTEQF VS3_M 15.0 and1404
    JR_LTF VS2_M 15.0 whilebody1397
  and1404:
  endwhile1397:
    CALL MOTOR.STOP 'bc' 'true'
  else1361_1:
  endif1361:
    JR_NEQF VCOLOR4_M 5.0 else1406_1
    WRITE32 ENDSUB_PR:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1407:
    CALL MOTOR.RESETCOUNT 'bc'
  while1409:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1413
    DATA8 flag1413
    DIVF F.1 2.0 tmpf1413
    CP_EQF 0.0 2.0 flag1413
    SELECTF flag1413 0.0 tmpf1413 F.0

    JR_GTEQF F.0 450.0 endwhile1409
  whilebody1409:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1414:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1418
    DATA8 flag1418
    DIVF F.1 2.0 tmpf1418
    CP_EQF 0.0 2.0 flag1418
    SELECTF flag1418 0.0 tmpf1418 F.0

    JR_LTF F.0 450.0 whilebody1409
  endwhile1409:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1420:
    WRITE32 ENDSUB_A3:CALLSUB1421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1421:
    WRITE32 ENDSUB_A2:CALLSUB1422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1422:
  while1423:
    JR_LTEQF VS3_M 10.0 and1425
    JR_GTF VS2_M 10.0 or1424
  and1425:
    JR_GTEQF VS3_M 10.0 endwhile1423
    JR_GTEQF VS2_M 10.0 endwhile1423
  or1424:
  whilebody1423:
    WRITE32 ENDSUB_A3:CALLSUB1426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1426:
    WRITE32 ENDSUB_A2:CALLSUB1427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1427:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1428:
    JR_LTEQF VS3_M 10.0 and1429
    JR_GTF VS2_M 10.0 whilebody1423
  and1429:
    JR_GTEQF VS3_M 10.0 and1430
    JR_LTF VS2_M 10.0 whilebody1423
  and1430:
  endwhile1423:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1406_1:
  endif1406:
    WRITE32 ENDSUB_HSV_100:CALLSUB1433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1433:
    JR_LTF VV_M 0.01178 or1435
    JR_NEQF VH_M 30.0 else1434_1
  or1435:
    MOVEF_F 5.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1434
  else1434_1:
    MOVEF_F 4.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1434_2:
  endif1434:
    JR_NEQF VCOLOR5_M 4.0 else1438_1
    MOVEF_F 5.0 VO_M
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1439
	DATA8 nos1439
	DATA8 busy1439
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1439 nos1439
	JR_EQ8 0 nos1439 motornotbusy1439
  motorwaiting1439:
	OUTPUT_TEST layer1439 nos1439 busy1439
	JR_EQ8 busy1439 0 motornotbusy1439
	SLEEP
	JR motorwaiting1439
  motornotbusy1439:
    MOVEF_F 520.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1440:
    WRITE32 ENDSUB_PR:CALLSUB1441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1441:
    CALL MOTOR.RESETCOUNT 'bc'
  while1443:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1447
    DATA8 flag1447
    DIVF F.1 2.0 tmpf1447
    CP_EQF 0.0 2.0 flag1447
    SELECTF flag1447 0.0 tmpf1447 F.0

    JR_GTEQF F.0 400.0 endwhile1443
  whilebody1443:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1448:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1452
    DATA8 flag1452
    DIVF F.1 2.0 tmpf1452
    CP_EQF 0.0 2.0 flag1452
    SELECTF flag1452 0.0 tmpf1452 F.0

    JR_LTF F.0 400.0 whilebody1443
  endwhile1443:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1454:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1455:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1456
	DATA8 nos1456
	DATA8 busy1456
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1456 nos1456
	JR_EQ8 0 nos1456 motornotbusy1456
  motorwaiting1456:
	OUTPUT_TEST layer1456 nos1456 busy1456
	JR_EQ8 busy1456 0 motornotbusy1456
	SLEEP
	JR motorwaiting1456
  motornotbusy1456:
    PROGRAM_STOP -1
  else1438_1:
  endif1438:
    JR_NEQF VCOLOR5_M 5.0 else1458_1
    WRITE32 ENDSUB_PR:CALLSUB1459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1459:
    CALL MOTOR.RESETCOUNT 'bc'
  while1461:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1465
    DATA8 flag1465
    DIVF F.1 2.0 tmpf1465
    CP_EQF 0.0 2.0 flag1465
    SELECTF flag1465 0.0 tmpf1465 F.0

    JR_GTEQF F.0 700.0 endwhile1461
  whilebody1461:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1466:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1470
    DATA8 flag1470
    DIVF F.1 2.0 tmpf1470
    CP_EQF 0.0 2.0 flag1470
    SELECTF flag1470 0.0 tmpf1470 F.0

    JR_LTF F.0 700.0 whilebody1461
  endwhile1461:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1472:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1473:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1474
	DATA8 nos1474
	DATA8 busy1474
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1474 nos1474
	JR_EQ8 0 nos1474 motornotbusy1474
  motorwaiting1474:
	OUTPUT_TEST layer1474 nos1474 busy1474
	JR_EQ8 busy1474 0 motornotbusy1474
	SLEEP
	JR motorwaiting1474
  motornotbusy1474:
    PROGRAM_STOP -1
  else1458_1:
  endif1458:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1477
	DATA8 nos1477
	DATA8 busy1477
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1477 nos1477
	JR_EQ8 0 nos1477 motornotbusy1477
  motorwaiting1477:
	OUTPUT_TEST layer1477 nos1477 busy1477
	JR_EQ8 busy1477 0 motornotbusy1477
	SLEEP
	JR motorwaiting1477
  motornotbusy1477:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1478
	DATA8 nos1478
	DATA8 busy1478
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1478 nos1478
	JR_EQ8 0 nos1478 motornotbusy1478
  motorwaiting1478:
	OUTPUT_TEST layer1478 nos1478 busy1478
	JR_EQ8 busy1478 0 motornotbusy1478
	SLEEP
	JR motorwaiting1478
  motornotbusy1478:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1480
	DATA8 nos1480
	DATA8 busy1480
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1480 nos1480
	JR_EQ8 0 nos1480 motornotbusy1480
  motorwaiting1480:
	OUTPUT_TEST layer1480 nos1480 busy1480
	JR_EQ8 busy1480 0 motornotbusy1480
	SLEEP
	JR motorwaiting1480
  motornotbusy1480:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1481
	DATA8 nos1481
	DATA8 busy1481
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1481 nos1481
	JR_EQ8 0 nos1481 motornotbusy1481
  motorwaiting1481:
	OUTPUT_TEST layer1481 nos1481 busy1481
	JR_EQ8 busy1481 0 motornotbusy1481
	SLEEP
	JR motorwaiting1481
  motornotbusy1481:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1483
    DATA8 flag1483
    DIVF 360.0 VL_M tmpf1483
    CP_EQF 0.0 VL_M flag1483
    SELECTF flag1483 0.0 tmpf1483 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1486:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1486
  whilebody1486:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1488:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1486
  endwhile1486:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1491:
    ADDF VC_M 1.0 VC_M
    DATA32 tmp1493
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1493
    JR_NEQ32 0 tmp1493 alreadylaunched1493
    OBJECT_START TVIDVIG
  alreadylaunched1493:
ENDTHREAD:
    RETURN
SUB_US:
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf6
    DATA8 flag6
    DIVF 360.0 VL_M tmpf6
    CP_EQF 0.0 VL_M flag6
    SELECTF flag6 0.0 tmpf6 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while9:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf13
    DATA8 flag13
    DIVF F.1 2.0 tmpf13
    CP_EQF 0.0 2.0 flag13
    SELECTF flag13 0.0 tmpf13 F.0

    JR_GTEQF F.0 VX_M endwhile9
  whilebody9:
    WRITE32 ENDSUB_A3:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB14:
    WRITE32 ENDSUB_A2:CALLSUB15 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB15:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB16:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf20
    DATA8 flag20
    DIVF F.1 2.0 tmpf20
    CP_EQF 0.0 2.0 flag20
    SELECTF flag20 0.0 tmpf20 F.0

    JR_LTF F.0 VX_M whilebody9
  endwhile9:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB22:
    WRITE32 ENDSUB_A2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB23:
  while24:
    JR_LTEQF VS3_M 15.0 and26
    JR_GTF VS2_M 15.0 or25
  and26:
    JR_GTEQF VS3_M 15.0 endwhile24
    JR_GTEQF VS2_M 15.0 endwhile24
  or25:
  whilebody24:
    WRITE32 ENDSUB_A3:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB27:
    WRITE32 ENDSUB_A2:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB28:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB29:
    JR_LTEQF VS3_M 15.0 and30
    JR_GTF VS2_M 15.0 whilebody24
  and30:
    JR_GTEQF VS3_M 15.0 and31
    JR_LTF VS2_M 15.0 whilebody24
  and31:
  endwhile24:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_US:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_US:
SUB_PL:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer33
	DATA8 nos33
	DATA8 busy33
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer33 nos33
	JR_EQ8 0 nos33 motornotbusy33
  motorwaiting33:
	OUTPUT_TEST layer33 nos33 busy33
	JR_EQ8 busy33 0 motornotbusy33
	SLEEP
	JR motorwaiting33
  motornotbusy33:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB35:
    WRITE32 ENDSUB_A2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB36:
  while37:
    JR_LTEQF VS2_M 15.0 endwhile37
  whilebody37:
    WRITE32 ENDSUB_A3:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB38:
    WRITE32 ENDSUB_A2:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB39:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 15.0 whilebody37
  endwhile37:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB42:
    WRITE32 ENDSUB_A2:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB43:
  while44:
    JR_GTEQF VS2_M 15.0 endwhile44
  whilebody44:
    WRITE32 ENDSUB_A3:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB45:
    WRITE32 ENDSUB_A2:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB46:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody44
  endwhile44:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PL:
SUB_PR:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 80.0 'true'

	DATA8 layer49
	DATA8 nos49
	DATA8 busy49
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer49 nos49
	JR_EQ8 0 nos49 motornotbusy49
  motorwaiting49:
	OUTPUT_TEST layer49 nos49 busy49
	JR_EQ8 busy49 0 motornotbusy49
	SLEEP
	JR motorwaiting49
  motornotbusy49:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB51:
    WRITE32 ENDSUB_A2:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB52:
  while53:
    JR_LTEQF VS3_M 15.0 endwhile53
  whilebody53:
    WRITE32 ENDSUB_A3:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB54:
    WRITE32 ENDSUB_A2:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB55:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 15.0 whilebody53
  endwhile53:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB58:
    WRITE32 ENDSUB_A2:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB59:
  while60:
    JR_GTEQF VS3_M 15.0 endwhile60
  whilebody60:
    WRITE32 ENDSUB_A3:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB61:
    WRITE32 ENDSUB_A2:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB62:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody60
  endwhile60:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PR:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PR:
SUB_NPL:
    WRITE32 ENDSUB_A2:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB65:
    WRITE32 ENDSUB_A3:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB66:
  while67:
    JR_LTEQF VS3_M 10.0 and69
    JR_GTF VS2_M 10.0 or68
  and69:
    JR_GTEQF VS3_M 10.0 and70
    JR_GTF VS2_M 10.0 or68
  and70:
    JR_LTEQF VS3_M 10.0 endwhile67
    JR_GTEQF VS2_M 10.0 endwhile67
  or68:
  whilebody67:
    WRITE32 ENDSUB_A2:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB71:
    WRITE32 ENDSUB_A3:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB72:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 10.0 and74
    JR_GTF VS2_M 10.0 whilebody67
  and74:
    JR_GTEQF VS3_M 10.0 and75
    JR_GTF VS2_M 10.0 whilebody67
  and75:
    JR_LTEQF VS3_M 10.0 and76
    JR_LTF VS2_M 10.0 whilebody67
  and76:
  endwhile67:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer78
	DATA8 nos78
	DATA8 busy78
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer78 nos78
	JR_EQ8 0 nos78 motornotbusy78
  motorwaiting78:
	OUTPUT_TEST layer78 nos78 busy78
	JR_EQ8 busy78 0 motornotbusy78
	SLEEP
	JR motorwaiting78
  motornotbusy78:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 90.0 'true'

	DATA8 layer80
	DATA8 nos80
	DATA8 busy80
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer80 nos80
	JR_EQ8 0 nos80 motornotbusy80
  motorwaiting80:
	OUTPUT_TEST layer80 nos80 busy80
	JR_EQ8 busy80 0 motornotbusy80
	SLEEP
	JR motorwaiting80
  motornotbusy80:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB82:
    WRITE32 ENDSUB_A2:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB83:
  while84:
    JR_LTEQF VS2_M 10.0 endwhile84
  whilebody84:
    WRITE32 ENDSUB_A3:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB85:
    WRITE32 ENDSUB_A2:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB86:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 10.0 whilebody84
  endwhile84:
    WRITE32 ENDSUB_A3:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB88:
    WRITE32 ENDSUB_A2:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB89:
  while90:
    JR_GTEQF VS2_M 60.0 endwhile90
  whilebody90:
    WRITE32 ENDSUB_A3:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB91:
    WRITE32 ENDSUB_A2:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB92:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 60.0 whilebody90
  endwhile90:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPL:
SUB_NPP:
    WRITE32 ENDSUB_A2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB95:
    WRITE32 ENDSUB_A3:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB96:
  while97:
    JR_LTEQF VS3_M 10.0 and99
    JR_GTF VS2_M 10.0 or98
  and99:
    JR_GTEQF VS3_M 10.0 and100
    JR_GTF VS2_M 10.0 or98
  and100:
    JR_LTEQF VS3_M 10.0 endwhile97
    JR_GTEQF VS2_M 10.0 endwhile97
  or98:
  whilebody97:
    WRITE32 ENDSUB_A2:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB101:
    WRITE32 ENDSUB_A3:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB102:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 10.0 and104
    JR_GTF VS2_M 10.0 whilebody97
  and104:
    JR_GTEQF VS3_M 10.0 and105
    JR_GTF VS2_M 10.0 whilebody97
  and105:
    JR_LTEQF VS3_M 10.0 and106
    JR_LTF VS2_M 10.0 whilebody97
  and106:
  endwhile97:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer108
	DATA8 nos108
	DATA8 busy108
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer108 nos108
	JR_EQ8 0 nos108 motornotbusy108
  motorwaiting108:
	OUTPUT_TEST layer108 nos108 busy108
	JR_EQ8 busy108 0 motornotbusy108
	SLEEP
	JR motorwaiting108
  motornotbusy108:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB112:
    WRITE32 ENDSUB_A2:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB113:
  while114:
    JR_LTEQF VS3_M 10.0 endwhile114
  whilebody114:
    WRITE32 ENDSUB_A3:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB115:
    WRITE32 ENDSUB_A2:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB116:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody114
  endwhile114:
    WRITE32 ENDSUB_A3:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB118:
    WRITE32 ENDSUB_A2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB119:
  while120:
    JR_GTEQF VS3_M 60.0 endwhile120
  whilebody120:
    WRITE32 ENDSUB_A3:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB121:
    WRITE32 ENDSUB_A2:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB122:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody120
  endwhile120:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPP:
SUB_REDL:
    DATA32 tmp125
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp125
    JR_NEQ32 0 tmp125 alreadylaunched125
    OBJECT_START TZADVIG
  alreadylaunched125:
    WRITE32 ENDSUB_A3:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB126:
    WRITE32 ENDSUB_A2:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB127:
  while128:
    JR_LTEQF VS3_M 10.0 and130
    JR_GTF VS2_M 10.0 or129
  and130:
    JR_GTEQF VS3_M 10.0 and131
    JR_GTF VS2_M 10.0 or129
  and131:
    JR_LTEQF VS3_M 10.0 endwhile128
    JR_GTEQF VS2_M 10.0 endwhile128
  or129:
  whilebody128:
    WRITE32 ENDSUB_A3:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB132:
    WRITE32 ENDSUB_A2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB133:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB134:
    JR_LTEQF VS3_M 10.0 and135
    JR_GTF VS2_M 10.0 whilebody128
  and135:
    JR_GTEQF VS3_M 10.0 and136
    JR_GTF VS2_M 10.0 whilebody128
  and136:
    JR_LTEQF VS3_M 10.0 and137
    JR_LTF VS2_M 10.0 whilebody128
  and137:
  endwhile128:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer140
	DATA8 nos140
	DATA8 busy140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer140 nos140
	JR_EQ8 0 nos140 motornotbusy140
  motorwaiting140:
	OUTPUT_TEST layer140 nos140 busy140
	JR_EQ8 busy140 0 motornotbusy140
	SLEEP
	JR motorwaiting140
  motornotbusy140:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_A2:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB143:
    WRITE32 ENDSUB_A3:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB144:
  while145:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile145
  whilebody145:
    WRITE32 ENDSUB_A2:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB147:
    WRITE32 ENDSUB_A3:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB148:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB149:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody145
  endwhile145:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds153
	MOVEF_32 500.0 milliseconds153
	DATA32 timer153
	TIMER_WAIT milliseconds153 timer153
	TIMER_READY timer153
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer156
	DATA8 nos156
	DATA8 busy156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer156 nos156
	JR_EQ8 0 nos156 motornotbusy156
  motorwaiting156:
	OUTPUT_TEST layer156 nos156 busy156
	JR_EQ8 busy156 0 motornotbusy156
	SLEEP
	JR motorwaiting156
  motornotbusy156:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 300.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB159:
    WRITE32 ENDSUB_A2:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB160:
  while161:
    JR_LTEQF VS3_M 15.0 endwhile161
  whilebody161:
    WRITE32 ENDSUB_A3:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB162:
    WRITE32 ENDSUB_A2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB163:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 15.0 whilebody161
  endwhile161:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB166:
    WRITE32 ENDSUB_A2:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB167:
  while168:
    JR_GTEQF VS3_M 15.0 endwhile168
  whilebody168:
    WRITE32 ENDSUB_A3:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB169:
    WRITE32 ENDSUB_A2:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB170:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody168
  endwhile168:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds173
	MOVEF_32 100.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.RESETCOUNT 'bc'
  while175:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf179
    DATA8 flag179
    DIVF F.1 2.0 tmpf179
    CP_EQF 0.0 2.0 flag179
    SELECTF flag179 0.0 tmpf179 F.0

    JR_GTEQF F.0 100.0 endwhile175
  whilebody175:
    WRITE32 ENDSUB_A3:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB180:
    WRITE32 ENDSUB_A2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB181:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB182:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf186
    DATA8 flag186
    DIVF F.1 2.0 tmpf186
    CP_EQF 0.0 2.0 flag186
    SELECTF flag186 0.0 tmpf186 F.0

    JR_LTF F.0 100.0 whilebody175
  endwhile175:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB188:
    WRITE32 ENDSUB_A2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB189:
  while190:
    JR_LTEQF VS3_M 10.0 and192
    JR_GTF VS2_M 10.0 or191
  and192:
    JR_GTEQF VS3_M 10.0 endwhile190
    JR_GTEQF VS2_M 10.0 endwhile190
  or191:
  whilebody190:
    WRITE32 ENDSUB_A3:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB193:
    WRITE32 ENDSUB_A2:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB194:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB195:
    JR_LTEQF VS3_M 10.0 and196
    JR_GTF VS2_M 10.0 whilebody190
  and196:
    JR_GTEQF VS3_M 10.0 and197
    JR_LTF VS2_M 10.0 whilebody190
  and197:
  endwhile190:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_REDL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_REDL:
SUB_BELLAM:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer199
	DATA8 nos199
	DATA8 busy199
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer199 nos199
	JR_EQ8 0 nos199 motornotbusy199
  motorwaiting199:
	OUTPUT_TEST layer199 nos199 busy199
	JR_EQ8 busy199 0 motornotbusy199
	SLEEP
	JR motorwaiting199
  motornotbusy199:
    CALL MOTOR.RESETCOUNT 'bc'
  while201:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf205
    DATA8 flag205
    DIVF F.1 2.0 tmpf205
    CP_EQF 0.0 2.0 flag205
    SELECTF flag205 0.0 tmpf205 F.0

    JR_GTEQF F.0 100.0 endwhile201
  whilebody201:
    WRITE32 ENDSUB_A3:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB206:
    WRITE32 ENDSUB_A2:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB207:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB208:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf212
    DATA8 flag212
    DIVF F.1 2.0 tmpf212
    CP_EQF 0.0 2.0 flag212
    SELECTF flag212 0.0 tmpf212 F.0

    JR_LTF F.0 100.0 whilebody201
  endwhile201:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 70.0 'true'

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 125.0 'true'

	DATA8 layer214
	DATA8 nos214
	DATA8 busy214
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer214 nos214
	JR_EQ8 0 nos214 motornotbusy214
  motorwaiting214:
	OUTPUT_TEST layer214 nos214 busy214
	JR_EQ8 busy214 0 motornotbusy214
	SLEEP
	JR motorwaiting214
  motornotbusy214:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds216
	MOVEF_32 500.0 milliseconds216
	DATA32 timer216
	TIMER_WAIT milliseconds216 timer216
	TIMER_READY timer216
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 125.0 'true'

	DATA8 layer218
	DATA8 nos218
	DATA8 busy218
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer218 nos218
	JR_EQ8 0 nos218 motornotbusy218
  motorwaiting218:
	OUTPUT_TEST layer218 nos218 busy218
	JR_EQ8 busy218 0 motornotbusy218
	SLEEP
	JR motorwaiting218
  motornotbusy218:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 0.0 70.0 'true'

	DATA8 layer219
	DATA8 nos219
	DATA8 busy219
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer219 nos219
	JR_EQ8 0 nos219 motornotbusy219
  motorwaiting219:
	OUTPUT_TEST layer219 nos219 busy219
	JR_EQ8 busy219 0 motornotbusy219
	SLEEP
	JR motorwaiting219
  motornotbusy219:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 60.0 'true'

	DATA8 layer220
	DATA8 nos220
	DATA8 busy220
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer220 nos220
	JR_EQ8 0 nos220 motornotbusy220
  motorwaiting220:
	OUTPUT_TEST layer220 nos220 busy220
	JR_EQ8 busy220 0 motornotbusy220
	SLEEP
	JR motorwaiting220
  motornotbusy220:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 230.0 'true'

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    WRITE32 ENDSUB_A2:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB222:
    WRITE32 ENDSUB_A3:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB223:
  while224:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 55.0 endwhile224
  whilebody224:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody224
  endwhile224:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer229
	DATA8 nos229
	DATA8 busy229
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer229 nos229
	JR_EQ8 0 nos229 motornotbusy229
  motorwaiting229:
	OUTPUT_TEST layer229 nos229 busy229
	JR_EQ8 busy229 0 motornotbusy229
	SLEEP
	JR motorwaiting229
  motornotbusy229:
    CALL MOTOR.RESETCOUNT 'bc'
  while231:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf235
    DATA8 flag235
    DIVF F.1 2.0 tmpf235
    CP_EQF 0.0 2.0 flag235
    SELECTF flag235 0.0 tmpf235 F.0

    JR_GTEQF F.0 475.0 endwhile231
  whilebody231:
    WRITE32 ENDSUB_A3:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB236:
    WRITE32 ENDSUB_A2:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB237:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB238:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf242
    DATA8 flag242
    DIVF F.1 2.0 tmpf242
    CP_EQF 0.0 2.0 flag242
    SELECTF flag242 0.0 tmpf242 F.0

    JR_LTF F.0 475.0 whilebody231
  endwhile231:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds245
	MOVEF_32 500.0 milliseconds245
	DATA32 timer245
	TIMER_WAIT milliseconds245 timer245
	TIMER_READY timer245
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -50.0 -50.0 160.0 'true'

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    WRITE32 ENDSUB_A3:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB248:
    WRITE32 ENDSUB_A2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB249:
  while250:
    JR_LTEQF VS3_M 10.0 endwhile250
  whilebody250:
    WRITE32 ENDSUB_A3:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB251:
    WRITE32 ENDSUB_A2:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB252:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody250
  endwhile250:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB255:
    WRITE32 ENDSUB_A2:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB256:
  while257:
    JR_GTEQF VS3_M 15.0 endwhile257
  whilebody257:
    WRITE32 ENDSUB_A3:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB258:
    WRITE32 ENDSUB_A2:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB259:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody257
  endwhile257:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while263:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile263
  whilebody263:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB265:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody263
  endwhile263:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB268:
    WRITE32 ENDSUB_A2:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB269:
    MOVEF_F 1.0 VI_M
  for270:
    JR_GTF VI_M 1.0 endfor270
  forbody270:
    WRITE32 ENDSUB_A3:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB271:
    WRITE32 ENDSUB_A2:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB272:
  while273:
    JR_LTEQF VS3_M 15.0 and275
    JR_GTF VS2_M 15.0 or274
  and275:
    JR_GTEQF VS3_M 15.0 endwhile273
    JR_GTEQF VS2_M 15.0 endwhile273
  or274:
  whilebody273:
    WRITE32 ENDSUB_A3:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB276:
    WRITE32 ENDSUB_A2:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB277:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB278:
    JR_LTEQF VS3_M 15.0 and279
    JR_GTF VS2_M 15.0 whilebody273
  and279:
    JR_GTEQF VS3_M 15.0 and280
    JR_LTF VS2_M 15.0 whilebody273
  and280:
  endwhile273:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody270
  endfor270:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB286:
    WRITE32 ENDSUB_A2:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB287:
    MOVEF_F 80.0 VJ_M
  while288:
    JR_LTEQF VS3_M 10.0 endwhile288
  whilebody288:
    WRITE32 ENDSUB_A3:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB289:
    WRITE32 ENDSUB_A2:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB290:
    JR_LTEQF VJ_M 30.0 else291_1
    SUBF VJ_M 0.1 VJ_M
  else291_1:
  endif291:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 10.0 whilebody288
  endwhile288:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB295:
    WRITE32 ENDSUB_A2:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB296:
    MOVEF_F 80.0 VJ_M
  while297:
    JR_GTEQF VS3_M 15.0 endwhile297
  whilebody297:
    WRITE32 ENDSUB_A3:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB298:
    WRITE32 ENDSUB_A2:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB299:
    JR_LTEQF VJ_M 30.0 else300_1
    SUBF VJ_M 0.1 VJ_M
  else300_1:
  endif300:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody297
  endwhile297:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while305:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf309
    DATA8 flag309
    DIVF F.1 2.0 tmpf309
    CP_EQF 0.0 2.0 flag309
    SELECTF flag309 0.0 tmpf309 F.0

    JR_GTEQF F.0 50.0 endwhile305
  whilebody305:
    WRITE32 ENDSUB_A3:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB310:
    WRITE32 ENDSUB_A2:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB311:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB312:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf316
    DATA8 flag316
    DIVF F.1 2.0 tmpf316
    CP_EQF 0.0 2.0 flag316
    SELECTF flag316 0.0 tmpf316 F.0

    JR_LTF F.0 50.0 whilebody305
  endwhile305:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds320
	MOVEF_32 500.0 milliseconds320
	DATA32 timer320
	TIMER_WAIT milliseconds320 timer320
	TIMER_READY timer320
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB322:
    WRITE32 ENDSUB_A3:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB323:
  while324:
    JR_LTEQF VS3_M 10.0 and326
    JR_GTF VS2_M 10.0 or325
  and326:
    JR_GTEQF VS3_M 10.0 and327
    JR_GTF VS2_M 10.0 or325
  and327:
    JR_LTEQF VS3_M 6.0 endwhile324
    JR_GTEQF VS2_M 6.0 endwhile324
  or325:
  whilebody324:
    WRITE32 ENDSUB_A2:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB328:
    WRITE32 ENDSUB_A3:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB329:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 10.0 and331
    JR_GTF VS2_M 10.0 whilebody324
  and331:
    JR_GTEQF VS3_M 10.0 and332
    JR_GTF VS2_M 10.0 whilebody324
  and332:
    JR_LTEQF VS3_M 6.0 and333
    JR_LTF VS2_M 6.0 whilebody324
  and333:
  endwhile324:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer335
	DATA8 nos335
	DATA8 busy335
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer335 nos335
	JR_EQ8 0 nos335 motornotbusy335
  motorwaiting335:
	OUTPUT_TEST layer335 nos335 busy335
	JR_EQ8 busy335 0 motornotbusy335
	SLEEP
	JR motorwaiting335
  motornotbusy335:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 90.0 'true'

	DATA8 layer337
	DATA8 nos337
	DATA8 busy337
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer337 nos337
	JR_EQ8 0 nos337 motornotbusy337
  motorwaiting337:
	OUTPUT_TEST layer337 nos337 busy337
	JR_EQ8 busy337 0 motornotbusy337
	SLEEP
	JR motorwaiting337
  motornotbusy337:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB339:
    WRITE32 ENDSUB_A2:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB340:
  while341:
    JR_LTEQF VS3_M 10.0 endwhile341
  whilebody341:
    WRITE32 ENDSUB_A3:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB342:
    WRITE32 ENDSUB_A2:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB343:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody341
  endwhile341:
    WRITE32 ENDSUB_A3:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB345:
    WRITE32 ENDSUB_A2:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB346:
  while347:
    JR_GTEQF VS3_M 60.0 endwhile347
  whilebody347:
    WRITE32 ENDSUB_A3:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB348:
    WRITE32 ENDSUB_A2:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB349:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody347
  endwhile347:
    CALL MOTOR.RESETCOUNT 'bc'
  while352:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 100.0 endwhile352
  whilebody352:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB354:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 100.0 whilebody352
  endwhile352:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB357:
    WRITE32 ENDSUB_A3:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB358:
  while359:
    JR_LTEQF VS3_M 10.0 and361
    JR_GTF VS2_M 10.0 or360
  and361:
    JR_LTEQF VS3_M 10.0 and362
    JR_LTF VS2_M 10.0 or360
  and362:
    JR_GTEQF VS3_M 10.0 endwhile359
    JR_LTEQF VS2_M 10.0 endwhile359
  or360:
  whilebody359:
    WRITE32 ENDSUB_A3:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB363:
    WRITE32 ENDSUB_A2:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB364:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB365:
    JR_LTEQF VS3_M 10.0 and366
    JR_GTF VS2_M 10.0 whilebody359
  and366:
    JR_LTEQF VS3_M 10.0 and367
    JR_LTF VS2_M 10.0 whilebody359
  and367:
    JR_GTEQF VS3_M 10.0 and368
    JR_GTF VS2_M 10.0 whilebody359
  and368:
  endwhile359:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer370
	DATA8 nos370
	DATA8 busy370
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer370 nos370
	JR_EQ8 0 nos370 motornotbusy370
  motorwaiting370:
	OUTPUT_TEST layer370 nos370 busy370
	JR_EQ8 busy370 0 motornotbusy370
	SLEEP
	JR motorwaiting370
  motornotbusy370:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB372:
    WRITE32 ENDSUB_A2:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB373:
  while374:
    JR_LTEQF VS3_M 10.0 endwhile374
  whilebody374:
    WRITE32 ENDSUB_A3:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB375:
    WRITE32 ENDSUB_A2:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB376:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody374
  endwhile374:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB379:
    WRITE32 ENDSUB_A2:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB380:
  while381:
    JR_GTEQF VS3_M 15.0 endwhile381
  whilebody381:
    WRITE32 ENDSUB_A3:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB382:
    WRITE32 ENDSUB_A2:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB383:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VS3_M 15.0 whilebody381
  endwhile381:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds386
	MOVEF_32 100.0 milliseconds386
	DATA32 timer386
	TIMER_WAIT milliseconds386 timer386
	TIMER_READY timer386
    WRITE32 ENDSUB_A3:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB387:
    WRITE32 ENDSUB_A2:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB388:
  while389:
    JR_LTEQF VS2_M 70.0 endwhile389
  whilebody389:
    WRITE32 ENDSUB_A3:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB390:
    WRITE32 ENDSUB_A2:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB391:
    CALL MOTOR.STARTSYNC 'bc' 20.0 0.0
    JR_GTF VS2_M 70.0 whilebody389
  endwhile389:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds394
	MOVEF_32 100.0 milliseconds394
	DATA32 timer394
	TIMER_WAIT milliseconds394 timer394
	TIMER_READY timer394
RETSUB_BELLAM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM:
SUB_BELLAM2:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer395
	DATA8 nos395
	DATA8 busy395
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer395 nos395
	JR_EQ8 0 nos395 motornotbusy395
  motorwaiting395:
	OUTPUT_TEST layer395 nos395 busy395
	JR_EQ8 busy395 0 motornotbusy395
	SLEEP
	JR motorwaiting395
  motornotbusy395:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 230.0 'true'

	DATA8 layer396
	DATA8 nos396
	DATA8 busy396
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer396 nos396
	JR_EQ8 0 nos396 motornotbusy396
  motorwaiting396:
	OUTPUT_TEST layer396 nos396 busy396
	JR_EQ8 busy396 0 motornotbusy396
	SLEEP
	JR motorwaiting396
  motornotbusy396:
    WRITE32 ENDSUB_A2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB397:
    WRITE32 ENDSUB_A3:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB398:
  while399:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile399
  whilebody399:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody399
  endwhile399:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB404:
    WRITE32 ENDSUB_A3:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB405:
  while406:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf410
    DATA8 flag410
    DIVF F.1 2.0 tmpf410
    CP_EQF 0.0 2.0 flag410
    SELECTF flag410 0.0 tmpf410 F.0

    JR_GTEQF F.0 80.0 endwhile406
  whilebody406:
    WRITE32 ENDSUB_A3:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB411:
    WRITE32 ENDSUB_A2:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB412:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB413:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf417
    DATA8 flag417
    DIVF F.1 2.0 tmpf417
    CP_EQF 0.0 2.0 flag417
    SELECTF flag417 0.0 tmpf417 F.0

    JR_LTF F.0 80.0 whilebody406
  endwhile406:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB419:
    WRITE32 ENDSUB_A2:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB420:
  while421:
    JR_LTEQF VS3_M 10.0 and423
    JR_GTF VS2_M 10.0 or422
  and423:
    JR_GTEQF VS3_M 10.0 endwhile421
    JR_GTEQF VS2_M 10.0 endwhile421
  or422:
  whilebody421:
    WRITE32 ENDSUB_A3:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB424:
    WRITE32 ENDSUB_A2:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB425:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB426:
    JR_LTEQF VS3_M 10.0 and427
    JR_GTF VS2_M 10.0 whilebody421
  and427:
    JR_GTEQF VS3_M 10.0 and428
    JR_LTF VS2_M 10.0 whilebody421
  and428:
  endwhile421:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer430
	DATA8 nos430
	DATA8 busy430
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer430 nos430
	JR_EQ8 0 nos430 motornotbusy430
  motorwaiting430:
	OUTPUT_TEST layer430 nos430 busy430
	JR_EQ8 busy430 0 motornotbusy430
	SLEEP
	JR motorwaiting430
  motornotbusy430:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB432:
    WRITE32 ENDSUB_A2:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB433:
  while434:
    JR_LTEQF VS3_M 10.0 endwhile434
  whilebody434:
    WRITE32 ENDSUB_A3:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB435:
    WRITE32 ENDSUB_A2:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB436:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_GTF VS3_M 10.0 whilebody434
  endwhile434:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB439:
    WRITE32 ENDSUB_A2:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB440:
  while441:
    JR_GTEQF VS3_M 15.0 endwhile441
  whilebody441:
    WRITE32 ENDSUB_A3:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB442:
    WRITE32 ENDSUB_A2:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB443:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_LTF VS3_M 15.0 whilebody441
  endwhile441:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB446:
    WRITE32 ENDSUB_A2:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB447:
    MOVEF_F 1.0 VI_M
  for448:
    JR_GTF VI_M 2.0 endfor448
  forbody448:
    WRITE32 ENDSUB_A3:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB449:
    WRITE32 ENDSUB_A2:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB450:
  while451:
    JR_LTEQF VS3_M 15.0 and453
    JR_GTF VS2_M 15.0 or452
  and453:
    JR_GTEQF VS3_M 15.0 endwhile451
    JR_GTEQF VS2_M 15.0 endwhile451
  or452:
  whilebody451:
    WRITE32 ENDSUB_A3:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB454:
    WRITE32 ENDSUB_A2:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB455:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB456:
    JR_LTEQF VS3_M 15.0 and457
    JR_GTF VS2_M 15.0 whilebody451
  and457:
    JR_GTEQF VS3_M 15.0 and458
    JR_LTF VS2_M 15.0 whilebody451
  and458:
  endwhile451:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer459
	DATA8 nos459
	DATA8 busy459
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer459 nos459
	JR_EQ8 0 nos459 motornotbusy459
  motorwaiting459:
	OUTPUT_TEST layer459 nos459 busy459
	JR_EQ8 busy459 0 motornotbusy459
	SLEEP
	JR motorwaiting459
  motornotbusy459:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 2.0 forbody448
  endfor448:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer461
	DATA8 nos461
	DATA8 busy461
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer461 nos461
	JR_EQ8 0 nos461 motornotbusy461
  motorwaiting461:
	OUTPUT_TEST layer461 nos461 busy461
	JR_EQ8 busy461 0 motornotbusy461
	SLEEP
	JR motorwaiting461
  motornotbusy461:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB463:
    WRITE32 ENDSUB_A2:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB464:
    MOVEF_F 80.0 VJ_M
  while465:
    JR_LTEQF VS3_M 10.0 endwhile465
  whilebody465:
    WRITE32 ENDSUB_A3:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB466:
    WRITE32 ENDSUB_A2:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB467:
    JR_LTEQF VJ_M 30.0 else468_1
    SUBF VJ_M 0.1 VJ_M
  else468_1:
  endif468:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 10.0 whilebody465
  endwhile465:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB472:
    WRITE32 ENDSUB_A2:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB473:
    MOVEF_F 80.0 VJ_M
  while474:
    JR_GTEQF VS3_M 15.0 endwhile474
  whilebody474:
    WRITE32 ENDSUB_A3:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB475:
    WRITE32 ENDSUB_A2:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB476:
    JR_LTEQF VJ_M 30.0 else477_1
    SUBF VJ_M 0.1 VJ_M
  else477_1:
  endif477:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody474
  endwhile474:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while482:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf486
    DATA8 flag486
    DIVF F.1 2.0 tmpf486
    CP_EQF 0.0 2.0 flag486
    SELECTF flag486 0.0 tmpf486 F.0

    JR_GTEQF F.0 50.0 endwhile482
  whilebody482:
    WRITE32 ENDSUB_A3:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB487:
    WRITE32 ENDSUB_A2:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB488:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB489:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf493
    DATA8 flag493
    DIVF F.1 2.0 tmpf493
    CP_EQF 0.0 2.0 flag493
    SELECTF flag493 0.0 tmpf493 F.0

    JR_LTF F.0 50.0 whilebody482
  endwhile482:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer495
	DATA8 nos495
	DATA8 busy495
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer495 nos495
	JR_EQ8 0 nos495 motornotbusy495
  motorwaiting495:
	OUTPUT_TEST layer495 nos495 busy495
	JR_EQ8 busy495 0 motornotbusy495
	SLEEP
	JR motorwaiting495
  motornotbusy495:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds497
	MOVEF_32 500.0 milliseconds497
	DATA32 timer497
	TIMER_WAIT milliseconds497 timer497
	TIMER_READY timer497
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while500:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf504
    DATA8 flag504
    DIVF F.1 2.0 tmpf504
    CP_EQF 0.0 2.0 flag504
    SELECTF flag504 0.0 tmpf504 F.0

    JR_LTEQF F.0 -250.0 endwhile500
  whilebody500:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf509
    DATA8 flag509
    DIVF F.1 2.0 tmpf509
    CP_EQF 0.0 2.0 flag509
    SELECTF flag509 0.0 tmpf509 F.0

    JR_GTF F.0 -250.0 whilebody500
  endwhile500:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 -60.0 210.0 'true'

	DATA8 layer511
	DATA8 nos511
	DATA8 busy511
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer511 nos511
	JR_EQ8 0 nos511 motornotbusy511
  motorwaiting511:
	OUTPUT_TEST layer511 nos511 busy511
	JR_EQ8 busy511 0 motornotbusy511
	SLEEP
	JR motorwaiting511
  motornotbusy511:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB513:
    WRITE32 ENDSUB_A3:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB514:
  while515:
    JR_LTEQF VS3_M 10.0 and517
    JR_GTF VS2_M 10.0 or516
  and517:
    JR_LTEQF VS3_M 10.0 and518
    JR_LTF VS2_M 10.0 or516
  and518:
    JR_GTEQF VS3_M 10.0 endwhile515
    JR_LTEQF VS2_M 10.0 endwhile515
  or516:
  whilebody515:
    WRITE32 ENDSUB_A2:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB519:
    WRITE32 ENDSUB_A3:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB520:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 10.0 and522
    JR_GTF VS2_M 10.0 whilebody515
  and522:
    JR_LTEQF VS3_M 10.0 and523
    JR_LTF VS2_M 10.0 whilebody515
  and523:
    JR_GTEQF VS3_M 10.0 and524
    JR_GTF VS2_M 10.0 whilebody515
  and524:
  endwhile515:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    WRITE32 ENDSUB_A3:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB527:
    WRITE32 ENDSUB_A2:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB528:
  while529:
    JR_LTEQF VS3_M 10.0 endwhile529
  whilebody529:
    WRITE32 ENDSUB_A3:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB530:
    WRITE32 ENDSUB_A2:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB531:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_GTF VS3_M 10.0 whilebody529
  endwhile529:
    WRITE32 ENDSUB_A3:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB533:
    WRITE32 ENDSUB_A2:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB534:
  while535:
    JR_GTEQF VS3_M 15.0 endwhile535
  whilebody535:
    WRITE32 ENDSUB_A3:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB536:
    WRITE32 ENDSUB_A2:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB537:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_LTF VS3_M 15.0 whilebody535
  endwhile535:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM2:
SUB_BELLAM3:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 90.0 'true'

	DATA8 layer540
	DATA8 nos540
	DATA8 busy540
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer540 nos540
	JR_EQ8 0 nos540 motornotbusy540
  motorwaiting540:
	OUTPUT_TEST layer540 nos540 busy540
	JR_EQ8 busy540 0 motornotbusy540
	SLEEP
	JR motorwaiting540
  motornotbusy540:
    CALL MOTOR.SCHEDULESYNC 'bc' -50.0 50.0 230.0 'true'

	DATA8 layer541
	DATA8 nos541
	DATA8 busy541
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer541 nos541
	JR_EQ8 0 nos541 motornotbusy541
  motorwaiting541:
	OUTPUT_TEST layer541 nos541 busy541
	JR_EQ8 busy541 0 motornotbusy541
	SLEEP
	JR motorwaiting541
  motornotbusy541:
    WRITE32 ENDSUB_A2:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB542:
    WRITE32 ENDSUB_A3:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB543:
  while544:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile544
  whilebody544:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody544
  endwhile544:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB549:
    WRITE32 ENDSUB_A3:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB550:
  while551:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf555
    DATA8 flag555
    DIVF F.1 2.0 tmpf555
    CP_EQF 0.0 2.0 flag555
    SELECTF flag555 0.0 tmpf555 F.0

    JR_GTEQF F.0 80.0 endwhile551
  whilebody551:
    WRITE32 ENDSUB_A3:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB556:
    WRITE32 ENDSUB_A2:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB557:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB558:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf562
    DATA8 flag562
    DIVF F.1 2.0 tmpf562
    CP_EQF 0.0 2.0 flag562
    SELECTF flag562 0.0 tmpf562 F.0

    JR_LTF F.0 80.0 whilebody551
  endwhile551:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB564:
    WRITE32 ENDSUB_A2:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB565:
  while566:
    JR_LTEQF VS3_M 10.0 and568
    JR_GTF VS2_M 10.0 or567
  and568:
    JR_GTEQF VS3_M 10.0 endwhile566
    JR_GTEQF VS2_M 10.0 endwhile566
  or567:
  whilebody566:
    WRITE32 ENDSUB_A3:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB569:
    WRITE32 ENDSUB_A2:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB570:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB571:
    JR_LTEQF VS3_M 10.0 and572
    JR_GTF VS2_M 10.0 whilebody566
  and572:
    JR_GTEQF VS3_M 10.0 and573
    JR_LTF VS2_M 10.0 whilebody566
  and573:
  endwhile566:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer575
	DATA8 nos575
	DATA8 busy575
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer575 nos575
	JR_EQ8 0 nos575 motornotbusy575
  motorwaiting575:
	OUTPUT_TEST layer575 nos575 busy575
	JR_EQ8 busy575 0 motornotbusy575
	SLEEP
	JR motorwaiting575
  motornotbusy575:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB577:
    WRITE32 ENDSUB_A2:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB578:
  while579:
    JR_LTEQF VS3_M 10.0 endwhile579
  whilebody579:
    WRITE32 ENDSUB_A3:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB580:
    WRITE32 ENDSUB_A2:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB581:
    CALL MOTOR.STARTSYNC 'bc' 50.0 -50.0
    JR_GTF VS3_M 10.0 whilebody579
  endwhile579:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB584:
    WRITE32 ENDSUB_A2:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB585:
  while586:
    JR_GTEQF VS3_M 15.0 endwhile586
  whilebody586:
    WRITE32 ENDSUB_A3:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB587:
    WRITE32 ENDSUB_A2:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB588:
    CALL MOTOR.STARTSYNC 'bc' 50.0 -50.0
    JR_LTF VS3_M 15.0 whilebody586
  endwhile586:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while592:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf596
    DATA8 flag596
    DIVF F.1 2.0 tmpf596
    CP_EQF 0.0 2.0 flag596
    SELECTF flag596 0.0 tmpf596 F.0

    JR_GTEQF F.0 100.0 endwhile592
  whilebody592:
    WRITE32 ENDSUB_A3:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB597:
    WRITE32 ENDSUB_A2:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB598:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB599:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf603
    DATA8 flag603
    DIVF F.1 2.0 tmpf603
    CP_EQF 0.0 2.0 flag603
    SELECTF flag603 0.0 tmpf603 F.0

    JR_LTF F.0 100.0 whilebody592
  endwhile592:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB605:
    WRITE32 ENDSUB_A2:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB606:
    MOVEF_F 1.0 VI_M
  for607:
    JR_GTF VI_M 3.0 endfor607
  forbody607:
    WRITE32 ENDSUB_A3:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB608:
    WRITE32 ENDSUB_A2:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB609:
  while610:
    JR_LTEQF VS3_M 15.0 and612
    JR_GTF VS2_M 15.0 or611
  and612:
    JR_GTEQF VS3_M 15.0 endwhile610
    JR_GTEQF VS2_M 15.0 endwhile610
  or611:
  whilebody610:
    WRITE32 ENDSUB_A3:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB613:
    WRITE32 ENDSUB_A2:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB614:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB615:
    JR_LTEQF VS3_M 15.0 and616
    JR_GTF VS2_M 15.0 whilebody610
  and616:
    JR_GTEQF VS3_M 15.0 and617
    JR_LTF VS2_M 15.0 whilebody610
  and617:
  endwhile610:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 50.0 'true'

	DATA8 layer618
	DATA8 nos618
	DATA8 busy618
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer618 nos618
	JR_EQ8 0 nos618 motornotbusy618
  motorwaiting618:
	OUTPUT_TEST layer618 nos618 busy618
	JR_EQ8 busy618 0 motornotbusy618
	SLEEP
	JR motorwaiting618
  motornotbusy618:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 3.0 forbody607
  endfor607:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 20.0 'true'

	DATA8 layer621
	DATA8 nos621
	DATA8 busy621
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer621 nos621
	JR_EQ8 0 nos621 motornotbusy621
  motorwaiting621:
	OUTPUT_TEST layer621 nos621 busy621
	JR_EQ8 busy621 0 motornotbusy621
	SLEEP
	JR motorwaiting621
  motornotbusy621:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -50.0 100.0 'true'

	DATA8 layer622
	DATA8 nos622
	DATA8 busy622
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer622 nos622
	JR_EQ8 0 nos622 motornotbusy622
  motorwaiting622:
	OUTPUT_TEST layer622 nos622 busy622
	JR_EQ8 busy622 0 motornotbusy622
	SLEEP
	JR motorwaiting622
  motornotbusy622:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -30.0 70.0 'true'

	DATA8 layer623
	DATA8 nos623
	DATA8 busy623
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer623 nos623
	JR_EQ8 0 nos623 motornotbusy623
  motorwaiting623:
	OUTPUT_TEST layer623 nos623 busy623
	JR_EQ8 busy623 0 motornotbusy623
	SLEEP
	JR motorwaiting623
  motornotbusy623:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 0.0 50.0 'true'

	DATA8 layer624
	DATA8 nos624
	DATA8 busy624
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer624 nos624
	JR_EQ8 0 nos624 motornotbusy624
  motorwaiting624:
	OUTPUT_TEST layer624 nos624 busy624
	JR_EQ8 busy624 0 motornotbusy624
	SLEEP
	JR motorwaiting624
  motornotbusy624:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -50.0 30.0 'true'

	DATA8 layer625
	DATA8 nos625
	DATA8 busy625
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer625 nos625
	JR_EQ8 0 nos625 motornotbusy625
  motorwaiting625:
	OUTPUT_TEST layer625 nos625 busy625
	JR_EQ8 busy625 0 motornotbusy625
	SLEEP
	JR motorwaiting625
  motornotbusy625:
    CALL MOTOR.RESETCOUNT 'bc'
  while627:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf631
    DATA8 flag631
    DIVF F.1 2.0 tmpf631
    CP_EQF 0.0 2.0 flag631
    SELECTF flag631 0.0 tmpf631 F.0

    JR_GTEQF F.0 50.0 endwhile627
  whilebody627:
    WRITE32 ENDSUB_A3:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB632:
    WRITE32 ENDSUB_A2:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB633:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB634:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf638
    DATA8 flag638
    DIVF F.1 2.0 tmpf638
    CP_EQF 0.0 2.0 flag638
    SELECTF flag638 0.0 tmpf638 F.0

    JR_LTF F.0 50.0 whilebody627
  endwhile627:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 50.0 'true'

	DATA8 layer640
	DATA8 nos640
	DATA8 busy640
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer640 nos640
	JR_EQ8 0 nos640 motornotbusy640
  motorwaiting640:
	OUTPUT_TEST layer640 nos640 busy640
	JR_EQ8 busy640 0 motornotbusy640
	SLEEP
	JR motorwaiting640
  motornotbusy640:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds642
	MOVEF_32 500.0 milliseconds642
	DATA32 timer642
	TIMER_WAIT milliseconds642 timer642
	TIMER_READY timer642
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 150.0 'true'

	DATA8 layer644
	DATA8 nos644
	DATA8 busy644
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer644 nos644
	JR_EQ8 0 nos644 motornotbusy644
  motorwaiting644:
	OUTPUT_TEST layer644 nos644 busy644
	JR_EQ8 busy644 0 motornotbusy644
	SLEEP
	JR motorwaiting644
  motornotbusy644:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -50.0 215.0 'true'

	DATA8 layer645
	DATA8 nos645
	DATA8 busy645
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer645 nos645
	JR_EQ8 0 nos645 motornotbusy645
  motorwaiting645:
	OUTPUT_TEST layer645 nos645 busy645
	JR_EQ8 busy645 0 motornotbusy645
	SLEEP
	JR motorwaiting645
  motornotbusy645:
    WRITE32 ENDSUB_A2:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB646:
    WRITE32 ENDSUB_A3:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB647:
  while648:
    JR_LTEQF VS3_M 10.0 and650
    JR_GTF VS2_M 10.0 or649
  and650:
    JR_GTEQF VS3_M 10.0 and651
    JR_GTF VS2_M 10.0 or649
  and651:
    JR_LTEQF VS3_M 10.0 endwhile648
    JR_GTEQF VS2_M 10.0 endwhile648
  or649:
  whilebody648:
    WRITE32 ENDSUB_A2:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB652:
    WRITE32 ENDSUB_A3:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB653:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 10.0 and655
    JR_GTF VS2_M 10.0 whilebody648
  and655:
    JR_GTEQF VS3_M 10.0 and656
    JR_GTF VS2_M 10.0 whilebody648
  and656:
    JR_LTEQF VS3_M 10.0 and657
    JR_LTF VS2_M 10.0 whilebody648
  and657:
  endwhile648:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB661:
    WRITE32 ENDSUB_A2:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB662:
  while663:
    JR_LTEQF VS3_M 10.0 endwhile663
  whilebody663:
    WRITE32 ENDSUB_A3:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB664:
    WRITE32 ENDSUB_A2:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB665:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody663
  endwhile663:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB668:
    WRITE32 ENDSUB_A2:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB669:
  while670:
    JR_GTEQF VS3_M 15.0 endwhile670
  whilebody670:
    WRITE32 ENDSUB_A3:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB671:
    WRITE32 ENDSUB_A2:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB672:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody670
  endwhile670:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VI_M
  for675:
    JR_GTF VI_M 1.0 endfor675
  forbody675:
    WRITE32 ENDSUB_A3:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB676:
    WRITE32 ENDSUB_A2:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB677:
  while678:
    JR_LTEQF VS3_M 10.0 and680
    JR_GTF VS2_M 10.0 or679
  and680:
    JR_GTEQF VS3_M 10.0 endwhile678
    JR_GTEQF VS2_M 10.0 endwhile678
  or679:
  whilebody678:
    WRITE32 ENDSUB_A3:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB681:
    WRITE32 ENDSUB_A2:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB682:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB683:
    JR_LTEQF VS3_M 10.0 and684
    JR_GTF VS2_M 10.0 whilebody678
  and684:
    JR_GTEQF VS3_M 10.0 and685
    JR_LTF VS2_M 10.0 whilebody678
  and685:
  endwhile678:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 50.0 'true'

	DATA8 layer687
	DATA8 nos687
	DATA8 busy687
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer687 nos687
	JR_EQ8 0 nos687 motornotbusy687
  motorwaiting687:
	OUTPUT_TEST layer687 nos687 busy687
	JR_EQ8 busy687 0 motornotbusy687
	SLEEP
	JR motorwaiting687
  motornotbusy687:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody675
  endfor675:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM3:
SUB_RED_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer690
	DATA8 nos690
	DATA8 busy690
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer690 nos690
	JR_EQ8 0 nos690 motornotbusy690
  motorwaiting690:
	OUTPUT_TEST layer690 nos690 busy690
	JR_EQ8 busy690 0 motornotbusy690
	SLEEP
	JR motorwaiting690
  motornotbusy690:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB692:
    WRITE32 ENDSUB_A2:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB693:
  while694:
    JR_LTEQF VS2_M 15.0 endwhile694
  whilebody694:
    WRITE32 ENDSUB_A3:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB695:
    WRITE32 ENDSUB_A2:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB696:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 15.0 whilebody694
  endwhile694:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB699:
    WRITE32 ENDSUB_A2:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB700:
  while701:
    JR_GTEQF VS2_M 15.0 endwhile701
  whilebody701:
    WRITE32 ENDSUB_A3:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB702:
    WRITE32 ENDSUB_A2:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB703:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody701
  endwhile701:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while708:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf712
    DATA8 flag712
    DIVF F.1 2.0 tmpf712
    CP_EQF 0.0 2.0 flag712
    SELECTF flag712 0.0 tmpf712 F.0

    JR_GTEQF F.0 270.0 endwhile708
  whilebody708:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB713:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf717
    DATA8 flag717
    DIVF F.1 2.0 tmpf717
    CP_EQF 0.0 2.0 flag717
    SELECTF flag717 0.0 tmpf717 F.0

    JR_LTF F.0 270.0 whilebody708
  endwhile708:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds719
	MOVEF_32 100.0 milliseconds719
	DATA32 timer719
	TIMER_WAIT milliseconds719 timer719
	TIMER_READY timer719
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer720
	DATA8 nos720
	DATA8 busy720
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer720 nos720
	JR_EQ8 0 nos720 motornotbusy720
  motorwaiting720:
	OUTPUT_TEST layer720 nos720 busy720
	JR_EQ8 busy720 0 motornotbusy720
	SLEEP
	JR motorwaiting720
  motornotbusy720:
    DATA32 tmp721
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp721
    JR_NEQ32 0 tmp721 alreadylaunched721
    OBJECT_START TVIDVIG
  alreadylaunched721:
    WRITE32 ENDSUB_NPL:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB722:
    WRITE32 ENDSUB_A3:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB723:
    WRITE32 ENDSUB_A2:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB724:
  while725:
    JR_LTEQF VS3_M 15.0 and727
    JR_GTF VS2_M 15.0 or726
  and727:
    JR_GTEQF VS3_M 15.0 endwhile725
    JR_GTEQF VS2_M 15.0 endwhile725
  or726:
  whilebody725:
    WRITE32 ENDSUB_A3:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB728:
    WRITE32 ENDSUB_A2:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB729:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB730:
    JR_LTEQF VS3_M 15.0 and731
    JR_GTF VS2_M 15.0 whilebody725
  and731:
    JR_GTEQF VS3_M 15.0 and732
    JR_LTF VS2_M 15.0 whilebody725
  and732:
  endwhile725:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer733
	DATA8 nos733
	DATA8 busy733
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer733 nos733
	JR_EQ8 0 nos733 motornotbusy733
  motorwaiting733:
	OUTPUT_TEST layer733 nos733 busy733
	JR_EQ8 busy733 0 motornotbusy733
	SLEEP
	JR motorwaiting733
  motornotbusy733:
    WRITE32 ENDSUB_A3:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB734:
    WRITE32 ENDSUB_A2:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB735:
  while736:
    JR_LTEQF VS3_M 15.0 and738
    JR_GTF VS2_M 15.0 or737
  and738:
    JR_GTEQF VS3_M 15.0 endwhile736
    JR_GTEQF VS2_M 15.0 endwhile736
  or737:
  whilebody736:
    WRITE32 ENDSUB_A3:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB739:
    WRITE32 ENDSUB_A2:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB740:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB741:
    JR_LTEQF VS3_M 15.0 and742
    JR_GTF VS2_M 15.0 whilebody736
  and742:
    JR_GTEQF VS3_M 15.0 and743
    JR_LTF VS2_M 15.0 whilebody736
  and743:
  endwhile736:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_RED_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RED_1:
SUB_SB1:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer745
	DATA8 nos745
	DATA8 busy745
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer745 nos745
	JR_EQ8 0 nos745 motornotbusy745
  motorwaiting745:
	OUTPUT_TEST layer745 nos745 busy745
	JR_EQ8 busy745 0 motornotbusy745
	SLEEP
	JR motorwaiting745
  motornotbusy745:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 300.0 'true'

	DATA8 layer746
	DATA8 nos746
	DATA8 busy746
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer746 nos746
	JR_EQ8 0 nos746 motornotbusy746
  motorwaiting746:
	OUTPUT_TEST layer746 nos746 busy746
	JR_EQ8 busy746 0 motornotbusy746
	SLEEP
	JR motorwaiting746
  motornotbusy746:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB748:
    WRITE32 ENDSUB_A2:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB749:
  while750:
    JR_LTEQF VS2_M 10.0 endwhile750
  whilebody750:
    WRITE32 ENDSUB_A3:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB751:
    WRITE32 ENDSUB_A2:CALLSUB752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB752:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 10.0 whilebody750
  endwhile750:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB755:
    WRITE32 ENDSUB_A2:CALLSUB756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB756:
  while757:
    JR_GTEQF VS2_M 15.0 endwhile757
  whilebody757:
    WRITE32 ENDSUB_A3:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB758:
    WRITE32 ENDSUB_A2:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB759:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody757
  endwhile757:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds762
	MOVEF_32 100.0 milliseconds762
	DATA32 timer762
	TIMER_WAIT milliseconds762 timer762
	TIMER_READY timer762
    CALL MOTOR.RESETCOUNT 'bc'
  while764:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf768
    DATA8 flag768
    DIVF F.1 2.0 tmpf768
    CP_EQF 0.0 2.0 flag768
    SELECTF flag768 0.0 tmpf768 F.0

    JR_GTEQF F.0 300.0 endwhile764
  whilebody764:
    WRITE32 ENDSUB_A3:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB769:
    WRITE32 ENDSUB_A2:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB770:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB771:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf775
    DATA8 flag775
    DIVF F.1 2.0 tmpf775
    CP_EQF 0.0 2.0 flag775
    SELECTF flag775 0.0 tmpf775 F.0

    JR_LTF F.0 300.0 whilebody764
  endwhile764:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB777:
    WRITE32 ENDSUB_A2:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB778:
  while779:
    JR_LTEQF VS3_M 10.0 and781
    JR_GTF VS2_M 10.0 or780
  and781:
    JR_GTEQF VS3_M 10.0 endwhile779
    JR_GTEQF VS2_M 10.0 endwhile779
  or780:
  whilebody779:
    WRITE32 ENDSUB_A3:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB782:
    WRITE32 ENDSUB_A2:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB783:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB784:
    JR_LTEQF VS3_M 10.0 and785
    JR_GTF VS2_M 10.0 whilebody779
  and785:
    JR_GTEQF VS3_M 10.0 and786
    JR_LTF VS2_M 10.0 whilebody779
  and786:
  endwhile779:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_SB1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SB1:
SUB_HSV:
    DATA8 layer788
	DATA8 no788
	DATA8 mode8788
	
	MOVEF_8 1.0 no788
	SUB8 no788 1 no788
	DIV8 no788 4 layer788
	MATH MOD8 no788 4 no788

	MOVEF_8 2.0 mode8788
	
	INPUT_DEVICE READY_RAW layer788 no788 0 mode8788 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf795
    DATA8 flag795
    DIVF VSRED_M 255.0 tmpf795
    CP_EQF 0.0 255.0 flag795
    SELECTF flag795 0.0 tmpf795 VSRED_M

    DATAF tmpf796
    DATA8 flag796
    DIVF VSGREEN_M 255.0 tmpf796
    CP_EQF 0.0 255.0 flag796
    SELECTF flag796 0.0 tmpf796 VSGREEN_M

    DATAF tmpf797
    DATA8 flag797
    DIVF VSBLUE_M 255.0 tmpf797
    CP_EQF 0.0 255.0 flag797
    SELECTF flag797 0.0 tmpf797 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else798_1
    JR_LTEQF VSRED_M VSBLUE_M else798_1
    MOVEF_F VSRED_M VMAX_M
    JR endif798
  else798_1:
    JR_LTEQF VSGREEN_M VSRED_M else798_2
    JR_LTEQF VSGREEN_M VSBLUE_M else798_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif798
  else798_2:
    JR_LTEQF VSBLUE_M VSRED_M else798_3
    JR_LTEQF VSBLUE_M VSGREEN_M else798_3
    MOVEF_F VSBLUE_M VMAX_M
  else798_3:
  endif798:
    JR_GTEQF VSRED_M VSGREEN_M else799_1
    JR_GTEQF VSRED_M VSBLUE_M else799_1
    MOVEF_F VSRED_M VMIN_M
    JR endif799
  else799_1:
    JR_GTEQF VSGREEN_M VSRED_M else799_2
    JR_GTEQF VSGREEN_M VSBLUE_M else799_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif799
  else799_2:
    JR_GTEQF VSBLUE_M VSRED_M else799_3
    JR_GTEQF VSBLUE_M VSGREEN_M else799_3
    MOVEF_F VSBLUE_M VMIN_M
  else799_3:
  endif799:
    JR_NEQF VMAX_M VMIN_M else800_1
    MOVEF_F 0.0 VH_M
    JR endif800
  else800_1:
    JR_NEQF VSRED_M VMAX_M else801_1
    JR_LTF VSGREEN_M VSBLUE_M else802_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf806
    DATA8 flag806
    DIVF F.0 F.1 tmpf806
    CP_EQF 0.0 F.1 flag806
    SELECTF flag806 0.0 tmpf806 VH_M

    JR endif802
  else802_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf810
    DATA8 flag810
    DIVF F.1 F.2 tmpf810
    CP_EQF 0.0 F.2 flag810
    SELECTF flag810 0.0 tmpf810 F.0

    ADDF F.0 360.0 VH_M
  else802_2:
  endif802:
    JR endif801
  else801_1:
    JR_NEQF VMAX_M VSGREEN_M else812_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf816
    DATA8 flag816
    DIVF F.1 F.2 tmpf816
    CP_EQF 0.0 F.2 flag816
    SELECTF flag816 0.0 tmpf816 F.0

    ADDF F.0 120.0 VH_M
    JR endif812
  else812_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf821
    DATA8 flag821
    DIVF F.1 F.2 tmpf821
    CP_EQF 0.0 F.2 flag821
    SELECTF flag821 0.0 tmpf821 F.0

    ADDF F.0 240.0 VH_M
  else812_2:
  endif812:
  else801_2:
  endif801:
  else800_2:
  endif800:
    JR_NEQF VMAX_M 0.0 else823_1
    MOVEF_F 0.0 VS_M
    JR endif823
  else823_1:
    DATAF tmpf824
    DATA8 flag824
    DIVF VMIN_M VMAX_M tmpf824
    CP_EQF 0.0 VMAX_M flag824
    SELECTF flag824 0.0 tmpf824 F.0

    SUBF 1.0 F.0 VS_M
  else823_2:
  endif823:
    MOVEF_F VMAX_M VV_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_HSV_100:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    DATA8 layer833
	DATA8 no833
	DATA8 mode8833
	
	MOVEF_8 1.0 no833
	SUB8 no833 1 no833
	DIV8 no833 4 layer833
	MATH MOD8 no833 4 no833

	MOVEF_8 2.0 mode8833
	
	INPUT_DEVICE READY_RAW layer833 no833 0 mode8833 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    MOVEF_F 1.0 VP_M
  for834:
    JR_GTF VP_M 100.0 endfor834
  forbody834:
    WRITE32 ENDSUB_HSV:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB835:
    ADDF VX_M VH_M VX_M
    ADDF VZ_M VS_M VZ_M
    ADDF VD_M VV_M VD_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody834
  endfor834:
    DATAF tmpf840
    DATA8 flag840
    DIVF VX_M 100.0 tmpf840
    CP_EQF 0.0 100.0 flag840
    SELECTF flag840 0.0 tmpf840 VH_M

    DATAF tmpf841
    DATA8 flag841
    DIVF VZ_M 100.0 tmpf841
    CP_EQF 0.0 100.0 flag841
    SELECTF flag841 0.0 tmpf841 VS_M

    DATAF tmpf842
    DATA8 flag842
    DIVF VD_M 100.0 tmpf842
    CP_EQF 0.0 100.0 flag842
    SELECTF flag842 0.0 tmpf842 VV_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV_100:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_100:
SUB_HSV_B:
    DATA8 layer850
	DATA8 no850
	DATA8 mode8850
	
	MOVEF_8 1.0 no850
	SUB8 no850 1 no850
	DIV8 no850 4 layer850
	MATH MOD8 no850 4 no850

	MOVEF_8 2.0 mode8850
	
	INPUT_DEVICE READY_RAW layer850 no850 0 mode8850 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf857
    DATA8 flag857
    DIVF VSRED_M 255.0 tmpf857
    CP_EQF 0.0 255.0 flag857
    SELECTF flag857 0.0 tmpf857 VSRED_M

    DATAF tmpf858
    DATA8 flag858
    DIVF VSGREEN_M 255.0 tmpf858
    CP_EQF 0.0 255.0 flag858
    SELECTF flag858 0.0 tmpf858 VSGREEN_M

    DATAF tmpf859
    DATA8 flag859
    DIVF VSBLUE_M 255.0 tmpf859
    CP_EQF 0.0 255.0 flag859
    SELECTF flag859 0.0 tmpf859 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else860_1
    JR_LTEQF VSRED_M VSBLUE_M else860_1
    MOVEF_F VSRED_M VMAX_M
    JR endif860
  else860_1:
    JR_LTEQF VSGREEN_M VSRED_M else860_2
    JR_LTEQF VSGREEN_M VSBLUE_M else860_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif860
  else860_2:
    JR_LTEQF VSBLUE_M VSRED_M else860_3
    JR_LTEQF VSBLUE_M VSGREEN_M else860_3
    MOVEF_F VSBLUE_M VMAX_M
  else860_3:
  endif860:
    JR_GTEQF VSRED_M VSGREEN_M else861_1
    JR_GTEQF VSRED_M VSBLUE_M else861_1
    MOVEF_F VSRED_M VMIN_M
    JR endif861
  else861_1:
    JR_GTEQF VSGREEN_M VSRED_M else861_2
    JR_GTEQF VSGREEN_M VSBLUE_M else861_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif861
  else861_2:
    JR_GTEQF VSBLUE_M VSRED_M else861_3
    JR_GTEQF VSBLUE_M VSGREEN_M else861_3
    MOVEF_F VSBLUE_M VMIN_M
  else861_3:
  endif861:
    JR_NEQF VMAX_M VMIN_M else862_1
    MOVEF_F 0.0 VH_M
    JR endif862
  else862_1:
    JR_NEQF VSRED_M VMAX_M else863_1
    JR_LTF VSGREEN_M VSBLUE_M else864_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf868
    DATA8 flag868
    DIVF F.0 F.1 tmpf868
    CP_EQF 0.0 F.1 flag868
    SELECTF flag868 0.0 tmpf868 VH_M

    JR endif864
  else864_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf872
    DATA8 flag872
    DIVF F.1 F.2 tmpf872
    CP_EQF 0.0 F.2 flag872
    SELECTF flag872 0.0 tmpf872 F.0

    ADDF F.0 360.0 VH_M
  else864_2:
  endif864:
    JR endif863
  else863_1:
    JR_NEQF VMAX_M VSGREEN_M else874_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf878
    DATA8 flag878
    DIVF F.1 F.2 tmpf878
    CP_EQF 0.0 F.2 flag878
    SELECTF flag878 0.0 tmpf878 F.0

    ADDF F.0 120.0 VH_M
    JR endif874
  else874_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf883
    DATA8 flag883
    DIVF F.1 F.2 tmpf883
    CP_EQF 0.0 F.2 flag883
    SELECTF flag883 0.0 tmpf883 F.0

    ADDF F.0 240.0 VH_M
  else874_2:
  endif874:
  else863_2:
  endif863:
  else862_2:
  endif862:
    JR_NEQF VMAX_M 0.0 else885_1
    MOVEF_F 0.0 VS_M
    JR endif885
  else885_1:
    DATAF tmpf886
    DATA8 flag886
    DIVF VMIN_M VMAX_M tmpf886
    CP_EQF 0.0 VMAX_M flag886
    SELECTF flag886 0.0 tmpf886 F.0

    SUBF 1.0 F.0 VS_M
  else885_2:
  endif885:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 300.0 and890
    JR_LTF VH_M 360.0 or889
  and890:
    JR_LTF VH_M 0.0 else888_1
    JR_GTF VH_M 20.0 else888_1
    JR_LTEQF VS_M 0.3 else888_1
    JR_GTF VS_M 1.0 else888_1
    JR_LTEQF VV_M 0.025 else888_1
    JR_GTEQF VV_M 0.1 else888_1
  or889:
    MOVEF_F 5.0 VCOLOR_M
    JR endif888
  else888_1:
    JR_LTF VH_M 20.0 else888_2
    JR_GTEQF VH_M 60.0 else888_2
    JR_LTF VS_M 0.4 else888_2
    JR_LTEQF VV_M 0.03 else888_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif888
  else888_2:
    MOVEF_F 6.0 VCOLOR_M
  else888_3:
  endif888:
RETSUB_HSV_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_B:
SUB_HSV_D:
    DATA8 layer891
	DATA8 no891
	DATA8 mode8891
	
	MOVEF_8 1.0 no891
	SUB8 no891 1 no891
	DIV8 no891 4 layer891
	MATH MOD8 no891 4 no891

	MOVEF_8 2.0 mode8891
	
	INPUT_DEVICE READY_RAW layer891 no891 0 mode8891 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf898
    DATA8 flag898
    DIVF VSRED_M 255.0 tmpf898
    CP_EQF 0.0 255.0 flag898
    SELECTF flag898 0.0 tmpf898 VSRED_M

    DATAF tmpf899
    DATA8 flag899
    DIVF VSGREEN_M 255.0 tmpf899
    CP_EQF 0.0 255.0 flag899
    SELECTF flag899 0.0 tmpf899 VSGREEN_M

    DATAF tmpf900
    DATA8 flag900
    DIVF VSBLUE_M 255.0 tmpf900
    CP_EQF 0.0 255.0 flag900
    SELECTF flag900 0.0 tmpf900 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else901_1
    JR_LTEQF VSRED_M VSBLUE_M else901_1
    MOVEF_F VSRED_M VMAX_M
    JR endif901
  else901_1:
    JR_LTEQF VSGREEN_M VSRED_M else901_2
    JR_LTEQF VSGREEN_M VSBLUE_M else901_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif901
  else901_2:
    JR_LTEQF VSBLUE_M VSRED_M else901_3
    JR_LTEQF VSBLUE_M VSGREEN_M else901_3
    MOVEF_F VSBLUE_M VMAX_M
  else901_3:
  endif901:
    JR_GTEQF VSRED_M VSGREEN_M else902_1
    JR_GTEQF VSRED_M VSBLUE_M else902_1
    MOVEF_F VSRED_M VMIN_M
    JR endif902
  else902_1:
    JR_GTEQF VSGREEN_M VSRED_M else902_2
    JR_GTEQF VSGREEN_M VSBLUE_M else902_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif902
  else902_2:
    JR_GTEQF VSBLUE_M VSRED_M else902_3
    JR_GTEQF VSBLUE_M VSGREEN_M else902_3
    MOVEF_F VSBLUE_M VMIN_M
  else902_3:
  endif902:
    JR_NEQF VMAX_M VMIN_M else903_1
    MOVEF_F 0.0 VH_M
    JR endif903
  else903_1:
    JR_NEQF VSRED_M VMAX_M else904_1
    JR_LTF VSGREEN_M VSBLUE_M else905_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf909
    DATA8 flag909
    DIVF F.0 F.1 tmpf909
    CP_EQF 0.0 F.1 flag909
    SELECTF flag909 0.0 tmpf909 VH_M

    JR endif905
  else905_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf913
    DATA8 flag913
    DIVF F.1 F.2 tmpf913
    CP_EQF 0.0 F.2 flag913
    SELECTF flag913 0.0 tmpf913 F.0

    ADDF F.0 360.0 VH_M
  else905_2:
  endif905:
    JR endif904
  else904_1:
    JR_NEQF VMAX_M VSGREEN_M else915_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf919
    DATA8 flag919
    DIVF F.1 F.2 tmpf919
    CP_EQF 0.0 F.2 flag919
    SELECTF flag919 0.0 tmpf919 F.0

    ADDF F.0 120.0 VH_M
    JR endif915
  else915_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf924
    DATA8 flag924
    DIVF F.1 F.2 tmpf924
    CP_EQF 0.0 F.2 flag924
    SELECTF flag924 0.0 tmpf924 F.0

    ADDF F.0 240.0 VH_M
  else915_2:
  endif915:
  else904_2:
  endif904:
  else903_2:
  endif903:
    JR_NEQF VMAX_M 0.0 else926_1
    MOVEF_F 0.0 VS_M
    JR endif926
  else926_1:
    DATAF tmpf927
    DATA8 flag927
    DIVF VMIN_M VMAX_M tmpf927
    CP_EQF 0.0 VMAX_M flag927
    SELECTF flag927 0.0 tmpf927 F.0

    SUBF 1.0 F.0 VS_M
  else926_2:
  endif926:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 200.0 and931
    JR_LTF VH_M 360.0 or930
  and931:
    JR_LTF VH_M 0.0 else929_1
    JR_GTF VH_M 30.0 else929_1
    JR_LTEQF VS_M 0.3 else929_1
    JR_GTF VS_M 1.0 else929_1
    JR_LTF VV_M 0.0 else929_1
    JR_GTEQF VV_M 0.02 else929_1
  or930:
    MOVEF_F 5.0 VCOLOR_M
    JR endif929
  else929_1:
    JR_LTF VH_M 0.0 else929_2
    JR_GTEQF VH_M 60.0 else929_2
    JR_LTF VS_M 0.4 else929_2
    JR_GTF VS_M 1.0 else929_2
    JR_LTEQF VV_M 0.003 else929_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif929
  else929_2:
    MOVEF_F 6.0 VCOLOR_M
  else929_3:
  endif929:
RETSUB_HSV_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_D:
SUB_HSV_RGB_B:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer932
	DATA8 no932
	DATA8 mode8932
	
	MOVEF_8 1.0 no932
	SUB8 no932 1 no932
	DIV8 no932 4 layer932
	MATH MOD8 no932 4 no932

	MOVEF_8 2.0 mode8932
	
	INPUT_DEVICE READY_RAW layer932 no932 0 mode8932 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV:CALLSUB934 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB934:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    DATA32 milliseconds943
	MOVEF_32 100.0 milliseconds943
	DATA32 timer943
	TIMER_WAIT milliseconds943 timer943
	TIMER_READY timer943
    MOVEF_F 1.0 VP_M
  for944:
    JR_GTF VP_M 100.0 endfor944
  forbody944:
    WRITE32 ENDSUB_HSV_B:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_B
CALLSUB945:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody944
  endfor944:
    DATAF tmpf948
    DATA8 flag948
    DIVF VX_M 100.0 tmpf948
    CP_EQF 0.0 100.0 flag948
    SELECTF flag948 0.0 tmpf948 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds952
	MOVEF_32 100.0 milliseconds952
	DATA32 timer952
	TIMER_WAIT milliseconds952 timer952
	TIMER_READY timer952
    JR_LTEQF VH_M 100.0 and955
    JR_LTF VH_M 360.0 or954
  and955:
    JR_LTF VH_M 0.0 else953_1
    JR_GTF VH_M 20.0 else953_1
    JR_LTEQF VS_M 0.3 else953_1
    JR_GTF VS_M 1.0 else953_1
    JR_LTEQF VV_M 0.025 else953_1
    JR_GTEQF VV_M 0.1 else953_1
  or954:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif953
  else953_1:
    JR_LTF VH_M 20.0 else953_2
    JR_GTEQF VH_M 60.0 else953_2
    JR_LTF VS_M 0.4 else953_2
    JR_LTEQF VV_M 0.03 else953_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif953
  else953_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else953_3:
  endif953:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds965
	MOVEF_32 1000.0 milliseconds965
	DATA32 timer965
	TIMER_WAIT milliseconds965 timer965
	TIMER_READY timer965
RETSUB_HSV_RGB_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_B:
SUB_HSV_RGB_D:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer966
	DATA8 no966
	DATA8 mode8966
	
	MOVEF_8 1.0 no966
	SUB8 no966 1 no966
	DIV8 no966 4 layer966
	MATH MOD8 no966 4 no966

	MOVEF_8 2.0 mode8966
	
	INPUT_DEVICE READY_RAW layer966 no966 0 mode8966 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV_D:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB968:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    MOVEF_F 1.0 VP_M
  for977:
    JR_GTF VP_M 100.0 endfor977
  forbody977:
    WRITE32 ENDSUB_HSV_D:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB978:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody977
  endfor977:
    DATAF tmpf981
    DATA8 flag981
    DIVF VX_M 100.0 tmpf981
    CP_EQF 0.0 100.0 flag981
    SELECTF flag981 0.0 tmpf981 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    JR_LTEQF VH_M 200.0 and987
    JR_LTF VH_M 360.0 or986
  and987:
    JR_LTF VH_M 0.0 else985_1
    JR_GTF VH_M 40.0 else985_1
    JR_LTEQF VS_M 0.3 else985_1
    JR_GTF VS_M 1.0 else985_1
    JR_LTF VV_M 0.0 else985_1
    JR_GTEQF VV_M 0.02 else985_1
  or986:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif985
  else985_1:
    JR_LTF VH_M 0.0 else985_2
    JR_GTEQF VH_M 100.0 else985_2
    JR_LTF VS_M 0.4 else985_2
    JR_GTF VS_M 1.0 else985_2
    JR_LTEQF VV_M 0.003 else985_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif985
  else985_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else985_3:
  endif985:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds997
	MOVEF_32 1000.0 milliseconds997
	DATA32 timer997
	TIMER_WAIT milliseconds997 timer997
	TIMER_READY timer997
RETSUB_HSV_RGB_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_D:
SUB_A3:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN3_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX3_M VMIN3_M F.1
    DATAF tmpf1002
    DATA8 flag1002
    DIVF F.0 F.1 tmpf1002
    CP_EQF 0.0 F.1 flag1002
    SELECTF flag1002 0.0 tmpf1002 VS3_M

RETSUB_A3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A3:
SUB_A2:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf1007
    DATA8 flag1007
    DIVF F.0 F.1 tmpf1007
    CP_EQF 0.0 F.1 flag1007
    SELECTF flag1007 0.0 tmpf1007 VS2_M

RETSUB_A2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A2:
SUB_POLIN2D:
    WRITE32 ENDSUB_A3:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1008:
    WRITE32 ENDSUB_A2:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1009:
    SUBF VS2_M VS3_M VE_M
    MULF VK1_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2D:
SUB_POLIN2DUS:
    WRITE32 ENDSUB_A3:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1019:
    WRITE32 ENDSUB_A2:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1020:
    SUBF VS2_M VS3_M VE_M
    MULF VK3_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2DUS:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2DUS:
SUB_ZAMOROZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_ZAMOROZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZAMOROZ:
SUB_ZADVIG:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1034
	MOVEF_32 10.0 milliseconds1034
	DATA32 timer1034
	TIMER_WAIT milliseconds1034 timer1034
	TIMER_READY timer1034
    CALL MOTOR.STOP 'a' 'True'
RETSUB_ZADVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZADVIG:
SUB_VIDVIG:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1037
	MOVEF_32 10.0 milliseconds1037
	DATA32 timer1037
	TIMER_WAIT milliseconds1037 timer1037
	TIMER_READY timer1037
    CALL MOTOR.STOP 'a' 'True'
RETSUB_VIDVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIDVIG:
SUB_VIRAV_NAZ:
    DATA8 layer1039
	DATA8 no1039
	DATA8 mode81039
	
	MOVEF_8 2.0 no1039
	SUB8 no1039 1 no1039
	DIV8 no1039 4 layer1039
	MATH MOD8 no1039 4 no1039

	MOVEF_8 0.0 mode81039
	
	INPUT_DEVICE READY_RAW layer1039 no1039 0 mode81039 0
    DATA8 layer1040
	DATA8 no1040
	DATA8 mode81040
	
	MOVEF_8 3.0 no1040
	SUB8 no1040 1 no1040
	DIV8 no1040 4 layer1040
	MATH MOD8 no1040 4 no1040

	MOVEF_8 0.0 mode81040
	
	INPUT_DEVICE READY_RAW layer1040 no1040 0 mode81040 0
  while1041:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1041
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1041
  whilebody1041:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and1045
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1041
  and1045:
  endwhile1041:
    CALL MOTOR.STOP 'BC' 'True'
  while1049:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1049
  whilebody1049:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody1049
  endwhile1049:
    CALL MOTOR.STOP 'B' 'True'
  while1054:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1054
  whilebody1054:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1054
  endwhile1054:
    CALL MOTOR.STOP 'C' 'True'
  while1059:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1059
  whilebody1059:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1059
  endwhile1059:
    CALL MOTOR.STOP 'B' 'True'
  while1064:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1064
  whilebody1064:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1064
  endwhile1064:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV_NAZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV_NAZ:
SUB_VIRAV:
    DATA8 layer1069
	DATA8 no1069
	DATA8 mode81069
	
	MOVEF_8 2.0 no1069
	SUB8 no1069 1 no1069
	DIV8 no1069 4 layer1069
	MATH MOD8 no1069 4 no1069

	MOVEF_8 0.0 mode81069
	
	INPUT_DEVICE READY_RAW layer1069 no1069 0 mode81069 0
    DATA8 layer1070
	DATA8 no1070
	DATA8 mode81070
	
	MOVEF_8 3.0 no1070
	SUB8 no1070 1 no1070
	DIV8 no1070 4 layer1070
	MATH MOD8 no1070 4 no1070

	MOVEF_8 0.0 mode81070
	
	INPUT_DEVICE READY_RAW layer1070 no1070 0 mode81070 0
  while1071:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1071
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1071
  whilebody1071:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and1075
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1071
  and1075:
  endwhile1071:
    CALL MOTOR.STOP 'BC' 'True'
  while1079:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1079
  whilebody1079:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody1079
  endwhile1079:
    CALL MOTOR.STOP 'B' 'True'
  while1084:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1084
  whilebody1084:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1084
  endwhile1084:
    CALL MOTOR.STOP 'C' 'True'
  while1089:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1089
  whilebody1089:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1089
  endwhile1089:
    CALL MOTOR.STOP 'B' 'True'
  while1094:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1094
  whilebody1094:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1094
  endwhile1094:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV:
SUB_RGB:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 F.0 VRECVARRAY_M
    CALL ARRAYSTORE_FLOAT VI_M F.0 VA_M
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 5.0 or1104
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 14.0 or1104
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 6.0 else1103_1
  or1104:
    CALL SPEAKER.NOTE 100.0 'C#1' 500.0
    JR endif1103
  else1103_1:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 1.0 or1109
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 10.0 or1109
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 7.0 or1109
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 8.0 else1103_2
  or1109:
    CALL SPEAKER.NOTE 100.0 'C#5' 500.0
    JR endif1103
  else1103_2:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 3.0 or1115
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 2.0 or1115
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 4.0 else1103_3
  or1115:
    CALL SPEAKER.NOTE 50.0 'C#9' 1000.0
  else1103_3:
  endif1103:
RETSUB_RGB:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RGB:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
