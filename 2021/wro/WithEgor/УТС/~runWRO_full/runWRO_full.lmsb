DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VG_M
DATAF VR_M
DATAF VY_M
DATAF VW_M
DATAF VCOLOR_M
DATAF VX_M
DATAF VC_M
DATAF VS_M
DATAF VMAX2_M
DATAF VMAX3_M
DATAF VMIN2_M
DATAF VMIN3_M
DATAF VK1_M
DATAF VK2_M
DATAF VK3_M
DATAF VS3_M
DATAF VS2_M
DATAF VSPEED_M
DATAF VSPEEDL_M
DATAF VSPEEDR_M
DATAF VEOLD_M
DATAF VN_M
DATAF VP_M
DATAF VI_M
DATAF VI2CPORT_M
DATAF VI2CSLVADDR_M
DATAF VL_M
DATAF VJ_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VSNUM_M
DATAF VSRED_M
DATAF VSGREEN_M
DATAF VSBLUE_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VV_M
DATAF VD_M
DATAF VZ_M
DATAF VE_M
DATAF VU_M
ARRAY16 VA_M 2
DATAF VF_M
DATAF VCOLOR1_M
DATAF VCOLOR2_M
DATAF VCOLOR3_M
DATAF VCOLOR4_M
DATAF VCOLOR5_M
DATA32 RUNCOUNTER_ZADVIG
DATA32 RUNCOUNTER_VIDVIG

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYCREATE_FLOAT VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVE32_32 0 RUNCOUNTER_ZADVIG
    MOVE32_32 0 RUNCOUNTER_VIDVIG
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TZADVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_ZADVIG 0
    CALL GETANDINC32 RUNCOUNTER_ZADVIG -1 RUNCOUNTER_ZADVIG tmp
    JR_GT32 tmp 1 launch
}
vmthread TVIDVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_VIDVIG 1
    CALL GETANDINC32 RUNCOUNTER_VIDVIG -1 RUNCOUNTER_VIDVIG tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_ZADVIG
subcall PROGRAM_VIDVIG
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2169
    WRITE32 ENDSUB_ZADVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZADVIG
  dispatch2169:
    JR_NEQ32 SUBPROGRAM 1 dispatch2170
    WRITE32 ENDSUB_VIDVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_VIDVIG
  dispatch2170:
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.2 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.2 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL EV3FILE.OPENREAD 'WRO2021/colib.dat' VF_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN3_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX3_M
    CALL EV3FILE.CLOSE VF_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VMIN2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMIN3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds1187
	MOVEF_32 100.0 milliseconds1187
	DATA32 timer1187
	TIMER_WAIT milliseconds1187 timer1187
	TIMER_READY timer1187
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    WRITE32 ENDSUB_HSV:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1188:
    JR_LTEQF VH_M 120.0 else1189_1
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1189
  else1189_1:
    JR_LTEQF VH_M 20.0 else1189_2
    JR_GTEQF VH_M 120.0 else1189_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1189
  else1189_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else1189_3:
  endif1189:
    DATA32 tmp1193
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1193
    JR_NEQ32 0 tmp1193 alreadylaunched1193
    OBJECT_START TVIDVIG
  alreadylaunched1193:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while1196:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1200
    DATA8 flag1200
    DIVF F.1 2.0 tmpf1200
    CP_EQF 0.0 2.0 flag1200
    SELECTF flag1200 0.0 tmpf1200 F.0

    JR_GTEQF F.0 500.0 endwhile1196
  whilebody1196:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VMAX2_M else1201_1
    CALL SENSOR.READPERCENT 2.0 VMAX2_M
  else1201_1:
  endif1201:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VMIN2_M else1204_1
    CALL SENSOR.READPERCENT 2.0 VMIN2_M
  else1204_1:
  endif1204:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VMAX3_M else1207_1
    CALL SENSOR.READPERCENT 3.0 VMAX3_M
  else1207_1:
  endif1207:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VMIN3_M else1210_1
    CALL SENSOR.READPERCENT 3.0 VMIN3_M
  else1210_1:
  endif1210:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1216
    DATA8 flag1216
    DIVF F.1 2.0 tmpf1216
    CP_EQF 0.0 2.0 flag1216
    SELECTF flag1216 0.0 tmpf1216 F.0

    JR_LTF F.0 500.0 whilebody1196
  endwhile1196:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1218:
    WRITE32 ENDSUB_A2:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1219:
  while1220:
    JR_LTEQF VS3_M 10.0 and1222
    JR_GTF VS2_M 10.0 or1221
  and1222:
    JR_GTEQF VS3_M 10.0 endwhile1220
    JR_GTEQF VS2_M 10.0 endwhile1220
  or1221:
  whilebody1220:
    WRITE32 ENDSUB_A3:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1223:
    WRITE32 ENDSUB_A2:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1224:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1225:
    JR_LTEQF VS3_M 10.0 and1226
    JR_GTF VS2_M 10.0 whilebody1220
  and1226:
    JR_GTEQF VS3_M 10.0 and1227
    JR_LTF VS2_M 10.0 whilebody1220
  and1227:
  endwhile1220:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_HSV:CALLSUB1229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1229:
    JR_GTF VH_M 120.0 or1231
    JR_EQF VH_M 0.0 or1231
    JR_LTF VH_M 0.0 else1230_1
    JR_GTF VH_M 20.0 else1230_1
  or1231:
    MOVEF_F 5.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1230
  else1230_1:
    JR_GTEQF VH_M 120.0 else1230_2
    MOVEF_F 4.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1230
  else1230_2:
    MOVEF_F 5.0 VCOLOR1_M
  else1230_3:
  endif1230:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1234
	DATA8 nos1234
	DATA8 busy1234
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1234 nos1234
	JR_EQ8 0 nos1234 motornotbusy1234
  motorwaiting1234:
	OUTPUT_TEST layer1234 nos1234 busy1234
	JR_EQ8 busy1234 0 motornotbusy1234
	SLEEP
	JR motorwaiting1234
  motornotbusy1234:
    JR_NEQF VCOLOR_M 4.0 else1235_1
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1236:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1237
	DATA8 nos1237
	DATA8 busy1237
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1237 nos1237
	JR_EQ8 0 nos1237 motornotbusy1237
  motorwaiting1237:
	OUTPUT_TEST layer1237 nos1237 busy1237
	JR_EQ8 busy1237 0 motornotbusy1237
	SLEEP
	JR motorwaiting1237
  motornotbusy1237:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1239
	DATA8 nos1239
	DATA8 busy1239
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1239 nos1239
	JR_EQ8 0 nos1239 motornotbusy1239
  motorwaiting1239:
	OUTPUT_TEST layer1239 nos1239 busy1239
	JR_EQ8 busy1239 0 motornotbusy1239
	SLEEP
	JR motorwaiting1239
  motornotbusy1239:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while1243:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 720.0 endwhile1243
  whilebody1243:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1245:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 720.0 whilebody1243
  endwhile1243:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_SB1:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1248:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1249
	DATA8 nos1249
	DATA8 busy1249
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1249 nos1249
	JR_EQ8 0 nos1249 motornotbusy1249
  motorwaiting1249:
	OUTPUT_TEST layer1249 nos1249 busy1249
	JR_EQ8 busy1249 0 motornotbusy1249
	SLEEP
	JR motorwaiting1249
  motornotbusy1249:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1251:
    WRITE32 ENDSUB_A2:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1252:
  while1253:
    JR_LTEQF VS2_M 10.0 endwhile1253
  whilebody1253:
    WRITE32 ENDSUB_A3:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1254:
    WRITE32 ENDSUB_A2:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1255:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 10.0 whilebody1253
  endwhile1253:
    WRITE32 ENDSUB_A3:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1257:
    WRITE32 ENDSUB_A2:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1258:
  while1259:
    JR_GTEQF VS2_M 15.0 endwhile1259
  whilebody1259:
    WRITE32 ENDSUB_A3:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1260:
    WRITE32 ENDSUB_A2:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1261:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody1259
  endwhile1259:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1265:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1269
    DATA8 flag1269
    DIVF F.1 2.0 tmpf1269
    CP_EQF 0.0 2.0 flag1269
    SELECTF flag1269 0.0 tmpf1269 F.0

    JR_GTEQF F.0 100.0 endwhile1265
  whilebody1265:
    WRITE32 ENDSUB_A3:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1270:
    WRITE32 ENDSUB_A2:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1271:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1272:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1276
    DATA8 flag1276
    DIVF F.1 2.0 tmpf1276
    CP_EQF 0.0 2.0 flag1276
    SELECTF flag1276 0.0 tmpf1276 F.0

    JR_LTF F.0 100.0 whilebody1265
  endwhile1265:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1278:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VCOLOR1_M 5.0 else1280_1
    WRITE32 ENDSUB_RED_1:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1281:
    ADDF VC_M 1.0 VC_M
    JR endif1280
  else1280_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1283
	DATA8 nos1283
	DATA8 busy1283
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1283 nos1283
	JR_EQ8 0 nos1283 motornotbusy1283
  motorwaiting1283:
	OUTPUT_TEST layer1283 nos1283 busy1283
	JR_EQ8 busy1283 0 motornotbusy1283
	SLEEP
	JR motorwaiting1283
  motornotbusy1283:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer1284
	DATA8 nos1284
	DATA8 busy1284
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1284 nos1284
	JR_EQ8 0 nos1284 motornotbusy1284
  motorwaiting1284:
	OUTPUT_TEST layer1284 nos1284 busy1284
	JR_EQ8 busy1284 0 motornotbusy1284
	SLEEP
	JR motorwaiting1284
  motornotbusy1284:
  while1285:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1287
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or1286
  and1287:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1290
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or1286
  and1290:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile1285
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile1285
  or1286:
  whilebody1285:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1296
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1285
  and1296:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1299
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody1285
  and1299:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and1302
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1285
  and1302:
  endwhile1285:
    WRITE32 ENDSUB_A3:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1305:
    WRITE32 ENDSUB_A2:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1306:
  while1307:
    JR_LTEQF VS3_M 10.0 and1309
    JR_GTF VS2_M 10.0 or1308
  and1309:
    JR_GTEQF VS3_M 10.0 endwhile1307
    JR_GTEQF VS2_M 10.0 endwhile1307
  or1308:
  whilebody1307:
    WRITE32 ENDSUB_A3:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1310:
    WRITE32 ENDSUB_A2:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1311:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1312:
    JR_LTEQF VS3_M 10.0 and1313
    JR_GTF VS2_M 10.0 whilebody1307
  and1313:
    JR_GTEQF VS3_M 10.0 and1314
    JR_LTF VS2_M 10.0 whilebody1307
  and1314:
  endwhile1307:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1315
	DATA8 nos1315
	DATA8 busy1315
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1315 nos1315
	JR_EQ8 0 nos1315 motornotbusy1315
  motorwaiting1315:
	OUTPUT_TEST layer1315 nos1315 busy1315
	JR_EQ8 busy1315 0 motornotbusy1315
	SLEEP
	JR motorwaiting1315
  motornotbusy1315:
    WRITE32 ENDSUB_A3:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1316:
    WRITE32 ENDSUB_A2:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1317:
  while1318:
    JR_LTEQF VS3_M 10.0 and1320
    JR_GTF VS2_M 10.0 or1319
  and1320:
    JR_GTEQF VS3_M 10.0 endwhile1318
    JR_GTEQF VS2_M 10.0 endwhile1318
  or1319:
  whilebody1318:
    WRITE32 ENDSUB_A3:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1321:
    WRITE32 ENDSUB_A2:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1322:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1323:
    JR_LTEQF VS3_M 10.0 and1324
    JR_GTF VS2_M 10.0 whilebody1318
  and1324:
    JR_GTEQF VS3_M 10.0 and1325
    JR_LTF VS2_M 10.0 whilebody1318
  and1325:
  endwhile1318:
    CALL MOTOR.STOP 'bc' 'true'
  else1280_2:
  endif1280:
    JR endif1235
  else1235_1:
    DATA32 tmp1327
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp1327
    JR_NEQ32 0 tmp1327 alreadylaunched1327
    OBJECT_START TZADVIG
  alreadylaunched1327:
    WRITE32 ENDSUB_A3:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1328:
    WRITE32 ENDSUB_A2:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1329:
  while1330:
    JR_LTEQF VS3_M 10.0 and1332
    JR_GTF VS2_M 10.0 or1331
  and1332:
    JR_GTEQF VS3_M 10.0 endwhile1330
    JR_GTEQF VS2_M 10.0 endwhile1330
  or1331:
  whilebody1330:
    WRITE32 ENDSUB_A3:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1333:
    WRITE32 ENDSUB_A2:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1334:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1335:
    JR_LTEQF VS3_M 10.0 and1336
    JR_GTF VS2_M 10.0 whilebody1330
  and1336:
    JR_GTEQF VS3_M 10.0 and1337
    JR_LTF VS2_M 10.0 whilebody1330
  and1337:
  endwhile1330:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1339
	DATA8 nos1339
	DATA8 busy1339
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1339 nos1339
	JR_EQ8 0 nos1339 motornotbusy1339
  motorwaiting1339:
	OUTPUT_TEST layer1339 nos1339 busy1339
	JR_EQ8 busy1339 0 motornotbusy1339
	SLEEP
	JR motorwaiting1339
  motornotbusy1339:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1340
	DATA8 nos1340
	DATA8 busy1340
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1340 nos1340
	JR_EQ8 0 nos1340 motornotbusy1340
  motorwaiting1340:
	OUTPUT_TEST layer1340 nos1340 busy1340
	JR_EQ8 busy1340 0 motornotbusy1340
	SLEEP
	JR motorwaiting1340
  motornotbusy1340:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1343
	MOVEF_32 500.0 milliseconds1343
	DATA32 timer1343
	TIMER_WAIT milliseconds1343 timer1343
	TIMER_READY timer1343
    CALL MOTOR.STOP 'd' 'true'
    MOVEF_F 90.0 VSPEED_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1346:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 720.0 endwhile1346
  whilebody1346:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1348:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 720.0 whilebody1346
  endwhile1346:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VCOLOR1_M 5.0 else1351_1
    WRITE32 ENDSUB_SB1:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1352:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1353
	DATA8 nos1353
	DATA8 busy1353
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1353 nos1353
	JR_EQ8 0 nos1353 motornotbusy1353
  motorwaiting1353:
	OUTPUT_TEST layer1353 nos1353 busy1353
	JR_EQ8 busy1353 0 motornotbusy1353
	SLEEP
	JR motorwaiting1353
  motornotbusy1353:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1354
	DATA8 nos1354
	DATA8 busy1354
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1354 nos1354
	JR_EQ8 0 nos1354 motornotbusy1354
  motorwaiting1354:
	OUTPUT_TEST layer1354 nos1354 busy1354
	JR_EQ8 busy1354 0 motornotbusy1354
	SLEEP
	JR motorwaiting1354
  motornotbusy1354:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1356
	MOVEF_32 100.0 milliseconds1356
	DATA32 timer1356
	TIMER_WAIT milliseconds1356 timer1356
	TIMER_READY timer1356
    WRITE32 ENDSUB_A3:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1357:
    WRITE32 ENDSUB_A2:CALLSUB1358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1358:
  while1359:
    JR_LTEQF VS3_M 10.0 and1361
    JR_GTF VS2_M 10.0 or1360
  and1361:
    JR_GTEQF VS3_M 10.0 endwhile1359
    JR_GTEQF VS2_M 10.0 endwhile1359
  or1360:
  whilebody1359:
    WRITE32 ENDSUB_A3:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1362:
    WRITE32 ENDSUB_A2:CALLSUB1363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1363:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1364:
    JR_LTEQF VS3_M 10.0 and1365
    JR_GTF VS2_M 10.0 whilebody1359
  and1365:
    JR_GTEQF VS3_M 10.0 and1366
    JR_LTF VS2_M 10.0 whilebody1359
  and1366:
  endwhile1359:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_RED_1:CALLSUB1368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1368:
    ADDF VC_M 1.0 VC_M
    JR endif1351
  else1351_1:
    DATA32 tmp1370
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1370
    JR_NEQ32 0 tmp1370 alreadylaunched1370
    OBJECT_START TVIDVIG
  alreadylaunched1370:
    WRITE32 ENDSUB_SB1:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1371:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1372
	DATA8 nos1372
	DATA8 busy1372
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1372 nos1372
	JR_EQ8 0 nos1372 motornotbusy1372
  motorwaiting1372:
	OUTPUT_TEST layer1372 nos1372 busy1372
	JR_EQ8 busy1372 0 motornotbusy1372
	SLEEP
	JR motorwaiting1372
  motornotbusy1372:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1373
	DATA8 nos1373
	DATA8 busy1373
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1373 nos1373
	JR_EQ8 0 nos1373 motornotbusy1373
  motorwaiting1373:
	OUTPUT_TEST layer1373 nos1373 busy1373
	JR_EQ8 busy1373 0 motornotbusy1373
	SLEEP
	JR motorwaiting1373
  motornotbusy1373:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1375:
    WRITE32 ENDSUB_A2:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1376:
  while1377:
    JR_LTEQF VS3_M 10.0 and1379
    JR_GTF VS2_M 10.0 or1378
  and1379:
    JR_GTEQF VS3_M 10.0 endwhile1377
    JR_GTEQF VS2_M 10.0 endwhile1377
  or1378:
  whilebody1377:
    WRITE32 ENDSUB_A3:CALLSUB1380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1380:
    WRITE32 ENDSUB_A2:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1381:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1382:
    JR_LTEQF VS3_M 10.0 and1383
    JR_GTF VS2_M 10.0 whilebody1377
  and1383:
    JR_GTEQF VS3_M 10.0 and1384
    JR_LTF VS2_M 10.0 whilebody1377
  and1384:
  endwhile1377:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 25.0 'true'

	DATA8 layer1386
	DATA8 nos1386
	DATA8 busy1386
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1386 nos1386
	JR_EQ8 0 nos1386 motornotbusy1386
  motorwaiting1386:
	OUTPUT_TEST layer1386 nos1386 busy1386
	JR_EQ8 busy1386 0 motornotbusy1386
	SLEEP
	JR motorwaiting1386
  motornotbusy1386:
    WRITE32 ENDSUB_ZAMOROZ:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZAMOROZ
CALLSUB1387:
  else1351_2:
  endif1351:
  else1235_2:
  endif1235:
    WRITE32 ENDSUB_HSV_100:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1388:
    JR_GTEQF VV_M 0.015 else1389_1
    MOVEF_F 5.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1389
  else1389_1:
    MOVEF_F 4.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    CALL MOTOR.STOP 'bc' 'true'
  else1389_2:
  endif1389:
    JR_NEQF VCOLOR2_M 4.0 else1393_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1394
	DATA8 nos1394
	DATA8 busy1394
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1394 nos1394
	JR_EQ8 0 nos1394 motornotbusy1394
  motorwaiting1394:
	OUTPUT_TEST layer1394 nos1394 busy1394
	JR_EQ8 busy1394 0 motornotbusy1394
	SLEEP
	JR motorwaiting1394
  motornotbusy1394:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1395:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif1393
  else1393_1:
    WRITE32 ENDSUB_PR:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1397:
    CALL MOTOR.RESETCOUNT 'bc'
  while1399:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 450.0 endwhile1399
  whilebody1399:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1401:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 450.0 whilebody1399
  endwhile1399:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1405
	MOVEF_32 100.0 milliseconds1405
	DATA32 timer1405
	TIMER_WAIT milliseconds1405 timer1405
	TIMER_READY timer1405
    WRITE32 ENDSUB_NPL:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1406:
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1407
    DATA8 flag1407
    DIVF 360.0 VL_M tmpf1407
    CP_EQF 0.0 VL_M flag1407
    SELECTF flag1407 0.0 tmpf1407 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 90.0 VSPEED_M
  while1410:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1410
  whilebody1410:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1412:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1410
  endwhile1410:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1415:
    JR_NEQF VC_M 1.0 else1416_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1417:
    JR endif1416
  else1416_1:
    JR_NEQF VC_M 0.0 else1416_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1418:
  else1416_2:
  endif1416:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1419:
    WRITE32 ENDSUB_A3:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1420:
    WRITE32 ENDSUB_A2:CALLSUB1421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1421:
  while1422:
    JR_LTEQF VS3_M 10.0 and1424
    JR_GTF VS2_M 10.0 or1423
  and1424:
    JR_GTEQF VS3_M 10.0 endwhile1422
    JR_GTEQF VS2_M 10.0 endwhile1422
  or1423:
  whilebody1422:
    WRITE32 ENDSUB_A3:CALLSUB1425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1425:
    WRITE32 ENDSUB_A2:CALLSUB1426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1426:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1427:
    JR_LTEQF VS3_M 10.0 and1428
    JR_GTF VS2_M 10.0 whilebody1422
  and1428:
    JR_GTEQF VS3_M 10.0 and1429
    JR_LTF VS2_M 10.0 whilebody1422
  and1429:
  endwhile1422:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1431
	DATA8 nos1431
	DATA8 busy1431
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1431 nos1431
	JR_EQ8 0 nos1431 motornotbusy1431
  motorwaiting1431:
	OUTPUT_TEST layer1431 nos1431 busy1431
	JR_EQ8 busy1431 0 motornotbusy1431
	SLEEP
	JR motorwaiting1431
  motornotbusy1431:
    WRITE32 ENDSUB_A3:CALLSUB1432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1432:
    WRITE32 ENDSUB_A2:CALLSUB1433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1433:
  while1434:
    JR_LTEQF VS3_M 10.0 and1436
    JR_GTF VS2_M 10.0 or1435
  and1436:
    JR_GTEQF VS3_M 10.0 endwhile1434
    JR_GTEQF VS2_M 10.0 endwhile1434
  or1435:
  whilebody1434:
    WRITE32 ENDSUB_A3:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1437:
    WRITE32 ENDSUB_A2:CALLSUB1438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1438:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1439:
    JR_LTEQF VS3_M 10.0 and1440
    JR_GTF VS2_M 10.0 whilebody1434
  and1440:
    JR_GTEQF VS3_M 10.0 and1441
    JR_LTF VS2_M 10.0 whilebody1434
  and1441:
  endwhile1434:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1443:
    CALL MOTOR.RESETCOUNT 'bc'
  while1445:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1449
    DATA8 flag1449
    DIVF F.1 2.0 tmpf1449
    CP_EQF 0.0 2.0 flag1449
    SELECTF flag1449 0.0 tmpf1449 F.0

    JR_GTEQF F.0 400.0 endwhile1445
  whilebody1445:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1450:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1454
    DATA8 flag1454
    DIVF F.1 2.0 tmpf1454
    CP_EQF 0.0 2.0 flag1454
    SELECTF flag1454 0.0 tmpf1454 F.0

    JR_LTF F.0 400.0 whilebody1445
  endwhile1445:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1457
	MOVEF_32 500.0 milliseconds1457
	DATA32 timer1457
	TIMER_WAIT milliseconds1457 timer1457
	TIMER_READY timer1457
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1459
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1459
    JR_NEQ32 0 tmp1459 alreadylaunched1459
    OBJECT_START TVIDVIG
  alreadylaunched1459:
    WRITE32 ENDSUB_NPL:CALLSUB1460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1460:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1461:
    ADDF VC_M 1.0 VC_M
  else1393_2:
  endif1393:
    WRITE32 ENDSUB_HSV_100:CALLSUB1463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1463:
    JR_LTEQF VH_M 120.0 and1466
    JR_LTEQF VH_M 360.0 or1465
  and1466:
    JR_LTF VH_M 0.0 and1467
    JR_LTEQF VH_M 10.0 or1465
  and1467:
    JR_LTEQF VS_M 0.3 else1464_1
    JR_GTEQF VS_M 0.5 else1464_1
  or1465:
    MOVEF_F 5.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1464
  else1464_1:
    MOVEF_F 4.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1464_2:
  endif1464:
    JR_NEQF VCOLOR3_M 4.0 else1470_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1471
	DATA8 nos1471
	DATA8 busy1471
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1471 nos1471
	JR_EQ8 0 nos1471 motornotbusy1471
  motorwaiting1471:
	OUTPUT_TEST layer1471 nos1471 busy1471
	JR_EQ8 busy1471 0 motornotbusy1471
	SLEEP
	JR motorwaiting1471
  motornotbusy1471:
    MOVEF_F 360.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1472:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 0.0 else1474_1
    WRITE32 ENDSUB_PR:CALLSUB1475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1475:
    CALL MOTOR.RESETCOUNT 'bc'
  while1477:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1481
    DATA8 flag1481
    DIVF F.1 2.0 tmpf1481
    CP_EQF 0.0 2.0 flag1481
    SELECTF flag1481 0.0 tmpf1481 F.0

    JR_GTEQF F.0 450.0 endwhile1477
  whilebody1477:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1482:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1486
    DATA8 flag1486
    DIVF F.1 2.0 tmpf1486
    CP_EQF 0.0 2.0 flag1486
    SELECTF flag1486 0.0 tmpf1486 F.0

    JR_LTF F.0 450.0 whilebody1477
  endwhile1477:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1489
	MOVEF_32 500.0 milliseconds1489
	DATA32 timer1489
	TIMER_WAIT milliseconds1489 timer1489
	TIMER_READY timer1489
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1491:
    MOVEF_F 400.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1492
    DATA8 flag1492
    DIVF 360.0 VL_M tmpf1492
    CP_EQF 0.0 VL_M flag1492
    SELECTF flag1492 0.0 tmpf1492 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1495:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1495
  whilebody1495:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1497:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1495
  endwhile1495:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1500:
    WRITE32 ENDSUB_BELLAM:CALLSUB1501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1501:
    MOVEF_F 200.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1502:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1504:
    CALL MOTOR.RESETCOUNT 'bc'
  while1506:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1510
    DATA8 flag1510
    DIVF F.1 2.0 tmpf1510
    CP_EQF 0.0 2.0 flag1510
    SELECTF flag1510 0.0 tmpf1510 F.0

    JR_GTEQF F.0 400.0 endwhile1506
  whilebody1506:
    MOVEF_F 60.0 VSPEED_M
    MOVEF_F 0.2 VK1_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1511:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1515
    DATA8 flag1515
    DIVF F.1 2.0 tmpf1515
    CP_EQF 0.0 2.0 flag1515
    SELECTF flag1515 0.0 tmpf1515 F.0

    JR_LTF F.0 400.0 whilebody1506
  endwhile1506:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1518
	MOVEF_32 500.0 milliseconds1518
	DATA32 timer1518
	TIMER_WAIT milliseconds1518 timer1518
	TIMER_READY timer1518
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1520:
    WRITE32 ENDSUB_A3:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1521:
    WRITE32 ENDSUB_A2:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1522:
  while1523:
    JR_LTEQF VS3_M 10.0 and1525
    JR_GTF VS2_M 10.0 or1524
  and1525:
    JR_GTEQF VS3_M 10.0 endwhile1523
    JR_GTEQF VS2_M 10.0 endwhile1523
  or1524:
  whilebody1523:
    WRITE32 ENDSUB_A3:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1526:
    WRITE32 ENDSUB_A2:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1527:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1528:
    JR_LTEQF VS3_M 10.0 and1529
    JR_GTF VS2_M 10.0 whilebody1523
  and1529:
    JR_GTEQF VS3_M 10.0 and1530
    JR_LTF VS2_M 10.0 whilebody1523
  and1530:
  endwhile1523:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1532:
    CALL MOTOR.RESETCOUNT 'bc'
  while1534:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1538
    DATA8 flag1538
    DIVF F.1 2.0 tmpf1538
    CP_EQF 0.0 2.0 flag1538
    SELECTF flag1538 0.0 tmpf1538 F.0

    JR_GTEQF F.0 500.0 endwhile1534
  whilebody1534:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1539:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1543
    DATA8 flag1543
    DIVF F.1 2.0 tmpf1543
    CP_EQF 0.0 2.0 flag1543
    SELECTF flag1543 0.0 tmpf1543 F.0

    JR_LTF F.0 500.0 whilebody1534
  endwhile1534:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1546
	MOVEF_32 500.0 milliseconds1546
	DATA32 timer1546
	TIMER_WAIT milliseconds1546 timer1546
	TIMER_READY timer1546
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1548:
    MOVEF_F 500.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1549
    DATA8 flag1549
    DIVF 360.0 VL_M tmpf1549
    CP_EQF 0.0 VL_M flag1549
    SELECTF flag1549 0.0 tmpf1549 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1552:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1552
  whilebody1552:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1554:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1552
  endwhile1552:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1557:
    WRITE32 ENDSUB_BELLAM2:CALLSUB1558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1558:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1559:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1561:
    CALL MOTOR.RESETCOUNT 'bc'
  while1563:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1567
    DATA8 flag1567
    DIVF F.1 2.0 tmpf1567
    CP_EQF 0.0 2.0 flag1567
    SELECTF flag1567 0.0 tmpf1567 F.0

    JR_GTEQF F.0 470.0 endwhile1563
  whilebody1563:
    MOVEF_F 60.0 VSPEED_M
    MOVEF_F 0.2 VK1_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1568:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1572
    DATA8 flag1572
    DIVF F.1 2.0 tmpf1572
    CP_EQF 0.0 2.0 flag1572
    SELECTF flag1572 0.0 tmpf1572 F.0

    JR_LTF F.0 470.0 whilebody1563
  endwhile1563:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1575
	MOVEF_32 500.0 milliseconds1575
	DATA32 timer1575
	TIMER_WAIT milliseconds1575 timer1575
	TIMER_READY timer1575
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1577:
    MOVEF_F 500.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1578:
    WRITE32 ENDSUB_PR:CALLSUB1579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1579:
    CALL MOTOR.RESETCOUNT 'bc'
  while1581:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1585
    DATA8 flag1585
    DIVF F.1 2.0 tmpf1585
    CP_EQF 0.0 2.0 flag1585
    SELECTF flag1585 0.0 tmpf1585 F.0

    JR_GTEQF F.0 270.0 endwhile1581
  whilebody1581:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1586:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1590
    DATA8 flag1590
    DIVF F.1 2.0 tmpf1590
    CP_EQF 0.0 2.0 flag1590
    SELECTF flag1590 0.0 tmpf1590 F.0

    JR_LTF F.0 270.0 whilebody1581
  endwhile1581:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1593
	MOVEF_32 500.0 milliseconds1593
	DATA32 timer1593
	TIMER_WAIT milliseconds1593 timer1593
	TIMER_READY timer1593
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1595:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1596
    DATA8 flag1596
    DIVF 360.0 VL_M tmpf1596
    CP_EQF 0.0 VL_M flag1596
    SELECTF flag1596 0.0 tmpf1596 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1599:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1599
  whilebody1599:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1601:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1599
  endwhile1599:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1604:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1605:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1606:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1608:
    CALL MOTOR.RESETCOUNT 'bc'
  while1610:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1614
    DATA8 flag1614
    DIVF F.1 2.0 tmpf1614
    CP_EQF 0.0 2.0 flag1614
    SELECTF flag1614 0.0 tmpf1614 F.0

    JR_GTEQF F.0 270.0 endwhile1610
  whilebody1610:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1615:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1619
    DATA8 flag1619
    DIVF F.1 2.0 tmpf1619
    CP_EQF 0.0 2.0 flag1619
    SELECTF flag1619 0.0 tmpf1619 F.0

    JR_LTF F.0 270.0 whilebody1610
  endwhile1610:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1622
	MOVEF_32 500.0 milliseconds1622
	DATA32 timer1622
	TIMER_WAIT milliseconds1622 timer1622
	TIMER_READY timer1622
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1624:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1625:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1626
	DATA8 nos1626
	DATA8 busy1626
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1626 nos1626
	JR_EQ8 0 nos1626 motornotbusy1626
  motorwaiting1626:
	OUTPUT_TEST layer1626 nos1626 busy1626
	JR_EQ8 busy1626 0 motornotbusy1626
	SLEEP
	JR motorwaiting1626
  motornotbusy1626:
    PROGRAM_STOP -1
  else1474_1:
  endif1474:
  else1470_1:
  endif1470:
    JR_NEQF VCOLOR3_M 5.0 else1628_1
    WRITE32 ENDSUB_PR:CALLSUB1629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1629:
    CALL MOTOR.RESETCOUNT 'bc'
  while1631:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1635
    DATA8 flag1635
    DIVF F.1 2.0 tmpf1635
    CP_EQF 0.0 2.0 flag1635
    SELECTF flag1635 0.0 tmpf1635 F.0

    JR_GTEQF F.0 270.0 endwhile1631
  whilebody1631:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1636:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1640
    DATA8 flag1640
    DIVF F.1 2.0 tmpf1640
    CP_EQF 0.0 2.0 flag1640
    SELECTF flag1640 0.0 tmpf1640 F.0

    JR_LTF F.0 270.0 whilebody1631
  endwhile1631:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1643
	MOVEF_32 500.0 milliseconds1643
	DATA32 timer1643
	TIMER_WAIT milliseconds1643 timer1643
	TIMER_READY timer1643
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1645:
    MOVEF_F 850.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1646
    DATA8 flag1646
    DIVF 360.0 VL_M tmpf1646
    CP_EQF 0.0 VL_M flag1646
    SELECTF flag1646 0.0 tmpf1646 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1649:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1649
  whilebody1649:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1651:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1649
  endwhile1649:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1654:
    JR_NEQF VC_M 1.0 else1655_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1656:
    JR endif1655
  else1655_1:
    JR_NEQF VC_M 0.0 else1655_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1657:
    JR endif1655
  else1655_2:
    JR_NEQF VC_M 2.0 else1655_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1658:
    MOVEF_F 640.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1659:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1661
	MOVEF_32 100.0 milliseconds1661
	DATA32 timer1661
	TIMER_WAIT milliseconds1661 timer1661
	TIMER_READY timer1661
    WRITE32 ENDSUB_PL:CALLSUB1662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1662:
    CALL MOTOR.RESETCOUNT 'bc'
  while1664:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1668
    DATA8 flag1668
    DIVF F.1 2.0 tmpf1668
    CP_EQF 0.0 2.0 flag1668
    SELECTF flag1668 0.0 tmpf1668 F.0

    JR_GTEQF F.0 270.0 endwhile1664
  whilebody1664:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1669:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1673
    DATA8 flag1673
    DIVF F.1 2.0 tmpf1673
    CP_EQF 0.0 2.0 flag1673
    SELECTF flag1673 0.0 tmpf1673 F.0

    JR_LTF F.0 270.0 whilebody1664
  endwhile1664:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1676
	MOVEF_32 500.0 milliseconds1676
	DATA32 timer1676
	TIMER_WAIT milliseconds1676 timer1676
	TIMER_READY timer1676
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1678:
    CALL MOTOR.RESETCOUNT 'bc'
  while1680:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1684
    DATA8 flag1684
    DIVF F.1 2.0 tmpf1684
    CP_EQF 0.0 2.0 flag1684
    SELECTF flag1684 0.0 tmpf1684 F.0

    JR_GTEQF F.0 100.0 endwhile1680
  whilebody1680:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1685:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1689
    DATA8 flag1689
    DIVF F.1 2.0 tmpf1689
    CP_EQF 0.0 2.0 flag1689
    SELECTF flag1689 0.0 tmpf1689 F.0

    JR_LTF F.0 100.0 whilebody1680
  endwhile1680:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1691:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1693
	DATA8 nos1693
	DATA8 busy1693
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1693 nos1693
	JR_EQ8 0 nos1693 motornotbusy1693
  motorwaiting1693:
	OUTPUT_TEST layer1693 nos1693 busy1693
	JR_EQ8 busy1693 0 motornotbusy1693
	SLEEP
	JR motorwaiting1693
  motornotbusy1693:
    PROGRAM_STOP -1
  else1655_3:
  endif1655:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1695:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1697:
    CALL MOTOR.RESETCOUNT 'bc'
  while1699:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1703
    DATA8 flag1703
    DIVF F.1 2.0 tmpf1703
    CP_EQF 0.0 2.0 flag1703
    SELECTF flag1703 0.0 tmpf1703 F.0

    JR_GTEQF F.0 270.0 endwhile1699
  whilebody1699:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1704:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1708
    DATA8 flag1708
    DIVF F.1 2.0 tmpf1708
    CP_EQF 0.0 2.0 flag1708
    SELECTF flag1708 0.0 tmpf1708 F.0

    JR_LTF F.0 270.0 whilebody1699
  endwhile1699:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1711
	MOVEF_32 500.0 milliseconds1711
	DATA32 timer1711
	TIMER_WAIT milliseconds1711 timer1711
	TIMER_READY timer1711
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1713
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1713
    JR_NEQ32 0 tmp1713 alreadylaunched1713
    OBJECT_START TVIDVIG
  alreadylaunched1713:
    WRITE32 ENDSUB_NPL:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1714:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1715:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1716
	DATA8 nos1716
	DATA8 busy1716
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1716 nos1716
	JR_EQ8 0 nos1716 motornotbusy1716
  motorwaiting1716:
	OUTPUT_TEST layer1716 nos1716 busy1716
	JR_EQ8 busy1716 0 motornotbusy1716
	SLEEP
	JR motorwaiting1716
  motornotbusy1716:
    WRITE32 ENDSUB_A3:CALLSUB1717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1717:
    WRITE32 ENDSUB_A2:CALLSUB1718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1718:
  while1719:
    JR_LTEQF VS3_M 10.0 and1721
    JR_GTF VS2_M 10.0 or1720
  and1721:
    JR_GTEQF VS3_M 10.0 endwhile1719
    JR_GTEQF VS2_M 10.0 endwhile1719
  or1720:
  whilebody1719:
    WRITE32 ENDSUB_A3:CALLSUB1722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1722:
    WRITE32 ENDSUB_A2:CALLSUB1723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1723:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1724:
    JR_LTEQF VS3_M 10.0 and1725
    JR_GTF VS2_M 10.0 whilebody1719
  and1725:
    JR_GTEQF VS3_M 10.0 and1726
    JR_LTF VS2_M 10.0 whilebody1719
  and1726:
  endwhile1719:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1628_1:
  endif1628:
    WRITE32 ENDSUB_HSV_100:CALLSUB1729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1729:
    JR_GTEQF VV_M 0.022 else1730_1
    MOVEF_F 5.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1730
  else1730_1:
    MOVEF_F 4.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1730_2:
  endif1730:
    JR_NEQF VCOLOR4_M 4.0 else1733_1
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1734
	DATA8 nos1734
	DATA8 busy1734
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1734 nos1734
	JR_EQ8 0 nos1734 motornotbusy1734
  motorwaiting1734:
	OUTPUT_TEST layer1734 nos1734 busy1734
	JR_EQ8 busy1734 0 motornotbusy1734
	SLEEP
	JR motorwaiting1734
  motornotbusy1734:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 400.0 'true'

	DATA8 layer1735
	DATA8 nos1735
	DATA8 busy1735
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1735 nos1735
	JR_EQ8 0 nos1735 motornotbusy1735
  motorwaiting1735:
	OUTPUT_TEST layer1735 nos1735 busy1735
	JR_EQ8 busy1735 0 motornotbusy1735
	SLEEP
	JR motorwaiting1735
  motornotbusy1735:
    WRITE32 ENDSUB_A3:CALLSUB1736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1736:
    WRITE32 ENDSUB_A2:CALLSUB1737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1737:
  while1738:
    JR_LTEQF VS3_M 60.0 endwhile1738
  whilebody1738:
    WRITE32 ENDSUB_A3:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1739:
    WRITE32 ENDSUB_A2:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1740:
    CALL MOTOR.STARTSYNC 'bc' 0.0 20.0
    JR_GTF VS3_M 60.0 whilebody1738
  endwhile1738:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1743:
    WRITE32 ENDSUB_A2:CALLSUB1744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1744:
  while1745:
    JR_LTEQF VS3_M 15.0 and1747
    JR_GTF VS2_M 15.0 or1746
  and1747:
    JR_GTEQF VS3_M 15.0 endwhile1745
    JR_GTEQF VS2_M 15.0 endwhile1745
  or1746:
  whilebody1745:
    WRITE32 ENDSUB_A3:CALLSUB1748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1748:
    WRITE32 ENDSUB_A2:CALLSUB1749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1749:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1750:
    JR_LTEQF VS3_M 15.0 and1751
    JR_GTF VS2_M 15.0 whilebody1745
  and1751:
    JR_GTEQF VS3_M 15.0 and1752
    JR_LTF VS2_M 15.0 whilebody1745
  and1752:
  endwhile1745:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1754
	DATA8 nos1754
	DATA8 busy1754
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1754 nos1754
	JR_EQ8 0 nos1754 motornotbusy1754
  motorwaiting1754:
	OUTPUT_TEST layer1754 nos1754 busy1754
	JR_EQ8 busy1754 0 motornotbusy1754
	SLEEP
	JR motorwaiting1754
  motornotbusy1754:
    WRITE32 ENDSUB_A3:CALLSUB1755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1755:
    WRITE32 ENDSUB_A2:CALLSUB1756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1756:
  while1757:
    JR_LTEQF VS3_M 15.0 and1759
    JR_GTF VS2_M 15.0 or1758
  and1759:
    JR_GTEQF VS3_M 15.0 endwhile1757
    JR_GTEQF VS2_M 15.0 endwhile1757
  or1758:
  whilebody1757:
    WRITE32 ENDSUB_A3:CALLSUB1760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1760:
    WRITE32 ENDSUB_A2:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1761:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1762:
    JR_LTEQF VS3_M 15.0 and1763
    JR_GTF VS2_M 15.0 whilebody1757
  and1763:
    JR_GTEQF VS3_M 15.0 and1764
    JR_LTF VS2_M 15.0 whilebody1757
  and1764:
  endwhile1757:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 1.0 else1766_1
    WRITE32 ENDSUB_PR:CALLSUB1767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1767:
    CALL MOTOR.RESETCOUNT 'bc'
  while1769:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1773
    DATA8 flag1773
    DIVF F.1 2.0 tmpf1773
    CP_EQF 0.0 2.0 flag1773
    SELECTF flag1773 0.0 tmpf1773 F.0

    JR_GTEQF F.0 500.0 endwhile1769
  whilebody1769:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1774:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1778
    DATA8 flag1778
    DIVF F.1 2.0 tmpf1778
    CP_EQF 0.0 2.0 flag1778
    SELECTF flag1778 0.0 tmpf1778 F.0

    JR_LTF F.0 500.0 whilebody1769
  endwhile1769:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1781
	MOVEF_32 500.0 milliseconds1781
	DATA32 timer1781
	TIMER_WAIT milliseconds1781 timer1781
	TIMER_READY timer1781
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1783:
    MOVEF_F 520.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1784
    DATA8 flag1784
    DIVF 360.0 VL_M tmpf1784
    CP_EQF 0.0 VL_M flag1784
    SELECTF flag1784 0.0 tmpf1784 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1787:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1787
  whilebody1787:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1789:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1787
  endwhile1787:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1792:
    WRITE32 ENDSUB_BELLAM2:CALLSUB1793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1793:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1794:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1796:
    CALL MOTOR.RESETCOUNT 'bc'
  while1798:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1802
    DATA8 flag1802
    DIVF F.1 2.0 tmpf1802
    CP_EQF 0.0 2.0 flag1802
    SELECTF flag1802 0.0 tmpf1802 F.0

    JR_GTEQF F.0 470.0 endwhile1798
  whilebody1798:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1803:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1807
    DATA8 flag1807
    DIVF F.1 2.0 tmpf1807
    CP_EQF 0.0 2.0 flag1807
    SELECTF flag1807 0.0 tmpf1807 F.0

    JR_LTF F.0 470.0 whilebody1798
  endwhile1798:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1810
	MOVEF_32 500.0 milliseconds1810
	DATA32 timer1810
	TIMER_WAIT milliseconds1810 timer1810
	TIMER_READY timer1810
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1812:
    MOVEF_F 500.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1813:
    WRITE32 ENDSUB_PR:CALLSUB1814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1814:
    CALL MOTOR.RESETCOUNT 'bc'
  while1816:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1820
    DATA8 flag1820
    DIVF F.1 2.0 tmpf1820
    CP_EQF 0.0 2.0 flag1820
    SELECTF flag1820 0.0 tmpf1820 F.0

    JR_GTEQF F.0 270.0 endwhile1816
  whilebody1816:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1821:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1825
    DATA8 flag1825
    DIVF F.1 2.0 tmpf1825
    CP_EQF 0.0 2.0 flag1825
    SELECTF flag1825 0.0 tmpf1825 F.0

    JR_LTF F.0 270.0 whilebody1816
  endwhile1816:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1828
	MOVEF_32 500.0 milliseconds1828
	DATA32 timer1828
	TIMER_WAIT milliseconds1828 timer1828
	TIMER_READY timer1828
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1830:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1831
    DATA8 flag1831
    DIVF 360.0 VL_M tmpf1831
    CP_EQF 0.0 VL_M flag1831
    SELECTF flag1831 0.0 tmpf1831 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1834:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1834
  whilebody1834:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1836:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1834
  endwhile1834:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1839:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1840:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1841:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1843:
    CALL MOTOR.RESETCOUNT 'bc'
  while1845:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1849
    DATA8 flag1849
    DIVF F.1 2.0 tmpf1849
    CP_EQF 0.0 2.0 flag1849
    SELECTF flag1849 0.0 tmpf1849 F.0

    JR_GTEQF F.0 270.0 endwhile1845
  whilebody1845:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1850:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1854
    DATA8 flag1854
    DIVF F.1 2.0 tmpf1854
    CP_EQF 0.0 2.0 flag1854
    SELECTF flag1854 0.0 tmpf1854 F.0

    JR_LTF F.0 270.0 whilebody1845
  endwhile1845:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1857
	MOVEF_32 500.0 milliseconds1857
	DATA32 timer1857
	TIMER_WAIT milliseconds1857 timer1857
	TIMER_READY timer1857
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1859:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1860:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1861
	DATA8 nos1861
	DATA8 busy1861
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1861 nos1861
	JR_EQ8 0 nos1861 motornotbusy1861
  motorwaiting1861:
	OUTPUT_TEST layer1861 nos1861 busy1861
	JR_EQ8 busy1861 0 motornotbusy1861
	SLEEP
	JR motorwaiting1861
  motornotbusy1861:
    PROGRAM_STOP -1
  else1766_1:
  endif1766:
  else1733_1:
  endif1733:
    JR_NEQF VCOLOR4_M 5.0 else1863_1
    WRITE32 ENDSUB_PR:CALLSUB1864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1864:
    CALL MOTOR.RESETCOUNT 'bc'
  while1866:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1870
    DATA8 flag1870
    DIVF F.1 2.0 tmpf1870
    CP_EQF 0.0 2.0 flag1870
    SELECTF flag1870 0.0 tmpf1870 F.0

    JR_GTEQF F.0 450.0 endwhile1866
  whilebody1866:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1871:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1875
    DATA8 flag1875
    DIVF F.1 2.0 tmpf1875
    CP_EQF 0.0 2.0 flag1875
    SELECTF flag1875 0.0 tmpf1875 F.0

    JR_LTF F.0 450.0 whilebody1866
  endwhile1866:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1878
	MOVEF_32 500.0 milliseconds1878
	DATA32 timer1878
	TIMER_WAIT milliseconds1878 timer1878
	TIMER_READY timer1878
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1880:
    MOVEF_F 400.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1881
    DATA8 flag1881
    DIVF 360.0 VL_M tmpf1881
    CP_EQF 0.0 VL_M flag1881
    SELECTF flag1881 0.0 tmpf1881 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1884:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1884
  whilebody1884:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1886:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1884
  endwhile1884:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1889:
    JR_NEQF VC_M 1.0 else1890_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1891:
    JR endif1890
  else1890_1:
    JR_NEQF VC_M 0.0 else1890_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1892:
    JR endif1890
  else1890_2:
    JR_NEQF VC_M 2.0 else1890_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1893:
    MOVEF_F 160.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1894:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1896:
    CALL MOTOR.RESETCOUNT 'bc'
  while1898:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1902
    DATA8 flag1902
    DIVF F.1 2.0 tmpf1902
    CP_EQF 0.0 2.0 flag1902
    SELECTF flag1902 0.0 tmpf1902 F.0

    JR_GTEQF F.0 400.0 endwhile1898
  whilebody1898:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1903:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1907
    DATA8 flag1907
    DIVF F.1 2.0 tmpf1907
    CP_EQF 0.0 2.0 flag1907
    SELECTF flag1907 0.0 tmpf1907 F.0

    JR_LTF F.0 400.0 whilebody1898
  endwhile1898:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1910
	MOVEF_32 500.0 milliseconds1910
	DATA32 timer1910
	TIMER_WAIT milliseconds1910 timer1910
	TIMER_READY timer1910
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1912:
    CALL MOTOR.RESETCOUNT 'bc'
  while1914:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1918
    DATA8 flag1918
    DIVF F.1 2.0 tmpf1918
    CP_EQF 0.0 2.0 flag1918
    SELECTF flag1918 0.0 tmpf1918 F.0

    JR_GTEQF F.0 100.0 endwhile1914
  whilebody1914:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1919:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1923
    DATA8 flag1923
    DIVF F.1 2.0 tmpf1923
    CP_EQF 0.0 2.0 flag1923
    SELECTF flag1923 0.0 tmpf1923 F.0

    JR_LTF F.0 100.0 whilebody1914
  endwhile1914:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1925:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1927
	DATA8 nos1927
	DATA8 busy1927
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1927 nos1927
	JR_EQ8 0 nos1927 motornotbusy1927
  motorwaiting1927:
	OUTPUT_TEST layer1927 nos1927 busy1927
	JR_EQ8 busy1927 0 motornotbusy1927
	SLEEP
	JR motorwaiting1927
  motornotbusy1927:
    PROGRAM_STOP -1
  else1890_3:
  endif1890:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1929:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1931:
    CALL MOTOR.RESETCOUNT 'bc'
  while1933:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1937
    DATA8 flag1937
    DIVF F.1 2.0 tmpf1937
    CP_EQF 0.0 2.0 flag1937
    SELECTF flag1937 0.0 tmpf1937 F.0

    JR_GTEQF F.0 400.0 endwhile1933
  whilebody1933:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1938 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1938:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1942
    DATA8 flag1942
    DIVF F.1 2.0 tmpf1942
    CP_EQF 0.0 2.0 flag1942
    SELECTF flag1942 0.0 tmpf1942 F.0

    JR_LTF F.0 400.0 whilebody1933
  endwhile1933:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1945
	MOVEF_32 500.0 milliseconds1945
	DATA32 timer1945
	TIMER_WAIT milliseconds1945 timer1945
	TIMER_READY timer1945
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1947
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1947
    JR_NEQ32 0 tmp1947 alreadylaunched1947
    OBJECT_START TVIDVIG
  alreadylaunched1947:
    WRITE32 ENDSUB_NPP:CALLSUB1948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1948:
    WRITE32 ENDSUB_A3:CALLSUB1949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1949:
    WRITE32 ENDSUB_A2:CALLSUB1950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1950:
  while1951:
    JR_LTEQF VS3_M 10.0 and1953
    JR_GTF VS2_M 10.0 or1952
  and1953:
    JR_GTEQF VS3_M 10.0 endwhile1951
    JR_GTEQF VS2_M 10.0 endwhile1951
  or1952:
  whilebody1951:
    WRITE32 ENDSUB_A3:CALLSUB1954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1954:
    WRITE32 ENDSUB_A2:CALLSUB1955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1955:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1956:
    JR_LTEQF VS3_M 10.0 and1957
    JR_GTF VS2_M 10.0 whilebody1951
  and1957:
    JR_GTEQF VS3_M 10.0 and1958
    JR_LTF VS2_M 10.0 whilebody1951
  and1958:
  endwhile1951:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1863_1:
  endif1863:
    WRITE32 ENDSUB_HSV_100:CALLSUB1961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1961:
    JR_LTF VV_M 0.01178 or1963
    JR_NEQF VH_M 30.0 else1962_1
  or1963:
    MOVEF_F 5.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1962
  else1962_1:
    MOVEF_F 4.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1962_2:
  endif1962:
    JR_NEQF VCOLOR5_M 4.0 else1966_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1967
	DATA8 nos1967
	DATA8 busy1967
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1967 nos1967
	JR_EQ8 0 nos1967 motornotbusy1967
  motorwaiting1967:
	OUTPUT_TEST layer1967 nos1967 busy1967
	JR_EQ8 busy1967 0 motornotbusy1967
	SLEEP
	JR motorwaiting1967
  motornotbusy1967:
    MOVEF_F 520.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1968:
    WRITE32 ENDSUB_PR:CALLSUB1969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1969:
    CALL MOTOR.RESETCOUNT 'bc'
  while1971:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1975
    DATA8 flag1975
    DIVF F.1 2.0 tmpf1975
    CP_EQF 0.0 2.0 flag1975
    SELECTF flag1975 0.0 tmpf1975 F.0

    JR_GTEQF F.0 270.0 endwhile1971
  whilebody1971:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1976:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1980
    DATA8 flag1980
    DIVF F.1 2.0 tmpf1980
    CP_EQF 0.0 2.0 flag1980
    SELECTF flag1980 0.0 tmpf1980 F.0

    JR_LTF F.0 270.0 whilebody1971
  endwhile1971:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1983
	MOVEF_32 500.0 milliseconds1983
	DATA32 timer1983
	TIMER_WAIT milliseconds1983 timer1983
	TIMER_READY timer1983
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1985:
    CALL MOTOR.RESETCOUNT 'bc'
  while1987:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1991
    DATA8 flag1991
    DIVF F.1 2.0 tmpf1991
    CP_EQF 0.0 2.0 flag1991
    SELECTF flag1991 0.0 tmpf1991 F.0

    JR_GTEQF F.0 100.0 endwhile1987
  whilebody1987:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1992 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1992:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1996
    DATA8 flag1996
    DIVF F.1 2.0 tmpf1996
    CP_EQF 0.0 2.0 flag1996
    SELECTF flag1996 0.0 tmpf1996 F.0

    JR_LTF F.0 100.0 whilebody1987
  endwhile1987:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1998
    DATA8 flag1998
    DIVF 360.0 VL_M tmpf1998
    CP_EQF 0.0 VL_M flag1998
    SELECTF flag1998 0.0 tmpf1998 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2001:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2001
  whilebody2001:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2003 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2003:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2001
  endwhile2001:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB2006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB2006:
    WRITE32 ENDSUB_BELLAM3:CALLSUB2007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB2007:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2008:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2010:
    CALL MOTOR.RESETCOUNT 'bc'
  while2012:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2016
    DATA8 flag2016
    DIVF F.1 2.0 tmpf2016
    CP_EQF 0.0 2.0 flag2016
    SELECTF flag2016 0.0 tmpf2016 F.0

    JR_GTEQF F.0 270.0 endwhile2012
  whilebody2012:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2017:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2021
    DATA8 flag2021
    DIVF F.1 2.0 tmpf2021
    CP_EQF 0.0 2.0 flag2021
    SELECTF flag2021 0.0 tmpf2021 F.0

    JR_LTF F.0 270.0 whilebody2012
  endwhile2012:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2024
	MOVEF_32 500.0 milliseconds2024
	DATA32 timer2024
	TIMER_WAIT milliseconds2024 timer2024
	TIMER_READY timer2024
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2026:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2027:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2028
	DATA8 nos2028
	DATA8 busy2028
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2028 nos2028
	JR_EQ8 0 nos2028 motornotbusy2028
  motorwaiting2028:
	OUTPUT_TEST layer2028 nos2028 busy2028
	JR_EQ8 busy2028 0 motornotbusy2028
	SLEEP
	JR motorwaiting2028
  motornotbusy2028:
    PROGRAM_STOP -1
  else1966_1:
  endif1966:
    JR_NEQF VCOLOR5_M 5.0 else2030_1
    WRITE32 ENDSUB_PR:CALLSUB2031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2031:
    CALL MOTOR.RESETCOUNT 'bc'
  while2033:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2037
    DATA8 flag2037
    DIVF F.1 2.0 tmpf2037
    CP_EQF 0.0 2.0 flag2037
    SELECTF flag2037 0.0 tmpf2037 F.0

    JR_GTEQF F.0 500.0 endwhile2033
  whilebody2033:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2038:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2042
    DATA8 flag2042
    DIVF F.1 2.0 tmpf2042
    CP_EQF 0.0 2.0 flag2042
    SELECTF flag2042 0.0 tmpf2042 F.0

    JR_LTF F.0 500.0 whilebody2033
  endwhile2033:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds2045
	MOVEF_32 500.0 milliseconds2045
	DATA32 timer2045
	TIMER_WAIT milliseconds2045 timer2045
	TIMER_READY timer2045
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB2047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB2047:
    MOVEF_F 520.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf2048
    DATA8 flag2048
    DIVF 360.0 VL_M tmpf2048
    CP_EQF 0.0 VL_M flag2048
    SELECTF flag2048 0.0 tmpf2048 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2051:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2051
  whilebody2051:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2053:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2051
  endwhile2051:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB2056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB2056:
    JR_NEQF VC_M 1.0 else2057_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB2058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB2058:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2059:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2061:
    CALL MOTOR.RESETCOUNT 'bc'
  while2063:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2067
    DATA8 flag2067
    DIVF F.1 2.0 tmpf2067
    CP_EQF 0.0 2.0 flag2067
    SELECTF flag2067 0.0 tmpf2067 F.0

    JR_GTEQF F.0 470.0 endwhile2063
  whilebody2063:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2068:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2072
    DATA8 flag2072
    DIVF F.1 2.0 tmpf2072
    CP_EQF 0.0 2.0 flag2072
    SELECTF flag2072 0.0 tmpf2072 F.0

    JR_LTF F.0 470.0 whilebody2063
  endwhile2063:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2075
	MOVEF_32 500.0 milliseconds2075
	DATA32 timer2075
	TIMER_WAIT milliseconds2075 timer2075
	TIMER_READY timer2075
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2077:
    MOVEF_F 520.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2078:
    WRITE32 ENDSUB_PR:CALLSUB2079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2079:
    CALL MOTOR.RESETCOUNT 'bc'
  while2081:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2085
    DATA8 flag2085
    DIVF F.1 2.0 tmpf2085
    CP_EQF 0.0 2.0 flag2085
    SELECTF flag2085 0.0 tmpf2085 F.0

    JR_GTEQF F.0 270.0 endwhile2081
  whilebody2081:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2086:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2090
    DATA8 flag2090
    DIVF F.1 2.0 tmpf2090
    CP_EQF 0.0 2.0 flag2090
    SELECTF flag2090 0.0 tmpf2090 F.0

    JR_LTF F.0 270.0 whilebody2081
  endwhile2081:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds2093
	MOVEF_32 500.0 milliseconds2093
	DATA32 timer2093
	TIMER_WAIT milliseconds2093 timer2093
	TIMER_READY timer2093
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB2095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB2095:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf2096
    DATA8 flag2096
    DIVF 360.0 VL_M tmpf2096
    CP_EQF 0.0 VL_M flag2096
    SELECTF flag2096 0.0 tmpf2096 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2099:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2099
  whilebody2099:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2101:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2099
  endwhile2099:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB2104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB2104:
    WRITE32 ENDSUB_BELLAM3:CALLSUB2105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB2105:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2106:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2108:
    CALL MOTOR.RESETCOUNT 'bc'
  while2110:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2114
    DATA8 flag2114
    DIVF F.1 2.0 tmpf2114
    CP_EQF 0.0 2.0 flag2114
    SELECTF flag2114 0.0 tmpf2114 F.0

    JR_GTEQF F.0 270.0 endwhile2110
  whilebody2110:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2115:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2119
    DATA8 flag2119
    DIVF F.1 2.0 tmpf2119
    CP_EQF 0.0 2.0 flag2119
    SELECTF flag2119 0.0 tmpf2119 F.0

    JR_LTF F.0 270.0 whilebody2110
  endwhile2110:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2122
	MOVEF_32 500.0 milliseconds2122
	DATA32 timer2122
	TIMER_WAIT milliseconds2122 timer2122
	TIMER_READY timer2122
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2124:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2125:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2126
	DATA8 nos2126
	DATA8 busy2126
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2126 nos2126
	JR_EQ8 0 nos2126 motornotbusy2126
  motorwaiting2126:
	OUTPUT_TEST layer2126 nos2126 busy2126
	JR_EQ8 busy2126 0 motornotbusy2126
	SLEEP
	JR motorwaiting2126
  motornotbusy2126:
    PROGRAM_STOP -1
    JR endif2057
  else2057_1:
    WRITE32 ENDSUB_BELLAM3:CALLSUB2128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB2128:
    MOVEF_F 330.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2129:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2131:
    CALL MOTOR.RESETCOUNT 'bc'
  while2133:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2137
    DATA8 flag2137
    DIVF F.1 2.0 tmpf2137
    CP_EQF 0.0 2.0 flag2137
    SELECTF flag2137 0.0 tmpf2137 F.0

    JR_GTEQF F.0 470.0 endwhile2133
  whilebody2133:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2138:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2142
    DATA8 flag2142
    DIVF F.1 2.0 tmpf2142
    CP_EQF 0.0 2.0 flag2142
    SELECTF flag2142 0.0 tmpf2142 F.0

    JR_LTF F.0 470.0 whilebody2133
  endwhile2133:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2145
	MOVEF_32 500.0 milliseconds2145
	DATA32 timer2145
	TIMER_WAIT milliseconds2145 timer2145
	TIMER_READY timer2145
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2147:
    MOVEF_F 1200.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2148:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2149
	DATA8 nos2149
	DATA8 busy2149
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2149 nos2149
	JR_EQ8 0 nos2149 motornotbusy2149
  motorwaiting2149:
	OUTPUT_TEST layer2149 nos2149 busy2149
	JR_EQ8 busy2149 0 motornotbusy2149
	SLEEP
	JR motorwaiting2149
  motornotbusy2149:
    PROGRAM_STOP -1
  else2057_2:
  endif2057:
  else2030_1:
  endif2030:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer2152
	DATA8 nos2152
	DATA8 busy2152
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2152 nos2152
	JR_EQ8 0 nos2152 motornotbusy2152
  motorwaiting2152:
	OUTPUT_TEST layer2152 nos2152 busy2152
	JR_EQ8 busy2152 0 motornotbusy2152
	SLEEP
	JR motorwaiting2152
  motornotbusy2152:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer2153
	DATA8 nos2153
	DATA8 busy2153
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2153 nos2153
	JR_EQ8 0 nos2153 motornotbusy2153
  motorwaiting2153:
	OUTPUT_TEST layer2153 nos2153 busy2153
	JR_EQ8 busy2153 0 motornotbusy2153
	SLEEP
	JR motorwaiting2153
  motornotbusy2153:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer2155
	DATA8 nos2155
	DATA8 busy2155
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2155 nos2155
	JR_EQ8 0 nos2155 motornotbusy2155
  motorwaiting2155:
	OUTPUT_TEST layer2155 nos2155 busy2155
	JR_EQ8 busy2155 0 motornotbusy2155
	SLEEP
	JR motorwaiting2155
  motornotbusy2155:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer2156
	DATA8 nos2156
	DATA8 busy2156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2156 nos2156
	JR_EQ8 0 nos2156 motornotbusy2156
  motorwaiting2156:
	OUTPUT_TEST layer2156 nos2156 busy2156
	JR_EQ8 busy2156 0 motornotbusy2156
	SLEEP
	JR motorwaiting2156
  motornotbusy2156:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf2158
    DATA8 flag2158
    DIVF 360.0 VL_M tmpf2158
    CP_EQF 0.0 VL_M flag2158
    SELECTF flag2158 0.0 tmpf2158 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2161:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2161
  whilebody2161:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2163:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2161
  endwhile2161:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2166:
    ADDF VC_M 1.0 VC_M
    DATA32 tmp2168
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp2168
    JR_NEQ32 0 tmp2168 alreadylaunched2168
    OBJECT_START TVIDVIG
  alreadylaunched2168:
ENDTHREAD:
    RETURN
SUB_US:
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf6
    DATA8 flag6
    DIVF 360.0 VL_M tmpf6
    CP_EQF 0.0 VL_M flag6
    SELECTF flag6 0.0 tmpf6 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while9:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf13
    DATA8 flag13
    DIVF F.1 2.0 tmpf13
    CP_EQF 0.0 2.0 flag13
    SELECTF flag13 0.0 tmpf13 F.0

    JR_GTEQF F.0 VX_M endwhile9
  whilebody9:
    WRITE32 ENDSUB_A3:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB14:
    WRITE32 ENDSUB_A2:CALLSUB15 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB15:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB16:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf20
    DATA8 flag20
    DIVF F.1 2.0 tmpf20
    CP_EQF 0.0 2.0 flag20
    SELECTF flag20 0.0 tmpf20 F.0

    JR_LTF F.0 VX_M whilebody9
  endwhile9:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB22:
    WRITE32 ENDSUB_A2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB23:
  while24:
    JR_LTEQF VS3_M 15.0 and26
    JR_GTF VS2_M 15.0 or25
  and26:
    JR_GTEQF VS3_M 15.0 endwhile24
    JR_GTEQF VS2_M 15.0 endwhile24
  or25:
  whilebody24:
    WRITE32 ENDSUB_A3:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB27:
    WRITE32 ENDSUB_A2:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB28:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB29:
    JR_LTEQF VS3_M 15.0 and30
    JR_GTF VS2_M 15.0 whilebody24
  and30:
    JR_GTEQF VS3_M 15.0 and31
    JR_LTF VS2_M 15.0 whilebody24
  and31:
  endwhile24:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_US:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_US:
SUB_PL:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer33
	DATA8 nos33
	DATA8 busy33
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer33 nos33
	JR_EQ8 0 nos33 motornotbusy33
  motorwaiting33:
	OUTPUT_TEST layer33 nos33 busy33
	JR_EQ8 busy33 0 motornotbusy33
	SLEEP
	JR motorwaiting33
  motornotbusy33:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB35:
    WRITE32 ENDSUB_A2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB36:
  while37:
    JR_LTEQF VS2_M 15.0 endwhile37
  whilebody37:
    WRITE32 ENDSUB_A3:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB38:
    WRITE32 ENDSUB_A2:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB39:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 15.0 whilebody37
  endwhile37:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB42:
    WRITE32 ENDSUB_A2:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB43:
  while44:
    JR_GTEQF VS2_M 15.0 endwhile44
  whilebody44:
    WRITE32 ENDSUB_A3:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB45:
    WRITE32 ENDSUB_A2:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB46:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody44
  endwhile44:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PL:
SUB_PR:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 80.0 'true'

	DATA8 layer49
	DATA8 nos49
	DATA8 busy49
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer49 nos49
	JR_EQ8 0 nos49 motornotbusy49
  motorwaiting49:
	OUTPUT_TEST layer49 nos49 busy49
	JR_EQ8 busy49 0 motornotbusy49
	SLEEP
	JR motorwaiting49
  motornotbusy49:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB51:
    WRITE32 ENDSUB_A2:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB52:
  while53:
    JR_LTEQF VS3_M 15.0 endwhile53
  whilebody53:
    WRITE32 ENDSUB_A3:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB54:
    WRITE32 ENDSUB_A2:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB55:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 15.0 whilebody53
  endwhile53:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB58:
    WRITE32 ENDSUB_A2:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB59:
  while60:
    JR_GTEQF VS3_M 15.0 endwhile60
  whilebody60:
    WRITE32 ENDSUB_A3:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB61:
    WRITE32 ENDSUB_A2:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB62:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody60
  endwhile60:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PR:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PR:
SUB_NPL:
    WRITE32 ENDSUB_A2:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB65:
    WRITE32 ENDSUB_A3:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB66:
  while67:
    JR_LTEQF VS3_M 10.0 and69
    JR_GTF VS2_M 10.0 or68
  and69:
    JR_GTEQF VS3_M 10.0 and70
    JR_GTF VS2_M 10.0 or68
  and70:
    JR_LTEQF VS3_M 10.0 endwhile67
    JR_GTEQF VS2_M 10.0 endwhile67
  or68:
  whilebody67:
    WRITE32 ENDSUB_A2:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB71:
    WRITE32 ENDSUB_A3:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB72:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 10.0 and74
    JR_GTF VS2_M 10.0 whilebody67
  and74:
    JR_GTEQF VS3_M 10.0 and75
    JR_GTF VS2_M 10.0 whilebody67
  and75:
    JR_LTEQF VS3_M 10.0 and76
    JR_LTF VS2_M 10.0 whilebody67
  and76:
  endwhile67:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer78
	DATA8 nos78
	DATA8 busy78
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer78 nos78
	JR_EQ8 0 nos78 motornotbusy78
  motorwaiting78:
	OUTPUT_TEST layer78 nos78 busy78
	JR_EQ8 busy78 0 motornotbusy78
	SLEEP
	JR motorwaiting78
  motornotbusy78:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 90.0 'true'

	DATA8 layer80
	DATA8 nos80
	DATA8 busy80
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer80 nos80
	JR_EQ8 0 nos80 motornotbusy80
  motorwaiting80:
	OUTPUT_TEST layer80 nos80 busy80
	JR_EQ8 busy80 0 motornotbusy80
	SLEEP
	JR motorwaiting80
  motornotbusy80:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB82:
    WRITE32 ENDSUB_A2:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB83:
  while84:
    JR_LTEQF VS2_M 10.0 endwhile84
  whilebody84:
    WRITE32 ENDSUB_A3:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB85:
    WRITE32 ENDSUB_A2:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB86:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 10.0 whilebody84
  endwhile84:
    WRITE32 ENDSUB_A3:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB88:
    WRITE32 ENDSUB_A2:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB89:
  while90:
    JR_GTEQF VS2_M 60.0 endwhile90
  whilebody90:
    WRITE32 ENDSUB_A3:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB91:
    WRITE32 ENDSUB_A2:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB92:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 60.0 whilebody90
  endwhile90:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPL:
SUB_NPP:
    WRITE32 ENDSUB_A2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB95:
    WRITE32 ENDSUB_A3:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB96:
  while97:
    JR_LTEQF VS3_M 10.0 and99
    JR_GTF VS2_M 10.0 or98
  and99:
    JR_GTEQF VS3_M 10.0 and100
    JR_GTF VS2_M 10.0 or98
  and100:
    JR_LTEQF VS3_M 10.0 endwhile97
    JR_GTEQF VS2_M 10.0 endwhile97
  or98:
  whilebody97:
    WRITE32 ENDSUB_A2:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB101:
    WRITE32 ENDSUB_A3:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB102:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 10.0 and104
    JR_GTF VS2_M 10.0 whilebody97
  and104:
    JR_GTEQF VS3_M 10.0 and105
    JR_GTF VS2_M 10.0 whilebody97
  and105:
    JR_LTEQF VS3_M 10.0 and106
    JR_LTF VS2_M 10.0 whilebody97
  and106:
  endwhile97:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer108
	DATA8 nos108
	DATA8 busy108
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer108 nos108
	JR_EQ8 0 nos108 motornotbusy108
  motorwaiting108:
	OUTPUT_TEST layer108 nos108 busy108
	JR_EQ8 busy108 0 motornotbusy108
	SLEEP
	JR motorwaiting108
  motornotbusy108:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB112:
    WRITE32 ENDSUB_A2:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB113:
  while114:
    JR_LTEQF VS3_M 10.0 endwhile114
  whilebody114:
    WRITE32 ENDSUB_A3:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB115:
    WRITE32 ENDSUB_A2:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB116:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody114
  endwhile114:
    WRITE32 ENDSUB_A3:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB118:
    WRITE32 ENDSUB_A2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB119:
  while120:
    JR_GTEQF VS3_M 60.0 endwhile120
  whilebody120:
    WRITE32 ENDSUB_A3:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB121:
    WRITE32 ENDSUB_A2:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB122:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody120
  endwhile120:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPP:
SUB_REDL:
    DATA32 tmp125
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp125
    JR_NEQ32 0 tmp125 alreadylaunched125
    OBJECT_START TZADVIG
  alreadylaunched125:
    WRITE32 ENDSUB_A3:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB126:
    WRITE32 ENDSUB_A2:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB127:
  while128:
    JR_LTEQF VS3_M 10.0 and130
    JR_GTF VS2_M 10.0 or129
  and130:
    JR_GTEQF VS3_M 10.0 and131
    JR_GTF VS2_M 10.0 or129
  and131:
    JR_LTEQF VS3_M 10.0 endwhile128
    JR_GTEQF VS2_M 10.0 endwhile128
  or129:
  whilebody128:
    WRITE32 ENDSUB_A3:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB132:
    WRITE32 ENDSUB_A2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB133:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB134:
    JR_LTEQF VS3_M 10.0 and135
    JR_GTF VS2_M 10.0 whilebody128
  and135:
    JR_GTEQF VS3_M 10.0 and136
    JR_GTF VS2_M 10.0 whilebody128
  and136:
    JR_LTEQF VS3_M 10.0 and137
    JR_LTF VS2_M 10.0 whilebody128
  and137:
  endwhile128:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer140
	DATA8 nos140
	DATA8 busy140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer140 nos140
	JR_EQ8 0 nos140 motornotbusy140
  motorwaiting140:
	OUTPUT_TEST layer140 nos140 busy140
	JR_EQ8 busy140 0 motornotbusy140
	SLEEP
	JR motorwaiting140
  motornotbusy140:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_A2:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB143:
    WRITE32 ENDSUB_A3:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB144:
  while145:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile145
  whilebody145:
    WRITE32 ENDSUB_A2:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB147:
    WRITE32 ENDSUB_A3:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB148:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB149:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody145
  endwhile145:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds153
	MOVEF_32 500.0 milliseconds153
	DATA32 timer153
	TIMER_WAIT milliseconds153 timer153
	TIMER_READY timer153
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer156
	DATA8 nos156
	DATA8 busy156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer156 nos156
	JR_EQ8 0 nos156 motornotbusy156
  motorwaiting156:
	OUTPUT_TEST layer156 nos156 busy156
	JR_EQ8 busy156 0 motornotbusy156
	SLEEP
	JR motorwaiting156
  motornotbusy156:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 300.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB159:
    WRITE32 ENDSUB_A2:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB160:
  while161:
    JR_LTEQF VS3_M 15.0 endwhile161
  whilebody161:
    WRITE32 ENDSUB_A3:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB162:
    WRITE32 ENDSUB_A2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB163:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 15.0 whilebody161
  endwhile161:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB166:
    WRITE32 ENDSUB_A2:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB167:
  while168:
    JR_GTEQF VS3_M 15.0 endwhile168
  whilebody168:
    WRITE32 ENDSUB_A3:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB169:
    WRITE32 ENDSUB_A2:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB170:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody168
  endwhile168:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds173
	MOVEF_32 100.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.RESETCOUNT 'bc'
  while175:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf179
    DATA8 flag179
    DIVF F.1 2.0 tmpf179
    CP_EQF 0.0 2.0 flag179
    SELECTF flag179 0.0 tmpf179 F.0

    JR_GTEQF F.0 100.0 endwhile175
  whilebody175:
    WRITE32 ENDSUB_A3:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB180:
    WRITE32 ENDSUB_A2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB181:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB182:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf186
    DATA8 flag186
    DIVF F.1 2.0 tmpf186
    CP_EQF 0.0 2.0 flag186
    SELECTF flag186 0.0 tmpf186 F.0

    JR_LTF F.0 100.0 whilebody175
  endwhile175:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB188:
    WRITE32 ENDSUB_A2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB189:
  while190:
    JR_LTEQF VS3_M 10.0 and192
    JR_GTF VS2_M 10.0 or191
  and192:
    JR_GTEQF VS3_M 10.0 endwhile190
    JR_GTEQF VS2_M 10.0 endwhile190
  or191:
  whilebody190:
    WRITE32 ENDSUB_A3:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB193:
    WRITE32 ENDSUB_A2:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB194:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB195:
    JR_LTEQF VS3_M 10.0 and196
    JR_GTF VS2_M 10.0 whilebody190
  and196:
    JR_GTEQF VS3_M 10.0 and197
    JR_LTF VS2_M 10.0 whilebody190
  and197:
  endwhile190:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_REDL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_REDL:
SUB_BELLAM:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer199
	DATA8 nos199
	DATA8 busy199
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer199 nos199
	JR_EQ8 0 nos199 motornotbusy199
  motorwaiting199:
	OUTPUT_TEST layer199 nos199 busy199
	JR_EQ8 busy199 0 motornotbusy199
	SLEEP
	JR motorwaiting199
  motornotbusy199:
    CALL MOTOR.RESETCOUNT 'bc'
  while201:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf205
    DATA8 flag205
    DIVF F.1 2.0 tmpf205
    CP_EQF 0.0 2.0 flag205
    SELECTF flag205 0.0 tmpf205 F.0

    JR_GTEQF F.0 100.0 endwhile201
  whilebody201:
    WRITE32 ENDSUB_A3:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB206:
    WRITE32 ENDSUB_A2:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB207:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB208:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf212
    DATA8 flag212
    DIVF F.1 2.0 tmpf212
    CP_EQF 0.0 2.0 flag212
    SELECTF flag212 0.0 tmpf212 F.0

    JR_LTF F.0 100.0 whilebody201
  endwhile201:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 70.0 'true'

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 125.0 'true'

	DATA8 layer214
	DATA8 nos214
	DATA8 busy214
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer214 nos214
	JR_EQ8 0 nos214 motornotbusy214
  motorwaiting214:
	OUTPUT_TEST layer214 nos214 busy214
	JR_EQ8 busy214 0 motornotbusy214
	SLEEP
	JR motorwaiting214
  motornotbusy214:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds216
	MOVEF_32 500.0 milliseconds216
	DATA32 timer216
	TIMER_WAIT milliseconds216 timer216
	TIMER_READY timer216
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 125.0 'true'

	DATA8 layer218
	DATA8 nos218
	DATA8 busy218
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer218 nos218
	JR_EQ8 0 nos218 motornotbusy218
  motorwaiting218:
	OUTPUT_TEST layer218 nos218 busy218
	JR_EQ8 busy218 0 motornotbusy218
	SLEEP
	JR motorwaiting218
  motornotbusy218:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 0.0 70.0 'true'

	DATA8 layer219
	DATA8 nos219
	DATA8 busy219
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer219 nos219
	JR_EQ8 0 nos219 motornotbusy219
  motorwaiting219:
	OUTPUT_TEST layer219 nos219 busy219
	JR_EQ8 busy219 0 motornotbusy219
	SLEEP
	JR motorwaiting219
  motornotbusy219:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 60.0 'true'

	DATA8 layer220
	DATA8 nos220
	DATA8 busy220
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer220 nos220
	JR_EQ8 0 nos220 motornotbusy220
  motorwaiting220:
	OUTPUT_TEST layer220 nos220 busy220
	JR_EQ8 busy220 0 motornotbusy220
	SLEEP
	JR motorwaiting220
  motornotbusy220:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 230.0 'true'

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    WRITE32 ENDSUB_A2:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB222:
    WRITE32 ENDSUB_A3:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB223:
  while224:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 55.0 endwhile224
  whilebody224:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody224
  endwhile224:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer229
	DATA8 nos229
	DATA8 busy229
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer229 nos229
	JR_EQ8 0 nos229 motornotbusy229
  motorwaiting229:
	OUTPUT_TEST layer229 nos229 busy229
	JR_EQ8 busy229 0 motornotbusy229
	SLEEP
	JR motorwaiting229
  motornotbusy229:
    CALL MOTOR.RESETCOUNT 'bc'
  while231:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf235
    DATA8 flag235
    DIVF F.1 2.0 tmpf235
    CP_EQF 0.0 2.0 flag235
    SELECTF flag235 0.0 tmpf235 F.0

    JR_GTEQF F.0 475.0 endwhile231
  whilebody231:
    WRITE32 ENDSUB_A3:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB236:
    WRITE32 ENDSUB_A2:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB237:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB238:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf242
    DATA8 flag242
    DIVF F.1 2.0 tmpf242
    CP_EQF 0.0 2.0 flag242
    SELECTF flag242 0.0 tmpf242 F.0

    JR_LTF F.0 475.0 whilebody231
  endwhile231:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds245
	MOVEF_32 500.0 milliseconds245
	DATA32 timer245
	TIMER_WAIT milliseconds245 timer245
	TIMER_READY timer245
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -50.0 -50.0 160.0 'true'

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    WRITE32 ENDSUB_A3:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB248:
    WRITE32 ENDSUB_A2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB249:
  while250:
    JR_LTEQF VS3_M 10.0 endwhile250
  whilebody250:
    WRITE32 ENDSUB_A3:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB251:
    WRITE32 ENDSUB_A2:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB252:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody250
  endwhile250:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB255:
    WRITE32 ENDSUB_A2:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB256:
  while257:
    JR_GTEQF VS3_M 15.0 endwhile257
  whilebody257:
    WRITE32 ENDSUB_A3:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB258:
    WRITE32 ENDSUB_A2:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB259:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody257
  endwhile257:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while263:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile263
  whilebody263:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB265:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody263
  endwhile263:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB268:
    WRITE32 ENDSUB_A2:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB269:
    MOVEF_F 1.0 VI_M
  for270:
    JR_GTF VI_M 1.0 endfor270
  forbody270:
    WRITE32 ENDSUB_A3:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB271:
    WRITE32 ENDSUB_A2:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB272:
  while273:
    JR_LTEQF VS3_M 15.0 and275
    JR_GTF VS2_M 15.0 or274
  and275:
    JR_GTEQF VS3_M 15.0 endwhile273
    JR_GTEQF VS2_M 15.0 endwhile273
  or274:
  whilebody273:
    WRITE32 ENDSUB_A3:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB276:
    WRITE32 ENDSUB_A2:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB277:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB278:
    JR_LTEQF VS3_M 15.0 and279
    JR_GTF VS2_M 15.0 whilebody273
  and279:
    JR_GTEQF VS3_M 15.0 and280
    JR_LTF VS2_M 15.0 whilebody273
  and280:
  endwhile273:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody270
  endfor270:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB286:
    WRITE32 ENDSUB_A2:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB287:
    MOVEF_F 80.0 VJ_M
  while288:
    JR_LTEQF VS3_M 10.0 endwhile288
  whilebody288:
    WRITE32 ENDSUB_A3:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB289:
    WRITE32 ENDSUB_A2:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB290:
    JR_LTEQF VJ_M 30.0 else291_1
    SUBF VJ_M 0.1 VJ_M
  else291_1:
  endif291:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 10.0 whilebody288
  endwhile288:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB295:
    WRITE32 ENDSUB_A2:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB296:
    MOVEF_F 80.0 VJ_M
  while297:
    JR_GTEQF VS3_M 15.0 endwhile297
  whilebody297:
    WRITE32 ENDSUB_A3:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB298:
    WRITE32 ENDSUB_A2:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB299:
    JR_LTEQF VJ_M 30.0 else300_1
    SUBF VJ_M 0.1 VJ_M
  else300_1:
  endif300:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody297
  endwhile297:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while305:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf309
    DATA8 flag309
    DIVF F.1 2.0 tmpf309
    CP_EQF 0.0 2.0 flag309
    SELECTF flag309 0.0 tmpf309 F.0

    JR_GTEQF F.0 50.0 endwhile305
  whilebody305:
    WRITE32 ENDSUB_A3:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB310:
    WRITE32 ENDSUB_A2:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB311:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB312:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf316
    DATA8 flag316
    DIVF F.1 2.0 tmpf316
    CP_EQF 0.0 2.0 flag316
    SELECTF flag316 0.0 tmpf316 F.0

    JR_LTF F.0 50.0 whilebody305
  endwhile305:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds320
	MOVEF_32 500.0 milliseconds320
	DATA32 timer320
	TIMER_WAIT milliseconds320 timer320
	TIMER_READY timer320
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB322:
    WRITE32 ENDSUB_A3:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB323:
  while324:
    JR_LTEQF VS3_M 10.0 and326
    JR_GTF VS2_M 10.0 or325
  and326:
    JR_GTEQF VS3_M 10.0 and327
    JR_GTF VS2_M 10.0 or325
  and327:
    JR_LTEQF VS3_M 6.0 endwhile324
    JR_GTEQF VS2_M 6.0 endwhile324
  or325:
  whilebody324:
    WRITE32 ENDSUB_A2:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB328:
    WRITE32 ENDSUB_A3:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB329:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 10.0 and331
    JR_GTF VS2_M 10.0 whilebody324
  and331:
    JR_GTEQF VS3_M 10.0 and332
    JR_GTF VS2_M 10.0 whilebody324
  and332:
    JR_LTEQF VS3_M 6.0 and333
    JR_LTF VS2_M 6.0 whilebody324
  and333:
  endwhile324:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer335
	DATA8 nos335
	DATA8 busy335
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer335 nos335
	JR_EQ8 0 nos335 motornotbusy335
  motorwaiting335:
	OUTPUT_TEST layer335 nos335 busy335
	JR_EQ8 busy335 0 motornotbusy335
	SLEEP
	JR motorwaiting335
  motornotbusy335:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 90.0 'true'

	DATA8 layer337
	DATA8 nos337
	DATA8 busy337
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer337 nos337
	JR_EQ8 0 nos337 motornotbusy337
  motorwaiting337:
	OUTPUT_TEST layer337 nos337 busy337
	JR_EQ8 busy337 0 motornotbusy337
	SLEEP
	JR motorwaiting337
  motornotbusy337:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB339:
    WRITE32 ENDSUB_A2:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB340:
  while341:
    JR_LTEQF VS3_M 10.0 endwhile341
  whilebody341:
    WRITE32 ENDSUB_A3:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB342:
    WRITE32 ENDSUB_A2:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB343:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody341
  endwhile341:
    WRITE32 ENDSUB_A3:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB345:
    WRITE32 ENDSUB_A2:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB346:
  while347:
    JR_GTEQF VS3_M 60.0 endwhile347
  whilebody347:
    WRITE32 ENDSUB_A3:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB348:
    WRITE32 ENDSUB_A2:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB349:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody347
  endwhile347:
    CALL MOTOR.RESETCOUNT 'bc'
  while352:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 100.0 endwhile352
  whilebody352:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB354:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 100.0 whilebody352
  endwhile352:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB357:
    WRITE32 ENDSUB_A3:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB358:
  while359:
    JR_LTEQF VS3_M 10.0 and361
    JR_GTF VS2_M 10.0 or360
  and361:
    JR_LTEQF VS3_M 10.0 and362
    JR_LTF VS2_M 10.0 or360
  and362:
    JR_GTEQF VS3_M 10.0 endwhile359
    JR_LTEQF VS2_M 10.0 endwhile359
  or360:
  whilebody359:
    WRITE32 ENDSUB_A3:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB363:
    WRITE32 ENDSUB_A2:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB364:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB365:
    JR_LTEQF VS3_M 10.0 and366
    JR_GTF VS2_M 10.0 whilebody359
  and366:
    JR_LTEQF VS3_M 10.0 and367
    JR_LTF VS2_M 10.0 whilebody359
  and367:
    JR_GTEQF VS3_M 10.0 and368
    JR_GTF VS2_M 10.0 whilebody359
  and368:
  endwhile359:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer370
	DATA8 nos370
	DATA8 busy370
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer370 nos370
	JR_EQ8 0 nos370 motornotbusy370
  motorwaiting370:
	OUTPUT_TEST layer370 nos370 busy370
	JR_EQ8 busy370 0 motornotbusy370
	SLEEP
	JR motorwaiting370
  motornotbusy370:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB372:
    WRITE32 ENDSUB_A2:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB373:
  while374:
    JR_LTEQF VS3_M 10.0 endwhile374
  whilebody374:
    WRITE32 ENDSUB_A3:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB375:
    WRITE32 ENDSUB_A2:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB376:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody374
  endwhile374:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB379:
    WRITE32 ENDSUB_A2:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB380:
  while381:
    JR_GTEQF VS3_M 15.0 endwhile381
  whilebody381:
    WRITE32 ENDSUB_A3:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB382:
    WRITE32 ENDSUB_A2:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB383:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VS3_M 15.0 whilebody381
  endwhile381:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds386
	MOVEF_32 100.0 milliseconds386
	DATA32 timer386
	TIMER_WAIT milliseconds386 timer386
	TIMER_READY timer386
    WRITE32 ENDSUB_A3:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB387:
    WRITE32 ENDSUB_A2:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB388:
  while389:
    JR_LTEQF VS2_M 70.0 endwhile389
  whilebody389:
    WRITE32 ENDSUB_A3:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB390:
    WRITE32 ENDSUB_A2:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB391:
    CALL MOTOR.STARTSYNC 'bc' 20.0 0.0
    JR_GTF VS2_M 70.0 whilebody389
  endwhile389:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds394
	MOVEF_32 100.0 milliseconds394
	DATA32 timer394
	TIMER_WAIT milliseconds394 timer394
	TIMER_READY timer394
RETSUB_BELLAM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM:
SUB_BELLAM2:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer395
	DATA8 nos395
	DATA8 busy395
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer395 nos395
	JR_EQ8 0 nos395 motornotbusy395
  motorwaiting395:
	OUTPUT_TEST layer395 nos395 busy395
	JR_EQ8 busy395 0 motornotbusy395
	SLEEP
	JR motorwaiting395
  motornotbusy395:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 230.0 'true'

	DATA8 layer396
	DATA8 nos396
	DATA8 busy396
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer396 nos396
	JR_EQ8 0 nos396 motornotbusy396
  motorwaiting396:
	OUTPUT_TEST layer396 nos396 busy396
	JR_EQ8 busy396 0 motornotbusy396
	SLEEP
	JR motorwaiting396
  motornotbusy396:
    WRITE32 ENDSUB_A2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB397:
    WRITE32 ENDSUB_A3:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB398:
  while399:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile399
  whilebody399:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody399
  endwhile399:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB404:
    WRITE32 ENDSUB_A3:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB405:
  while406:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf410
    DATA8 flag410
    DIVF F.1 2.0 tmpf410
    CP_EQF 0.0 2.0 flag410
    SELECTF flag410 0.0 tmpf410 F.0

    JR_GTEQF F.0 80.0 endwhile406
  whilebody406:
    WRITE32 ENDSUB_A3:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB411:
    WRITE32 ENDSUB_A2:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB412:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB413:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf417
    DATA8 flag417
    DIVF F.1 2.0 tmpf417
    CP_EQF 0.0 2.0 flag417
    SELECTF flag417 0.0 tmpf417 F.0

    JR_LTF F.0 80.0 whilebody406
  endwhile406:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB419:
    WRITE32 ENDSUB_A2:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB420:
  while421:
    JR_LTEQF VS3_M 10.0 and423
    JR_GTF VS2_M 10.0 or422
  and423:
    JR_GTEQF VS3_M 10.0 endwhile421
    JR_GTEQF VS2_M 10.0 endwhile421
  or422:
  whilebody421:
    WRITE32 ENDSUB_A3:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB424:
    WRITE32 ENDSUB_A2:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB425:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB426:
    JR_LTEQF VS3_M 10.0 and427
    JR_GTF VS2_M 10.0 whilebody421
  and427:
    JR_GTEQF VS3_M 10.0 and428
    JR_LTF VS2_M 10.0 whilebody421
  and428:
  endwhile421:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer430
	DATA8 nos430
	DATA8 busy430
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer430 nos430
	JR_EQ8 0 nos430 motornotbusy430
  motorwaiting430:
	OUTPUT_TEST layer430 nos430 busy430
	JR_EQ8 busy430 0 motornotbusy430
	SLEEP
	JR motorwaiting430
  motornotbusy430:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB432:
    WRITE32 ENDSUB_A2:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB433:
  while434:
    JR_LTEQF VS3_M 10.0 endwhile434
  whilebody434:
    WRITE32 ENDSUB_A3:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB435:
    WRITE32 ENDSUB_A2:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB436:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_GTF VS3_M 10.0 whilebody434
  endwhile434:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB439:
    WRITE32 ENDSUB_A2:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB440:
  while441:
    JR_GTEQF VS3_M 15.0 endwhile441
  whilebody441:
    WRITE32 ENDSUB_A3:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB442:
    WRITE32 ENDSUB_A2:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB443:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_LTF VS3_M 15.0 whilebody441
  endwhile441:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB446:
    WRITE32 ENDSUB_A2:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB447:
    MOVEF_F 1.0 VI_M
  for448:
    JR_GTF VI_M 2.0 endfor448
  forbody448:
    WRITE32 ENDSUB_A3:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB449:
    WRITE32 ENDSUB_A2:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB450:
  while451:
    JR_LTEQF VS3_M 15.0 and453
    JR_GTF VS2_M 15.0 or452
  and453:
    JR_GTEQF VS3_M 15.0 endwhile451
    JR_GTEQF VS2_M 15.0 endwhile451
  or452:
  whilebody451:
    WRITE32 ENDSUB_A3:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB454:
    WRITE32 ENDSUB_A2:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB455:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB456:
    JR_LTEQF VS3_M 15.0 and457
    JR_GTF VS2_M 15.0 whilebody451
  and457:
    JR_GTEQF VS3_M 15.0 and458
    JR_LTF VS2_M 15.0 whilebody451
  and458:
  endwhile451:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer459
	DATA8 nos459
	DATA8 busy459
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer459 nos459
	JR_EQ8 0 nos459 motornotbusy459
  motorwaiting459:
	OUTPUT_TEST layer459 nos459 busy459
	JR_EQ8 busy459 0 motornotbusy459
	SLEEP
	JR motorwaiting459
  motornotbusy459:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 2.0 forbody448
  endfor448:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer461
	DATA8 nos461
	DATA8 busy461
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer461 nos461
	JR_EQ8 0 nos461 motornotbusy461
  motorwaiting461:
	OUTPUT_TEST layer461 nos461 busy461
	JR_EQ8 busy461 0 motornotbusy461
	SLEEP
	JR motorwaiting461
  motornotbusy461:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB463:
    WRITE32 ENDSUB_A2:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB464:
    MOVEF_F 80.0 VJ_M
  while465:
    JR_LTEQF VS3_M 10.0 endwhile465
  whilebody465:
    WRITE32 ENDSUB_A3:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB466:
    WRITE32 ENDSUB_A2:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB467:
    JR_LTEQF VJ_M 30.0 else468_1
    SUBF VJ_M 0.1 VJ_M
  else468_1:
  endif468:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 10.0 whilebody465
  endwhile465:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB472:
    WRITE32 ENDSUB_A2:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB473:
    MOVEF_F 80.0 VJ_M
  while474:
    JR_GTEQF VS3_M 15.0 endwhile474
  whilebody474:
    WRITE32 ENDSUB_A3:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB475:
    WRITE32 ENDSUB_A2:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB476:
    JR_LTEQF VJ_M 30.0 else477_1
    SUBF VJ_M 0.1 VJ_M
  else477_1:
  endif477:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody474
  endwhile474:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while482:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf486
    DATA8 flag486
    DIVF F.1 2.0 tmpf486
    CP_EQF 0.0 2.0 flag486
    SELECTF flag486 0.0 tmpf486 F.0

    JR_GTEQF F.0 50.0 endwhile482
  whilebody482:
    WRITE32 ENDSUB_A3:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB487:
    WRITE32 ENDSUB_A2:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB488:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB489:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf493
    DATA8 flag493
    DIVF F.1 2.0 tmpf493
    CP_EQF 0.0 2.0 flag493
    SELECTF flag493 0.0 tmpf493 F.0

    JR_LTF F.0 50.0 whilebody482
  endwhile482:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer495
	DATA8 nos495
	DATA8 busy495
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer495 nos495
	JR_EQ8 0 nos495 motornotbusy495
  motorwaiting495:
	OUTPUT_TEST layer495 nos495 busy495
	JR_EQ8 busy495 0 motornotbusy495
	SLEEP
	JR motorwaiting495
  motornotbusy495:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds497
	MOVEF_32 500.0 milliseconds497
	DATA32 timer497
	TIMER_WAIT milliseconds497 timer497
	TIMER_READY timer497
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while500:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf504
    DATA8 flag504
    DIVF F.1 2.0 tmpf504
    CP_EQF 0.0 2.0 flag504
    SELECTF flag504 0.0 tmpf504 F.0

    JR_LTEQF F.0 -250.0 endwhile500
  whilebody500:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf509
    DATA8 flag509
    DIVF F.1 2.0 tmpf509
    CP_EQF 0.0 2.0 flag509
    SELECTF flag509 0.0 tmpf509 F.0

    JR_GTF F.0 -250.0 whilebody500
  endwhile500:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 -60.0 210.0 'true'

	DATA8 layer511
	DATA8 nos511
	DATA8 busy511
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer511 nos511
	JR_EQ8 0 nos511 motornotbusy511
  motorwaiting511:
	OUTPUT_TEST layer511 nos511 busy511
	JR_EQ8 busy511 0 motornotbusy511
	SLEEP
	JR motorwaiting511
  motornotbusy511:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB513:
    WRITE32 ENDSUB_A3:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB514:
  while515:
    JR_LTEQF VS3_M 10.0 and517
    JR_GTF VS2_M 10.0 or516
  and517:
    JR_LTEQF VS3_M 10.0 and518
    JR_LTF VS2_M 10.0 or516
  and518:
    JR_GTEQF VS3_M 10.0 endwhile515
    JR_LTEQF VS2_M 10.0 endwhile515
  or516:
  whilebody515:
    WRITE32 ENDSUB_A2:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB519:
    WRITE32 ENDSUB_A3:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB520:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 10.0 and522
    JR_GTF VS2_M 10.0 whilebody515
  and522:
    JR_LTEQF VS3_M 10.0 and523
    JR_LTF VS2_M 10.0 whilebody515
  and523:
    JR_GTEQF VS3_M 10.0 and524
    JR_GTF VS2_M 10.0 whilebody515
  and524:
  endwhile515:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    WRITE32 ENDSUB_A3:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB527:
    WRITE32 ENDSUB_A2:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB528:
  while529:
    JR_LTEQF VS3_M 10.0 endwhile529
  whilebody529:
    WRITE32 ENDSUB_A3:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB530:
    WRITE32 ENDSUB_A2:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB531:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_GTF VS3_M 10.0 whilebody529
  endwhile529:
    WRITE32 ENDSUB_A3:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB533:
    WRITE32 ENDSUB_A2:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB534:
  while535:
    JR_GTEQF VS3_M 15.0 endwhile535
  whilebody535:
    WRITE32 ENDSUB_A3:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB536:
    WRITE32 ENDSUB_A2:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB537:
    CALL MOTOR.STARTSYNC 'bc' 60.0 -60.0
    JR_LTF VS3_M 15.0 whilebody535
  endwhile535:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM2:
SUB_BELLAM3:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 90.0 'true'

	DATA8 layer540
	DATA8 nos540
	DATA8 busy540
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer540 nos540
	JR_EQ8 0 nos540 motornotbusy540
  motorwaiting540:
	OUTPUT_TEST layer540 nos540 busy540
	JR_EQ8 busy540 0 motornotbusy540
	SLEEP
	JR motorwaiting540
  motornotbusy540:
    CALL MOTOR.SCHEDULESYNC 'bc' -50.0 50.0 230.0 'true'

	DATA8 layer541
	DATA8 nos541
	DATA8 busy541
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer541 nos541
	JR_EQ8 0 nos541 motornotbusy541
  motorwaiting541:
	OUTPUT_TEST layer541 nos541 busy541
	JR_EQ8 busy541 0 motornotbusy541
	SLEEP
	JR motorwaiting541
  motornotbusy541:
    WRITE32 ENDSUB_A2:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB542:
    WRITE32 ENDSUB_A3:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB543:
  while544:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile544
  whilebody544:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody544
  endwhile544:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB549:
    WRITE32 ENDSUB_A3:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB550:
  while551:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf555
    DATA8 flag555
    DIVF F.1 2.0 tmpf555
    CP_EQF 0.0 2.0 flag555
    SELECTF flag555 0.0 tmpf555 F.0

    JR_GTEQF F.0 80.0 endwhile551
  whilebody551:
    WRITE32 ENDSUB_A3:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB556:
    WRITE32 ENDSUB_A2:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB557:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB558:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf562
    DATA8 flag562
    DIVF F.1 2.0 tmpf562
    CP_EQF 0.0 2.0 flag562
    SELECTF flag562 0.0 tmpf562 F.0

    JR_LTF F.0 80.0 whilebody551
  endwhile551:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB564:
    WRITE32 ENDSUB_A2:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB565:
  while566:
    JR_LTEQF VS3_M 10.0 and568
    JR_GTF VS2_M 10.0 or567
  and568:
    JR_GTEQF VS3_M 10.0 endwhile566
    JR_GTEQF VS2_M 10.0 endwhile566
  or567:
  whilebody566:
    WRITE32 ENDSUB_A3:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB569:
    WRITE32 ENDSUB_A2:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB570:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB571:
    JR_LTEQF VS3_M 10.0 and572
    JR_GTF VS2_M 10.0 whilebody566
  and572:
    JR_GTEQF VS3_M 10.0 and573
    JR_LTF VS2_M 10.0 whilebody566
  and573:
  endwhile566:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer575
	DATA8 nos575
	DATA8 busy575
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer575 nos575
	JR_EQ8 0 nos575 motornotbusy575
  motorwaiting575:
	OUTPUT_TEST layer575 nos575 busy575
	JR_EQ8 busy575 0 motornotbusy575
	SLEEP
	JR motorwaiting575
  motornotbusy575:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB577:
    WRITE32 ENDSUB_A2:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB578:
  while579:
    JR_LTEQF VS3_M 10.0 endwhile579
  whilebody579:
    WRITE32 ENDSUB_A3:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB580:
    WRITE32 ENDSUB_A2:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB581:
    CALL MOTOR.STARTSYNC 'bc' 50.0 -50.0
    JR_GTF VS3_M 10.0 whilebody579
  endwhile579:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB584:
    WRITE32 ENDSUB_A2:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB585:
  while586:
    JR_GTEQF VS3_M 15.0 endwhile586
  whilebody586:
    WRITE32 ENDSUB_A3:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB587:
    WRITE32 ENDSUB_A2:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB588:
    CALL MOTOR.STARTSYNC 'bc' 50.0 -50.0
    JR_LTF VS3_M 15.0 whilebody586
  endwhile586:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while592:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf596
    DATA8 flag596
    DIVF F.1 2.0 tmpf596
    CP_EQF 0.0 2.0 flag596
    SELECTF flag596 0.0 tmpf596 F.0

    JR_GTEQF F.0 100.0 endwhile592
  whilebody592:
    WRITE32 ENDSUB_A3:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB597:
    WRITE32 ENDSUB_A2:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB598:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB599:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf603
    DATA8 flag603
    DIVF F.1 2.0 tmpf603
    CP_EQF 0.0 2.0 flag603
    SELECTF flag603 0.0 tmpf603 F.0

    JR_LTF F.0 100.0 whilebody592
  endwhile592:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB605:
    WRITE32 ENDSUB_A2:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB606:
    MOVEF_F 1.0 VI_M
  for607:
    JR_GTF VI_M 3.0 endfor607
  forbody607:
    WRITE32 ENDSUB_A3:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB608:
    WRITE32 ENDSUB_A2:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB609:
  while610:
    JR_LTEQF VS3_M 15.0 and612
    JR_GTF VS2_M 15.0 or611
  and612:
    JR_GTEQF VS3_M 15.0 endwhile610
    JR_GTEQF VS2_M 15.0 endwhile610
  or611:
  whilebody610:
    WRITE32 ENDSUB_A3:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB613:
    WRITE32 ENDSUB_A2:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB614:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB615:
    JR_LTEQF VS3_M 15.0 and616
    JR_GTF VS2_M 15.0 whilebody610
  and616:
    JR_GTEQF VS3_M 15.0 and617
    JR_LTF VS2_M 15.0 whilebody610
  and617:
  endwhile610:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 50.0 'true'

	DATA8 layer618
	DATA8 nos618
	DATA8 busy618
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer618 nos618
	JR_EQ8 0 nos618 motornotbusy618
  motorwaiting618:
	OUTPUT_TEST layer618 nos618 busy618
	JR_EQ8 busy618 0 motornotbusy618
	SLEEP
	JR motorwaiting618
  motornotbusy618:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 3.0 forbody607
  endfor607:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 20.0 'true'

	DATA8 layer621
	DATA8 nos621
	DATA8 busy621
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer621 nos621
	JR_EQ8 0 nos621 motornotbusy621
  motorwaiting621:
	OUTPUT_TEST layer621 nos621 busy621
	JR_EQ8 busy621 0 motornotbusy621
	SLEEP
	JR motorwaiting621
  motornotbusy621:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -50.0 100.0 'true'

	DATA8 layer622
	DATA8 nos622
	DATA8 busy622
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer622 nos622
	JR_EQ8 0 nos622 motornotbusy622
  motorwaiting622:
	OUTPUT_TEST layer622 nos622 busy622
	JR_EQ8 busy622 0 motornotbusy622
	SLEEP
	JR motorwaiting622
  motornotbusy622:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -30.0 70.0 'true'

	DATA8 layer623
	DATA8 nos623
	DATA8 busy623
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer623 nos623
	JR_EQ8 0 nos623 motornotbusy623
  motorwaiting623:
	OUTPUT_TEST layer623 nos623 busy623
	JR_EQ8 busy623 0 motornotbusy623
	SLEEP
	JR motorwaiting623
  motornotbusy623:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 0.0 50.0 'true'

	DATA8 layer624
	DATA8 nos624
	DATA8 busy624
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer624 nos624
	JR_EQ8 0 nos624 motornotbusy624
  motorwaiting624:
	OUTPUT_TEST layer624 nos624 busy624
	JR_EQ8 busy624 0 motornotbusy624
	SLEEP
	JR motorwaiting624
  motornotbusy624:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -50.0 30.0 'true'

	DATA8 layer625
	DATA8 nos625
	DATA8 busy625
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer625 nos625
	JR_EQ8 0 nos625 motornotbusy625
  motorwaiting625:
	OUTPUT_TEST layer625 nos625 busy625
	JR_EQ8 busy625 0 motornotbusy625
	SLEEP
	JR motorwaiting625
  motornotbusy625:
    CALL MOTOR.RESETCOUNT 'bc'
  while627:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf631
    DATA8 flag631
    DIVF F.1 2.0 tmpf631
    CP_EQF 0.0 2.0 flag631
    SELECTF flag631 0.0 tmpf631 F.0

    JR_GTEQF F.0 50.0 endwhile627
  whilebody627:
    WRITE32 ENDSUB_A3:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB632:
    WRITE32 ENDSUB_A2:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB633:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB634:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf638
    DATA8 flag638
    DIVF F.1 2.0 tmpf638
    CP_EQF 0.0 2.0 flag638
    SELECTF flag638 0.0 tmpf638 F.0

    JR_LTF F.0 50.0 whilebody627
  endwhile627:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 50.0 'true'

	DATA8 layer640
	DATA8 nos640
	DATA8 busy640
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer640 nos640
	JR_EQ8 0 nos640 motornotbusy640
  motorwaiting640:
	OUTPUT_TEST layer640 nos640 busy640
	JR_EQ8 busy640 0 motornotbusy640
	SLEEP
	JR motorwaiting640
  motornotbusy640:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds642
	MOVEF_32 500.0 milliseconds642
	DATA32 timer642
	TIMER_WAIT milliseconds642 timer642
	TIMER_READY timer642
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 150.0 'true'

	DATA8 layer644
	DATA8 nos644
	DATA8 busy644
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer644 nos644
	JR_EQ8 0 nos644 motornotbusy644
  motorwaiting644:
	OUTPUT_TEST layer644 nos644 busy644
	JR_EQ8 busy644 0 motornotbusy644
	SLEEP
	JR motorwaiting644
  motornotbusy644:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -50.0 215.0 'true'

	DATA8 layer645
	DATA8 nos645
	DATA8 busy645
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer645 nos645
	JR_EQ8 0 nos645 motornotbusy645
  motorwaiting645:
	OUTPUT_TEST layer645 nos645 busy645
	JR_EQ8 busy645 0 motornotbusy645
	SLEEP
	JR motorwaiting645
  motornotbusy645:
    WRITE32 ENDSUB_A2:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB646:
    WRITE32 ENDSUB_A3:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB647:
  while648:
    JR_LTEQF VS3_M 10.0 and650
    JR_GTF VS2_M 10.0 or649
  and650:
    JR_GTEQF VS3_M 10.0 and651
    JR_GTF VS2_M 10.0 or649
  and651:
    JR_LTEQF VS3_M 10.0 endwhile648
    JR_GTEQF VS2_M 10.0 endwhile648
  or649:
  whilebody648:
    WRITE32 ENDSUB_A2:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB652:
    WRITE32 ENDSUB_A3:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB653:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 10.0 and655
    JR_GTF VS2_M 10.0 whilebody648
  and655:
    JR_GTEQF VS3_M 10.0 and656
    JR_GTF VS2_M 10.0 whilebody648
  and656:
    JR_LTEQF VS3_M 10.0 and657
    JR_LTF VS2_M 10.0 whilebody648
  and657:
  endwhile648:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB661:
    WRITE32 ENDSUB_A2:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB662:
  while663:
    JR_LTEQF VS3_M 10.0 endwhile663
  whilebody663:
    WRITE32 ENDSUB_A3:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB664:
    WRITE32 ENDSUB_A2:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB665:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody663
  endwhile663:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB668:
    WRITE32 ENDSUB_A2:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB669:
  while670:
    JR_GTEQF VS3_M 15.0 endwhile670
  whilebody670:
    WRITE32 ENDSUB_A3:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB671:
    WRITE32 ENDSUB_A2:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB672:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody670
  endwhile670:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VI_M
  for675:
    JR_GTF VI_M 1.0 endfor675
  forbody675:
    WRITE32 ENDSUB_A3:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB676:
    WRITE32 ENDSUB_A2:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB677:
  while678:
    JR_LTEQF VS3_M 10.0 and680
    JR_GTF VS2_M 10.0 or679
  and680:
    JR_GTEQF VS3_M 10.0 endwhile678
    JR_GTEQF VS2_M 10.0 endwhile678
  or679:
  whilebody678:
    WRITE32 ENDSUB_A3:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB681:
    WRITE32 ENDSUB_A2:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB682:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB683:
    JR_LTEQF VS3_M 10.0 and684
    JR_GTF VS2_M 10.0 whilebody678
  and684:
    JR_GTEQF VS3_M 10.0 and685
    JR_LTF VS2_M 10.0 whilebody678
  and685:
  endwhile678:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 50.0 50.0 'true'

	DATA8 layer687
	DATA8 nos687
	DATA8 busy687
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer687 nos687
	JR_EQ8 0 nos687 motornotbusy687
  motorwaiting687:
	OUTPUT_TEST layer687 nos687 busy687
	JR_EQ8 busy687 0 motornotbusy687
	SLEEP
	JR motorwaiting687
  motornotbusy687:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody675
  endfor675:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM3:
SUB_RED_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer690
	DATA8 nos690
	DATA8 busy690
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer690 nos690
	JR_EQ8 0 nos690 motornotbusy690
  motorwaiting690:
	OUTPUT_TEST layer690 nos690 busy690
	JR_EQ8 busy690 0 motornotbusy690
	SLEEP
	JR motorwaiting690
  motornotbusy690:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB692:
    WRITE32 ENDSUB_A2:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB693:
  while694:
    JR_LTEQF VS2_M 15.0 endwhile694
  whilebody694:
    WRITE32 ENDSUB_A3:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB695:
    WRITE32 ENDSUB_A2:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB696:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 15.0 whilebody694
  endwhile694:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB699:
    WRITE32 ENDSUB_A2:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB700:
  while701:
    JR_GTEQF VS2_M 15.0 endwhile701
  whilebody701:
    WRITE32 ENDSUB_A3:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB702:
    WRITE32 ENDSUB_A2:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB703:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody701
  endwhile701:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while708:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf712
    DATA8 flag712
    DIVF F.1 2.0 tmpf712
    CP_EQF 0.0 2.0 flag712
    SELECTF flag712 0.0 tmpf712 F.0

    JR_GTEQF F.0 270.0 endwhile708
  whilebody708:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB713:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf717
    DATA8 flag717
    DIVF F.1 2.0 tmpf717
    CP_EQF 0.0 2.0 flag717
    SELECTF flag717 0.0 tmpf717 F.0

    JR_LTF F.0 270.0 whilebody708
  endwhile708:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds719
	MOVEF_32 100.0 milliseconds719
	DATA32 timer719
	TIMER_WAIT milliseconds719 timer719
	TIMER_READY timer719
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds721
	MOVEF_32 500.0 milliseconds721
	DATA32 timer721
	TIMER_WAIT milliseconds721 timer721
	TIMER_READY timer721
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB723:
    MOVEF_F 1470.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf724
    DATA8 flag724
    DIVF 360.0 VL_M tmpf724
    CP_EQF 0.0 VL_M flag724
    SELECTF flag724 0.0 tmpf724 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while727:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile727
  whilebody727:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2DUS:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2DUS
CALLSUB729:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody727
  endwhile727:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB732:
    WRITE32 ENDSUB_BELLAM:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB733:
    MOVEF_F 1250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB734:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer736
	DATA8 nos736
	DATA8 busy736
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer736 nos736
	JR_EQ8 0 nos736 motornotbusy736
  motorwaiting736:
	OUTPUT_TEST layer736 nos736 busy736
	JR_EQ8 busy736 0 motornotbusy736
	SLEEP
	JR motorwaiting736
  motornotbusy736:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB738:
    WRITE32 ENDSUB_A2:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB739:
  while740:
    JR_LTEQF VS2_M 15.0 endwhile740
  whilebody740:
    WRITE32 ENDSUB_A3:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB741:
    WRITE32 ENDSUB_A2:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB742:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 15.0 whilebody740
  endwhile740:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB745:
    WRITE32 ENDSUB_A2:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB746:
  while747:
    JR_GTEQF VS2_M 15.0 endwhile747
  whilebody747:
    WRITE32 ENDSUB_A3:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB748:
    WRITE32 ENDSUB_A2:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB749:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody747
  endwhile747:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while753:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 2.0 tmpf757
    CP_EQF 0.0 2.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    JR_GTEQF F.0 270.0 endwhile753
  whilebody753:
    WRITE32 ENDSUB_A3:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB758:
    WRITE32 ENDSUB_A2:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB759:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB760:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf764
    DATA8 flag764
    DIVF F.1 2.0 tmpf764
    CP_EQF 0.0 2.0 flag764
    SELECTF flag764 0.0 tmpf764 F.0

    JR_LTF F.0 270.0 whilebody753
  endwhile753:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds767
	MOVEF_32 500.0 milliseconds767
	DATA32 timer767
	TIMER_WAIT milliseconds767 timer767
	TIMER_READY timer767
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp769
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp769
    JR_NEQ32 0 tmp769 alreadylaunched769
    OBJECT_START TVIDVIG
  alreadylaunched769:
    WRITE32 ENDSUB_NPL:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB770:
    WRITE32 ENDSUB_A3:CALLSUB771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB771:
    WRITE32 ENDSUB_A2:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB772:
  while773:
    JR_LTEQF VS3_M 15.0 and775
    JR_GTF VS2_M 15.0 or774
  and775:
    JR_GTEQF VS3_M 15.0 endwhile773
    JR_GTEQF VS2_M 15.0 endwhile773
  or774:
  whilebody773:
    WRITE32 ENDSUB_A3:CALLSUB776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB776:
    WRITE32 ENDSUB_A2:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB777:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB778:
    JR_LTEQF VS3_M 15.0 and779
    JR_GTF VS2_M 15.0 whilebody773
  and779:
    JR_GTEQF VS3_M 15.0 and780
    JR_LTF VS2_M 15.0 whilebody773
  and780:
  endwhile773:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer781
	DATA8 nos781
	DATA8 busy781
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer781 nos781
	JR_EQ8 0 nos781 motornotbusy781
  motorwaiting781:
	OUTPUT_TEST layer781 nos781 busy781
	JR_EQ8 busy781 0 motornotbusy781
	SLEEP
	JR motorwaiting781
  motornotbusy781:
    WRITE32 ENDSUB_A3:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB782:
    WRITE32 ENDSUB_A2:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB783:
  while784:
    JR_LTEQF VS3_M 15.0 and786
    JR_GTF VS2_M 15.0 or785
  and786:
    JR_GTEQF VS3_M 15.0 endwhile784
    JR_GTEQF VS2_M 15.0 endwhile784
  or785:
  whilebody784:
    WRITE32 ENDSUB_A3:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB787:
    WRITE32 ENDSUB_A2:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB788:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB789:
    JR_LTEQF VS3_M 15.0 and790
    JR_GTF VS2_M 15.0 whilebody784
  and790:
    JR_GTEQF VS3_M 15.0 and791
    JR_LTF VS2_M 15.0 whilebody784
  and791:
  endwhile784:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_RED_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RED_1:
SUB_SB1:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer793
	DATA8 nos793
	DATA8 busy793
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer793 nos793
	JR_EQ8 0 nos793 motornotbusy793
  motorwaiting793:
	OUTPUT_TEST layer793 nos793 busy793
	JR_EQ8 busy793 0 motornotbusy793
	SLEEP
	JR motorwaiting793
  motornotbusy793:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 300.0 'true'

	DATA8 layer794
	DATA8 nos794
	DATA8 busy794
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer794 nos794
	JR_EQ8 0 nos794 motornotbusy794
  motorwaiting794:
	OUTPUT_TEST layer794 nos794 busy794
	JR_EQ8 busy794 0 motornotbusy794
	SLEEP
	JR motorwaiting794
  motornotbusy794:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB796:
    WRITE32 ENDSUB_A2:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB797:
  while798:
    JR_LTEQF VS2_M 10.0 endwhile798
  whilebody798:
    WRITE32 ENDSUB_A3:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB799:
    WRITE32 ENDSUB_A2:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB800:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 10.0 whilebody798
  endwhile798:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB803:
    WRITE32 ENDSUB_A2:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB804:
  while805:
    JR_GTEQF VS2_M 15.0 endwhile805
  whilebody805:
    WRITE32 ENDSUB_A3:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB806:
    WRITE32 ENDSUB_A2:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB807:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody805
  endwhile805:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds810
	MOVEF_32 100.0 milliseconds810
	DATA32 timer810
	TIMER_WAIT milliseconds810 timer810
	TIMER_READY timer810
    CALL MOTOR.RESETCOUNT 'bc'
  while812:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf816
    DATA8 flag816
    DIVF F.1 2.0 tmpf816
    CP_EQF 0.0 2.0 flag816
    SELECTF flag816 0.0 tmpf816 F.0

    JR_GTEQF F.0 300.0 endwhile812
  whilebody812:
    WRITE32 ENDSUB_A3:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB817:
    WRITE32 ENDSUB_A2:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB818:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB819:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf823
    DATA8 flag823
    DIVF F.1 2.0 tmpf823
    CP_EQF 0.0 2.0 flag823
    SELECTF flag823 0.0 tmpf823 F.0

    JR_LTF F.0 300.0 whilebody812
  endwhile812:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB825:
    WRITE32 ENDSUB_A2:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB826:
  while827:
    JR_LTEQF VS3_M 10.0 and829
    JR_GTF VS2_M 10.0 or828
  and829:
    JR_GTEQF VS3_M 10.0 endwhile827
    JR_GTEQF VS2_M 10.0 endwhile827
  or828:
  whilebody827:
    WRITE32 ENDSUB_A3:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB830:
    WRITE32 ENDSUB_A2:CALLSUB831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB831:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB832:
    JR_LTEQF VS3_M 10.0 and833
    JR_GTF VS2_M 10.0 whilebody827
  and833:
    JR_GTEQF VS3_M 10.0 and834
    JR_LTF VS2_M 10.0 whilebody827
  and834:
  endwhile827:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_SB1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SB1:
SUB_HSV:
    DATA8 layer836
	DATA8 no836
	DATA8 mode8836
	
	MOVEF_8 1.0 no836
	SUB8 no836 1 no836
	DIV8 no836 4 layer836
	MATH MOD8 no836 4 no836

	MOVEF_8 2.0 mode8836
	
	INPUT_DEVICE READY_RAW layer836 no836 0 mode8836 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf843
    DATA8 flag843
    DIVF VSRED_M 255.0 tmpf843
    CP_EQF 0.0 255.0 flag843
    SELECTF flag843 0.0 tmpf843 VSRED_M

    DATAF tmpf844
    DATA8 flag844
    DIVF VSGREEN_M 255.0 tmpf844
    CP_EQF 0.0 255.0 flag844
    SELECTF flag844 0.0 tmpf844 VSGREEN_M

    DATAF tmpf845
    DATA8 flag845
    DIVF VSBLUE_M 255.0 tmpf845
    CP_EQF 0.0 255.0 flag845
    SELECTF flag845 0.0 tmpf845 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else846_1
    JR_LTEQF VSRED_M VSBLUE_M else846_1
    MOVEF_F VSRED_M VMAX_M
    JR endif846
  else846_1:
    JR_LTEQF VSGREEN_M VSRED_M else846_2
    JR_LTEQF VSGREEN_M VSBLUE_M else846_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif846
  else846_2:
    JR_LTEQF VSBLUE_M VSRED_M else846_3
    JR_LTEQF VSBLUE_M VSGREEN_M else846_3
    MOVEF_F VSBLUE_M VMAX_M
  else846_3:
  endif846:
    JR_GTEQF VSRED_M VSGREEN_M else847_1
    JR_GTEQF VSRED_M VSBLUE_M else847_1
    MOVEF_F VSRED_M VMIN_M
    JR endif847
  else847_1:
    JR_GTEQF VSGREEN_M VSRED_M else847_2
    JR_GTEQF VSGREEN_M VSBLUE_M else847_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif847
  else847_2:
    JR_GTEQF VSBLUE_M VSRED_M else847_3
    JR_GTEQF VSBLUE_M VSGREEN_M else847_3
    MOVEF_F VSBLUE_M VMIN_M
  else847_3:
  endif847:
    JR_NEQF VMAX_M VMIN_M else848_1
    MOVEF_F 0.0 VH_M
    JR endif848
  else848_1:
    JR_NEQF VSRED_M VMAX_M else849_1
    JR_LTF VSGREEN_M VSBLUE_M else850_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf854
    DATA8 flag854
    DIVF F.0 F.1 tmpf854
    CP_EQF 0.0 F.1 flag854
    SELECTF flag854 0.0 tmpf854 VH_M

    JR endif850
  else850_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf858
    DATA8 flag858
    DIVF F.1 F.2 tmpf858
    CP_EQF 0.0 F.2 flag858
    SELECTF flag858 0.0 tmpf858 F.0

    ADDF F.0 360.0 VH_M
  else850_2:
  endif850:
    JR endif849
  else849_1:
    JR_NEQF VMAX_M VSGREEN_M else860_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf864
    DATA8 flag864
    DIVF F.1 F.2 tmpf864
    CP_EQF 0.0 F.2 flag864
    SELECTF flag864 0.0 tmpf864 F.0

    ADDF F.0 120.0 VH_M
    JR endif860
  else860_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf869
    DATA8 flag869
    DIVF F.1 F.2 tmpf869
    CP_EQF 0.0 F.2 flag869
    SELECTF flag869 0.0 tmpf869 F.0

    ADDF F.0 240.0 VH_M
  else860_2:
  endif860:
  else849_2:
  endif849:
  else848_2:
  endif848:
    JR_NEQF VMAX_M 0.0 else871_1
    MOVEF_F 0.0 VS_M
    JR endif871
  else871_1:
    DATAF tmpf872
    DATA8 flag872
    DIVF VMIN_M VMAX_M tmpf872
    CP_EQF 0.0 VMAX_M flag872
    SELECTF flag872 0.0 tmpf872 F.0

    SUBF 1.0 F.0 VS_M
  else871_2:
  endif871:
    MOVEF_F VMAX_M VV_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_HSV_100:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    DATA8 layer881
	DATA8 no881
	DATA8 mode8881
	
	MOVEF_8 1.0 no881
	SUB8 no881 1 no881
	DIV8 no881 4 layer881
	MATH MOD8 no881 4 no881

	MOVEF_8 2.0 mode8881
	
	INPUT_DEVICE READY_RAW layer881 no881 0 mode8881 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    MOVEF_F 1.0 VP_M
  for882:
    JR_GTF VP_M 100.0 endfor882
  forbody882:
    WRITE32 ENDSUB_HSV:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB883:
    ADDF VX_M VH_M VX_M
    ADDF VZ_M VS_M VZ_M
    ADDF VD_M VV_M VD_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody882
  endfor882:
    DATAF tmpf888
    DATA8 flag888
    DIVF VX_M 100.0 tmpf888
    CP_EQF 0.0 100.0 flag888
    SELECTF flag888 0.0 tmpf888 VH_M

    DATAF tmpf889
    DATA8 flag889
    DIVF VZ_M 100.0 tmpf889
    CP_EQF 0.0 100.0 flag889
    SELECTF flag889 0.0 tmpf889 VS_M

    DATAF tmpf890
    DATA8 flag890
    DIVF VD_M 100.0 tmpf890
    CP_EQF 0.0 100.0 flag890
    SELECTF flag890 0.0 tmpf890 VV_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV_100:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_100:
SUB_HSV_B:
    DATA8 layer898
	DATA8 no898
	DATA8 mode8898
	
	MOVEF_8 1.0 no898
	SUB8 no898 1 no898
	DIV8 no898 4 layer898
	MATH MOD8 no898 4 no898

	MOVEF_8 2.0 mode8898
	
	INPUT_DEVICE READY_RAW layer898 no898 0 mode8898 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf905
    DATA8 flag905
    DIVF VSRED_M 255.0 tmpf905
    CP_EQF 0.0 255.0 flag905
    SELECTF flag905 0.0 tmpf905 VSRED_M

    DATAF tmpf906
    DATA8 flag906
    DIVF VSGREEN_M 255.0 tmpf906
    CP_EQF 0.0 255.0 flag906
    SELECTF flag906 0.0 tmpf906 VSGREEN_M

    DATAF tmpf907
    DATA8 flag907
    DIVF VSBLUE_M 255.0 tmpf907
    CP_EQF 0.0 255.0 flag907
    SELECTF flag907 0.0 tmpf907 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else908_1
    JR_LTEQF VSRED_M VSBLUE_M else908_1
    MOVEF_F VSRED_M VMAX_M
    JR endif908
  else908_1:
    JR_LTEQF VSGREEN_M VSRED_M else908_2
    JR_LTEQF VSGREEN_M VSBLUE_M else908_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif908
  else908_2:
    JR_LTEQF VSBLUE_M VSRED_M else908_3
    JR_LTEQF VSBLUE_M VSGREEN_M else908_3
    MOVEF_F VSBLUE_M VMAX_M
  else908_3:
  endif908:
    JR_GTEQF VSRED_M VSGREEN_M else909_1
    JR_GTEQF VSRED_M VSBLUE_M else909_1
    MOVEF_F VSRED_M VMIN_M
    JR endif909
  else909_1:
    JR_GTEQF VSGREEN_M VSRED_M else909_2
    JR_GTEQF VSGREEN_M VSBLUE_M else909_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif909
  else909_2:
    JR_GTEQF VSBLUE_M VSRED_M else909_3
    JR_GTEQF VSBLUE_M VSGREEN_M else909_3
    MOVEF_F VSBLUE_M VMIN_M
  else909_3:
  endif909:
    JR_NEQF VMAX_M VMIN_M else910_1
    MOVEF_F 0.0 VH_M
    JR endif910
  else910_1:
    JR_NEQF VSRED_M VMAX_M else911_1
    JR_LTF VSGREEN_M VSBLUE_M else912_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf916
    DATA8 flag916
    DIVF F.0 F.1 tmpf916
    CP_EQF 0.0 F.1 flag916
    SELECTF flag916 0.0 tmpf916 VH_M

    JR endif912
  else912_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf920
    DATA8 flag920
    DIVF F.1 F.2 tmpf920
    CP_EQF 0.0 F.2 flag920
    SELECTF flag920 0.0 tmpf920 F.0

    ADDF F.0 360.0 VH_M
  else912_2:
  endif912:
    JR endif911
  else911_1:
    JR_NEQF VMAX_M VSGREEN_M else922_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf926
    DATA8 flag926
    DIVF F.1 F.2 tmpf926
    CP_EQF 0.0 F.2 flag926
    SELECTF flag926 0.0 tmpf926 F.0

    ADDF F.0 120.0 VH_M
    JR endif922
  else922_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf931
    DATA8 flag931
    DIVF F.1 F.2 tmpf931
    CP_EQF 0.0 F.2 flag931
    SELECTF flag931 0.0 tmpf931 F.0

    ADDF F.0 240.0 VH_M
  else922_2:
  endif922:
  else911_2:
  endif911:
  else910_2:
  endif910:
    JR_NEQF VMAX_M 0.0 else933_1
    MOVEF_F 0.0 VS_M
    JR endif933
  else933_1:
    DATAF tmpf934
    DATA8 flag934
    DIVF VMIN_M VMAX_M tmpf934
    CP_EQF 0.0 VMAX_M flag934
    SELECTF flag934 0.0 tmpf934 F.0

    SUBF 1.0 F.0 VS_M
  else933_2:
  endif933:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 300.0 and938
    JR_LTF VH_M 360.0 or937
  and938:
    JR_LTF VH_M 0.0 else936_1
    JR_GTF VH_M 20.0 else936_1
    JR_LTEQF VS_M 0.3 else936_1
    JR_GTF VS_M 1.0 else936_1
    JR_LTEQF VV_M 0.025 else936_1
    JR_GTEQF VV_M 0.1 else936_1
  or937:
    MOVEF_F 5.0 VCOLOR_M
    JR endif936
  else936_1:
    JR_LTF VH_M 20.0 else936_2
    JR_GTEQF VH_M 60.0 else936_2
    JR_LTF VS_M 0.4 else936_2
    JR_LTEQF VV_M 0.03 else936_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif936
  else936_2:
    MOVEF_F 6.0 VCOLOR_M
  else936_3:
  endif936:
RETSUB_HSV_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_B:
SUB_HSV_D:
    DATA8 layer939
	DATA8 no939
	DATA8 mode8939
	
	MOVEF_8 1.0 no939
	SUB8 no939 1 no939
	DIV8 no939 4 layer939
	MATH MOD8 no939 4 no939

	MOVEF_8 2.0 mode8939
	
	INPUT_DEVICE READY_RAW layer939 no939 0 mode8939 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf946
    DATA8 flag946
    DIVF VSRED_M 255.0 tmpf946
    CP_EQF 0.0 255.0 flag946
    SELECTF flag946 0.0 tmpf946 VSRED_M

    DATAF tmpf947
    DATA8 flag947
    DIVF VSGREEN_M 255.0 tmpf947
    CP_EQF 0.0 255.0 flag947
    SELECTF flag947 0.0 tmpf947 VSGREEN_M

    DATAF tmpf948
    DATA8 flag948
    DIVF VSBLUE_M 255.0 tmpf948
    CP_EQF 0.0 255.0 flag948
    SELECTF flag948 0.0 tmpf948 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else949_1
    JR_LTEQF VSRED_M VSBLUE_M else949_1
    MOVEF_F VSRED_M VMAX_M
    JR endif949
  else949_1:
    JR_LTEQF VSGREEN_M VSRED_M else949_2
    JR_LTEQF VSGREEN_M VSBLUE_M else949_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif949
  else949_2:
    JR_LTEQF VSBLUE_M VSRED_M else949_3
    JR_LTEQF VSBLUE_M VSGREEN_M else949_3
    MOVEF_F VSBLUE_M VMAX_M
  else949_3:
  endif949:
    JR_GTEQF VSRED_M VSGREEN_M else950_1
    JR_GTEQF VSRED_M VSBLUE_M else950_1
    MOVEF_F VSRED_M VMIN_M
    JR endif950
  else950_1:
    JR_GTEQF VSGREEN_M VSRED_M else950_2
    JR_GTEQF VSGREEN_M VSBLUE_M else950_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif950
  else950_2:
    JR_GTEQF VSBLUE_M VSRED_M else950_3
    JR_GTEQF VSBLUE_M VSGREEN_M else950_3
    MOVEF_F VSBLUE_M VMIN_M
  else950_3:
  endif950:
    JR_NEQF VMAX_M VMIN_M else951_1
    MOVEF_F 0.0 VH_M
    JR endif951
  else951_1:
    JR_NEQF VSRED_M VMAX_M else952_1
    JR_LTF VSGREEN_M VSBLUE_M else953_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf957
    DATA8 flag957
    DIVF F.0 F.1 tmpf957
    CP_EQF 0.0 F.1 flag957
    SELECTF flag957 0.0 tmpf957 VH_M

    JR endif953
  else953_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf961
    DATA8 flag961
    DIVF F.1 F.2 tmpf961
    CP_EQF 0.0 F.2 flag961
    SELECTF flag961 0.0 tmpf961 F.0

    ADDF F.0 360.0 VH_M
  else953_2:
  endif953:
    JR endif952
  else952_1:
    JR_NEQF VMAX_M VSGREEN_M else963_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf967
    DATA8 flag967
    DIVF F.1 F.2 tmpf967
    CP_EQF 0.0 F.2 flag967
    SELECTF flag967 0.0 tmpf967 F.0

    ADDF F.0 120.0 VH_M
    JR endif963
  else963_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf972
    DATA8 flag972
    DIVF F.1 F.2 tmpf972
    CP_EQF 0.0 F.2 flag972
    SELECTF flag972 0.0 tmpf972 F.0

    ADDF F.0 240.0 VH_M
  else963_2:
  endif963:
  else952_2:
  endif952:
  else951_2:
  endif951:
    JR_NEQF VMAX_M 0.0 else974_1
    MOVEF_F 0.0 VS_M
    JR endif974
  else974_1:
    DATAF tmpf975
    DATA8 flag975
    DIVF VMIN_M VMAX_M tmpf975
    CP_EQF 0.0 VMAX_M flag975
    SELECTF flag975 0.0 tmpf975 F.0

    SUBF 1.0 F.0 VS_M
  else974_2:
  endif974:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 200.0 and979
    JR_LTF VH_M 360.0 or978
  and979:
    JR_LTF VH_M 0.0 else977_1
    JR_GTF VH_M 30.0 else977_1
    JR_LTEQF VS_M 0.3 else977_1
    JR_GTF VS_M 1.0 else977_1
    JR_LTF VV_M 0.0 else977_1
    JR_GTEQF VV_M 0.02 else977_1
  or978:
    MOVEF_F 5.0 VCOLOR_M
    JR endif977
  else977_1:
    JR_LTF VH_M 0.0 else977_2
    JR_GTEQF VH_M 60.0 else977_2
    JR_LTF VS_M 0.4 else977_2
    JR_GTF VS_M 1.0 else977_2
    JR_LTEQF VV_M 0.003 else977_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif977
  else977_2:
    MOVEF_F 6.0 VCOLOR_M
  else977_3:
  endif977:
RETSUB_HSV_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_D:
SUB_HSV_RGB_B:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer980
	DATA8 no980
	DATA8 mode8980
	
	MOVEF_8 1.0 no980
	SUB8 no980 1 no980
	DIV8 no980 4 layer980
	MATH MOD8 no980 4 no980

	MOVEF_8 2.0 mode8980
	
	INPUT_DEVICE READY_RAW layer980 no980 0 mode8980 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB982:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    DATA32 milliseconds991
	MOVEF_32 100.0 milliseconds991
	DATA32 timer991
	TIMER_WAIT milliseconds991 timer991
	TIMER_READY timer991
    MOVEF_F 1.0 VP_M
  for992:
    JR_GTF VP_M 100.0 endfor992
  forbody992:
    WRITE32 ENDSUB_HSV_B:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_B
CALLSUB993:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody992
  endfor992:
    DATAF tmpf996
    DATA8 flag996
    DIVF VX_M 100.0 tmpf996
    CP_EQF 0.0 100.0 flag996
    SELECTF flag996 0.0 tmpf996 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds1000
	MOVEF_32 100.0 milliseconds1000
	DATA32 timer1000
	TIMER_WAIT milliseconds1000 timer1000
	TIMER_READY timer1000
    JR_LTEQF VH_M 100.0 and1003
    JR_LTF VH_M 360.0 or1002
  and1003:
    JR_LTF VH_M 0.0 else1001_1
    JR_GTF VH_M 20.0 else1001_1
    JR_LTEQF VS_M 0.3 else1001_1
    JR_GTF VS_M 1.0 else1001_1
    JR_LTEQF VV_M 0.025 else1001_1
    JR_GTEQF VV_M 0.1 else1001_1
  or1002:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif1001
  else1001_1:
    JR_LTF VH_M 20.0 else1001_2
    JR_GTEQF VH_M 60.0 else1001_2
    JR_LTF VS_M 0.4 else1001_2
    JR_LTEQF VV_M 0.03 else1001_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif1001
  else1001_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else1001_3:
  endif1001:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds1013
	MOVEF_32 1000.0 milliseconds1013
	DATA32 timer1013
	TIMER_WAIT milliseconds1013 timer1013
	TIMER_READY timer1013
RETSUB_HSV_RGB_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_B:
SUB_HSV_RGB_D:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer1014
	DATA8 no1014
	DATA8 mode81014
	
	MOVEF_8 1.0 no1014
	SUB8 no1014 1 no1014
	DIV8 no1014 4 layer1014
	MATH MOD8 no1014 4 no1014

	MOVEF_8 2.0 mode81014
	
	INPUT_DEVICE READY_RAW layer1014 no1014 0 mode81014 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV_D:CALLSUB1016 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB1016:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    MOVEF_F 1.0 VP_M
  for1025:
    JR_GTF VP_M 100.0 endfor1025
  forbody1025:
    WRITE32 ENDSUB_HSV_D:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB1026:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody1025
  endfor1025:
    DATAF tmpf1029
    DATA8 flag1029
    DIVF VX_M 100.0 tmpf1029
    CP_EQF 0.0 100.0 flag1029
    SELECTF flag1029 0.0 tmpf1029 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    JR_LTEQF VH_M 200.0 and1035
    JR_LTF VH_M 360.0 or1034
  and1035:
    JR_LTF VH_M 0.0 else1033_1
    JR_GTF VH_M 40.0 else1033_1
    JR_LTEQF VS_M 0.3 else1033_1
    JR_GTF VS_M 1.0 else1033_1
    JR_LTF VV_M 0.0 else1033_1
    JR_GTEQF VV_M 0.02 else1033_1
  or1034:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif1033
  else1033_1:
    JR_LTF VH_M 0.0 else1033_2
    JR_GTEQF VH_M 100.0 else1033_2
    JR_LTF VS_M 0.4 else1033_2
    JR_GTF VS_M 1.0 else1033_2
    JR_LTEQF VV_M 0.003 else1033_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif1033
  else1033_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else1033_3:
  endif1033:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds1045
	MOVEF_32 1000.0 milliseconds1045
	DATA32 timer1045
	TIMER_WAIT milliseconds1045 timer1045
	TIMER_READY timer1045
RETSUB_HSV_RGB_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_D:
SUB_A3:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN3_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX3_M VMIN3_M F.1
    DATAF tmpf1050
    DATA8 flag1050
    DIVF F.0 F.1 tmpf1050
    CP_EQF 0.0 F.1 flag1050
    SELECTF flag1050 0.0 tmpf1050 VS3_M

RETSUB_A3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A3:
SUB_A2:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf1055
    DATA8 flag1055
    DIVF F.0 F.1 tmpf1055
    CP_EQF 0.0 F.1 flag1055
    SELECTF flag1055 0.0 tmpf1055 VS2_M

RETSUB_A2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A2:
SUB_POLIN2D:
    WRITE32 ENDSUB_A3:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1056:
    WRITE32 ENDSUB_A2:CALLSUB1057 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1057:
    SUBF VS2_M VS3_M VE_M
    MULF VK1_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2D:
SUB_POLIN2DUS:
    WRITE32 ENDSUB_A3:CALLSUB1067 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1067:
    WRITE32 ENDSUB_A2:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1068:
    SUBF VS2_M VS3_M VE_M
    MULF VK3_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2DUS:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2DUS:
SUB_ZAMOROZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_ZAMOROZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZAMOROZ:
SUB_ZADVIG:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1082
	MOVEF_32 500.0 milliseconds1082
	DATA32 timer1082
	TIMER_WAIT milliseconds1082 timer1082
	TIMER_READY timer1082
    CALL MOTOR.STOP 'a' 'true'
RETSUB_ZADVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZADVIG:
SUB_VIDVIG:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1085
	MOVEF_32 500.0 milliseconds1085
	DATA32 timer1085
	TIMER_WAIT milliseconds1085 timer1085
	TIMER_READY timer1085
    CALL MOTOR.STOP 'a' 'true'
RETSUB_VIDVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIDVIG:
SUB_VIRAV_NAZ:
    DATA8 layer1087
	DATA8 no1087
	DATA8 mode81087
	
	MOVEF_8 2.0 no1087
	SUB8 no1087 1 no1087
	DIV8 no1087 4 layer1087
	MATH MOD8 no1087 4 no1087

	MOVEF_8 0.0 mode81087
	
	INPUT_DEVICE READY_RAW layer1087 no1087 0 mode81087 0
    DATA8 layer1088
	DATA8 no1088
	DATA8 mode81088
	
	MOVEF_8 3.0 no1088
	SUB8 no1088 1 no1088
	DIV8 no1088 4 layer1088
	MATH MOD8 no1088 4 no1088

	MOVEF_8 0.0 mode81088
	
	INPUT_DEVICE READY_RAW layer1088 no1088 0 mode81088 0
  while1089:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1089
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1089
  whilebody1089:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and1093
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1089
  and1093:
  endwhile1089:
    CALL MOTOR.STOP 'BC' 'True'
  while1097:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1097
  whilebody1097:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody1097
  endwhile1097:
    CALL MOTOR.STOP 'B' 'True'
  while1102:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1102
  whilebody1102:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1102
  endwhile1102:
    CALL MOTOR.STOP 'C' 'True'
  while1107:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1107
  whilebody1107:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1107
  endwhile1107:
    CALL MOTOR.STOP 'B' 'True'
  while1112:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1112
  whilebody1112:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1112
  endwhile1112:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV_NAZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV_NAZ:
SUB_VIRAV:
    DATA8 layer1117
	DATA8 no1117
	DATA8 mode81117
	
	MOVEF_8 2.0 no1117
	SUB8 no1117 1 no1117
	DIV8 no1117 4 layer1117
	MATH MOD8 no1117 4 no1117

	MOVEF_8 0.0 mode81117
	
	INPUT_DEVICE READY_RAW layer1117 no1117 0 mode81117 0
    DATA8 layer1118
	DATA8 no1118
	DATA8 mode81118
	
	MOVEF_8 3.0 no1118
	SUB8 no1118 1 no1118
	DIV8 no1118 4 layer1118
	MATH MOD8 no1118 4 no1118

	MOVEF_8 0.0 mode81118
	
	INPUT_DEVICE READY_RAW layer1118 no1118 0 mode81118 0
  while1119:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1119
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1119
  whilebody1119:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and1123
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1119
  and1123:
  endwhile1119:
    CALL MOTOR.STOP 'BC' 'True'
  while1127:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1127
  whilebody1127:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody1127
  endwhile1127:
    CALL MOTOR.STOP 'B' 'True'
  while1132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1132
  whilebody1132:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1132
  endwhile1132:
    CALL MOTOR.STOP 'C' 'True'
  while1137:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1137
  whilebody1137:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1137
  endwhile1137:
    CALL MOTOR.STOP 'B' 'True'
  while1142:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1142
  whilebody1142:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1142
  endwhile1142:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV:
SUB_RGB:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 F.0 VRECVARRAY_M
    CALL ARRAYSTORE_FLOAT VI_M F.0 VA_M
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 5.0 or1152
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 14.0 or1152
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 6.0 else1151_1
  or1152:
    CALL SPEAKER.NOTE 100.0 'C#1' 500.0
    JR endif1151
  else1151_1:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 1.0 or1157
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 10.0 or1157
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 7.0 or1157
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 8.0 else1151_2
  or1157:
    CALL SPEAKER.NOTE 100.0 'C#5' 500.0
    JR endif1151
  else1151_2:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 3.0 or1163
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 2.0 or1163
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 4.0 else1151_3
  or1163:
    CALL SPEAKER.NOTE 50.0 'C#9' 1000.0
  else1151_3:
  endif1151:
RETSUB_RGB:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RGB:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
