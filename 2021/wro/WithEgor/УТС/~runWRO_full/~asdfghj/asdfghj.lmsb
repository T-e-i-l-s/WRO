DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VG_M
DATAF VR_M
DATAF VY_M
DATAF VW_M
DATAF VCOLOR_M
DATAF VX_M
DATAF VC_M
DATAF VS_M
DATAF VMAX2_M
DATAF VMAX3_M
DATAF VMIN2_M
DATAF VMIN3_M
DATAF VK1_M
DATAF VK2_M
DATAF VK3_M
DATAF VS3_M
DATAF VS2_M
DATAF VSPEED_M
DATAF VSPEEDL_M
DATAF VSPEEDR_M
DATAF VEOLD_M
DATAF VN_M
DATAF VP_M
DATAF VI_M
DATAF VI2CPORT_M
DATAF VI2CSLVADDR_M
DATAF VL_M
DATAF VJ_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VSNUM_M
DATAF VSRED_M
DATAF VSGREEN_M
DATAF VSBLUE_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VV_M
DATAF VD_M
DATAF VZ_M
DATAF VE_M
DATAF VU_M
ARRAY16 VA_M 2
DATAF VF_M
DATAF VCOLOR1_M
DATAF VCOLOR2_M
DATAF VCOLOR3_M
DATAF VCOLOR4_M
DATAF VCOLOR5_M
DATA32 RUNCOUNTER_ZADVIG
DATA32 RUNCOUNTER_VIDVIG

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYCREATE_FLOAT VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVE32_32 0 RUNCOUNTER_ZADVIG
    MOVE32_32 0 RUNCOUNTER_VIDVIG
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TZADVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_ZADVIG 0
    CALL GETANDINC32 RUNCOUNTER_ZADVIG -1 RUNCOUNTER_ZADVIG tmp
    JR_GT32 tmp 1 launch
}
vmthread TVIDVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_VIDVIG 1
    CALL GETANDINC32 RUNCOUNTER_VIDVIG -1 RUNCOUNTER_VIDVIG tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_ZADVIG
subcall PROGRAM_VIDVIG
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2049
    WRITE32 ENDSUB_ZADVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZADVIG
  dispatch2049:
    JR_NEQ32 SUBPROGRAM 1 dispatch2050
    WRITE32 ENDSUB_VIDVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_VIDVIG
  dispatch2050:
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 2.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    MOVEF_F 0.2 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.2 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL EV3FILE.OPENREAD 'WRO2021/colib.dat' VF_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN3_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX3_M
    CALL EV3FILE.CLOSE VF_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VMIN2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMIN3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds1070
	MOVEF_32 100.0 milliseconds1070
	DATA32 timer1070
	TIMER_WAIT milliseconds1070 timer1070
	TIMER_READY timer1070
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    WRITE32 ENDSUB_HSV:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1071:
    JR_LTEQF VH_M 120.0 else1072_1
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1072
  else1072_1:
    JR_LTEQF VH_M 20.0 else1072_2
    JR_GTEQF VH_M 120.0 else1072_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1072
  else1072_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else1072_3:
  endif1072:
    DATA32 tmp1076
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1076
    JR_NEQ32 0 tmp1076 alreadylaunched1076
    OBJECT_START TVIDVIG
  alreadylaunched1076:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer1077
	DATA8 nos1077
	DATA8 busy1077
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1077 nos1077
	JR_EQ8 0 nos1077 motornotbusy1077
  motorwaiting1077:
	OUTPUT_TEST layer1077 nos1077 busy1077
	JR_EQ8 busy1077 0 motornotbusy1077
	SLEEP
	JR motorwaiting1077
  motornotbusy1077:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer1078
	DATA8 nos1078
	DATA8 busy1078
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1078 nos1078
	JR_EQ8 0 nos1078 motornotbusy1078
  motorwaiting1078:
	OUTPUT_TEST layer1078 nos1078 busy1078
	JR_EQ8 busy1078 0 motornotbusy1078
	SLEEP
	JR motorwaiting1078
  motornotbusy1078:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while1081:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1085
    DATA8 flag1085
    DIVF F.1 2.0 tmpf1085
    CP_EQF 0.0 2.0 flag1085
    SELECTF flag1085 0.0 tmpf1085 F.0

    JR_GTEQF F.0 500.0 endwhile1081
  whilebody1081:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VMAX2_M else1086_1
    CALL SENSOR.READPERCENT 2.0 VMAX2_M
  else1086_1:
  endif1086:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VMIN2_M else1089_1
    CALL SENSOR.READPERCENT 2.0 VMIN2_M
  else1089_1:
  endif1089:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VMAX3_M else1092_1
    CALL SENSOR.READPERCENT 3.0 VMAX3_M
  else1092_1:
  endif1092:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VMIN3_M else1095_1
    CALL SENSOR.READPERCENT 3.0 VMIN3_M
  else1095_1:
  endif1095:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1101
    DATA8 flag1101
    DIVF F.1 2.0 tmpf1101
    CP_EQF 0.0 2.0 flag1101
    SELECTF flag1101 0.0 tmpf1101 F.0

    JR_LTF F.0 500.0 whilebody1081
  endwhile1081:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1103:
    WRITE32 ENDSUB_A2:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1104:
  while1105:
    JR_LTEQF VS3_M 10.0 and1107
    JR_GTF VS2_M 10.0 or1106
  and1107:
    JR_GTEQF VS3_M 10.0 endwhile1105
    JR_GTEQF VS2_M 10.0 endwhile1105
  or1106:
  whilebody1105:
    WRITE32 ENDSUB_A3:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1108:
    WRITE32 ENDSUB_A2:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1109:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1110:
    JR_LTEQF VS3_M 10.0 and1111
    JR_GTF VS2_M 10.0 whilebody1105
  and1111:
    JR_GTEQF VS3_M 10.0 and1112
    JR_LTF VS2_M 10.0 whilebody1105
  and1112:
  endwhile1105:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_HSV:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1114:
    JR_GTF VH_M 120.0 or1116
    JR_EQF VH_M 0.0 or1116
    JR_LTF VH_M 0.0 else1115_1
    JR_GTF VH_M 20.0 else1115_1
  or1116:
    MOVEF_F 5.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1115
  else1115_1:
    JR_GTEQF VH_M 120.0 else1115_2
    MOVEF_F 4.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1115
  else1115_2:
    MOVEF_F 5.0 VCOLOR1_M
  else1115_3:
  endif1115:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1119
	DATA8 nos1119
	DATA8 busy1119
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1119 nos1119
	JR_EQ8 0 nos1119 motornotbusy1119
  motorwaiting1119:
	OUTPUT_TEST layer1119 nos1119 busy1119
	JR_EQ8 busy1119 0 motornotbusy1119
	SLEEP
	JR motorwaiting1119
  motornotbusy1119:
    JR_NEQF VCOLOR_M 4.0 else1120_1
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1121:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1122
	DATA8 nos1122
	DATA8 busy1122
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1122 nos1122
	JR_EQ8 0 nos1122 motornotbusy1122
  motorwaiting1122:
	OUTPUT_TEST layer1122 nos1122 busy1122
	JR_EQ8 busy1122 0 motornotbusy1122
	SLEEP
	JR motorwaiting1122
  motornotbusy1122:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1124
	DATA8 nos1124
	DATA8 busy1124
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1124 nos1124
	JR_EQ8 0 nos1124 motornotbusy1124
  motorwaiting1124:
	OUTPUT_TEST layer1124 nos1124 busy1124
	JR_EQ8 busy1124 0 motornotbusy1124
	SLEEP
	JR motorwaiting1124
  motornotbusy1124:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while1128:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 500.0 endwhile1128
  whilebody1128:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1130:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 500.0 whilebody1128
  endwhile1128:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_SB1:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1133:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1134
	DATA8 nos1134
	DATA8 busy1134
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1134 nos1134
	JR_EQ8 0 nos1134 motornotbusy1134
  motorwaiting1134:
	OUTPUT_TEST layer1134 nos1134 busy1134
	JR_EQ8 busy1134 0 motornotbusy1134
	SLEEP
	JR motorwaiting1134
  motornotbusy1134:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1136:
    WRITE32 ENDSUB_A2:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1137:
  while1138:
    JR_LTEQF VS2_M 10.0 endwhile1138
  whilebody1138:
    WRITE32 ENDSUB_A3:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1139:
    WRITE32 ENDSUB_A2:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1140:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 10.0 whilebody1138
  endwhile1138:
    WRITE32 ENDSUB_A3:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1142:
    WRITE32 ENDSUB_A2:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1143:
  while1144:
    JR_GTEQF VS2_M 15.0 endwhile1144
  whilebody1144:
    WRITE32 ENDSUB_A3:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1145:
    WRITE32 ENDSUB_A2:CALLSUB1146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1146:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody1144
  endwhile1144:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1150:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1154
    DATA8 flag1154
    DIVF F.1 2.0 tmpf1154
    CP_EQF 0.0 2.0 flag1154
    SELECTF flag1154 0.0 tmpf1154 F.0

    JR_GTEQF F.0 100.0 endwhile1150
  whilebody1150:
    WRITE32 ENDSUB_A3:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1155:
    WRITE32 ENDSUB_A2:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1156:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1157:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1161
    DATA8 flag1161
    DIVF F.1 2.0 tmpf1161
    CP_EQF 0.0 2.0 flag1161
    SELECTF flag1161 0.0 tmpf1161 F.0

    JR_LTF F.0 100.0 whilebody1150
  endwhile1150:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1163:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VCOLOR1_M 5.0 else1165_1
    WRITE32 ENDSUB_RED_1:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1166:
    ADDF VC_M 1.0 VC_M
    JR endif1165
  else1165_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1168
	DATA8 nos1168
	DATA8 busy1168
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1168 nos1168
	JR_EQ8 0 nos1168 motornotbusy1168
  motorwaiting1168:
	OUTPUT_TEST layer1168 nos1168 busy1168
	JR_EQ8 busy1168 0 motornotbusy1168
	SLEEP
	JR motorwaiting1168
  motornotbusy1168:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer1169
	DATA8 nos1169
	DATA8 busy1169
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1169 nos1169
	JR_EQ8 0 nos1169 motornotbusy1169
  motorwaiting1169:
	OUTPUT_TEST layer1169 nos1169 busy1169
	JR_EQ8 busy1169 0 motornotbusy1169
	SLEEP
	JR motorwaiting1169
  motornotbusy1169:
  while1170:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1172
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or1171
  and1172:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1175
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or1171
  and1175:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile1170
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile1170
  or1171:
  whilebody1170:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1181
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1170
  and1181:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1184
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody1170
  and1184:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and1187
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1170
  and1187:
  endwhile1170:
    WRITE32 ENDSUB_A3:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1190:
    WRITE32 ENDSUB_A2:CALLSUB1191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1191:
  while1192:
    JR_LTEQF VS3_M 10.0 and1194
    JR_GTF VS2_M 10.0 or1193
  and1194:
    JR_GTEQF VS3_M 10.0 endwhile1192
    JR_GTEQF VS2_M 10.0 endwhile1192
  or1193:
  whilebody1192:
    WRITE32 ENDSUB_A3:CALLSUB1195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1195:
    WRITE32 ENDSUB_A2:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1196:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1197:
    JR_LTEQF VS3_M 10.0 and1198
    JR_GTF VS2_M 10.0 whilebody1192
  and1198:
    JR_GTEQF VS3_M 10.0 and1199
    JR_LTF VS2_M 10.0 whilebody1192
  and1199:
  endwhile1192:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1200
	DATA8 nos1200
	DATA8 busy1200
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1200 nos1200
	JR_EQ8 0 nos1200 motornotbusy1200
  motorwaiting1200:
	OUTPUT_TEST layer1200 nos1200 busy1200
	JR_EQ8 busy1200 0 motornotbusy1200
	SLEEP
	JR motorwaiting1200
  motornotbusy1200:
    WRITE32 ENDSUB_A3:CALLSUB1201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1201:
    WRITE32 ENDSUB_A2:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1202:
  while1203:
    JR_LTEQF VS3_M 10.0 and1205
    JR_GTF VS2_M 10.0 or1204
  and1205:
    JR_GTEQF VS3_M 10.0 endwhile1203
    JR_GTEQF VS2_M 10.0 endwhile1203
  or1204:
  whilebody1203:
    WRITE32 ENDSUB_A3:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1206:
    WRITE32 ENDSUB_A2:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1207:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1208:
    JR_LTEQF VS3_M 10.0 and1209
    JR_GTF VS2_M 10.0 whilebody1203
  and1209:
    JR_GTEQF VS3_M 10.0 and1210
    JR_LTF VS2_M 10.0 whilebody1203
  and1210:
  endwhile1203:
    CALL MOTOR.STOP 'bc' 'true'
  else1165_2:
  endif1165:
    JR endif1120
  else1120_1:
    WRITE32 ENDSUB_A3:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1212:
    WRITE32 ENDSUB_A2:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1213:
  while1214:
    JR_LTEQF VS3_M 10.0 and1216
    JR_GTF VS2_M 10.0 or1215
  and1216:
    JR_GTEQF VS3_M 10.0 endwhile1214
    JR_GTEQF VS2_M 10.0 endwhile1214
  or1215:
  whilebody1214:
    WRITE32 ENDSUB_A3:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1217:
    WRITE32 ENDSUB_A2:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1218:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1219:
    JR_LTEQF VS3_M 10.0 and1220
    JR_GTF VS2_M 10.0 whilebody1214
  and1220:
    JR_GTEQF VS3_M 10.0 and1221
    JR_LTF VS2_M 10.0 whilebody1214
  and1221:
  endwhile1214:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1223
	DATA8 nos1223
	DATA8 busy1223
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1223 nos1223
	JR_EQ8 0 nos1223 motornotbusy1223
  motorwaiting1223:
	OUTPUT_TEST layer1223 nos1223 busy1223
	JR_EQ8 busy1223 0 motornotbusy1223
	SLEEP
	JR motorwaiting1223
  motornotbusy1223:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1224
	DATA8 nos1224
	DATA8 busy1224
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1224 nos1224
	JR_EQ8 0 nos1224 motornotbusy1224
  motorwaiting1224:
	OUTPUT_TEST layer1224 nos1224 busy1224
	JR_EQ8 busy1224 0 motornotbusy1224
	SLEEP
	JR motorwaiting1224
  motornotbusy1224:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1227
	MOVEF_32 500.0 milliseconds1227
	DATA32 timer1227
	TIMER_WAIT milliseconds1227 timer1227
	TIMER_READY timer1227
    CALL MOTOR.STOP 'd' 'true'
    MOVEF_F 30.0 VSPEED_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1230:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 600.0 endwhile1230
  whilebody1230:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1232:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 600.0 whilebody1230
  endwhile1230:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VCOLOR1_M 5.0 else1235_1
    WRITE32 ENDSUB_SB1:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1236:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 80.0 'true'

	DATA8 layer1237
	DATA8 nos1237
	DATA8 busy1237
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1237 nos1237
	JR_EQ8 0 nos1237 motornotbusy1237
  motorwaiting1237:
	OUTPUT_TEST layer1237 nos1237 busy1237
	JR_EQ8 busy1237 0 motornotbusy1237
	SLEEP
	JR motorwaiting1237
  motornotbusy1237:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 210.0 'true'

	DATA8 layer1238
	DATA8 nos1238
	DATA8 busy1238
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1238 nos1238
	JR_EQ8 0 nos1238 motornotbusy1238
  motorwaiting1238:
	OUTPUT_TEST layer1238 nos1238 busy1238
	JR_EQ8 busy1238 0 motornotbusy1238
	SLEEP
	JR motorwaiting1238
  motornotbusy1238:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1240
	MOVEF_32 100.0 milliseconds1240
	DATA32 timer1240
	TIMER_WAIT milliseconds1240 timer1240
	TIMER_READY timer1240
    WRITE32 ENDSUB_A3:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1241:
    WRITE32 ENDSUB_A2:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1242:
  while1243:
    JR_LTEQF VS3_M 10.0 and1245
    JR_GTF VS2_M 10.0 or1244
  and1245:
    JR_GTEQF VS3_M 10.0 endwhile1243
    JR_GTEQF VS2_M 10.0 endwhile1243
  or1244:
  whilebody1243:
    WRITE32 ENDSUB_A3:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1246:
    WRITE32 ENDSUB_A2:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1247:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1248:
    JR_LTEQF VS3_M 10.0 and1249
    JR_GTF VS2_M 10.0 whilebody1243
  and1249:
    JR_GTEQF VS3_M 10.0 and1250
    JR_LTF VS2_M 10.0 whilebody1243
  and1250:
  endwhile1243:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_RED_1:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1252:
    ADDF VC_M 1.0 VC_M
    JR endif1235
  else1235_1:
    DATA32 tmp1254
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1254
    JR_NEQ32 0 tmp1254 alreadylaunched1254
    OBJECT_START TVIDVIG
  alreadylaunched1254:
    WRITE32 ENDSUB_SB1:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1255:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 90.0 'true'

	DATA8 layer1256
	DATA8 nos1256
	DATA8 busy1256
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1256 nos1256
	JR_EQ8 0 nos1256 motornotbusy1256
  motorwaiting1256:
	OUTPUT_TEST layer1256 nos1256 busy1256
	JR_EQ8 busy1256 0 motornotbusy1256
	SLEEP
	JR motorwaiting1256
  motornotbusy1256:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 210.0 'true'

	DATA8 layer1257
	DATA8 nos1257
	DATA8 busy1257
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1257 nos1257
	JR_EQ8 0 nos1257 motornotbusy1257
  motorwaiting1257:
	OUTPUT_TEST layer1257 nos1257 busy1257
	JR_EQ8 busy1257 0 motornotbusy1257
	SLEEP
	JR motorwaiting1257
  motornotbusy1257:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1259:
    WRITE32 ENDSUB_A2:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1260:
  while1261:
    JR_LTEQF VS3_M 10.0 and1263
    JR_GTF VS2_M 10.0 or1262
  and1263:
    JR_GTEQF VS3_M 10.0 endwhile1261
    JR_GTEQF VS2_M 10.0 endwhile1261
  or1262:
  whilebody1261:
    WRITE32 ENDSUB_A3:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1264:
    WRITE32 ENDSUB_A2:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1265:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1266:
    JR_LTEQF VS3_M 10.0 and1267
    JR_GTF VS2_M 10.0 whilebody1261
  and1267:
    JR_GTEQF VS3_M 10.0 and1268
    JR_LTF VS2_M 10.0 whilebody1261
  and1268:
  endwhile1261:
    CALL MOTOR.STOP 'bc' 'true'
  else1235_2:
  endif1235:
  else1120_2:
  endif1120:
    WRITE32 ENDSUB_HSV_100:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1270:
    JR_GTEQF VV_M 0.019 else1271_1
    MOVEF_F 5.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1271
  else1271_1:
    MOVEF_F 4.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    CALL MOTOR.STOP 'bc' 'true'
  else1271_2:
  endif1271:
    JR_NEQF VCOLOR2_M 4.0 else1275_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1276
	DATA8 nos1276
	DATA8 busy1276
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1276 nos1276
	JR_EQ8 0 nos1276 motornotbusy1276
  motorwaiting1276:
	OUTPUT_TEST layer1276 nos1276 busy1276
	JR_EQ8 busy1276 0 motornotbusy1276
	SLEEP
	JR motorwaiting1276
  motornotbusy1276:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1277:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif1275
  else1275_1:
    WRITE32 ENDSUB_PR:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1279:
    CALL MOTOR.RESETCOUNT 'bc'
  while1281:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 450.0 endwhile1281
  whilebody1281:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1283:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 450.0 whilebody1281
  endwhile1281:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1287
	MOVEF_32 100.0 milliseconds1287
	DATA32 timer1287
	TIMER_WAIT milliseconds1287 timer1287
	TIMER_READY timer1287
    WRITE32 ENDSUB_NPL:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1288:
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1289
    DATA8 flag1289
    DIVF 360.0 VL_M tmpf1289
    CP_EQF 0.0 VL_M flag1289
    SELECTF flag1289 0.0 tmpf1289 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VSPEED_M
  while1292:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1292
  whilebody1292:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1294:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1292
  endwhile1292:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1297:
    JR_NEQF VC_M 1.0 else1298_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1299:
    JR endif1298
  else1298_1:
    JR_NEQF VC_M 0.0 else1298_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1300:
  else1298_2:
  endif1298:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1301:
    WRITE32 ENDSUB_A3:CALLSUB1302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1302:
    WRITE32 ENDSUB_A2:CALLSUB1303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1303:
  while1304:
    JR_LTEQF VS3_M 10.0 and1306
    JR_GTF VS2_M 10.0 or1305
  and1306:
    JR_GTEQF VS3_M 10.0 endwhile1304
    JR_GTEQF VS2_M 10.0 endwhile1304
  or1305:
  whilebody1304:
    WRITE32 ENDSUB_A3:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1307:
    WRITE32 ENDSUB_A2:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1308:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1309:
    JR_LTEQF VS3_M 10.0 and1310
    JR_GTF VS2_M 10.0 whilebody1304
  and1310:
    JR_GTEQF VS3_M 10.0 and1311
    JR_LTF VS2_M 10.0 whilebody1304
  and1311:
  endwhile1304:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1313
	DATA8 nos1313
	DATA8 busy1313
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1313 nos1313
	JR_EQ8 0 nos1313 motornotbusy1313
  motorwaiting1313:
	OUTPUT_TEST layer1313 nos1313 busy1313
	JR_EQ8 busy1313 0 motornotbusy1313
	SLEEP
	JR motorwaiting1313
  motornotbusy1313:
    WRITE32 ENDSUB_A3:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1314:
    WRITE32 ENDSUB_A2:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1315:
  while1316:
    JR_LTEQF VS3_M 10.0 and1318
    JR_GTF VS2_M 10.0 or1317
  and1318:
    JR_GTEQF VS3_M 10.0 endwhile1316
    JR_GTEQF VS2_M 10.0 endwhile1316
  or1317:
  whilebody1316:
    WRITE32 ENDSUB_A3:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1319:
    WRITE32 ENDSUB_A2:CALLSUB1320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1320:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1321:
    JR_LTEQF VS3_M 10.0 and1322
    JR_GTF VS2_M 10.0 whilebody1316
  and1322:
    JR_GTEQF VS3_M 10.0 and1323
    JR_LTF VS2_M 10.0 whilebody1316
  and1323:
  endwhile1316:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1325:
    CALL MOTOR.RESETCOUNT 'bc'
  while1327:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1331
    DATA8 flag1331
    DIVF F.1 2.0 tmpf1331
    CP_EQF 0.0 2.0 flag1331
    SELECTF flag1331 0.0 tmpf1331 F.0

    JR_GTEQF F.0 400.0 endwhile1327
  whilebody1327:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1332:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1336
    DATA8 flag1336
    DIVF F.1 2.0 tmpf1336
    CP_EQF 0.0 2.0 flag1336
    SELECTF flag1336 0.0 tmpf1336 F.0

    JR_LTF F.0 400.0 whilebody1327
  endwhile1327:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1339
	MOVEF_32 500.0 milliseconds1339
	DATA32 timer1339
	TIMER_WAIT milliseconds1339 timer1339
	TIMER_READY timer1339
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1341
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1341
    JR_NEQ32 0 tmp1341 alreadylaunched1341
    OBJECT_START TVIDVIG
  alreadylaunched1341:
    WRITE32 ENDSUB_NPL:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1342:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1343:
    ADDF VC_M 1.0 VC_M
  else1275_2:
  endif1275:
    WRITE32 ENDSUB_HSV:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1345:
    JR_GTF VH_M 120.0 or1347
    JR_LTF VH_M 300.0 else1346_1
    JR_GTF VH_M 360.0 else1346_1
  or1347:
    MOVEF_F 5.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1346
  else1346_1:
    MOVEF_F 4.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yelow'
  else1346_2:
  endif1346:
    JR_NEQF VCOLOR3_M 4.0 else1350_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1351
	DATA8 nos1351
	DATA8 busy1351
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1351 nos1351
	JR_EQ8 0 nos1351 motornotbusy1351
  motorwaiting1351:
	OUTPUT_TEST layer1351 nos1351 busy1351
	JR_EQ8 busy1351 0 motornotbusy1351
	SLEEP
	JR motorwaiting1351
  motornotbusy1351:
    MOVEF_F 360.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1352:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 0.0 else1354_1
    WRITE32 ENDSUB_PR:CALLSUB1355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1355:
    CALL MOTOR.RESETCOUNT 'bc'
  while1357:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1361
    DATA8 flag1361
    DIVF F.1 2.0 tmpf1361
    CP_EQF 0.0 2.0 flag1361
    SELECTF flag1361 0.0 tmpf1361 F.0

    JR_GTEQF F.0 450.0 endwhile1357
  whilebody1357:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1362:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1366
    DATA8 flag1366
    DIVF F.1 2.0 tmpf1366
    CP_EQF 0.0 2.0 flag1366
    SELECTF flag1366 0.0 tmpf1366 F.0

    JR_LTF F.0 450.0 whilebody1357
  endwhile1357:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1369
	MOVEF_32 500.0 milliseconds1369
	DATA32 timer1369
	TIMER_WAIT milliseconds1369 timer1369
	TIMER_READY timer1369
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1371:
    MOVEF_F 400.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1372
    DATA8 flag1372
    DIVF 360.0 VL_M tmpf1372
    CP_EQF 0.0 VL_M flag1372
    SELECTF flag1372 0.0 tmpf1372 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1375:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1375
  whilebody1375:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1377:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1375
  endwhile1375:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1380:
    WRITE32 ENDSUB_BELLAM:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1381:
    MOVEF_F 200.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1382:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1384:
    CALL MOTOR.RESETCOUNT 'bc'
  while1386:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1390
    DATA8 flag1390
    DIVF F.1 2.0 tmpf1390
    CP_EQF 0.0 2.0 flag1390
    SELECTF flag1390 0.0 tmpf1390 F.0

    JR_GTEQF F.0 400.0 endwhile1386
  whilebody1386:
    MOVEF_F 60.0 VSPEED_M
    MOVEF_F 0.2 VK1_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1391:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1395
    DATA8 flag1395
    DIVF F.1 2.0 tmpf1395
    CP_EQF 0.0 2.0 flag1395
    SELECTF flag1395 0.0 tmpf1395 F.0

    JR_LTF F.0 400.0 whilebody1386
  endwhile1386:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1398
	MOVEF_32 500.0 milliseconds1398
	DATA32 timer1398
	TIMER_WAIT milliseconds1398 timer1398
	TIMER_READY timer1398
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1400:
    WRITE32 ENDSUB_A3:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1401:
    WRITE32 ENDSUB_A2:CALLSUB1402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1402:
  while1403:
    JR_LTEQF VS3_M 10.0 and1405
    JR_GTF VS2_M 10.0 or1404
  and1405:
    JR_GTEQF VS3_M 10.0 endwhile1403
    JR_GTEQF VS2_M 10.0 endwhile1403
  or1404:
  whilebody1403:
    WRITE32 ENDSUB_A3:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1406:
    WRITE32 ENDSUB_A2:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1407:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1408:
    JR_LTEQF VS3_M 10.0 and1409
    JR_GTF VS2_M 10.0 whilebody1403
  and1409:
    JR_GTEQF VS3_M 10.0 and1410
    JR_LTF VS2_M 10.0 whilebody1403
  and1410:
  endwhile1403:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1412:
    CALL MOTOR.RESETCOUNT 'bc'
  while1414:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1418
    DATA8 flag1418
    DIVF F.1 2.0 tmpf1418
    CP_EQF 0.0 2.0 flag1418
    SELECTF flag1418 0.0 tmpf1418 F.0

    JR_GTEQF F.0 500.0 endwhile1414
  whilebody1414:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1419:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1423
    DATA8 flag1423
    DIVF F.1 2.0 tmpf1423
    CP_EQF 0.0 2.0 flag1423
    SELECTF flag1423 0.0 tmpf1423 F.0

    JR_LTF F.0 500.0 whilebody1414
  endwhile1414:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1426
	MOVEF_32 500.0 milliseconds1426
	DATA32 timer1426
	TIMER_WAIT milliseconds1426 timer1426
	TIMER_READY timer1426
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1428:
    MOVEF_F 500.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1429
    DATA8 flag1429
    DIVF 360.0 VL_M tmpf1429
    CP_EQF 0.0 VL_M flag1429
    SELECTF flag1429 0.0 tmpf1429 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1432:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1432
  whilebody1432:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1434:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1432
  endwhile1432:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1437:
    WRITE32 ENDSUB_BELLAM2:CALLSUB1438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1438:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1439:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1441:
    CALL MOTOR.RESETCOUNT 'bc'
  while1443:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1447
    DATA8 flag1447
    DIVF F.1 2.0 tmpf1447
    CP_EQF 0.0 2.0 flag1447
    SELECTF flag1447 0.0 tmpf1447 F.0

    JR_GTEQF F.0 470.0 endwhile1443
  whilebody1443:
    MOVEF_F 60.0 VSPEED_M
    MOVEF_F 0.2 VK1_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1448:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1452
    DATA8 flag1452
    DIVF F.1 2.0 tmpf1452
    CP_EQF 0.0 2.0 flag1452
    SELECTF flag1452 0.0 tmpf1452 F.0

    JR_LTF F.0 470.0 whilebody1443
  endwhile1443:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1455
	MOVEF_32 500.0 milliseconds1455
	DATA32 timer1455
	TIMER_WAIT milliseconds1455 timer1455
	TIMER_READY timer1455
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1457:
    MOVEF_F 500.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1458:
    WRITE32 ENDSUB_PR:CALLSUB1459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1459:
    CALL MOTOR.RESETCOUNT 'bc'
  while1461:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1465
    DATA8 flag1465
    DIVF F.1 2.0 tmpf1465
    CP_EQF 0.0 2.0 flag1465
    SELECTF flag1465 0.0 tmpf1465 F.0

    JR_GTEQF F.0 270.0 endwhile1461
  whilebody1461:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1466:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1470
    DATA8 flag1470
    DIVF F.1 2.0 tmpf1470
    CP_EQF 0.0 2.0 flag1470
    SELECTF flag1470 0.0 tmpf1470 F.0

    JR_LTF F.0 270.0 whilebody1461
  endwhile1461:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1473
	MOVEF_32 500.0 milliseconds1473
	DATA32 timer1473
	TIMER_WAIT milliseconds1473 timer1473
	TIMER_READY timer1473
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1475:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1476
    DATA8 flag1476
    DIVF 360.0 VL_M tmpf1476
    CP_EQF 0.0 VL_M flag1476
    SELECTF flag1476 0.0 tmpf1476 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1479:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1479
  whilebody1479:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1481:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1479
  endwhile1479:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1484:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1485:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1486:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1488:
    CALL MOTOR.RESETCOUNT 'bc'
  while1490:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1494
    DATA8 flag1494
    DIVF F.1 2.0 tmpf1494
    CP_EQF 0.0 2.0 flag1494
    SELECTF flag1494 0.0 tmpf1494 F.0

    JR_GTEQF F.0 270.0 endwhile1490
  whilebody1490:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1495:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1499
    DATA8 flag1499
    DIVF F.1 2.0 tmpf1499
    CP_EQF 0.0 2.0 flag1499
    SELECTF flag1499 0.0 tmpf1499 F.0

    JR_LTF F.0 270.0 whilebody1490
  endwhile1490:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1502
	MOVEF_32 500.0 milliseconds1502
	DATA32 timer1502
	TIMER_WAIT milliseconds1502 timer1502
	TIMER_READY timer1502
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1504:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1505:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1506
	DATA8 nos1506
	DATA8 busy1506
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1506 nos1506
	JR_EQ8 0 nos1506 motornotbusy1506
  motorwaiting1506:
	OUTPUT_TEST layer1506 nos1506 busy1506
	JR_EQ8 busy1506 0 motornotbusy1506
	SLEEP
	JR motorwaiting1506
  motornotbusy1506:
    PROGRAM_STOP -1
  else1354_1:
  endif1354:
  else1350_1:
  endif1350:
    JR_NEQF VCOLOR3_M 5.0 else1508_1
    WRITE32 ENDSUB_PR:CALLSUB1509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1509:
    CALL MOTOR.RESETCOUNT 'bc'
  while1511:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1515
    DATA8 flag1515
    DIVF F.1 2.0 tmpf1515
    CP_EQF 0.0 2.0 flag1515
    SELECTF flag1515 0.0 tmpf1515 F.0

    JR_GTEQF F.0 270.0 endwhile1511
  whilebody1511:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1516:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1520
    DATA8 flag1520
    DIVF F.1 2.0 tmpf1520
    CP_EQF 0.0 2.0 flag1520
    SELECTF flag1520 0.0 tmpf1520 F.0

    JR_LTF F.0 270.0 whilebody1511
  endwhile1511:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1523
	MOVEF_32 500.0 milliseconds1523
	DATA32 timer1523
	TIMER_WAIT milliseconds1523 timer1523
	TIMER_READY timer1523
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1525:
    MOVEF_F 850.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1526
    DATA8 flag1526
    DIVF 360.0 VL_M tmpf1526
    CP_EQF 0.0 VL_M flag1526
    SELECTF flag1526 0.0 tmpf1526 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1529:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1529
  whilebody1529:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1531:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1529
  endwhile1529:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1534:
    JR_NEQF VC_M 1.0 else1535_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1536:
    JR endif1535
  else1535_1:
    JR_NEQF VC_M 0.0 else1535_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1537:
    JR endif1535
  else1535_2:
    JR_NEQF VC_M 2.0 else1535_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1538:
    MOVEF_F 640.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1539:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1541
	MOVEF_32 100.0 milliseconds1541
	DATA32 timer1541
	TIMER_WAIT milliseconds1541 timer1541
	TIMER_READY timer1541
    WRITE32 ENDSUB_PL:CALLSUB1542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1542:
    CALL MOTOR.RESETCOUNT 'bc'
  while1544:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1548
    DATA8 flag1548
    DIVF F.1 2.0 tmpf1548
    CP_EQF 0.0 2.0 flag1548
    SELECTF flag1548 0.0 tmpf1548 F.0

    JR_GTEQF F.0 270.0 endwhile1544
  whilebody1544:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1549:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1553
    DATA8 flag1553
    DIVF F.1 2.0 tmpf1553
    CP_EQF 0.0 2.0 flag1553
    SELECTF flag1553 0.0 tmpf1553 F.0

    JR_LTF F.0 270.0 whilebody1544
  endwhile1544:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1556
	MOVEF_32 500.0 milliseconds1556
	DATA32 timer1556
	TIMER_WAIT milliseconds1556 timer1556
	TIMER_READY timer1556
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1558:
    CALL MOTOR.RESETCOUNT 'bc'
  while1560:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1564
    DATA8 flag1564
    DIVF F.1 2.0 tmpf1564
    CP_EQF 0.0 2.0 flag1564
    SELECTF flag1564 0.0 tmpf1564 F.0

    JR_GTEQF F.0 100.0 endwhile1560
  whilebody1560:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1565:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1569
    DATA8 flag1569
    DIVF F.1 2.0 tmpf1569
    CP_EQF 0.0 2.0 flag1569
    SELECTF flag1569 0.0 tmpf1569 F.0

    JR_LTF F.0 100.0 whilebody1560
  endwhile1560:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1571:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1573
	DATA8 nos1573
	DATA8 busy1573
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1573 nos1573
	JR_EQ8 0 nos1573 motornotbusy1573
  motorwaiting1573:
	OUTPUT_TEST layer1573 nos1573 busy1573
	JR_EQ8 busy1573 0 motornotbusy1573
	SLEEP
	JR motorwaiting1573
  motornotbusy1573:
    PROGRAM_STOP -1
  else1535_3:
  endif1535:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1575:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1577:
    CALL MOTOR.RESETCOUNT 'bc'
  while1579:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1583
    DATA8 flag1583
    DIVF F.1 2.0 tmpf1583
    CP_EQF 0.0 2.0 flag1583
    SELECTF flag1583 0.0 tmpf1583 F.0

    JR_GTEQF F.0 270.0 endwhile1579
  whilebody1579:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1584:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1588
    DATA8 flag1588
    DIVF F.1 2.0 tmpf1588
    CP_EQF 0.0 2.0 flag1588
    SELECTF flag1588 0.0 tmpf1588 F.0

    JR_LTF F.0 270.0 whilebody1579
  endwhile1579:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1591
	MOVEF_32 500.0 milliseconds1591
	DATA32 timer1591
	TIMER_WAIT milliseconds1591 timer1591
	TIMER_READY timer1591
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1593
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1593
    JR_NEQ32 0 tmp1593 alreadylaunched1593
    OBJECT_START TVIDVIG
  alreadylaunched1593:
    WRITE32 ENDSUB_NPL:CALLSUB1594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1594:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1595:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1596
	DATA8 nos1596
	DATA8 busy1596
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1596 nos1596
	JR_EQ8 0 nos1596 motornotbusy1596
  motorwaiting1596:
	OUTPUT_TEST layer1596 nos1596 busy1596
	JR_EQ8 busy1596 0 motornotbusy1596
	SLEEP
	JR motorwaiting1596
  motornotbusy1596:
    WRITE32 ENDSUB_A3:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1597:
    WRITE32 ENDSUB_A2:CALLSUB1598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1598:
  while1599:
    JR_LTEQF VS3_M 10.0 and1601
    JR_GTF VS2_M 10.0 or1600
  and1601:
    JR_GTEQF VS3_M 10.0 endwhile1599
    JR_GTEQF VS2_M 10.0 endwhile1599
  or1600:
  whilebody1599:
    WRITE32 ENDSUB_A3:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1602:
    WRITE32 ENDSUB_A2:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1603:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1604:
    JR_LTEQF VS3_M 10.0 and1605
    JR_GTF VS2_M 10.0 whilebody1599
  and1605:
    JR_GTEQF VS3_M 10.0 and1606
    JR_LTF VS2_M 10.0 whilebody1599
  and1606:
  endwhile1599:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1508_1:
  endif1508:
    WRITE32 ENDSUB_HSV_100:CALLSUB1609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1609:
    JR_GTEQF VV_M 0.022 else1610_1
    MOVEF_F 5.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1610
  else1610_1:
    MOVEF_F 4.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1610_2:
  endif1610:
    JR_NEQF VCOLOR4_M 4.0 else1613_1
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1614
	DATA8 nos1614
	DATA8 busy1614
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1614 nos1614
	JR_EQ8 0 nos1614 motornotbusy1614
  motorwaiting1614:
	OUTPUT_TEST layer1614 nos1614 busy1614
	JR_EQ8 busy1614 0 motornotbusy1614
	SLEEP
	JR motorwaiting1614
  motornotbusy1614:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 400.0 'true'

	DATA8 layer1615
	DATA8 nos1615
	DATA8 busy1615
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1615 nos1615
	JR_EQ8 0 nos1615 motornotbusy1615
  motorwaiting1615:
	OUTPUT_TEST layer1615 nos1615 busy1615
	JR_EQ8 busy1615 0 motornotbusy1615
	SLEEP
	JR motorwaiting1615
  motornotbusy1615:
    WRITE32 ENDSUB_A3:CALLSUB1616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1616:
    WRITE32 ENDSUB_A2:CALLSUB1617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1617:
  while1618:
    JR_LTEQF VS3_M 60.0 endwhile1618
  whilebody1618:
    WRITE32 ENDSUB_A3:CALLSUB1619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1619:
    WRITE32 ENDSUB_A2:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1620:
    CALL MOTOR.STARTSYNC 'bc' 0.0 20.0
    JR_GTF VS3_M 60.0 whilebody1618
  endwhile1618:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1623:
    WRITE32 ENDSUB_A2:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1624:
  while1625:
    JR_LTEQF VS3_M 15.0 and1627
    JR_GTF VS2_M 15.0 or1626
  and1627:
    JR_GTEQF VS3_M 15.0 endwhile1625
    JR_GTEQF VS2_M 15.0 endwhile1625
  or1626:
  whilebody1625:
    WRITE32 ENDSUB_A3:CALLSUB1628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1628:
    WRITE32 ENDSUB_A2:CALLSUB1629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1629:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1630:
    JR_LTEQF VS3_M 15.0 and1631
    JR_GTF VS2_M 15.0 whilebody1625
  and1631:
    JR_GTEQF VS3_M 15.0 and1632
    JR_LTF VS2_M 15.0 whilebody1625
  and1632:
  endwhile1625:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1634
	DATA8 nos1634
	DATA8 busy1634
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1634 nos1634
	JR_EQ8 0 nos1634 motornotbusy1634
  motorwaiting1634:
	OUTPUT_TEST layer1634 nos1634 busy1634
	JR_EQ8 busy1634 0 motornotbusy1634
	SLEEP
	JR motorwaiting1634
  motornotbusy1634:
    WRITE32 ENDSUB_A3:CALLSUB1635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1635:
    WRITE32 ENDSUB_A2:CALLSUB1636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1636:
  while1637:
    JR_LTEQF VS3_M 15.0 and1639
    JR_GTF VS2_M 15.0 or1638
  and1639:
    JR_GTEQF VS3_M 15.0 endwhile1637
    JR_GTEQF VS2_M 15.0 endwhile1637
  or1638:
  whilebody1637:
    WRITE32 ENDSUB_A3:CALLSUB1640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1640:
    WRITE32 ENDSUB_A2:CALLSUB1641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1641:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1642:
    JR_LTEQF VS3_M 15.0 and1643
    JR_GTF VS2_M 15.0 whilebody1637
  and1643:
    JR_GTEQF VS3_M 15.0 and1644
    JR_LTF VS2_M 15.0 whilebody1637
  and1644:
  endwhile1637:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 1.0 else1646_1
    WRITE32 ENDSUB_PR:CALLSUB1647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1647:
    CALL MOTOR.RESETCOUNT 'bc'
  while1649:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1653
    DATA8 flag1653
    DIVF F.1 2.0 tmpf1653
    CP_EQF 0.0 2.0 flag1653
    SELECTF flag1653 0.0 tmpf1653 F.0

    JR_GTEQF F.0 500.0 endwhile1649
  whilebody1649:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1654:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1658
    DATA8 flag1658
    DIVF F.1 2.0 tmpf1658
    CP_EQF 0.0 2.0 flag1658
    SELECTF flag1658 0.0 tmpf1658 F.0

    JR_LTF F.0 500.0 whilebody1649
  endwhile1649:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1661
	MOVEF_32 500.0 milliseconds1661
	DATA32 timer1661
	TIMER_WAIT milliseconds1661 timer1661
	TIMER_READY timer1661
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1663:
    MOVEF_F 520.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1664
    DATA8 flag1664
    DIVF 360.0 VL_M tmpf1664
    CP_EQF 0.0 VL_M flag1664
    SELECTF flag1664 0.0 tmpf1664 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1667:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1667
  whilebody1667:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1669:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1667
  endwhile1667:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1672:
    WRITE32 ENDSUB_BELLAM2:CALLSUB1673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1673:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1674:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1676:
    CALL MOTOR.RESETCOUNT 'bc'
  while1678:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1682
    DATA8 flag1682
    DIVF F.1 2.0 tmpf1682
    CP_EQF 0.0 2.0 flag1682
    SELECTF flag1682 0.0 tmpf1682 F.0

    JR_GTEQF F.0 470.0 endwhile1678
  whilebody1678:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1683:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1687
    DATA8 flag1687
    DIVF F.1 2.0 tmpf1687
    CP_EQF 0.0 2.0 flag1687
    SELECTF flag1687 0.0 tmpf1687 F.0

    JR_LTF F.0 470.0 whilebody1678
  endwhile1678:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1690
	MOVEF_32 500.0 milliseconds1690
	DATA32 timer1690
	TIMER_WAIT milliseconds1690 timer1690
	TIMER_READY timer1690
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1692:
    MOVEF_F 500.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1693:
    WRITE32 ENDSUB_PR:CALLSUB1694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1694:
    CALL MOTOR.RESETCOUNT 'bc'
  while1696:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1700
    DATA8 flag1700
    DIVF F.1 2.0 tmpf1700
    CP_EQF 0.0 2.0 flag1700
    SELECTF flag1700 0.0 tmpf1700 F.0

    JR_GTEQF F.0 270.0 endwhile1696
  whilebody1696:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1701:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1705
    DATA8 flag1705
    DIVF F.1 2.0 tmpf1705
    CP_EQF 0.0 2.0 flag1705
    SELECTF flag1705 0.0 tmpf1705 F.0

    JR_LTF F.0 270.0 whilebody1696
  endwhile1696:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1708
	MOVEF_32 500.0 milliseconds1708
	DATA32 timer1708
	TIMER_WAIT milliseconds1708 timer1708
	TIMER_READY timer1708
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1710:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1711
    DATA8 flag1711
    DIVF 360.0 VL_M tmpf1711
    CP_EQF 0.0 VL_M flag1711
    SELECTF flag1711 0.0 tmpf1711 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1714:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1714
  whilebody1714:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1716:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1714
  endwhile1714:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1719:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1720:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1721:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1723:
    CALL MOTOR.RESETCOUNT 'bc'
  while1725:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1729
    DATA8 flag1729
    DIVF F.1 2.0 tmpf1729
    CP_EQF 0.0 2.0 flag1729
    SELECTF flag1729 0.0 tmpf1729 F.0

    JR_GTEQF F.0 270.0 endwhile1725
  whilebody1725:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1730:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1734
    DATA8 flag1734
    DIVF F.1 2.0 tmpf1734
    CP_EQF 0.0 2.0 flag1734
    SELECTF flag1734 0.0 tmpf1734 F.0

    JR_LTF F.0 270.0 whilebody1725
  endwhile1725:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1737
	MOVEF_32 500.0 milliseconds1737
	DATA32 timer1737
	TIMER_WAIT milliseconds1737 timer1737
	TIMER_READY timer1737
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1739:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1740:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1741
	DATA8 nos1741
	DATA8 busy1741
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1741 nos1741
	JR_EQ8 0 nos1741 motornotbusy1741
  motorwaiting1741:
	OUTPUT_TEST layer1741 nos1741 busy1741
	JR_EQ8 busy1741 0 motornotbusy1741
	SLEEP
	JR motorwaiting1741
  motornotbusy1741:
    PROGRAM_STOP -1
  else1646_1:
  endif1646:
  else1613_1:
  endif1613:
    JR_NEQF VCOLOR4_M 5.0 else1743_1
    WRITE32 ENDSUB_PR:CALLSUB1744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1744:
    CALL MOTOR.RESETCOUNT 'bc'
  while1746:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1750
    DATA8 flag1750
    DIVF F.1 2.0 tmpf1750
    CP_EQF 0.0 2.0 flag1750
    SELECTF flag1750 0.0 tmpf1750 F.0

    JR_GTEQF F.0 450.0 endwhile1746
  whilebody1746:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1751:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1755
    DATA8 flag1755
    DIVF F.1 2.0 tmpf1755
    CP_EQF 0.0 2.0 flag1755
    SELECTF flag1755 0.0 tmpf1755 F.0

    JR_LTF F.0 450.0 whilebody1746
  endwhile1746:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1758
	MOVEF_32 500.0 milliseconds1758
	DATA32 timer1758
	TIMER_WAIT milliseconds1758 timer1758
	TIMER_READY timer1758
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1760:
    MOVEF_F 400.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1761
    DATA8 flag1761
    DIVF 360.0 VL_M tmpf1761
    CP_EQF 0.0 VL_M flag1761
    SELECTF flag1761 0.0 tmpf1761 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1764:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1764
  whilebody1764:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1766:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1764
  endwhile1764:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1769:
    JR_NEQF VC_M 1.0 else1770_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1771:
    JR endif1770
  else1770_1:
    JR_NEQF VC_M 0.0 else1770_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1772:
    JR endif1770
  else1770_2:
    JR_NEQF VC_M 2.0 else1770_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1773:
    MOVEF_F 160.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1774:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1776:
    CALL MOTOR.RESETCOUNT 'bc'
  while1778:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1782
    DATA8 flag1782
    DIVF F.1 2.0 tmpf1782
    CP_EQF 0.0 2.0 flag1782
    SELECTF flag1782 0.0 tmpf1782 F.0

    JR_GTEQF F.0 400.0 endwhile1778
  whilebody1778:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1783:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1787
    DATA8 flag1787
    DIVF F.1 2.0 tmpf1787
    CP_EQF 0.0 2.0 flag1787
    SELECTF flag1787 0.0 tmpf1787 F.0

    JR_LTF F.0 400.0 whilebody1778
  endwhile1778:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1790
	MOVEF_32 500.0 milliseconds1790
	DATA32 timer1790
	TIMER_WAIT milliseconds1790 timer1790
	TIMER_READY timer1790
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1792:
    CALL MOTOR.RESETCOUNT 'bc'
  while1794:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1798
    DATA8 flag1798
    DIVF F.1 2.0 tmpf1798
    CP_EQF 0.0 2.0 flag1798
    SELECTF flag1798 0.0 tmpf1798 F.0

    JR_GTEQF F.0 100.0 endwhile1794
  whilebody1794:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1799:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1803
    DATA8 flag1803
    DIVF F.1 2.0 tmpf1803
    CP_EQF 0.0 2.0 flag1803
    SELECTF flag1803 0.0 tmpf1803 F.0

    JR_LTF F.0 100.0 whilebody1794
  endwhile1794:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1805:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1807
	DATA8 nos1807
	DATA8 busy1807
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1807 nos1807
	JR_EQ8 0 nos1807 motornotbusy1807
  motorwaiting1807:
	OUTPUT_TEST layer1807 nos1807 busy1807
	JR_EQ8 busy1807 0 motornotbusy1807
	SLEEP
	JR motorwaiting1807
  motornotbusy1807:
    PROGRAM_STOP -1
  else1770_3:
  endif1770:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1809:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1811:
    CALL MOTOR.RESETCOUNT 'bc'
  while1813:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1817
    DATA8 flag1817
    DIVF F.1 2.0 tmpf1817
    CP_EQF 0.0 2.0 flag1817
    SELECTF flag1817 0.0 tmpf1817 F.0

    JR_GTEQF F.0 400.0 endwhile1813
  whilebody1813:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1818:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1822
    DATA8 flag1822
    DIVF F.1 2.0 tmpf1822
    CP_EQF 0.0 2.0 flag1822
    SELECTF flag1822 0.0 tmpf1822 F.0

    JR_LTF F.0 400.0 whilebody1813
  endwhile1813:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1825
	MOVEF_32 500.0 milliseconds1825
	DATA32 timer1825
	TIMER_WAIT milliseconds1825 timer1825
	TIMER_READY timer1825
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1827
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1827
    JR_NEQ32 0 tmp1827 alreadylaunched1827
    OBJECT_START TVIDVIG
  alreadylaunched1827:
    WRITE32 ENDSUB_NPP:CALLSUB1828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1828:
    WRITE32 ENDSUB_A3:CALLSUB1829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1829:
    WRITE32 ENDSUB_A2:CALLSUB1830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1830:
  while1831:
    JR_LTEQF VS3_M 10.0 and1833
    JR_GTF VS2_M 10.0 or1832
  and1833:
    JR_GTEQF VS3_M 10.0 endwhile1831
    JR_GTEQF VS2_M 10.0 endwhile1831
  or1832:
  whilebody1831:
    WRITE32 ENDSUB_A3:CALLSUB1834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1834:
    WRITE32 ENDSUB_A2:CALLSUB1835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1835:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1836:
    JR_LTEQF VS3_M 10.0 and1837
    JR_GTF VS2_M 10.0 whilebody1831
  and1837:
    JR_GTEQF VS3_M 10.0 and1838
    JR_LTF VS2_M 10.0 whilebody1831
  and1838:
  endwhile1831:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1743_1:
  endif1743:
    WRITE32 ENDSUB_HSV_100:CALLSUB1841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1841:
    JR_LTF VV_M 0.01178 or1843
    JR_NEQF VH_M 30.0 else1842_1
  or1843:
    MOVEF_F 5.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1842
  else1842_1:
    MOVEF_F 4.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1842_2:
  endif1842:
    JR_NEQF VCOLOR5_M 4.0 else1846_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1847
	DATA8 nos1847
	DATA8 busy1847
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1847 nos1847
	JR_EQ8 0 nos1847 motornotbusy1847
  motorwaiting1847:
	OUTPUT_TEST layer1847 nos1847 busy1847
	JR_EQ8 busy1847 0 motornotbusy1847
	SLEEP
	JR motorwaiting1847
  motornotbusy1847:
    MOVEF_F 520.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1848:
    WRITE32 ENDSUB_PR:CALLSUB1849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1849:
    CALL MOTOR.RESETCOUNT 'bc'
  while1851:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1855
    DATA8 flag1855
    DIVF F.1 2.0 tmpf1855
    CP_EQF 0.0 2.0 flag1855
    SELECTF flag1855 0.0 tmpf1855 F.0

    JR_GTEQF F.0 270.0 endwhile1851
  whilebody1851:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1856:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1860
    DATA8 flag1860
    DIVF F.1 2.0 tmpf1860
    CP_EQF 0.0 2.0 flag1860
    SELECTF flag1860 0.0 tmpf1860 F.0

    JR_LTF F.0 270.0 whilebody1851
  endwhile1851:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1863
	MOVEF_32 500.0 milliseconds1863
	DATA32 timer1863
	TIMER_WAIT milliseconds1863 timer1863
	TIMER_READY timer1863
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1865:
    CALL MOTOR.RESETCOUNT 'bc'
  while1867:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1871
    DATA8 flag1871
    DIVF F.1 2.0 tmpf1871
    CP_EQF 0.0 2.0 flag1871
    SELECTF flag1871 0.0 tmpf1871 F.0

    JR_GTEQF F.0 100.0 endwhile1867
  whilebody1867:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1872:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1876
    DATA8 flag1876
    DIVF F.1 2.0 tmpf1876
    CP_EQF 0.0 2.0 flag1876
    SELECTF flag1876 0.0 tmpf1876 F.0

    JR_LTF F.0 100.0 whilebody1867
  endwhile1867:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1878
    DATA8 flag1878
    DIVF 360.0 VL_M tmpf1878
    CP_EQF 0.0 VL_M flag1878
    SELECTF flag1878 0.0 tmpf1878 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1881:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1881
  whilebody1881:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1883:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1881
  endwhile1881:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1886:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1887:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1888:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1890:
    CALL MOTOR.RESETCOUNT 'bc'
  while1892:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1896
    DATA8 flag1896
    DIVF F.1 2.0 tmpf1896
    CP_EQF 0.0 2.0 flag1896
    SELECTF flag1896 0.0 tmpf1896 F.0

    JR_GTEQF F.0 270.0 endwhile1892
  whilebody1892:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1897:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1901
    DATA8 flag1901
    DIVF F.1 2.0 tmpf1901
    CP_EQF 0.0 2.0 flag1901
    SELECTF flag1901 0.0 tmpf1901 F.0

    JR_LTF F.0 270.0 whilebody1892
  endwhile1892:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1904
	MOVEF_32 500.0 milliseconds1904
	DATA32 timer1904
	TIMER_WAIT milliseconds1904 timer1904
	TIMER_READY timer1904
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1906:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1907:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1908
	DATA8 nos1908
	DATA8 busy1908
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1908 nos1908
	JR_EQ8 0 nos1908 motornotbusy1908
  motorwaiting1908:
	OUTPUT_TEST layer1908 nos1908 busy1908
	JR_EQ8 busy1908 0 motornotbusy1908
	SLEEP
	JR motorwaiting1908
  motornotbusy1908:
    PROGRAM_STOP -1
  else1846_1:
  endif1846:
    JR_NEQF VCOLOR5_M 5.0 else1910_1
    WRITE32 ENDSUB_PR:CALLSUB1911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1911:
    CALL MOTOR.RESETCOUNT 'bc'
  while1913:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1917
    DATA8 flag1917
    DIVF F.1 2.0 tmpf1917
    CP_EQF 0.0 2.0 flag1917
    SELECTF flag1917 0.0 tmpf1917 F.0

    JR_GTEQF F.0 500.0 endwhile1913
  whilebody1913:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1918:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1922
    DATA8 flag1922
    DIVF F.1 2.0 tmpf1922
    CP_EQF 0.0 2.0 flag1922
    SELECTF flag1922 0.0 tmpf1922 F.0

    JR_LTF F.0 500.0 whilebody1913
  endwhile1913:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1925
	MOVEF_32 500.0 milliseconds1925
	DATA32 timer1925
	TIMER_WAIT milliseconds1925 timer1925
	TIMER_READY timer1925
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1927:
    MOVEF_F 520.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1928
    DATA8 flag1928
    DIVF 360.0 VL_M tmpf1928
    CP_EQF 0.0 VL_M flag1928
    SELECTF flag1928 0.0 tmpf1928 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1931:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1931
  whilebody1931:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1933:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1931
  endwhile1931:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1936:
    JR_NEQF VC_M 1.0 else1937_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1938 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1938:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1939:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1941:
    CALL MOTOR.RESETCOUNT 'bc'
  while1943:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1947
    DATA8 flag1947
    DIVF F.1 2.0 tmpf1947
    CP_EQF 0.0 2.0 flag1947
    SELECTF flag1947 0.0 tmpf1947 F.0

    JR_GTEQF F.0 470.0 endwhile1943
  whilebody1943:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1948:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1952
    DATA8 flag1952
    DIVF F.1 2.0 tmpf1952
    CP_EQF 0.0 2.0 flag1952
    SELECTF flag1952 0.0 tmpf1952 F.0

    JR_LTF F.0 470.0 whilebody1943
  endwhile1943:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1955
	MOVEF_32 500.0 milliseconds1955
	DATA32 timer1955
	TIMER_WAIT milliseconds1955 timer1955
	TIMER_READY timer1955
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1957:
    MOVEF_F 520.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1958:
    WRITE32 ENDSUB_PR:CALLSUB1959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1959:
    CALL MOTOR.RESETCOUNT 'bc'
  while1961:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1965
    DATA8 flag1965
    DIVF F.1 2.0 tmpf1965
    CP_EQF 0.0 2.0 flag1965
    SELECTF flag1965 0.0 tmpf1965 F.0

    JR_GTEQF F.0 270.0 endwhile1961
  whilebody1961:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1966:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1970
    DATA8 flag1970
    DIVF F.1 2.0 tmpf1970
    CP_EQF 0.0 2.0 flag1970
    SELECTF flag1970 0.0 tmpf1970 F.0

    JR_LTF F.0 270.0 whilebody1961
  endwhile1961:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1973
	MOVEF_32 500.0 milliseconds1973
	DATA32 timer1973
	TIMER_WAIT milliseconds1973 timer1973
	TIMER_READY timer1973
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1975:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1976
    DATA8 flag1976
    DIVF 360.0 VL_M tmpf1976
    CP_EQF 0.0 VL_M flag1976
    SELECTF flag1976 0.0 tmpf1976 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1979:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1979
  whilebody1979:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1981:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1979
  endwhile1979:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1984:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1985:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1986:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1988:
    CALL MOTOR.RESETCOUNT 'bc'
  while1990:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1994
    DATA8 flag1994
    DIVF F.1 2.0 tmpf1994
    CP_EQF 0.0 2.0 flag1994
    SELECTF flag1994 0.0 tmpf1994 F.0

    JR_GTEQF F.0 270.0 endwhile1990
  whilebody1990:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1995:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1999
    DATA8 flag1999
    DIVF F.1 2.0 tmpf1999
    CP_EQF 0.0 2.0 flag1999
    SELECTF flag1999 0.0 tmpf1999 F.0

    JR_LTF F.0 270.0 whilebody1990
  endwhile1990:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2002
	MOVEF_32 500.0 milliseconds2002
	DATA32 timer2002
	TIMER_WAIT milliseconds2002 timer2002
	TIMER_READY timer2002
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2004:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2005:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2006
	DATA8 nos2006
	DATA8 busy2006
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2006 nos2006
	JR_EQ8 0 nos2006 motornotbusy2006
  motorwaiting2006:
	OUTPUT_TEST layer2006 nos2006 busy2006
	JR_EQ8 busy2006 0 motornotbusy2006
	SLEEP
	JR motorwaiting2006
  motornotbusy2006:
    PROGRAM_STOP -1
    JR endif1937
  else1937_1:
    WRITE32 ENDSUB_BELLAM3:CALLSUB2008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB2008:
    MOVEF_F 330.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2009:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2011:
    CALL MOTOR.RESETCOUNT 'bc'
  while2013:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2017
    DATA8 flag2017
    DIVF F.1 2.0 tmpf2017
    CP_EQF 0.0 2.0 flag2017
    SELECTF flag2017 0.0 tmpf2017 F.0

    JR_GTEQF F.0 470.0 endwhile2013
  whilebody2013:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2018:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2022
    DATA8 flag2022
    DIVF F.1 2.0 tmpf2022
    CP_EQF 0.0 2.0 flag2022
    SELECTF flag2022 0.0 tmpf2022 F.0

    JR_LTF F.0 470.0 whilebody2013
  endwhile2013:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2025
	MOVEF_32 500.0 milliseconds2025
	DATA32 timer2025
	TIMER_WAIT milliseconds2025 timer2025
	TIMER_READY timer2025
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2027:
    MOVEF_F 1200.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2028:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2029
	DATA8 nos2029
	DATA8 busy2029
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2029 nos2029
	JR_EQ8 0 nos2029 motornotbusy2029
  motorwaiting2029:
	OUTPUT_TEST layer2029 nos2029 busy2029
	JR_EQ8 busy2029 0 motornotbusy2029
	SLEEP
	JR motorwaiting2029
  motornotbusy2029:
    PROGRAM_STOP -1
  else1937_2:
  endif1937:
  else1910_1:
  endif1910:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer2032
	DATA8 nos2032
	DATA8 busy2032
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2032 nos2032
	JR_EQ8 0 nos2032 motornotbusy2032
  motorwaiting2032:
	OUTPUT_TEST layer2032 nos2032 busy2032
	JR_EQ8 busy2032 0 motornotbusy2032
	SLEEP
	JR motorwaiting2032
  motornotbusy2032:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer2033
	DATA8 nos2033
	DATA8 busy2033
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2033 nos2033
	JR_EQ8 0 nos2033 motornotbusy2033
  motorwaiting2033:
	OUTPUT_TEST layer2033 nos2033 busy2033
	JR_EQ8 busy2033 0 motornotbusy2033
	SLEEP
	JR motorwaiting2033
  motornotbusy2033:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer2035
	DATA8 nos2035
	DATA8 busy2035
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2035 nos2035
	JR_EQ8 0 nos2035 motornotbusy2035
  motorwaiting2035:
	OUTPUT_TEST layer2035 nos2035 busy2035
	JR_EQ8 busy2035 0 motornotbusy2035
	SLEEP
	JR motorwaiting2035
  motornotbusy2035:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer2036
	DATA8 nos2036
	DATA8 busy2036
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2036 nos2036
	JR_EQ8 0 nos2036 motornotbusy2036
  motorwaiting2036:
	OUTPUT_TEST layer2036 nos2036 busy2036
	JR_EQ8 busy2036 0 motornotbusy2036
	SLEEP
	JR motorwaiting2036
  motornotbusy2036:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf2038
    DATA8 flag2038
    DIVF 360.0 VL_M tmpf2038
    CP_EQF 0.0 VL_M flag2038
    SELECTF flag2038 0.0 tmpf2038 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2041:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2041
  whilebody2041:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2043:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2041
  endwhile2041:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2046 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2046:
    ADDF VC_M 1.0 VC_M
    DATA32 tmp2048
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp2048
    JR_NEQ32 0 tmp2048 alreadylaunched2048
    OBJECT_START TVIDVIG
  alreadylaunched2048:
ENDTHREAD:
    RETURN
SUB_US:
    MOVEF_F 251.2 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf7
    DATA8 flag7
    DIVF 360.0 VL_M tmpf7
    CP_EQF 0.0 VL_M flag7
    SELECTF flag7 0.0 tmpf7 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while10:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf14
    DATA8 flag14
    DIVF F.1 2.0 tmpf14
    CP_EQF 0.0 2.0 flag14
    SELECTF flag14 0.0 tmpf14 F.0

    JR_GTEQF F.0 VX_M endwhile10
  whilebody10:
    WRITE32 ENDSUB_A3:CALLSUB15 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB15:
    WRITE32 ENDSUB_A2:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB16:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB17:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf21
    DATA8 flag21
    DIVF F.1 2.0 tmpf21
    CP_EQF 0.0 2.0 flag21
    SELECTF flag21 0.0 tmpf21 F.0

    JR_LTF F.0 VX_M whilebody10
  endwhile10:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB23:
    WRITE32 ENDSUB_A2:CALLSUB24 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB24:
  while25:
    JR_LTEQF VS3_M 15.0 and27
    JR_GTF VS2_M 15.0 or26
  and27:
    JR_GTEQF VS3_M 15.0 endwhile25
    JR_GTEQF VS2_M 15.0 endwhile25
  or26:
  whilebody25:
    WRITE32 ENDSUB_A3:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB28:
    WRITE32 ENDSUB_A2:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB29:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB30 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB30:
    JR_LTEQF VS3_M 15.0 and31
    JR_GTF VS2_M 15.0 whilebody25
  and31:
    JR_GTEQF VS3_M 15.0 and32
    JR_LTF VS2_M 15.0 whilebody25
  and32:
  endwhile25:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_US:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_US:
SUB_PL:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB36:
    WRITE32 ENDSUB_A2:CALLSUB37 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB37:
  while38:
    JR_LTEQF VS2_M 15.0 endwhile38
  whilebody38:
    WRITE32 ENDSUB_A3:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB39:
    WRITE32 ENDSUB_A2:CALLSUB40 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB40:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 15.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB43:
    WRITE32 ENDSUB_A2:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB44:
  while45:
    JR_GTEQF VS2_M 15.0 endwhile45
  whilebody45:
    WRITE32 ENDSUB_A3:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB46:
    WRITE32 ENDSUB_A2:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB47:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody45
  endwhile45:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PL:
SUB_PR:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 80.0 'true'

	DATA8 layer50
	DATA8 nos50
	DATA8 busy50
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer50 nos50
	JR_EQ8 0 nos50 motornotbusy50
  motorwaiting50:
	OUTPUT_TEST layer50 nos50 busy50
	JR_EQ8 busy50 0 motornotbusy50
	SLEEP
	JR motorwaiting50
  motornotbusy50:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB52:
    WRITE32 ENDSUB_A2:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB53:
  while54:
    JR_LTEQF VS3_M 15.0 endwhile54
  whilebody54:
    WRITE32 ENDSUB_A3:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB55:
    WRITE32 ENDSUB_A2:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB56:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 15.0 whilebody54
  endwhile54:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB59:
    WRITE32 ENDSUB_A2:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB60:
  while61:
    JR_GTEQF VS3_M 15.0 endwhile61
  whilebody61:
    WRITE32 ENDSUB_A3:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB62:
    WRITE32 ENDSUB_A2:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB63:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody61
  endwhile61:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PR:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PR:
SUB_NPL:
    WRITE32 ENDSUB_A2:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB66:
    WRITE32 ENDSUB_A3:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB67:
  while68:
    JR_LTEQF VS3_M 10.0 and70
    JR_GTF VS2_M 10.0 or69
  and70:
    JR_GTEQF VS3_M 10.0 and71
    JR_GTF VS2_M 10.0 or69
  and71:
    JR_LTEQF VS3_M 10.0 endwhile68
    JR_GTEQF VS2_M 10.0 endwhile68
  or69:
  whilebody68:
    WRITE32 ENDSUB_A2:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB72:
    WRITE32 ENDSUB_A3:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB73:
    CALL MOTOR.STARTPOWER 'bc' -20.0
    JR_LTEQF VS3_M 10.0 and75
    JR_GTF VS2_M 10.0 whilebody68
  and75:
    JR_GTEQF VS3_M 10.0 and76
    JR_GTF VS2_M 10.0 whilebody68
  and76:
    JR_LTEQF VS3_M 10.0 and77
    JR_LTF VS2_M 10.0 whilebody68
  and77:
  endwhile68:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer81
	DATA8 nos81
	DATA8 busy81
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer81 nos81
	JR_EQ8 0 nos81 motornotbusy81
  motorwaiting81:
	OUTPUT_TEST layer81 nos81 busy81
	JR_EQ8 busy81 0 motornotbusy81
	SLEEP
	JR motorwaiting81
  motornotbusy81:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB83:
    WRITE32 ENDSUB_A2:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB84:
  while85:
    JR_LTEQF VS2_M 10.0 endwhile85
  whilebody85:
    WRITE32 ENDSUB_A3:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB86:
    WRITE32 ENDSUB_A2:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB87:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VS2_M 10.0 whilebody85
  endwhile85:
    WRITE32 ENDSUB_A3:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB89:
    WRITE32 ENDSUB_A2:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB90:
  while91:
    JR_GTEQF VS2_M 60.0 endwhile91
  whilebody91:
    WRITE32 ENDSUB_A3:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB92:
    WRITE32 ENDSUB_A2:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB93:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 60.0 whilebody91
  endwhile91:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_ZAMOROZ:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZAMOROZ
CALLSUB96:
RETSUB_NPL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPL:
SUB_NPP:
    WRITE32 ENDSUB_A2:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB97:
    WRITE32 ENDSUB_A3:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB98:
  while99:
    JR_LTEQF VS3_M 10.0 and101
    JR_GTF VS2_M 10.0 or100
  and101:
    JR_GTEQF VS3_M 10.0 and102
    JR_GTF VS2_M 10.0 or100
  and102:
    JR_LTEQF VS3_M 10.0 endwhile99
    JR_GTEQF VS2_M 10.0 endwhile99
  or100:
  whilebody99:
    WRITE32 ENDSUB_A2:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB103:
    WRITE32 ENDSUB_A3:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB104:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 10.0 and106
    JR_GTF VS2_M 10.0 whilebody99
  and106:
    JR_GTEQF VS3_M 10.0 and107
    JR_GTF VS2_M 10.0 whilebody99
  and107:
    JR_LTEQF VS3_M 10.0 and108
    JR_LTF VS2_M 10.0 whilebody99
  and108:
  endwhile99:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer112
	DATA8 nos112
	DATA8 busy112
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer112 nos112
	JR_EQ8 0 nos112 motornotbusy112
  motorwaiting112:
	OUTPUT_TEST layer112 nos112 busy112
	JR_EQ8 busy112 0 motornotbusy112
	SLEEP
	JR motorwaiting112
  motornotbusy112:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB114:
    WRITE32 ENDSUB_A2:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB115:
  while116:
    JR_LTEQF VS3_M 10.0 endwhile116
  whilebody116:
    WRITE32 ENDSUB_A3:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB117:
    WRITE32 ENDSUB_A2:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB118:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody116
  endwhile116:
    WRITE32 ENDSUB_A3:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB120:
    WRITE32 ENDSUB_A2:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB121:
  while122:
    JR_GTEQF VS3_M 60.0 endwhile122
  whilebody122:
    WRITE32 ENDSUB_A3:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB123:
    WRITE32 ENDSUB_A2:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB124:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody122
  endwhile122:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPP:
SUB_REDL:
    DATA32 tmp127
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp127
    JR_NEQ32 0 tmp127 alreadylaunched127
    OBJECT_START TZADVIG
  alreadylaunched127:
    WRITE32 ENDSUB_A3:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB128:
    WRITE32 ENDSUB_A2:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB129:
  while130:
    JR_LTEQF VS3_M 10.0 and132
    JR_GTF VS2_M 10.0 or131
  and132:
    JR_GTEQF VS3_M 10.0 and133
    JR_GTF VS2_M 10.0 or131
  and133:
    JR_LTEQF VS3_M 10.0 endwhile130
    JR_GTEQF VS2_M 10.0 endwhile130
  or131:
  whilebody130:
    WRITE32 ENDSUB_A3:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB134:
    WRITE32 ENDSUB_A2:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB135:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB136:
    JR_LTEQF VS3_M 10.0 and137
    JR_GTF VS2_M 10.0 whilebody130
  and137:
    JR_GTEQF VS3_M 10.0 and138
    JR_GTF VS2_M 10.0 whilebody130
  and138:
    JR_LTEQF VS3_M 10.0 and139
    JR_LTF VS2_M 10.0 whilebody130
  and139:
  endwhile130:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer141
	DATA8 nos141
	DATA8 busy141
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer141 nos141
	JR_EQ8 0 nos141 motornotbusy141
  motorwaiting141:
	OUTPUT_TEST layer141 nos141 busy141
	JR_EQ8 busy141 0 motornotbusy141
	SLEEP
	JR motorwaiting141
  motornotbusy141:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer142
	DATA8 nos142
	DATA8 busy142
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer142 nos142
	JR_EQ8 0 nos142 motornotbusy142
  motorwaiting142:
	OUTPUT_TEST layer142 nos142 busy142
	JR_EQ8 busy142 0 motornotbusy142
	SLEEP
	JR motorwaiting142
  motornotbusy142:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_A2:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB145:
    WRITE32 ENDSUB_A3:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB146:
  while147:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile147
  whilebody147:
    WRITE32 ENDSUB_A2:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB149:
    WRITE32 ENDSUB_A3:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB150:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB151:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody147
  endwhile147:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds155
	MOVEF_32 500.0 milliseconds155
	DATA32 timer155
	TIMER_WAIT milliseconds155 timer155
	TIMER_READY timer155
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer158
	DATA8 nos158
	DATA8 busy158
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer158 nos158
	JR_EQ8 0 nos158 motornotbusy158
  motorwaiting158:
	OUTPUT_TEST layer158 nos158 busy158
	JR_EQ8 busy158 0 motornotbusy158
	SLEEP
	JR motorwaiting158
  motornotbusy158:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 -20.0 400.0 'true'

	DATA8 layer159
	DATA8 nos159
	DATA8 busy159
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer159 nos159
	JR_EQ8 0 nos159 motornotbusy159
  motorwaiting159:
	OUTPUT_TEST layer159 nos159 busy159
	JR_EQ8 busy159 0 motornotbusy159
	SLEEP
	JR motorwaiting159
  motornotbusy159:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer160
	DATA8 nos160
	DATA8 busy160
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer160 nos160
	JR_EQ8 0 nos160 motornotbusy160
  motorwaiting160:
	OUTPUT_TEST layer160 nos160 busy160
	JR_EQ8 busy160 0 motornotbusy160
	SLEEP
	JR motorwaiting160
  motornotbusy160:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 210.0 'true'

	DATA8 layer162
	DATA8 nos162
	DATA8 busy162
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer162 nos162
	JR_EQ8 0 nos162 motornotbusy162
  motorwaiting162:
	OUTPUT_TEST layer162 nos162 busy162
	JR_EQ8 busy162 0 motornotbusy162
	SLEEP
	JR motorwaiting162
  motornotbusy162:
    WRITE32 ENDSUB_VIRAV:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_VIRAV
CALLSUB163:
RETSUB_REDL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_REDL:
SUB_BELLAM:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer164
	DATA8 nos164
	DATA8 busy164
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer164 nos164
	JR_EQ8 0 nos164 motornotbusy164
  motorwaiting164:
	OUTPUT_TEST layer164 nos164 busy164
	JR_EQ8 busy164 0 motornotbusy164
	SLEEP
	JR motorwaiting164
  motornotbusy164:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer165
	DATA8 nos165
	DATA8 busy165
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer165 nos165
	JR_EQ8 0 nos165 motornotbusy165
  motorwaiting165:
	OUTPUT_TEST layer165 nos165 busy165
	JR_EQ8 busy165 0 motornotbusy165
	SLEEP
	JR motorwaiting165
  motornotbusy165:
    WRITE32 ENDSUB_A2:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB166:
    WRITE32 ENDSUB_A3:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB167:
  while168:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 55.0 endwhile168
  whilebody168:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody168
  endwhile168:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB173:
    WRITE32 ENDSUB_A2:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB174:
  while175:
    JR_LTEQF VS3_M 15.0 and177
    JR_GTF VS2_M 15.0 or176
  and177:
    JR_GTEQF VS3_M 15.0 endwhile175
    JR_GTEQF VS2_M 15.0 endwhile175
  or176:
  whilebody175:
    WRITE32 ENDSUB_A3:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB178:
    WRITE32 ENDSUB_A2:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB179:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB180:
    JR_LTEQF VS3_M 15.0 and181
    JR_GTF VS2_M 15.0 whilebody175
  and181:
    JR_GTEQF VS3_M 15.0 and182
    JR_LTF VS2_M 15.0 whilebody175
  and182:
  endwhile175:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    WRITE32 ENDSUB_A3:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB185:
    WRITE32 ENDSUB_A2:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB186:
  while187:
    JR_LTEQF VS3_M 10.0 endwhile187
  whilebody187:
    WRITE32 ENDSUB_A3:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB188:
    WRITE32 ENDSUB_A2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB189:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody187
  endwhile187:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB192:
    WRITE32 ENDSUB_A2:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB193:
  while194:
    JR_GTEQF VS3_M 15.0 endwhile194
  whilebody194:
    WRITE32 ENDSUB_A3:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB195:
    WRITE32 ENDSUB_A2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB196:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody194
  endwhile194:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while200:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile200
  whilebody200:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB202:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody200
  endwhile200:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB205:
    WRITE32 ENDSUB_A2:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB206:
    MOVEF_F 1.0 VI_M
  for207:
    JR_GTF VI_M 1.0 endfor207
  forbody207:
    WRITE32 ENDSUB_A3:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB208:
    WRITE32 ENDSUB_A2:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB209:
  while210:
    JR_LTEQF VS3_M 15.0 and212
    JR_GTF VS2_M 15.0 or211
  and212:
    JR_GTEQF VS3_M 15.0 endwhile210
    JR_GTEQF VS2_M 15.0 endwhile210
  or211:
  whilebody210:
    WRITE32 ENDSUB_A3:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB213:
    WRITE32 ENDSUB_A2:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB214:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB215:
    JR_LTEQF VS3_M 15.0 and216
    JR_GTF VS2_M 15.0 whilebody210
  and216:
    JR_GTEQF VS3_M 15.0 and217
    JR_LTF VS2_M 15.0 whilebody210
  and217:
  endwhile210:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer219
	DATA8 nos219
	DATA8 busy219
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer219 nos219
	JR_EQ8 0 nos219 motornotbusy219
  motorwaiting219:
	OUTPUT_TEST layer219 nos219 busy219
	JR_EQ8 busy219 0 motornotbusy219
	SLEEP
	JR motorwaiting219
  motornotbusy219:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody207
  endfor207:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 20.0 'true'

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB223:
    WRITE32 ENDSUB_A2:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB224:
    MOVEF_F 80.0 VJ_M
  while225:
    JR_LTEQF VS3_M 15.0 endwhile225
  whilebody225:
    WRITE32 ENDSUB_A3:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB226:
    WRITE32 ENDSUB_A2:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB227:
    JR_LTEQF VJ_M 30.0 else228_1
    SUBF VJ_M 0.1 VJ_M
  else228_1:
  endif228:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VS3_M 15.0 whilebody225
  endwhile225:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB232:
    WRITE32 ENDSUB_A2:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB233:
    MOVEF_F 80.0 VJ_M
  while234:
    JR_GTEQF VS3_M 15.0 endwhile234
  whilebody234:
    WRITE32 ENDSUB_A3:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB235:
    WRITE32 ENDSUB_A2:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB236:
    JR_LTEQF VJ_M 30.0 else237_1
    SUBF VJ_M 0.1 VJ_M
  else237_1:
  endif237:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VS3_M 15.0 whilebody234
  endwhile234:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while242:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf246
    DATA8 flag246
    DIVF F.1 2.0 tmpf246
    CP_EQF 0.0 2.0 flag246
    SELECTF flag246 0.0 tmpf246 F.0

    JR_GTEQF F.0 50.0 endwhile242
  whilebody242:
    WRITE32 ENDSUB_A3:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB247:
    WRITE32 ENDSUB_A2:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB248:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB249:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf253
    DATA8 flag253
    DIVF F.1 2.0 tmpf253
    CP_EQF 0.0 2.0 flag253
    SELECTF flag253 0.0 tmpf253 F.0

    JR_LTF F.0 50.0 whilebody242
  endwhile242:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer255
	DATA8 nos255
	DATA8 busy255
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer255 nos255
	JR_EQ8 0 nos255 motornotbusy255
  motorwaiting255:
	OUTPUT_TEST layer255 nos255 busy255
	JR_EQ8 busy255 0 motornotbusy255
	SLEEP
	JR motorwaiting255
  motornotbusy255:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds257
	MOVEF_32 500.0 milliseconds257
	DATA32 timer257
	TIMER_WAIT milliseconds257 timer257
	TIMER_READY timer257
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 50.0 'true'

	DATA8 layer259
	DATA8 nos259
	DATA8 busy259
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer259 nos259
	JR_EQ8 0 nos259 motornotbusy259
  motorwaiting259:
	OUTPUT_TEST layer259 nos259 busy259
	JR_EQ8 busy259 0 motornotbusy259
	SLEEP
	JR motorwaiting259
  motornotbusy259:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 350.0 'true'

	DATA8 layer260
	DATA8 nos260
	DATA8 busy260
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer260 nos260
	JR_EQ8 0 nos260 motornotbusy260
  motorwaiting260:
	OUTPUT_TEST layer260 nos260 busy260
	JR_EQ8 busy260 0 motornotbusy260
	SLEEP
	JR motorwaiting260
  motornotbusy260:
    WRITE32 ENDSUB_A2:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB261:
    WRITE32 ENDSUB_A3:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB262:
  while263:
    JR_LTEQF VS3_M 10.0 and265
    JR_GTF VS2_M 10.0 or264
  and265:
    JR_GTEQF VS3_M 10.0 and266
    JR_GTF VS2_M 10.0 or264
  and266:
    JR_LTEQF VS3_M 6.0 endwhile263
    JR_GTEQF VS2_M 6.0 endwhile263
  or264:
  whilebody263:
    WRITE32 ENDSUB_A2:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB267:
    WRITE32 ENDSUB_A3:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB268:
    CALL MOTOR.STARTPOWER 'bc' 20.0
    JR_LTEQF VS3_M 10.0 and270
    JR_GTF VS2_M 10.0 whilebody263
  and270:
    JR_GTEQF VS3_M 10.0 and271
    JR_GTF VS2_M 10.0 whilebody263
  and271:
    JR_LTEQF VS3_M 6.0 and272
    JR_LTF VS2_M 6.0 whilebody263
  and272:
  endwhile263:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer274
	DATA8 nos274
	DATA8 busy274
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer274 nos274
	JR_EQ8 0 nos274 motornotbusy274
  motorwaiting274:
	OUTPUT_TEST layer274 nos274 busy274
	JR_EQ8 busy274 0 motornotbusy274
	SLEEP
	JR motorwaiting274
  motornotbusy274:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB276:
    WRITE32 ENDSUB_A2:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB277:
  while278:
    JR_LTEQF VS3_M 10.0 endwhile278
  whilebody278:
    WRITE32 ENDSUB_A3:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB279:
    WRITE32 ENDSUB_A2:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB280:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    JR_GTF VS3_M 10.0 whilebody278
  endwhile278:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB283:
    WRITE32 ENDSUB_A2:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB284:
  while285:
    JR_GTEQF VS3_M 15.0 endwhile285
  whilebody285:
    WRITE32 ENDSUB_A3:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB286:
    WRITE32 ENDSUB_A2:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB287:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    JR_LTF VS3_M 15.0 whilebody285
  endwhile285:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_ZAMOROZ:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZAMOROZ
CALLSUB290:
    DATA32 milliseconds291
	MOVEF_32 100.0 milliseconds291
	DATA32 timer291
	TIMER_WAIT milliseconds291 timer291
	TIMER_READY timer291
RETSUB_BELLAM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM:
SUB_BELLAM2:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer292
	DATA8 nos292
	DATA8 busy292
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer292 nos292
	JR_EQ8 0 nos292 motornotbusy292
  motorwaiting292:
	OUTPUT_TEST layer292 nos292 busy292
	JR_EQ8 busy292 0 motornotbusy292
	SLEEP
	JR motorwaiting292
  motornotbusy292:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer293
	DATA8 nos293
	DATA8 busy293
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer293 nos293
	JR_EQ8 0 nos293 motornotbusy293
  motorwaiting293:
	OUTPUT_TEST layer293 nos293 busy293
	JR_EQ8 busy293 0 motornotbusy293
	SLEEP
	JR motorwaiting293
  motornotbusy293:
    WRITE32 ENDSUB_A2:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB294:
    WRITE32 ENDSUB_A3:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB295:
  while296:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile296
  whilebody296:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody296
  endwhile296:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB301:
    WRITE32 ENDSUB_A3:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB302:
  while303:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf307
    DATA8 flag307
    DIVF F.1 2.0 tmpf307
    CP_EQF 0.0 2.0 flag307
    SELECTF flag307 0.0 tmpf307 F.0

    JR_GTEQF F.0 80.0 endwhile303
  whilebody303:
    WRITE32 ENDSUB_A3:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB308:
    WRITE32 ENDSUB_A2:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB309:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB310:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf314
    DATA8 flag314
    DIVF F.1 2.0 tmpf314
    CP_EQF 0.0 2.0 flag314
    SELECTF flag314 0.0 tmpf314 F.0

    JR_LTF F.0 80.0 whilebody303
  endwhile303:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB316:
    WRITE32 ENDSUB_A2:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB317:
  while318:
    JR_LTEQF VS3_M 10.0 and320
    JR_GTF VS2_M 10.0 or319
  and320:
    JR_GTEQF VS3_M 10.0 endwhile318
    JR_GTEQF VS2_M 10.0 endwhile318
  or319:
  whilebody318:
    WRITE32 ENDSUB_A3:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB321:
    WRITE32 ENDSUB_A2:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB322:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB323:
    JR_LTEQF VS3_M 10.0 and324
    JR_GTF VS2_M 10.0 whilebody318
  and324:
    JR_GTEQF VS3_M 10.0 and325
    JR_LTF VS2_M 10.0 whilebody318
  and325:
  endwhile318:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer327
	DATA8 nos327
	DATA8 busy327
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer327 nos327
	JR_EQ8 0 nos327 motornotbusy327
  motorwaiting327:
	OUTPUT_TEST layer327 nos327 busy327
	JR_EQ8 busy327 0 motornotbusy327
	SLEEP
	JR motorwaiting327
  motornotbusy327:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB329:
    WRITE32 ENDSUB_A2:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB330:
  while331:
    JR_LTEQF VS3_M 10.0 endwhile331
  whilebody331:
    WRITE32 ENDSUB_A3:CALLSUB332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB332:
    WRITE32 ENDSUB_A2:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB333:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody331
  endwhile331:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB336:
    WRITE32 ENDSUB_A2:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB337:
  while338:
    JR_GTEQF VS3_M 15.0 endwhile338
  whilebody338:
    WRITE32 ENDSUB_A3:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB339:
    WRITE32 ENDSUB_A2:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB340:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody338
  endwhile338:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB343:
    WRITE32 ENDSUB_A2:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB344:
    MOVEF_F 1.0 VI_M
  for345:
    JR_GTF VI_M 2.0 endfor345
  forbody345:
    WRITE32 ENDSUB_A3:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB346:
    WRITE32 ENDSUB_A2:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB347:
  while348:
    JR_LTEQF VS3_M 15.0 and350
    JR_GTF VS2_M 15.0 or349
  and350:
    JR_GTEQF VS3_M 15.0 endwhile348
    JR_GTEQF VS2_M 15.0 endwhile348
  or349:
  whilebody348:
    WRITE32 ENDSUB_A3:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB351:
    WRITE32 ENDSUB_A2:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB352:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB353:
    JR_LTEQF VS3_M 15.0 and354
    JR_GTF VS2_M 15.0 whilebody348
  and354:
    JR_GTEQF VS3_M 15.0 and355
    JR_LTF VS2_M 15.0 whilebody348
  and355:
  endwhile348:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer356
	DATA8 nos356
	DATA8 busy356
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer356 nos356
	JR_EQ8 0 nos356 motornotbusy356
  motorwaiting356:
	OUTPUT_TEST layer356 nos356 busy356
	JR_EQ8 busy356 0 motornotbusy356
	SLEEP
	JR motorwaiting356
  motornotbusy356:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 2.0 forbody345
  endfor345:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 20.0 'true'

	DATA8 layer358
	DATA8 nos358
	DATA8 busy358
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer358 nos358
	JR_EQ8 0 nos358 motornotbusy358
  motorwaiting358:
	OUTPUT_TEST layer358 nos358 busy358
	JR_EQ8 busy358 0 motornotbusy358
	SLEEP
	JR motorwaiting358
  motornotbusy358:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB360:
    WRITE32 ENDSUB_A2:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB361:
    MOVEF_F 80.0 VJ_M
  while362:
    JR_LTEQF VS3_M 10.0 endwhile362
  whilebody362:
    WRITE32 ENDSUB_A3:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB363:
    WRITE32 ENDSUB_A2:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB364:
    JR_LTEQF VJ_M 30.0 else365_1
    SUBF VJ_M 0.1 VJ_M
  else365_1:
  endif365:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VS3_M 10.0 whilebody362
  endwhile362:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB369:
    WRITE32 ENDSUB_A2:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB370:
    MOVEF_F 80.0 VJ_M
  while371:
    JR_GTEQF VS3_M 15.0 endwhile371
  whilebody371:
    WRITE32 ENDSUB_A3:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB372:
    WRITE32 ENDSUB_A2:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB373:
    JR_LTEQF VJ_M 30.0 else374_1
    SUBF VJ_M 0.1 VJ_M
  else374_1:
  endif374:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VS3_M 15.0 whilebody371
  endwhile371:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while379:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf383
    DATA8 flag383
    DIVF F.1 2.0 tmpf383
    CP_EQF 0.0 2.0 flag383
    SELECTF flag383 0.0 tmpf383 F.0

    JR_GTEQF F.0 50.0 endwhile379
  whilebody379:
    WRITE32 ENDSUB_A3:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB384:
    WRITE32 ENDSUB_A2:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB385:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB386:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf390
    DATA8 flag390
    DIVF F.1 2.0 tmpf390
    CP_EQF 0.0 2.0 flag390
    SELECTF flag390 0.0 tmpf390 F.0

    JR_LTF F.0 50.0 whilebody379
  endwhile379:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer392
	DATA8 nos392
	DATA8 busy392
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer392 nos392
	JR_EQ8 0 nos392 motornotbusy392
  motorwaiting392:
	OUTPUT_TEST layer392 nos392 busy392
	JR_EQ8 busy392 0 motornotbusy392
	SLEEP
	JR motorwaiting392
  motornotbusy392:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds394
	MOVEF_32 500.0 milliseconds394
	DATA32 timer394
	TIMER_WAIT milliseconds394 timer394
	TIMER_READY timer394
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while397:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf401
    DATA8 flag401
    DIVF F.1 2.0 tmpf401
    CP_EQF 0.0 2.0 flag401
    SELECTF flag401 0.0 tmpf401 F.0

    JR_LTEQF F.0 -200.0 endwhile397
  whilebody397:
    CALL MOTOR.STARTPOWER 'bc' -20.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf406
    DATA8 flag406
    DIVF F.1 2.0 tmpf406
    CP_EQF 0.0 2.0 flag406
    SELECTF flag406 0.0 tmpf406 F.0

    JR_GTF F.0 -200.0 whilebody397
  endwhile397:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer408
	DATA8 nos408
	DATA8 busy408
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer408 nos408
	JR_EQ8 0 nos408 motornotbusy408
  motorwaiting408:
	OUTPUT_TEST layer408 nos408 busy408
	JR_EQ8 busy408 0 motornotbusy408
	SLEEP
	JR motorwaiting408
  motornotbusy408:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB410:
    WRITE32 ENDSUB_A3:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB411:
  while412:
    JR_LTEQF VS3_M 10.0 and414
    JR_GTF VS2_M 10.0 or413
  and414:
    JR_LTEQF VS3_M 10.0 and415
    JR_LTF VS2_M 10.0 or413
  and415:
    JR_GTEQF VS3_M 10.0 endwhile412
    JR_LTEQF VS2_M 10.0 endwhile412
  or413:
  whilebody412:
    WRITE32 ENDSUB_A2:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB416:
    WRITE32 ENDSUB_A3:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB417:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VS3_M 10.0 and419
    JR_GTF VS2_M 10.0 whilebody412
  and419:
    JR_LTEQF VS3_M 10.0 and420
    JR_LTF VS2_M 10.0 whilebody412
  and420:
    JR_GTEQF VS3_M 10.0 and421
    JR_GTF VS2_M 10.0 whilebody412
  and421:
  endwhile412:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer423
	DATA8 nos423
	DATA8 busy423
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer423 nos423
	JR_EQ8 0 nos423 motornotbusy423
  motorwaiting423:
	OUTPUT_TEST layer423 nos423 busy423
	JR_EQ8 busy423 0 motornotbusy423
	SLEEP
	JR motorwaiting423
  motornotbusy423:
    WRITE32 ENDSUB_A3:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB424:
    WRITE32 ENDSUB_A2:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB425:
  while426:
    JR_LTEQF VS3_M 10.0 endwhile426
  whilebody426:
    WRITE32 ENDSUB_A3:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB427:
    WRITE32 ENDSUB_A2:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB428:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody426
  endwhile426:
    WRITE32 ENDSUB_A3:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB430:
    WRITE32 ENDSUB_A2:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB431:
  while432:
    JR_GTEQF VS3_M 15.0 endwhile432
  whilebody432:
    WRITE32 ENDSUB_A3:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB433:
    WRITE32 ENDSUB_A2:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB434:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody432
  endwhile432:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM2:
SUB_BELLAM3:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer437
	DATA8 nos437
	DATA8 busy437
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer437 nos437
	JR_EQ8 0 nos437 motornotbusy437
  motorwaiting437:
	OUTPUT_TEST layer437 nos437 busy437
	JR_EQ8 busy437 0 motornotbusy437
	SLEEP
	JR motorwaiting437
  motornotbusy437:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 230.0 'true'

	DATA8 layer438
	DATA8 nos438
	DATA8 busy438
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer438 nos438
	JR_EQ8 0 nos438 motornotbusy438
  motorwaiting438:
	OUTPUT_TEST layer438 nos438 busy438
	JR_EQ8 busy438 0 motornotbusy438
	SLEEP
	JR motorwaiting438
  motornotbusy438:
    WRITE32 ENDSUB_A2:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB439:
    WRITE32 ENDSUB_A3:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB440:
  while441:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile441
  whilebody441:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody441
  endwhile441:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB446:
    WRITE32 ENDSUB_A3:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB447:
  while448:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf452
    DATA8 flag452
    DIVF F.1 2.0 tmpf452
    CP_EQF 0.0 2.0 flag452
    SELECTF flag452 0.0 tmpf452 F.0

    JR_GTEQF F.0 80.0 endwhile448
  whilebody448:
    WRITE32 ENDSUB_A3:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB453:
    WRITE32 ENDSUB_A2:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB454:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB455:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf459
    DATA8 flag459
    DIVF F.1 2.0 tmpf459
    CP_EQF 0.0 2.0 flag459
    SELECTF flag459 0.0 tmpf459 F.0

    JR_LTF F.0 80.0 whilebody448
  endwhile448:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB461:
    WRITE32 ENDSUB_A2:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB462:
  while463:
    JR_LTEQF VS3_M 10.0 and465
    JR_GTF VS2_M 10.0 or464
  and465:
    JR_GTEQF VS3_M 10.0 endwhile463
    JR_GTEQF VS2_M 10.0 endwhile463
  or464:
  whilebody463:
    WRITE32 ENDSUB_A3:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB466:
    WRITE32 ENDSUB_A2:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB467:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB468:
    JR_LTEQF VS3_M 10.0 and469
    JR_GTF VS2_M 10.0 whilebody463
  and469:
    JR_GTEQF VS3_M 10.0 and470
    JR_LTF VS2_M 10.0 whilebody463
  and470:
  endwhile463:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer472
	DATA8 nos472
	DATA8 busy472
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer472 nos472
	JR_EQ8 0 nos472 motornotbusy472
  motorwaiting472:
	OUTPUT_TEST layer472 nos472 busy472
	JR_EQ8 busy472 0 motornotbusy472
	SLEEP
	JR motorwaiting472
  motornotbusy472:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB474:
    WRITE32 ENDSUB_A2:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB475:
  while476:
    JR_LTEQF VS3_M 10.0 endwhile476
  whilebody476:
    WRITE32 ENDSUB_A3:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB477:
    WRITE32 ENDSUB_A2:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB478:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 10.0 whilebody476
  endwhile476:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB481:
    WRITE32 ENDSUB_A2:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB482:
  while483:
    JR_GTEQF VS3_M 15.0 endwhile483
  whilebody483:
    WRITE32 ENDSUB_A3:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB484:
    WRITE32 ENDSUB_A2:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB485:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody483
  endwhile483:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB488:
    WRITE32 ENDSUB_A2:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB489:
    MOVEF_F 1.0 VI_M
  for490:
    JR_GTF VI_M 3.0 endfor490
  forbody490:
    WRITE32 ENDSUB_A3:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB491:
    WRITE32 ENDSUB_A2:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB492:
  while493:
    JR_LTEQF VS3_M 15.0 and495
    JR_GTF VS2_M 15.0 or494
  and495:
    JR_GTEQF VS3_M 15.0 endwhile493
    JR_GTEQF VS2_M 15.0 endwhile493
  or494:
  whilebody493:
    WRITE32 ENDSUB_A3:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB496:
    WRITE32 ENDSUB_A2:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB497:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB498:
    JR_LTEQF VS3_M 15.0 and499
    JR_GTF VS2_M 15.0 whilebody493
  and499:
    JR_GTEQF VS3_M 15.0 and500
    JR_LTF VS2_M 15.0 whilebody493
  and500:
  endwhile493:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer501
	DATA8 nos501
	DATA8 busy501
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer501 nos501
	JR_EQ8 0 nos501 motornotbusy501
  motorwaiting501:
	OUTPUT_TEST layer501 nos501 busy501
	JR_EQ8 busy501 0 motornotbusy501
	SLEEP
	JR motorwaiting501
  motornotbusy501:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 3.0 forbody490
  endfor490:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 20.0 'true'

	DATA8 layer504
	DATA8 nos504
	DATA8 busy504
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer504 nos504
	JR_EQ8 0 nos504 motornotbusy504
  motorwaiting504:
	OUTPUT_TEST layer504 nos504 busy504
	JR_EQ8 busy504 0 motornotbusy504
	SLEEP
	JR motorwaiting504
  motornotbusy504:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 100.0 'true'

	DATA8 layer505
	DATA8 nos505
	DATA8 busy505
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer505 nos505
	JR_EQ8 0 nos505 motornotbusy505
  motorwaiting505:
	OUTPUT_TEST layer505 nos505 busy505
	JR_EQ8 busy505 0 motornotbusy505
	SLEEP
	JR motorwaiting505
  motornotbusy505:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -30.0 70.0 'true'

	DATA8 layer506
	DATA8 nos506
	DATA8 busy506
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer506 nos506
	JR_EQ8 0 nos506 motornotbusy506
  motorwaiting506:
	OUTPUT_TEST layer506 nos506 busy506
	JR_EQ8 busy506 0 motornotbusy506
	SLEEP
	JR motorwaiting506
  motornotbusy506:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 50.0 'true'

	DATA8 layer507
	DATA8 nos507
	DATA8 busy507
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer507 nos507
	JR_EQ8 0 nos507 motornotbusy507
  motorwaiting507:
	OUTPUT_TEST layer507 nos507 busy507
	JR_EQ8 busy507 0 motornotbusy507
	SLEEP
	JR motorwaiting507
  motornotbusy507:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 30.0 'true'

	DATA8 layer508
	DATA8 nos508
	DATA8 busy508
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer508 nos508
	JR_EQ8 0 nos508 motornotbusy508
  motorwaiting508:
	OUTPUT_TEST layer508 nos508 busy508
	JR_EQ8 busy508 0 motornotbusy508
	SLEEP
	JR motorwaiting508
  motornotbusy508:
    CALL MOTOR.RESETCOUNT 'bc'
  while510:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf514
    DATA8 flag514
    DIVF F.1 2.0 tmpf514
    CP_EQF 0.0 2.0 flag514
    SELECTF flag514 0.0 tmpf514 F.0

    JR_GTEQF F.0 50.0 endwhile510
  whilebody510:
    WRITE32 ENDSUB_A3:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB515:
    WRITE32 ENDSUB_A2:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB516:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB517:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf521
    DATA8 flag521
    DIVF F.1 2.0 tmpf521
    CP_EQF 0.0 2.0 flag521
    SELECTF flag521 0.0 tmpf521 F.0

    JR_LTF F.0 50.0 whilebody510
  endwhile510:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer523
	DATA8 nos523
	DATA8 busy523
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer523 nos523
	JR_EQ8 0 nos523 motornotbusy523
  motorwaiting523:
	OUTPUT_TEST layer523 nos523 busy523
	JR_EQ8 busy523 0 motornotbusy523
	SLEEP
	JR motorwaiting523
  motornotbusy523:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds525
	MOVEF_32 500.0 milliseconds525
	DATA32 timer525
	TIMER_WAIT milliseconds525 timer525
	TIMER_READY timer525
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 150.0 'true'

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 215.0 'true'

	DATA8 layer528
	DATA8 nos528
	DATA8 busy528
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer528 nos528
	JR_EQ8 0 nos528 motornotbusy528
  motorwaiting528:
	OUTPUT_TEST layer528 nos528 busy528
	JR_EQ8 busy528 0 motornotbusy528
	SLEEP
	JR motorwaiting528
  motornotbusy528:
    WRITE32 ENDSUB_A2:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB529:
    WRITE32 ENDSUB_A3:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB530:
  while531:
    JR_LTEQF VS3_M 10.0 and533
    JR_GTF VS2_M 10.0 or532
  and533:
    JR_GTEQF VS3_M 10.0 and534
    JR_GTF VS2_M 10.0 or532
  and534:
    JR_LTEQF VS3_M 10.0 endwhile531
    JR_GTEQF VS2_M 10.0 endwhile531
  or532:
  whilebody531:
    WRITE32 ENDSUB_A2:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB535:
    WRITE32 ENDSUB_A3:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB536:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 10.0 and538
    JR_GTF VS2_M 10.0 whilebody531
  and538:
    JR_GTEQF VS3_M 10.0 and539
    JR_GTF VS2_M 10.0 whilebody531
  and539:
    JR_LTEQF VS3_M 10.0 and540
    JR_LTF VS2_M 10.0 whilebody531
  and540:
  endwhile531:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer542
	DATA8 nos542
	DATA8 busy542
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer542 nos542
	JR_EQ8 0 nos542 motornotbusy542
  motorwaiting542:
	OUTPUT_TEST layer542 nos542 busy542
	JR_EQ8 busy542 0 motornotbusy542
	SLEEP
	JR motorwaiting542
  motornotbusy542:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB544:
    WRITE32 ENDSUB_A2:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB545:
  while546:
    JR_LTEQF VS3_M 10.0 endwhile546
  whilebody546:
    WRITE32 ENDSUB_A3:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB547:
    WRITE32 ENDSUB_A2:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB548:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    JR_GTF VS3_M 10.0 whilebody546
  endwhile546:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB551:
    WRITE32 ENDSUB_A2:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB552:
  while553:
    JR_GTEQF VS3_M 15.0 endwhile553
  whilebody553:
    WRITE32 ENDSUB_A3:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB554:
    WRITE32 ENDSUB_A2:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB555:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    JR_LTF VS3_M 15.0 whilebody553
  endwhile553:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VI_M
  for558:
    JR_GTF VI_M 1.0 endfor558
  forbody558:
    WRITE32 ENDSUB_A3:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB559:
    WRITE32 ENDSUB_A2:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB560:
  while561:
    JR_LTEQF VS3_M 10.0 and563
    JR_GTF VS2_M 10.0 or562
  and563:
    JR_GTEQF VS3_M 10.0 endwhile561
    JR_GTEQF VS2_M 10.0 endwhile561
  or562:
  whilebody561:
    WRITE32 ENDSUB_A3:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB564:
    WRITE32 ENDSUB_A2:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB565:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB566:
    JR_LTEQF VS3_M 10.0 and567
    JR_GTF VS2_M 10.0 whilebody561
  and567:
    JR_GTEQF VS3_M 10.0 and568
    JR_LTF VS2_M 10.0 whilebody561
  and568:
  endwhile561:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer570
	DATA8 nos570
	DATA8 busy570
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer570 nos570
	JR_EQ8 0 nos570 motornotbusy570
  motorwaiting570:
	OUTPUT_TEST layer570 nos570 busy570
	JR_EQ8 busy570 0 motornotbusy570
	SLEEP
	JR motorwaiting570
  motornotbusy570:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody558
  endfor558:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM3:
SUB_RED_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 70.0 'true'

	DATA8 layer573
	DATA8 nos573
	DATA8 busy573
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer573 nos573
	JR_EQ8 0 nos573 motornotbusy573
  motorwaiting573:
	OUTPUT_TEST layer573 nos573 busy573
	JR_EQ8 busy573 0 motornotbusy573
	SLEEP
	JR motorwaiting573
  motornotbusy573:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB575:
    WRITE32 ENDSUB_A2:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB576:
  while577:
    JR_LTEQF VS2_M 15.0 endwhile577
  whilebody577:
    WRITE32 ENDSUB_A3:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB578:
    WRITE32 ENDSUB_A2:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB579:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VS2_M 15.0 whilebody577
  endwhile577:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB582:
    WRITE32 ENDSUB_A2:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB583:
  while584:
    JR_GTEQF VS2_M 15.0 endwhile584
  whilebody584:
    WRITE32 ENDSUB_A3:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB585:
    WRITE32 ENDSUB_A2:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB586:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VS2_M 15.0 whilebody584
  endwhile584:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while591:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf595
    DATA8 flag595
    DIVF F.1 2.0 tmpf595
    CP_EQF 0.0 2.0 flag595
    SELECTF flag595 0.0 tmpf595 F.0

    JR_GTEQF F.0 270.0 endwhile591
  whilebody591:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB596:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf600
    DATA8 flag600
    DIVF F.1 2.0 tmpf600
    CP_EQF 0.0 2.0 flag600
    SELECTF flag600 0.0 tmpf600 F.0

    JR_LTF F.0 270.0 whilebody591
  endwhile591:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds602
	MOVEF_32 100.0 milliseconds602
	DATA32 timer602
	TIMER_WAIT milliseconds602 timer602
	TIMER_READY timer602
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds604
	MOVEF_32 500.0 milliseconds604
	DATA32 timer604
	TIMER_WAIT milliseconds604 timer604
	TIMER_READY timer604
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB606:
    MOVEF_F 1470.0 VS_M
    MOVEF_F 251.2 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf607
    DATA8 flag607
    DIVF 360.0 VL_M tmpf607
    CP_EQF 0.0 VL_M flag607
    SELECTF flag607 0.0 tmpf607 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while610:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile610
  whilebody610:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2DUS:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2DUS
CALLSUB612:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody610
  endwhile610:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB615:
    WRITE32 ENDSUB_BELLAM:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB616:
    MOVEF_F 1400.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB617:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 70.0 'true'

	DATA8 layer619
	DATA8 nos619
	DATA8 busy619
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer619 nos619
	JR_EQ8 0 nos619 motornotbusy619
  motorwaiting619:
	OUTPUT_TEST layer619 nos619 busy619
	JR_EQ8 busy619 0 motornotbusy619
	SLEEP
	JR motorwaiting619
  motornotbusy619:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB621:
    WRITE32 ENDSUB_A2:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB622:
  while623:
    JR_LTEQF VS2_M 15.0 endwhile623
  whilebody623:
    WRITE32 ENDSUB_A3:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB624:
    WRITE32 ENDSUB_A2:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB625:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VS2_M 15.0 whilebody623
  endwhile623:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB628:
    WRITE32 ENDSUB_A2:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB629:
  while630:
    JR_GTEQF VS2_M 15.0 endwhile630
  whilebody630:
    WRITE32 ENDSUB_A3:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB631:
    WRITE32 ENDSUB_A2:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB632:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VS2_M 15.0 whilebody630
  endwhile630:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while636:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf640
    DATA8 flag640
    DIVF F.1 2.0 tmpf640
    CP_EQF 0.0 2.0 flag640
    SELECTF flag640 0.0 tmpf640 F.0

    JR_GTEQF F.0 270.0 endwhile636
  whilebody636:
    WRITE32 ENDSUB_A3:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB641:
    WRITE32 ENDSUB_A2:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB642:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB643:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf647
    DATA8 flag647
    DIVF F.1 2.0 tmpf647
    CP_EQF 0.0 2.0 flag647
    SELECTF flag647 0.0 tmpf647 F.0

    JR_LTF F.0 270.0 whilebody636
  endwhile636:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds650
	MOVEF_32 500.0 milliseconds650
	DATA32 timer650
	TIMER_WAIT milliseconds650 timer650
	TIMER_READY timer650
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp652
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp652
    JR_NEQ32 0 tmp652 alreadylaunched652
    OBJECT_START TVIDVIG
  alreadylaunched652:
    WRITE32 ENDSUB_NPL:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB653:
    WRITE32 ENDSUB_A3:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB654:
    WRITE32 ENDSUB_A2:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB655:
  while656:
    JR_LTEQF VS3_M 15.0 and658
    JR_GTF VS2_M 15.0 or657
  and658:
    JR_GTEQF VS3_M 15.0 endwhile656
    JR_GTEQF VS2_M 15.0 endwhile656
  or657:
  whilebody656:
    WRITE32 ENDSUB_A3:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB659:
    WRITE32 ENDSUB_A2:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB660:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB661:
    JR_LTEQF VS3_M 15.0 and662
    JR_GTF VS2_M 15.0 whilebody656
  and662:
    JR_GTEQF VS3_M 15.0 and663
    JR_LTF VS2_M 15.0 whilebody656
  and663:
  endwhile656:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer664
	DATA8 nos664
	DATA8 busy664
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer664 nos664
	JR_EQ8 0 nos664 motornotbusy664
  motorwaiting664:
	OUTPUT_TEST layer664 nos664 busy664
	JR_EQ8 busy664 0 motornotbusy664
	SLEEP
	JR motorwaiting664
  motornotbusy664:
    WRITE32 ENDSUB_A3:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB665:
    WRITE32 ENDSUB_A2:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB666:
  while667:
    JR_LTEQF VS3_M 15.0 and669
    JR_GTF VS2_M 15.0 or668
  and669:
    JR_GTEQF VS3_M 15.0 endwhile667
    JR_GTEQF VS2_M 15.0 endwhile667
  or668:
  whilebody667:
    WRITE32 ENDSUB_A3:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB670:
    WRITE32 ENDSUB_A2:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB671:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB672:
    JR_LTEQF VS3_M 15.0 and673
    JR_GTF VS2_M 15.0 whilebody667
  and673:
    JR_GTEQF VS3_M 15.0 and674
    JR_LTF VS2_M 15.0 whilebody667
  and674:
  endwhile667:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_RED_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RED_1:
SUB_SB1:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 200.0 'true'

	DATA8 layer676
	DATA8 nos676
	DATA8 busy676
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer676 nos676
	JR_EQ8 0 nos676 motornotbusy676
  motorwaiting676:
	OUTPUT_TEST layer676 nos676 busy676
	JR_EQ8 busy676 0 motornotbusy676
	SLEEP
	JR motorwaiting676
  motornotbusy676:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 300.0 'true'

	DATA8 layer677
	DATA8 nos677
	DATA8 busy677
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer677 nos677
	JR_EQ8 0 nos677 motornotbusy677
  motorwaiting677:
	OUTPUT_TEST layer677 nos677 busy677
	JR_EQ8 busy677 0 motornotbusy677
	SLEEP
	JR motorwaiting677
  motornotbusy677:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB679:
    WRITE32 ENDSUB_A2:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB680:
  while681:
    JR_LTEQF VS2_M 10.0 endwhile681
  whilebody681:
    WRITE32 ENDSUB_A3:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB682:
    WRITE32 ENDSUB_A2:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB683:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 10.0 whilebody681
  endwhile681:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB686:
    WRITE32 ENDSUB_A2:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB687:
  while688:
    JR_GTEQF VS2_M 15.0 endwhile688
  whilebody688:
    WRITE32 ENDSUB_A3:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB689:
    WRITE32 ENDSUB_A2:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB690:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody688
  endwhile688:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds693
	MOVEF_32 100.0 milliseconds693
	DATA32 timer693
	TIMER_WAIT milliseconds693 timer693
	TIMER_READY timer693
    CALL MOTOR.RESETCOUNT 'bc'
  while695:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf699
    DATA8 flag699
    DIVF F.1 2.0 tmpf699
    CP_EQF 0.0 2.0 flag699
    SELECTF flag699 0.0 tmpf699 F.0

    JR_GTEQF F.0 300.0 endwhile695
  whilebody695:
    WRITE32 ENDSUB_A3:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB700:
    WRITE32 ENDSUB_A2:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB701:
    MOVEF_F 20.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB702:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf706
    DATA8 flag706
    DIVF F.1 2.0 tmpf706
    CP_EQF 0.0 2.0 flag706
    SELECTF flag706 0.0 tmpf706 F.0

    JR_LTF F.0 300.0 whilebody695
  endwhile695:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB708:
    WRITE32 ENDSUB_A2:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB709:
  while710:
    JR_LTEQF VS3_M 10.0 and712
    JR_GTF VS2_M 10.0 or711
  and712:
    JR_GTEQF VS3_M 10.0 endwhile710
    JR_GTEQF VS2_M 10.0 endwhile710
  or711:
  whilebody710:
    WRITE32 ENDSUB_A3:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB713:
    WRITE32 ENDSUB_A2:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB714:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB715:
    JR_LTEQF VS3_M 10.0 and716
    JR_GTF VS2_M 10.0 whilebody710
  and716:
    JR_GTEQF VS3_M 10.0 and717
    JR_LTF VS2_M 10.0 whilebody710
  and717:
  endwhile710:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_SB1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SB1:
SUB_HSV:
    DATA8 layer719
	DATA8 no719
	DATA8 mode8719
	
	MOVEF_8 1.0 no719
	SUB8 no719 1 no719
	DIV8 no719 4 layer719
	MATH MOD8 no719 4 no719

	MOVEF_8 2.0 mode8719
	
	INPUT_DEVICE READY_RAW layer719 no719 0 mode8719 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf726
    DATA8 flag726
    DIVF VSRED_M 255.0 tmpf726
    CP_EQF 0.0 255.0 flag726
    SELECTF flag726 0.0 tmpf726 VSRED_M

    DATAF tmpf727
    DATA8 flag727
    DIVF VSGREEN_M 255.0 tmpf727
    CP_EQF 0.0 255.0 flag727
    SELECTF flag727 0.0 tmpf727 VSGREEN_M

    DATAF tmpf728
    DATA8 flag728
    DIVF VSBLUE_M 255.0 tmpf728
    CP_EQF 0.0 255.0 flag728
    SELECTF flag728 0.0 tmpf728 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else729_1
    JR_LTEQF VSRED_M VSBLUE_M else729_1
    MOVEF_F VSRED_M VMAX_M
    JR endif729
  else729_1:
    JR_LTEQF VSGREEN_M VSRED_M else729_2
    JR_LTEQF VSGREEN_M VSBLUE_M else729_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif729
  else729_2:
    JR_LTEQF VSBLUE_M VSRED_M else729_3
    JR_LTEQF VSBLUE_M VSGREEN_M else729_3
    MOVEF_F VSBLUE_M VMAX_M
  else729_3:
  endif729:
    JR_GTEQF VSRED_M VSGREEN_M else730_1
    JR_GTEQF VSRED_M VSBLUE_M else730_1
    MOVEF_F VSRED_M VMIN_M
    JR endif730
  else730_1:
    JR_GTEQF VSGREEN_M VSRED_M else730_2
    JR_GTEQF VSGREEN_M VSBLUE_M else730_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif730
  else730_2:
    JR_GTEQF VSBLUE_M VSRED_M else730_3
    JR_GTEQF VSBLUE_M VSGREEN_M else730_3
    MOVEF_F VSBLUE_M VMIN_M
  else730_3:
  endif730:
    JR_NEQF VMAX_M VMIN_M else731_1
    MOVEF_F 0.0 VH_M
    JR endif731
  else731_1:
    JR_NEQF VSRED_M VMAX_M else732_1
    JR_LTF VSGREEN_M VSBLUE_M else733_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf737
    DATA8 flag737
    DIVF F.0 F.1 tmpf737
    CP_EQF 0.0 F.1 flag737
    SELECTF flag737 0.0 tmpf737 VH_M

    JR endif733
  else733_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf741
    DATA8 flag741
    DIVF F.1 F.2 tmpf741
    CP_EQF 0.0 F.2 flag741
    SELECTF flag741 0.0 tmpf741 F.0

    ADDF F.0 360.0 VH_M
  else733_2:
  endif733:
    JR endif732
  else732_1:
    JR_NEQF VMAX_M VSGREEN_M else743_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf747
    DATA8 flag747
    DIVF F.1 F.2 tmpf747
    CP_EQF 0.0 F.2 flag747
    SELECTF flag747 0.0 tmpf747 F.0

    ADDF F.0 120.0 VH_M
    JR endif743
  else743_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf752
    DATA8 flag752
    DIVF F.1 F.2 tmpf752
    CP_EQF 0.0 F.2 flag752
    SELECTF flag752 0.0 tmpf752 F.0

    ADDF F.0 240.0 VH_M
  else743_2:
  endif743:
  else732_2:
  endif732:
  else731_2:
  endif731:
    JR_NEQF VMAX_M 0.0 else754_1
    MOVEF_F 0.0 VS_M
    JR endif754
  else754_1:
    DATAF tmpf755
    DATA8 flag755
    DIVF VMIN_M VMAX_M tmpf755
    CP_EQF 0.0 VMAX_M flag755
    SELECTF flag755 0.0 tmpf755 F.0

    SUBF 1.0 F.0 VS_M
  else754_2:
  endif754:
    MOVEF_F VMAX_M VV_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_HSV_100:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    DATA8 layer764
	DATA8 no764
	DATA8 mode8764
	
	MOVEF_8 1.0 no764
	SUB8 no764 1 no764
	DIV8 no764 4 layer764
	MATH MOD8 no764 4 no764

	MOVEF_8 2.0 mode8764
	
	INPUT_DEVICE READY_RAW layer764 no764 0 mode8764 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    MOVEF_F 1.0 VP_M
  for765:
    JR_GTF VP_M 100.0 endfor765
  forbody765:
    WRITE32 ENDSUB_HSV:CALLSUB766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB766:
    ADDF VX_M VH_M VX_M
    ADDF VZ_M VS_M VZ_M
    ADDF VD_M VV_M VD_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody765
  endfor765:
    DATAF tmpf771
    DATA8 flag771
    DIVF VX_M 100.0 tmpf771
    CP_EQF 0.0 100.0 flag771
    SELECTF flag771 0.0 tmpf771 VH_M

    DATAF tmpf772
    DATA8 flag772
    DIVF VZ_M 100.0 tmpf772
    CP_EQF 0.0 100.0 flag772
    SELECTF flag772 0.0 tmpf772 VS_M

    DATAF tmpf773
    DATA8 flag773
    DIVF VD_M 100.0 tmpf773
    CP_EQF 0.0 100.0 flag773
    SELECTF flag773 0.0 tmpf773 VV_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV_100:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_100:
SUB_HSV_B:
    DATA8 layer781
	DATA8 no781
	DATA8 mode8781
	
	MOVEF_8 1.0 no781
	SUB8 no781 1 no781
	DIV8 no781 4 layer781
	MATH MOD8 no781 4 no781

	MOVEF_8 2.0 mode8781
	
	INPUT_DEVICE READY_RAW layer781 no781 0 mode8781 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf788
    DATA8 flag788
    DIVF VSRED_M 255.0 tmpf788
    CP_EQF 0.0 255.0 flag788
    SELECTF flag788 0.0 tmpf788 VSRED_M

    DATAF tmpf789
    DATA8 flag789
    DIVF VSGREEN_M 255.0 tmpf789
    CP_EQF 0.0 255.0 flag789
    SELECTF flag789 0.0 tmpf789 VSGREEN_M

    DATAF tmpf790
    DATA8 flag790
    DIVF VSBLUE_M 255.0 tmpf790
    CP_EQF 0.0 255.0 flag790
    SELECTF flag790 0.0 tmpf790 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else791_1
    JR_LTEQF VSRED_M VSBLUE_M else791_1
    MOVEF_F VSRED_M VMAX_M
    JR endif791
  else791_1:
    JR_LTEQF VSGREEN_M VSRED_M else791_2
    JR_LTEQF VSGREEN_M VSBLUE_M else791_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif791
  else791_2:
    JR_LTEQF VSBLUE_M VSRED_M else791_3
    JR_LTEQF VSBLUE_M VSGREEN_M else791_3
    MOVEF_F VSBLUE_M VMAX_M
  else791_3:
  endif791:
    JR_GTEQF VSRED_M VSGREEN_M else792_1
    JR_GTEQF VSRED_M VSBLUE_M else792_1
    MOVEF_F VSRED_M VMIN_M
    JR endif792
  else792_1:
    JR_GTEQF VSGREEN_M VSRED_M else792_2
    JR_GTEQF VSGREEN_M VSBLUE_M else792_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif792
  else792_2:
    JR_GTEQF VSBLUE_M VSRED_M else792_3
    JR_GTEQF VSBLUE_M VSGREEN_M else792_3
    MOVEF_F VSBLUE_M VMIN_M
  else792_3:
  endif792:
    JR_NEQF VMAX_M VMIN_M else793_1
    MOVEF_F 0.0 VH_M
    JR endif793
  else793_1:
    JR_NEQF VSRED_M VMAX_M else794_1
    JR_LTF VSGREEN_M VSBLUE_M else795_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf799
    DATA8 flag799
    DIVF F.0 F.1 tmpf799
    CP_EQF 0.0 F.1 flag799
    SELECTF flag799 0.0 tmpf799 VH_M

    JR endif795
  else795_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf803
    DATA8 flag803
    DIVF F.1 F.2 tmpf803
    CP_EQF 0.0 F.2 flag803
    SELECTF flag803 0.0 tmpf803 F.0

    ADDF F.0 360.0 VH_M
  else795_2:
  endif795:
    JR endif794
  else794_1:
    JR_NEQF VMAX_M VSGREEN_M else805_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf809
    DATA8 flag809
    DIVF F.1 F.2 tmpf809
    CP_EQF 0.0 F.2 flag809
    SELECTF flag809 0.0 tmpf809 F.0

    ADDF F.0 120.0 VH_M
    JR endif805
  else805_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf814
    DATA8 flag814
    DIVF F.1 F.2 tmpf814
    CP_EQF 0.0 F.2 flag814
    SELECTF flag814 0.0 tmpf814 F.0

    ADDF F.0 240.0 VH_M
  else805_2:
  endif805:
  else794_2:
  endif794:
  else793_2:
  endif793:
    JR_NEQF VMAX_M 0.0 else816_1
    MOVEF_F 0.0 VS_M
    JR endif816
  else816_1:
    DATAF tmpf817
    DATA8 flag817
    DIVF VMIN_M VMAX_M tmpf817
    CP_EQF 0.0 VMAX_M flag817
    SELECTF flag817 0.0 tmpf817 F.0

    SUBF 1.0 F.0 VS_M
  else816_2:
  endif816:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 300.0 and821
    JR_LTF VH_M 360.0 or820
  and821:
    JR_LTF VH_M 0.0 else819_1
    JR_GTF VH_M 20.0 else819_1
    JR_LTEQF VS_M 0.3 else819_1
    JR_GTF VS_M 1.0 else819_1
    JR_LTEQF VV_M 0.025 else819_1
    JR_GTEQF VV_M 0.1 else819_1
  or820:
    MOVEF_F 5.0 VCOLOR_M
    JR endif819
  else819_1:
    JR_LTF VH_M 20.0 else819_2
    JR_GTEQF VH_M 60.0 else819_2
    JR_LTF VS_M 0.4 else819_2
    JR_LTEQF VV_M 0.03 else819_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif819
  else819_2:
    MOVEF_F 6.0 VCOLOR_M
  else819_3:
  endif819:
RETSUB_HSV_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_B:
SUB_HSV_D:
    DATA8 layer822
	DATA8 no822
	DATA8 mode8822
	
	MOVEF_8 1.0 no822
	SUB8 no822 1 no822
	DIV8 no822 4 layer822
	MATH MOD8 no822 4 no822

	MOVEF_8 2.0 mode8822
	
	INPUT_DEVICE READY_RAW layer822 no822 0 mode8822 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf829
    DATA8 flag829
    DIVF VSRED_M 255.0 tmpf829
    CP_EQF 0.0 255.0 flag829
    SELECTF flag829 0.0 tmpf829 VSRED_M

    DATAF tmpf830
    DATA8 flag830
    DIVF VSGREEN_M 255.0 tmpf830
    CP_EQF 0.0 255.0 flag830
    SELECTF flag830 0.0 tmpf830 VSGREEN_M

    DATAF tmpf831
    DATA8 flag831
    DIVF VSBLUE_M 255.0 tmpf831
    CP_EQF 0.0 255.0 flag831
    SELECTF flag831 0.0 tmpf831 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else832_1
    JR_LTEQF VSRED_M VSBLUE_M else832_1
    MOVEF_F VSRED_M VMAX_M
    JR endif832
  else832_1:
    JR_LTEQF VSGREEN_M VSRED_M else832_2
    JR_LTEQF VSGREEN_M VSBLUE_M else832_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif832
  else832_2:
    JR_LTEQF VSBLUE_M VSRED_M else832_3
    JR_LTEQF VSBLUE_M VSGREEN_M else832_3
    MOVEF_F VSBLUE_M VMAX_M
  else832_3:
  endif832:
    JR_GTEQF VSRED_M VSGREEN_M else833_1
    JR_GTEQF VSRED_M VSBLUE_M else833_1
    MOVEF_F VSRED_M VMIN_M
    JR endif833
  else833_1:
    JR_GTEQF VSGREEN_M VSRED_M else833_2
    JR_GTEQF VSGREEN_M VSBLUE_M else833_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif833
  else833_2:
    JR_GTEQF VSBLUE_M VSRED_M else833_3
    JR_GTEQF VSBLUE_M VSGREEN_M else833_3
    MOVEF_F VSBLUE_M VMIN_M
  else833_3:
  endif833:
    JR_NEQF VMAX_M VMIN_M else834_1
    MOVEF_F 0.0 VH_M
    JR endif834
  else834_1:
    JR_NEQF VSRED_M VMAX_M else835_1
    JR_LTF VSGREEN_M VSBLUE_M else836_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf840
    DATA8 flag840
    DIVF F.0 F.1 tmpf840
    CP_EQF 0.0 F.1 flag840
    SELECTF flag840 0.0 tmpf840 VH_M

    JR endif836
  else836_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf844
    DATA8 flag844
    DIVF F.1 F.2 tmpf844
    CP_EQF 0.0 F.2 flag844
    SELECTF flag844 0.0 tmpf844 F.0

    ADDF F.0 360.0 VH_M
  else836_2:
  endif836:
    JR endif835
  else835_1:
    JR_NEQF VMAX_M VSGREEN_M else846_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf850
    DATA8 flag850
    DIVF F.1 F.2 tmpf850
    CP_EQF 0.0 F.2 flag850
    SELECTF flag850 0.0 tmpf850 F.0

    ADDF F.0 120.0 VH_M
    JR endif846
  else846_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf855
    DATA8 flag855
    DIVF F.1 F.2 tmpf855
    CP_EQF 0.0 F.2 flag855
    SELECTF flag855 0.0 tmpf855 F.0

    ADDF F.0 240.0 VH_M
  else846_2:
  endif846:
  else835_2:
  endif835:
  else834_2:
  endif834:
    JR_NEQF VMAX_M 0.0 else857_1
    MOVEF_F 0.0 VS_M
    JR endif857
  else857_1:
    DATAF tmpf858
    DATA8 flag858
    DIVF VMIN_M VMAX_M tmpf858
    CP_EQF 0.0 VMAX_M flag858
    SELECTF flag858 0.0 tmpf858 F.0

    SUBF 1.0 F.0 VS_M
  else857_2:
  endif857:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 200.0 and862
    JR_LTF VH_M 360.0 or861
  and862:
    JR_LTF VH_M 0.0 else860_1
    JR_GTF VH_M 30.0 else860_1
    JR_LTEQF VS_M 0.3 else860_1
    JR_GTF VS_M 1.0 else860_1
    JR_LTF VV_M 0.0 else860_1
    JR_GTEQF VV_M 0.02 else860_1
  or861:
    MOVEF_F 5.0 VCOLOR_M
    JR endif860
  else860_1:
    JR_LTF VH_M 0.0 else860_2
    JR_GTEQF VH_M 60.0 else860_2
    JR_LTF VS_M 0.4 else860_2
    JR_GTF VS_M 1.0 else860_2
    JR_LTEQF VV_M 0.003 else860_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif860
  else860_2:
    MOVEF_F 6.0 VCOLOR_M
  else860_3:
  endif860:
RETSUB_HSV_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_D:
SUB_HSV_RGB_B:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer863
	DATA8 no863
	DATA8 mode8863
	
	MOVEF_8 1.0 no863
	SUB8 no863 1 no863
	DIV8 no863 4 layer863
	MATH MOD8 no863 4 no863

	MOVEF_8 2.0 mode8863
	
	INPUT_DEVICE READY_RAW layer863 no863 0 mode8863 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB865:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    DATA32 milliseconds874
	MOVEF_32 100.0 milliseconds874
	DATA32 timer874
	TIMER_WAIT milliseconds874 timer874
	TIMER_READY timer874
    MOVEF_F 1.0 VP_M
  for875:
    JR_GTF VP_M 100.0 endfor875
  forbody875:
    WRITE32 ENDSUB_HSV_B:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_B
CALLSUB876:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody875
  endfor875:
    DATAF tmpf879
    DATA8 flag879
    DIVF VX_M 100.0 tmpf879
    CP_EQF 0.0 100.0 flag879
    SELECTF flag879 0.0 tmpf879 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds883
	MOVEF_32 100.0 milliseconds883
	DATA32 timer883
	TIMER_WAIT milliseconds883 timer883
	TIMER_READY timer883
    JR_LTEQF VH_M 100.0 and886
    JR_LTF VH_M 360.0 or885
  and886:
    JR_LTF VH_M 0.0 else884_1
    JR_GTF VH_M 20.0 else884_1
    JR_LTEQF VS_M 0.3 else884_1
    JR_GTF VS_M 1.0 else884_1
    JR_LTEQF VV_M 0.025 else884_1
    JR_GTEQF VV_M 0.1 else884_1
  or885:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif884
  else884_1:
    JR_LTF VH_M 20.0 else884_2
    JR_GTEQF VH_M 60.0 else884_2
    JR_LTF VS_M 0.4 else884_2
    JR_LTEQF VV_M 0.03 else884_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif884
  else884_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else884_3:
  endif884:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds896
	MOVEF_32 1000.0 milliseconds896
	DATA32 timer896
	TIMER_WAIT milliseconds896 timer896
	TIMER_READY timer896
RETSUB_HSV_RGB_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_B:
SUB_HSV_RGB_D:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer897
	DATA8 no897
	DATA8 mode8897
	
	MOVEF_8 1.0 no897
	SUB8 no897 1 no897
	DIV8 no897 4 layer897
	MATH MOD8 no897 4 no897

	MOVEF_8 2.0 mode8897
	
	INPUT_DEVICE READY_RAW layer897 no897 0 mode8897 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV_D:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB899:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    MOVEF_F 1.0 VP_M
  for908:
    JR_GTF VP_M 100.0 endfor908
  forbody908:
    WRITE32 ENDSUB_HSV_D:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB909:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody908
  endfor908:
    DATAF tmpf912
    DATA8 flag912
    DIVF VX_M 100.0 tmpf912
    CP_EQF 0.0 100.0 flag912
    SELECTF flag912 0.0 tmpf912 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    JR_LTEQF VH_M 200.0 and918
    JR_LTF VH_M 360.0 or917
  and918:
    JR_LTF VH_M 0.0 else916_1
    JR_GTF VH_M 40.0 else916_1
    JR_LTEQF VS_M 0.3 else916_1
    JR_GTF VS_M 1.0 else916_1
    JR_LTF VV_M 0.0 else916_1
    JR_GTEQF VV_M 0.02 else916_1
  or917:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif916
  else916_1:
    JR_LTF VH_M 0.0 else916_2
    JR_GTEQF VH_M 100.0 else916_2
    JR_LTF VS_M 0.4 else916_2
    JR_GTF VS_M 1.0 else916_2
    JR_LTEQF VV_M 0.003 else916_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif916
  else916_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else916_3:
  endif916:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds928
	MOVEF_32 1000.0 milliseconds928
	DATA32 timer928
	TIMER_WAIT milliseconds928 timer928
	TIMER_READY timer928
RETSUB_HSV_RGB_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_D:
SUB_A3:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN3_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX3_M VMIN3_M F.1
    DATAF tmpf933
    DATA8 flag933
    DIVF F.0 F.1 tmpf933
    CP_EQF 0.0 F.1 flag933
    SELECTF flag933 0.0 tmpf933 VS3_M

RETSUB_A3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A3:
SUB_A2:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf938
    DATA8 flag938
    DIVF F.0 F.1 tmpf938
    CP_EQF 0.0 F.1 flag938
    SELECTF flag938 0.0 tmpf938 VS2_M

RETSUB_A2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A2:
SUB_POLIN2D:
    WRITE32 ENDSUB_A3:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB939:
    WRITE32 ENDSUB_A2:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB940:
    SUBF VS2_M VS3_M VE_M
    MULF VK1_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2D:
SUB_POLIN2DUS:
    WRITE32 ENDSUB_A3:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB950:
    WRITE32 ENDSUB_A2:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB951:
    SUBF VS2_M VS3_M VE_M
    MULF VK3_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2DUS:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2DUS:
SUB_ZAMOROZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_ZAMOROZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZAMOROZ:
SUB_ZADVIG:
    CALL MOTOR.START 'a' 20.0
    DATA32 milliseconds965
	MOVEF_32 100.0 milliseconds965
	DATA32 timer965
	TIMER_WAIT milliseconds965 timer965
	TIMER_READY timer965
    CALL MOTOR.STOP 'a' 'true'
RETSUB_ZADVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZADVIG:
SUB_VIDVIG:
    CALL MOTOR.START 'a' -20.0
    DATA32 milliseconds968
	MOVEF_32 100.0 milliseconds968
	DATA32 timer968
	TIMER_WAIT milliseconds968 timer968
	TIMER_READY timer968
    CALL MOTOR.STOP 'a' 'true'
RETSUB_VIDVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIDVIG:
SUB_VIRAV_NAZ:
    DATA8 layer970
	DATA8 no970
	DATA8 mode8970
	
	MOVEF_8 2.0 no970
	SUB8 no970 1 no970
	DIV8 no970 4 layer970
	MATH MOD8 no970 4 no970

	MOVEF_8 0.0 mode8970
	
	INPUT_DEVICE READY_RAW layer970 no970 0 mode8970 0
    DATA8 layer971
	DATA8 no971
	DATA8 mode8971
	
	MOVEF_8 3.0 no971
	SUB8 no971 1 no971
	DIV8 no971 4 layer971
	MATH MOD8 no971 4 no971

	MOVEF_8 0.0 mode8971
	
	INPUT_DEVICE READY_RAW layer971 no971 0 mode8971 0
  while972:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile972
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile972
  whilebody972:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and976
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody972
  and976:
  endwhile972:
    CALL MOTOR.STOP 'BC' 'True'
  while980:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile980
  whilebody980:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody980
  endwhile980:
    CALL MOTOR.STOP 'B' 'True'
  while985:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile985
  whilebody985:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody985
  endwhile985:
    CALL MOTOR.STOP 'C' 'True'
  while990:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile990
  whilebody990:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody990
  endwhile990:
    CALL MOTOR.STOP 'B' 'True'
  while995:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile995
  whilebody995:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody995
  endwhile995:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV_NAZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV_NAZ:
SUB_VIRAV:
    DATA8 layer1000
	DATA8 no1000
	DATA8 mode81000
	
	MOVEF_8 2.0 no1000
	SUB8 no1000 1 no1000
	DIV8 no1000 4 layer1000
	MATH MOD8 no1000 4 no1000

	MOVEF_8 0.0 mode81000
	
	INPUT_DEVICE READY_RAW layer1000 no1000 0 mode81000 0
    DATA8 layer1001
	DATA8 no1001
	DATA8 mode81001
	
	MOVEF_8 3.0 no1001
	SUB8 no1001 1 no1001
	DIV8 no1001 4 layer1001
	MATH MOD8 no1001 4 no1001

	MOVEF_8 0.0 mode81001
	
	INPUT_DEVICE READY_RAW layer1001 no1001 0 mode81001 0
  while1002:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 7.0 endwhile1002
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile1002
  whilebody1002:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 7.0 and1006
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody1002
  and1006:
  endwhile1002:
    CALL MOTOR.STOP 'BC' 'True'
  while1010:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 7.0 endwhile1010
  whilebody1010:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 7.0 whilebody1010
  endwhile1010:
    CALL MOTOR.STOP 'B' 'True'
  while1015:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile1015
  whilebody1015:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody1015
  endwhile1015:
    CALL MOTOR.STOP 'C' 'True'
  while1020:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 7.0 endwhile1020
  whilebody1020:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 7.0 whilebody1020
  endwhile1020:
    CALL MOTOR.STOP 'B' 'True'
  while1025:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 7.0 endwhile1025
  whilebody1025:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 7.0 whilebody1025
  endwhile1025:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV:
SUB_RGB:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 F.0 VRECVARRAY_M
    CALL ARRAYSTORE_FLOAT VI_M F.0 VA_M
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 5.0 or1035
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 14.0 or1035
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 6.0 else1034_1
  or1035:
    CALL SPEAKER.NOTE 100.0 'C#1' 500.0
    JR endif1034
  else1034_1:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 1.0 or1040
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 10.0 or1040
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 7.0 or1040
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 8.0 else1034_2
  or1040:
    CALL SPEAKER.NOTE 100.0 'C#5' 500.0
    JR endif1034
  else1034_2:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 3.0 or1046
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 2.0 or1046
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 4.0 else1034_3
  or1046:
    CALL SPEAKER.NOTE 50.0 'C#9' 1000.0
  else1034_3:
  endif1034:
RETSUB_RGB:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RGB:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
