DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2115
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2115:
    JR_NEQ32 SUBPROGRAM 1 dispatch2116
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2116:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 45.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENWRITE 'a123/colib.dat' VGV_F
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    CALL EV3FILE.CLOSE VGV_F
    WRITE32 ENDSUB_F_A3_0:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB70:
    WRITE32 ENDSUB_F_A2_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB71:
  while72:
    JR_LTEQF VGV_S3 10.0 and74
    JR_GTF VGV_S2 10.0 or73
  and74:
    JR_GTEQF VGV_S3 10.0 endwhile72
    JR_GTEQF VGV_S2 10.0 endwhile72
  or73:
  whilebody72:
    WRITE32 ENDSUB_F_A3_0:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB75:
    WRITE32 ENDSUB_F_A2_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB76:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB77:
    JR_LTEQF VGV_S3 10.0 and78
    JR_GTF VGV_S2 10.0 whilebody72
  and78:
    JR_GTEQF VGV_S3 10.0 and79
    JR_LTF VGV_S2 10.0 whilebody72
  and79:
  endwhile72:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB81:
    JR_GTF VGV_H 120.0 or83
    JR_LTF VGV_H 0.0 else82_1
    JR_GTF VGV_H 35.0 else82_1
  or83:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif82
  else82_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else82_2:
  endif82:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer86
	DATA8 nos86
	DATA8 busy86
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer86 nos86
	JR_EQ8 0 nos86 motornotbusy86
  motorwaiting86:
	OUTPUT_TEST layer86 nos86 busy86
	JR_EQ8 busy86 0 motornotbusy86
	SLEEP
	JR motorwaiting86
  motornotbusy86:
    JR_NEQF VGV_COLOR 4.0 else87_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB88:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer91
	DATA8 nos91
	DATA8 busy91
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer91 nos91
	JR_EQ8 0 nos91 motornotbusy91
  motorwaiting91:
	OUTPUT_TEST layer91 nos91 busy91
	JR_EQ8 busy91 0 motornotbusy91
	SLEEP
	JR motorwaiting91
  motornotbusy91:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while95:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 500.0 endwhile95
  whilebody95:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB97:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 500.0 whilebody95
  endwhile95:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB100:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer101
	DATA8 nos101
	DATA8 busy101
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer101 nos101
	JR_EQ8 0 nos101 motornotbusy101
  motorwaiting101:
	OUTPUT_TEST layer101 nos101 busy101
	JR_EQ8 busy101 0 motornotbusy101
	SLEEP
	JR motorwaiting101
  motornotbusy101:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer103
	DATA8 nos103
	DATA8 busy103
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer103 nos103
	JR_EQ8 0 nos103 motornotbusy103
  motorwaiting103:
	OUTPUT_TEST layer103 nos103 busy103
	JR_EQ8 busy103 0 motornotbusy103
	SLEEP
	JR motorwaiting103
  motornotbusy103:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while106:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf110
    DATA8 flag110
    DIVF F.1 2.0 tmpf110
    CP_EQF 0.0 2.0 flag110
    SELECTF flag110 0.0 tmpf110 F.0

    JR_GTEQF F.0 100.0 endwhile106
  whilebody106:
    WRITE32 ENDSUB_F_A3_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB111:
    WRITE32 ENDSUB_F_A2_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB112:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB113:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf117
    DATA8 flag117
    DIVF F.1 2.0 tmpf117
    CP_EQF 0.0 2.0 flag117
    SELECTF flag117 0.0 tmpf117 F.0

    JR_LTF F.0 100.0 whilebody106
  endwhile106:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB119:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else121_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB122:
    ADDF VGV_C 1.0 VGV_C
    JR endif121
  else121_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer124
	DATA8 nos124
	DATA8 busy124
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer124 nos124
	JR_EQ8 0 nos124 motornotbusy124
  motorwaiting124:
	OUTPUT_TEST layer124 nos124 busy124
	JR_EQ8 busy124 0 motornotbusy124
	SLEEP
	JR motorwaiting124
  motornotbusy124:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer125
	DATA8 nos125
	DATA8 busy125
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer125 nos125
	JR_EQ8 0 nos125 motornotbusy125
  motorwaiting125:
	OUTPUT_TEST layer125 nos125 busy125
	JR_EQ8 busy125 0 motornotbusy125
	SLEEP
	JR motorwaiting125
  motornotbusy125:
  while126:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and128
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or127
  and128:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and131
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or127
  and131:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile126
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile126
  or127:
  whilebody126:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and137
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody126
  and137:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and140
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody126
  and140:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and143
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody126
  and143:
  endwhile126:
    WRITE32 ENDSUB_F_A3_0:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB146:
    WRITE32 ENDSUB_F_A2_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB147:
  while148:
    JR_LTEQF VGV_S3 10.0 and150
    JR_GTF VGV_S2 10.0 or149
  and150:
    JR_GTEQF VGV_S3 10.0 endwhile148
    JR_GTEQF VGV_S2 10.0 endwhile148
  or149:
  whilebody148:
    WRITE32 ENDSUB_F_A3_0:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB151:
    WRITE32 ENDSUB_F_A2_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB152:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB153:
    JR_LTEQF VGV_S3 10.0 and154
    JR_GTF VGV_S2 10.0 whilebody148
  and154:
    JR_GTEQF VGV_S3 10.0 and155
    JR_LTF VGV_S2 10.0 whilebody148
  and155:
  endwhile148:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer156
	DATA8 nos156
	DATA8 busy156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer156 nos156
	JR_EQ8 0 nos156 motornotbusy156
  motorwaiting156:
	OUTPUT_TEST layer156 nos156 busy156
	JR_EQ8 busy156 0 motornotbusy156
	SLEEP
	JR motorwaiting156
  motornotbusy156:
    WRITE32 ENDSUB_F_A3_0:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB157:
    WRITE32 ENDSUB_F_A2_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB158:
  while159:
    JR_LTEQF VGV_S3 10.0 and161
    JR_GTF VGV_S2 10.0 or160
  and161:
    JR_GTEQF VGV_S3 10.0 endwhile159
    JR_GTEQF VGV_S2 10.0 endwhile159
  or160:
  whilebody159:
    WRITE32 ENDSUB_F_A3_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB162:
    WRITE32 ENDSUB_F_A2_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB163:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB164:
    JR_LTEQF VGV_S3 10.0 and165
    JR_GTF VGV_S2 10.0 whilebody159
  and165:
    JR_GTEQF VGV_S3 10.0 and166
    JR_LTF VGV_S2 10.0 whilebody159
  and166:
  endwhile159:
    CALL MOTOR.STOP 'bc' 'true'
  else121_2:
  endif121:
    JR endif87
  else87_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB168:
    WRITE32 ENDSUB_F_A2_0:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB169:
  while170:
    JR_LTEQF VGV_S3 10.0 and172
    JR_GTF VGV_S2 10.0 or171
  and172:
    JR_GTEQF VGV_S3 10.0 endwhile170
    JR_GTEQF VGV_S2 10.0 endwhile170
  or171:
  whilebody170:
    WRITE32 ENDSUB_F_A3_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB173:
    WRITE32 ENDSUB_F_A2_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB174:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB175:
    JR_LTEQF VGV_S3 10.0 and176
    JR_GTF VGV_S2 10.0 whilebody170
  and176:
    JR_GTEQF VGV_S3 10.0 and177
    JR_LTF VGV_S2 10.0 whilebody170
  and177:
  endwhile170:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer179
	DATA8 nos179
	DATA8 busy179
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer179 nos179
	JR_EQ8 0 nos179 motornotbusy179
  motorwaiting179:
	OUTPUT_TEST layer179 nos179 busy179
	JR_EQ8 busy179 0 motornotbusy179
	SLEEP
	JR motorwaiting179
  motornotbusy179:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds183
	MOVEF_32 500.0 milliseconds183
	DATA32 timer183
	TIMER_WAIT milliseconds183 timer183
	TIMER_READY timer183
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB185:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while187:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile187
  whilebody187:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB189:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody187
  endwhile187:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else192_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB193:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB196:
    WRITE32 ENDSUB_F_A2_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB197:
  while198:
    JR_LTEQF VGV_S3 15.0 endwhile198
  whilebody198:
    WRITE32 ENDSUB_F_A3_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB199:
    WRITE32 ENDSUB_F_A2_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB200:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody198
  endwhile198:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB203:
    WRITE32 ENDSUB_F_A2_0:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB204:
  while205:
    JR_GTEQF VGV_S3 35.0 endwhile205
  whilebody205:
    WRITE32 ENDSUB_F_A3_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB207:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody205
  endwhile205:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB211:
    WRITE32 ENDSUB_F_A2_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB212:
  while213:
    JR_LTEQF VGV_S3 10.0 and215
    JR_GTF VGV_S2 10.0 or214
  and215:
    JR_GTEQF VGV_S3 10.0 endwhile213
    JR_GTEQF VGV_S2 10.0 endwhile213
  or214:
  whilebody213:
    WRITE32 ENDSUB_F_A3_0:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB216:
    WRITE32 ENDSUB_F_A2_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB217:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB218:
    JR_LTEQF VGV_S3 10.0 and219
    JR_GTF VGV_S2 10.0 whilebody213
  and219:
    JR_GTEQF VGV_S3 10.0 and220
    JR_LTF VGV_S2 10.0 whilebody213
  and220:
  endwhile213:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB222:
    ADDF VGV_C 1.0 VGV_C
    JR endif192
  else192_1:
    DATA32 tmp224
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp224
    JR_NEQ32 0 tmp224 alreadylaunched224
    OBJECT_START TF_VIDVIG_0
  alreadylaunched224:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB225:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer226
	DATA8 nos226
	DATA8 busy226
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer226 nos226
	JR_EQ8 0 nos226 motornotbusy226
  motorwaiting226:
	OUTPUT_TEST layer226 nos226 busy226
	JR_EQ8 busy226 0 motornotbusy226
	SLEEP
	JR motorwaiting226
  motornotbusy226:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB229:
    WRITE32 ENDSUB_F_A2_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB230:
  while231:
    JR_LTEQF VGV_S3 10.0 and233
    JR_GTF VGV_S2 10.0 or232
  and233:
    JR_GTEQF VGV_S3 10.0 endwhile231
    JR_GTEQF VGV_S2 10.0 endwhile231
  or232:
  whilebody231:
    WRITE32 ENDSUB_F_A3_0:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB234:
    WRITE32 ENDSUB_F_A2_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB235:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB236:
    JR_LTEQF VGV_S3 10.0 and237
    JR_GTF VGV_S2 10.0 whilebody231
  and237:
    JR_GTEQF VGV_S3 10.0 and238
    JR_LTF VGV_S2 10.0 whilebody231
  and238:
  endwhile231:
    CALL MOTOR.STOP 'bc' 'true'
  else192_2:
  endif192:
  else87_2:
  endif87:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB240:
    JR_GTEQF VGV_H 30.0 else241_1
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif241
  else241_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else241_2:
  endif241:
    JR_NEQF VGV_COLOR2 4.0 else244_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer245
	DATA8 nos245
	DATA8 busy245
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer245 nos245
	JR_EQ8 0 nos245 motornotbusy245
  motorwaiting245:
	OUTPUT_TEST layer245 nos245 busy245
	JR_EQ8 busy245 0 motornotbusy245
	SLEEP
	JR motorwaiting245
  motornotbusy245:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB246:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif244
  else244_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB248:
    CALL MOTOR.RESETCOUNT 'bc'
  while250:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile250
  whilebody250:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB252:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody250
  endwhile250:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds256
	MOVEF_32 100.0 milliseconds256
	DATA32 timer256
	TIMER_WAIT milliseconds256 timer256
	TIMER_READY timer256
    WRITE32 ENDSUB_F_NPL_0:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB257:
    MOVEF_F 1100.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf258
    DATA8 flag258
    DIVF 360.0 VGV_L tmpf258
    CP_EQF 0.0 VGV_L flag258
    SELECTF flag258 0.0 tmpf258 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while262:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf266
    DATA8 flag266
    DIVF F.1 2.0 tmpf266
    CP_EQF 0.0 2.0 flag266
    SELECTF flag266 0.0 tmpf266 F.0

    JR_GTEQF F.0 VGV_X endwhile262
  whilebody262:
    WRITE32 ENDSUB_F_A3_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB267:
    WRITE32 ENDSUB_F_A2_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB268:
    JR_GTEQF VGV_SPEED 60.0 else269_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else269_1:
  endif269:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB271:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf275
    DATA8 flag275
    DIVF F.1 2.0 tmpf275
    CP_EQF 0.0 2.0 flag275
    SELECTF flag275 0.0 tmpf275 F.0

    JR_LTF F.0 VGV_X whilebody262
  endwhile262:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB277:
    JR_NEQF VGV_C 1.0 else278_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB279:
    JR endif278
  else278_1:
    JR_NEQF VGV_C 0.0 else278_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB280:
  else278_2:
  endif278:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB281:
    WRITE32 ENDSUB_F_A3_0:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB282:
    WRITE32 ENDSUB_F_A2_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB283:
  while284:
    JR_LTEQF VGV_S3 10.0 and286
    JR_GTF VGV_S2 10.0 or285
  and286:
    JR_GTEQF VGV_S3 10.0 endwhile284
    JR_GTEQF VGV_S2 10.0 endwhile284
  or285:
  whilebody284:
    WRITE32 ENDSUB_F_A3_0:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB287:
    WRITE32 ENDSUB_F_A2_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB288:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB289:
    JR_LTEQF VGV_S3 10.0 and290
    JR_GTF VGV_S2 10.0 whilebody284
  and290:
    JR_GTEQF VGV_S3 10.0 and291
    JR_LTF VGV_S2 10.0 whilebody284
  and291:
  endwhile284:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer293
	DATA8 nos293
	DATA8 busy293
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer293 nos293
	JR_EQ8 0 nos293 motornotbusy293
  motorwaiting293:
	OUTPUT_TEST layer293 nos293 busy293
	JR_EQ8 busy293 0 motornotbusy293
	SLEEP
	JR motorwaiting293
  motornotbusy293:
    WRITE32 ENDSUB_F_A3_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB294:
    WRITE32 ENDSUB_F_A2_0:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB295:
  while296:
    JR_LTEQF VGV_S3 10.0 and298
    JR_GTF VGV_S2 10.0 or297
  and298:
    JR_GTEQF VGV_S3 10.0 endwhile296
    JR_GTEQF VGV_S2 10.0 endwhile296
  or297:
  whilebody296:
    WRITE32 ENDSUB_F_A3_0:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB299:
    WRITE32 ENDSUB_F_A2_0:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB300:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB301:
    JR_LTEQF VGV_S3 10.0 and302
    JR_GTF VGV_S2 10.0 whilebody296
  and302:
    JR_GTEQF VGV_S3 10.0 and303
    JR_LTF VGV_S2 10.0 whilebody296
  and303:
  endwhile296:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB305:
    CALL MOTOR.RESETCOUNT 'bc'
  while307:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf311
    DATA8 flag311
    DIVF F.1 2.0 tmpf311
    CP_EQF 0.0 2.0 flag311
    SELECTF flag311 0.0 tmpf311 F.0

    JR_GTEQF F.0 350.0 endwhile307
  whilebody307:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB312:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf316
    DATA8 flag316
    DIVF F.1 2.0 tmpf316
    CP_EQF 0.0 2.0 flag316
    SELECTF flag316 0.0 tmpf316 F.0

    JR_LTF F.0 350.0 whilebody307
  endwhile307:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds320
	MOVEF_32 500.0 milliseconds320
	DATA32 timer320
	TIMER_WAIT milliseconds320 timer320
	TIMER_READY timer320
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer324
	DATA8 nos324
	DATA8 busy324
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer324 nos324
	JR_EQ8 0 nos324 motornotbusy324
  motorwaiting324:
	OUTPUT_TEST layer324 nos324 busy324
	JR_EQ8 busy324 0 motornotbusy324
	SLEEP
	JR motorwaiting324
  motornotbusy324:
    DATA32 tmp325
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp325
    JR_NEQ32 0 tmp325 alreadylaunched325
    OBJECT_START TF_VIDVIG_0
  alreadylaunched325:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB326:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB327:
    ADDF VGV_C 1.0 VGV_C
  else244_2:
  endif244:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB329:
    JR_GTF VGV_H 120.0 or331
    JR_LTF VGV_H 0.0 else330_1
    JR_GTF VGV_H 30.0 else330_1
  or331:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif330
  else330_1:
    JR_GTEQF VGV_H 120.0 else330_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif330
  else330_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else330_3:
  endif330:
    JR_NEQF VGV_COLOR3 4.0 else335_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer336
	DATA8 nos336
	DATA8 busy336
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer336 nos336
	JR_EQ8 0 nos336 motornotbusy336
  motorwaiting336:
	OUTPUT_TEST layer336 nos336 busy336
	JR_EQ8 busy336 0 motornotbusy336
	SLEEP
	JR motorwaiting336
  motornotbusy336:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB337:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else339_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB340:
    CALL MOTOR.RESETCOUNT 'bc'
  while342:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf346
    DATA8 flag346
    DIVF F.1 2.0 tmpf346
    CP_EQF 0.0 2.0 flag346
    SELECTF flag346 0.0 tmpf346 F.0

    JR_GTEQF F.0 450.0 endwhile342
  whilebody342:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB347:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf351
    DATA8 flag351
    DIVF F.1 2.0 tmpf351
    CP_EQF 0.0 2.0 flag351
    SELECTF flag351 0.0 tmpf351 F.0

    JR_LTF F.0 450.0 whilebody342
  endwhile342:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds354
	MOVEF_32 500.0 milliseconds354
	DATA32 timer354
	TIMER_WAIT milliseconds354 timer354
	TIMER_READY timer354
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB356:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf357
    DATA8 flag357
    DIVF 360.0 VGV_L tmpf357
    CP_EQF 0.0 VGV_L flag357
    SELECTF flag357 0.0 tmpf357 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while360:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile360
  whilebody360:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB362:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody360
  endwhile360:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB365:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB366:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB367:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB369:
    CALL MOTOR.RESETCOUNT 'bc'
  while371:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf375
    DATA8 flag375
    DIVF F.1 2.0 tmpf375
    CP_EQF 0.0 2.0 flag375
    SELECTF flag375 0.0 tmpf375 F.0

    JR_GTEQF F.0 300.0 endwhile371
  whilebody371:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB376:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf380
    DATA8 flag380
    DIVF F.1 2.0 tmpf380
    CP_EQF 0.0 2.0 flag380
    SELECTF flag380 0.0 tmpf380 F.0

    JR_LTF F.0 300.0 whilebody371
  endwhile371:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer382
	DATA8 nos382
	DATA8 busy382
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer382 nos382
	JR_EQ8 0 nos382 motornotbusy382
  motorwaiting382:
	OUTPUT_TEST layer382 nos382 busy382
	JR_EQ8 busy382 0 motornotbusy382
	SLEEP
	JR motorwaiting382
  motornotbusy382:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds384
	MOVEF_32 500.0 milliseconds384
	DATA32 timer384
	TIMER_WAIT milliseconds384 timer384
	TIMER_READY timer384
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer386
	DATA8 nos386
	DATA8 busy386
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer386 nos386
	JR_EQ8 0 nos386 motornotbusy386
  motorwaiting386:
	OUTPUT_TEST layer386 nos386 busy386
	JR_EQ8 busy386 0 motornotbusy386
	SLEEP
	JR motorwaiting386
  motornotbusy386:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer387
	DATA8 nos387
	DATA8 busy387
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer387 nos387
	JR_EQ8 0 nos387 motornotbusy387
  motorwaiting387:
	OUTPUT_TEST layer387 nos387 busy387
	JR_EQ8 busy387 0 motornotbusy387
	SLEEP
	JR motorwaiting387
  motornotbusy387:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB388:
    WRITE32 ENDSUB_F_A3_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB389:
    WRITE32 ENDSUB_F_A2_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB390:
  while391:
    JR_LTEQF VGV_S3 10.0 and393
    JR_GTF VGV_S2 10.0 or392
  and393:
    JR_GTEQF VGV_S3 10.0 endwhile391
    JR_GTEQF VGV_S2 10.0 endwhile391
  or392:
  whilebody391:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB394:
    JR_LTEQF VGV_S3 10.0 and395
    JR_GTF VGV_S2 10.0 whilebody391
  and395:
    JR_GTEQF VGV_S3 10.0 and396
    JR_LTF VGV_S2 10.0 whilebody391
  and396:
  endwhile391:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer398
	DATA8 nos398
	DATA8 busy398
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer398 nos398
	JR_EQ8 0 nos398 motornotbusy398
  motorwaiting398:
	OUTPUT_TEST layer398 nos398 busy398
	JR_EQ8 busy398 0 motornotbusy398
	SLEEP
	JR motorwaiting398
  motornotbusy398:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer399
	DATA8 nos399
	DATA8 busy399
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer399 nos399
	JR_EQ8 0 nos399 motornotbusy399
  motorwaiting399:
	OUTPUT_TEST layer399 nos399 busy399
	JR_EQ8 busy399 0 motornotbusy399
	SLEEP
	JR motorwaiting399
  motornotbusy399:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer400
	DATA8 nos400
	DATA8 busy400
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer400 nos400
	JR_EQ8 0 nos400 motornotbusy400
  motorwaiting400:
	OUTPUT_TEST layer400 nos400 busy400
	JR_EQ8 busy400 0 motornotbusy400
	SLEEP
	JR motorwaiting400
  motornotbusy400:
    WRITE32 ENDSUB_F_A2_0:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB401:
    WRITE32 ENDSUB_F_A3_0:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB402:
  while403:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 8.0 endwhile403
  whilebody403:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody403
  endwhile403:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB408:
    WRITE32 ENDSUB_F_A3_0:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB409:
  while410:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile410
  whilebody410:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody410
  endwhile410:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB415:
    WRITE32 ENDSUB_F_A2_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB416:
  while417:
    JR_LTEQF VGV_S3 10.0 and419
    JR_GTF VGV_S2 10.0 or418
  and419:
    JR_GTEQF VGV_S3 10.0 endwhile417
    JR_GTEQF VGV_S2 10.0 endwhile417
  or418:
  whilebody417:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB420:
    JR_LTEQF VGV_S3 10.0 and421
    JR_GTF VGV_S2 10.0 whilebody417
  and421:
    JR_GTEQF VGV_S3 10.0 and422
    JR_LTF VGV_S2 10.0 whilebody417
  and422:
  endwhile417:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB424:
    CALL MOTOR.RESETCOUNT 'bc'
  while426:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf430
    DATA8 flag430
    DIVF F.1 2.0 tmpf430
    CP_EQF 0.0 2.0 flag430
    SELECTF flag430 0.0 tmpf430 F.0

    JR_GTEQF F.0 500.0 endwhile426
  whilebody426:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB431:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf435
    DATA8 flag435
    DIVF F.1 2.0 tmpf435
    CP_EQF 0.0 2.0 flag435
    SELECTF flag435 0.0 tmpf435 F.0

    JR_LTF F.0 500.0 whilebody426
  endwhile426:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds438
	MOVEF_32 500.0 milliseconds438
	DATA32 timer438
	TIMER_WAIT milliseconds438 timer438
	TIMER_READY timer438
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB440:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf441
    DATA8 flag441
    DIVF 360.0 VGV_L tmpf441
    CP_EQF 0.0 VGV_L flag441
    SELECTF flag441 0.0 tmpf441 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while444:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile444
  whilebody444:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB446:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody444
  endwhile444:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB449:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB450:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB451:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB453:
    CALL MOTOR.RESETCOUNT 'bc'
  while455:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf459
    DATA8 flag459
    DIVF F.1 2.0 tmpf459
    CP_EQF 0.0 2.0 flag459
    SELECTF flag459 0.0 tmpf459 F.0

    JR_GTEQF F.0 470.0 endwhile455
  whilebody455:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB460:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf464
    DATA8 flag464
    DIVF F.1 2.0 tmpf464
    CP_EQF 0.0 2.0 flag464
    SELECTF flag464 0.0 tmpf464 F.0

    JR_LTF F.0 470.0 whilebody455
  endwhile455:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer466
	DATA8 nos466
	DATA8 busy466
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer466 nos466
	JR_EQ8 0 nos466 motornotbusy466
  motorwaiting466:
	OUTPUT_TEST layer466 nos466 busy466
	JR_EQ8 busy466 0 motornotbusy466
	SLEEP
	JR motorwaiting466
  motornotbusy466:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds468
	MOVEF_32 500.0 milliseconds468
	DATA32 timer468
	TIMER_WAIT milliseconds468 timer468
	TIMER_READY timer468
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer470
	DATA8 nos470
	DATA8 busy470
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer470 nos470
	JR_EQ8 0 nos470 motornotbusy470
  motorwaiting470:
	OUTPUT_TEST layer470 nos470 busy470
	JR_EQ8 busy470 0 motornotbusy470
	SLEEP
	JR motorwaiting470
  motornotbusy470:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer471
	DATA8 nos471
	DATA8 busy471
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer471 nos471
	JR_EQ8 0 nos471 motornotbusy471
  motorwaiting471:
	OUTPUT_TEST layer471 nos471 busy471
	JR_EQ8 busy471 0 motornotbusy471
	SLEEP
	JR motorwaiting471
  motornotbusy471:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB472:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB473:
    WRITE32 ENDSUB_F_PR_0:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB474:
    CALL MOTOR.RESETCOUNT 'bc'
  while476:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf480
    DATA8 flag480
    DIVF F.1 2.0 tmpf480
    CP_EQF 0.0 2.0 flag480
    SELECTF flag480 0.0 tmpf480 F.0

    JR_GTEQF F.0 270.0 endwhile476
  whilebody476:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB481:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf485
    DATA8 flag485
    DIVF F.1 2.0 tmpf485
    CP_EQF 0.0 2.0 flag485
    SELECTF flag485 0.0 tmpf485 F.0

    JR_LTF F.0 270.0 whilebody476
  endwhile476:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds488
	MOVEF_32 500.0 milliseconds488
	DATA32 timer488
	TIMER_WAIT milliseconds488 timer488
	TIMER_READY timer488
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB490:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf491
    DATA8 flag491
    DIVF 360.0 VGV_L tmpf491
    CP_EQF 0.0 VGV_L flag491
    SELECTF flag491 0.0 tmpf491 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while494:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile494
  whilebody494:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB496:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody494
  endwhile494:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB499:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB500:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB501:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB503:
    CALL MOTOR.RESETCOUNT 'bc'
  while505:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf509
    DATA8 flag509
    DIVF F.1 2.0 tmpf509
    CP_EQF 0.0 2.0 flag509
    SELECTF flag509 0.0 tmpf509 F.0

    JR_GTEQF F.0 270.0 endwhile505
  whilebody505:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB510:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf514
    DATA8 flag514
    DIVF F.1 2.0 tmpf514
    CP_EQF 0.0 2.0 flag514
    SELECTF flag514 0.0 tmpf514 F.0

    JR_LTF F.0 270.0 whilebody505
  endwhile505:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer516
	DATA8 nos516
	DATA8 busy516
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer516 nos516
	JR_EQ8 0 nos516 motornotbusy516
  motorwaiting516:
	OUTPUT_TEST layer516 nos516 busy516
	JR_EQ8 busy516 0 motornotbusy516
	SLEEP
	JR motorwaiting516
  motornotbusy516:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds518
	MOVEF_32 500.0 milliseconds518
	DATA32 timer518
	TIMER_WAIT milliseconds518 timer518
	TIMER_READY timer518
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer520
	DATA8 nos520
	DATA8 busy520
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer520 nos520
	JR_EQ8 0 nos520 motornotbusy520
  motorwaiting520:
	OUTPUT_TEST layer520 nos520 busy520
	JR_EQ8 busy520 0 motornotbusy520
	SLEEP
	JR motorwaiting520
  motornotbusy520:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer521
	DATA8 nos521
	DATA8 busy521
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer521 nos521
	JR_EQ8 0 nos521 motornotbusy521
  motorwaiting521:
	OUTPUT_TEST layer521 nos521 busy521
	JR_EQ8 busy521 0 motornotbusy521
	SLEEP
	JR motorwaiting521
  motornotbusy521:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB522:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB523:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer524
	DATA8 nos524
	DATA8 busy524
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer524 nos524
	JR_EQ8 0 nos524 motornotbusy524
  motorwaiting524:
	OUTPUT_TEST layer524 nos524 busy524
	JR_EQ8 busy524 0 motornotbusy524
	SLEEP
	JR motorwaiting524
  motornotbusy524:
    PROGRAM_STOP -1
  else339_1:
  endif339:
  else335_1:
  endif335:
    JR_NEQF VGV_COLOR3 5.0 else526_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB527:
    CALL MOTOR.RESETCOUNT 'bc'
  while529:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf533
    DATA8 flag533
    DIVF F.1 2.0 tmpf533
    CP_EQF 0.0 2.0 flag533
    SELECTF flag533 0.0 tmpf533 F.0

    JR_GTEQF F.0 300.0 endwhile529
  whilebody529:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB534:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf538
    DATA8 flag538
    DIVF F.1 2.0 tmpf538
    CP_EQF 0.0 2.0 flag538
    SELECTF flag538 0.0 tmpf538 F.0

    JR_LTF F.0 300.0 whilebody529
  endwhile529:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds541
	MOVEF_32 500.0 milliseconds541
	DATA32 timer541
	TIMER_WAIT milliseconds541 timer541
	TIMER_READY timer541
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB543:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf544
    DATA8 flag544
    DIVF 360.0 VGV_L tmpf544
    CP_EQF 0.0 VGV_L flag544
    SELECTF flag544 0.0 tmpf544 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while547:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile547
  whilebody547:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB549:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody547
  endwhile547:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB552:
    JR_NEQF VGV_C 1.0 else553_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB554:
    JR endif553
  else553_1:
    JR_NEQF VGV_C 0.0 else553_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB555:
    JR endif553
  else553_2:
    JR_NEQF VGV_C 2.0 else553_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB556:
    MOVEF_F 570.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB557:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds559
	MOVEF_32 100.0 milliseconds559
	DATA32 timer559
	TIMER_WAIT milliseconds559 timer559
	TIMER_READY timer559
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer560
	DATA8 nos560
	DATA8 busy560
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer560 nos560
	JR_EQ8 0 nos560 motornotbusy560
  motorwaiting560:
	OUTPUT_TEST layer560 nos560 busy560
	JR_EQ8 busy560 0 motornotbusy560
	SLEEP
	JR motorwaiting560
  motornotbusy560:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer562
	DATA8 nos562
	DATA8 busy562
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer562 nos562
	JR_EQ8 0 nos562 motornotbusy562
  motorwaiting562:
	OUTPUT_TEST layer562 nos562 busy562
	JR_EQ8 busy562 0 motornotbusy562
	SLEEP
	JR motorwaiting562
  motornotbusy562:
    WRITE32 ENDSUB_F_A3_0:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB563:
    WRITE32 ENDSUB_F_A2_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB564:
  while565:
    JR_LTEQF VGV_S2 15.0 endwhile565
  whilebody565:
    WRITE32 ENDSUB_F_A3_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB566:
    WRITE32 ENDSUB_F_A2_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB567:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody565
  endwhile565:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB570:
    WRITE32 ENDSUB_F_A2_0:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB571:
  while572:
    JR_GTEQF VGV_S2 55.0 endwhile572
  whilebody572:
    WRITE32 ENDSUB_F_A3_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB573:
    WRITE32 ENDSUB_F_A2_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB574:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody572
  endwhile572:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while578:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf582
    DATA8 flag582
    DIVF F.1 2.0 tmpf582
    CP_EQF 0.0 2.0 flag582
    SELECTF flag582 0.0 tmpf582 F.0

    JR_GTEQF F.0 270.0 endwhile578
  whilebody578:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB583:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf587
    DATA8 flag587
    DIVF F.1 2.0 tmpf587
    CP_EQF 0.0 2.0 flag587
    SELECTF flag587 0.0 tmpf587 F.0

    JR_LTF F.0 270.0 whilebody578
  endwhile578:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer589
	DATA8 nos589
	DATA8 busy589
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer589 nos589
	JR_EQ8 0 nos589 motornotbusy589
  motorwaiting589:
	OUTPUT_TEST layer589 nos589 busy589
	JR_EQ8 busy589 0 motornotbusy589
	SLEEP
	JR motorwaiting589
  motornotbusy589:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds591
	MOVEF_32 500.0 milliseconds591
	DATA32 timer591
	TIMER_WAIT milliseconds591 timer591
	TIMER_READY timer591
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer593
	DATA8 nos593
	DATA8 busy593
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer593 nos593
	JR_EQ8 0 nos593 motornotbusy593
  motorwaiting593:
	OUTPUT_TEST layer593 nos593 busy593
	JR_EQ8 busy593 0 motornotbusy593
	SLEEP
	JR motorwaiting593
  motornotbusy593:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer594
	DATA8 nos594
	DATA8 busy594
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer594 nos594
	JR_EQ8 0 nos594 motornotbusy594
  motorwaiting594:
	OUTPUT_TEST layer594 nos594 busy594
	JR_EQ8 busy594 0 motornotbusy594
	SLEEP
	JR motorwaiting594
  motornotbusy594:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB595:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB596:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer598
	DATA8 nos598
	DATA8 busy598
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer598 nos598
	JR_EQ8 0 nos598 motornotbusy598
  motorwaiting598:
	OUTPUT_TEST layer598 nos598 busy598
	JR_EQ8 busy598 0 motornotbusy598
	SLEEP
	JR motorwaiting598
  motornotbusy598:
    PROGRAM_STOP -1
  else553_3:
  endif553:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB600:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer602
	DATA8 nos602
	DATA8 busy602
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer602 nos602
	JR_EQ8 0 nos602 motornotbusy602
  motorwaiting602:
	OUTPUT_TEST layer602 nos602 busy602
	JR_EQ8 busy602 0 motornotbusy602
	SLEEP
	JR motorwaiting602
  motornotbusy602:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    WRITE32 ENDSUB_F_A3_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB605:
    WRITE32 ENDSUB_F_A2_0:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB606:
  while607:
    JR_LTEQF VGV_S2 15.0 endwhile607
  whilebody607:
    WRITE32 ENDSUB_F_A3_0:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB608:
    WRITE32 ENDSUB_F_A2_0:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB609:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody607
  endwhile607:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB612:
    WRITE32 ENDSUB_F_A2_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB613:
  while614:
    JR_GTEQF VGV_S2 55.0 endwhile614
  whilebody614:
    WRITE32 ENDSUB_F_A3_0:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB615:
    WRITE32 ENDSUB_F_A2_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB616:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody614
  endwhile614:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while620:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf624
    DATA8 flag624
    DIVF F.1 2.0 tmpf624
    CP_EQF 0.0 2.0 flag624
    SELECTF flag624 0.0 tmpf624 F.0

    JR_GTEQF F.0 200.0 endwhile620
  whilebody620:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB625:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf629
    DATA8 flag629
    DIVF F.1 2.0 tmpf629
    CP_EQF 0.0 2.0 flag629
    SELECTF flag629 0.0 tmpf629 F.0

    JR_LTF F.0 200.0 whilebody620
  endwhile620:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer631
	DATA8 nos631
	DATA8 busy631
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer631 nos631
	JR_EQ8 0 nos631 motornotbusy631
  motorwaiting631:
	OUTPUT_TEST layer631 nos631 busy631
	JR_EQ8 busy631 0 motornotbusy631
	SLEEP
	JR motorwaiting631
  motornotbusy631:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds633
	MOVEF_32 500.0 milliseconds633
	DATA32 timer633
	TIMER_WAIT milliseconds633 timer633
	TIMER_READY timer633
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer635
	DATA8 nos635
	DATA8 busy635
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer635 nos635
	JR_EQ8 0 nos635 motornotbusy635
  motorwaiting635:
	OUTPUT_TEST layer635 nos635 busy635
	JR_EQ8 busy635 0 motornotbusy635
	SLEEP
	JR motorwaiting635
  motornotbusy635:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer636
	DATA8 nos636
	DATA8 busy636
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer636 nos636
	JR_EQ8 0 nos636 motornotbusy636
  motorwaiting636:
	OUTPUT_TEST layer636 nos636 busy636
	JR_EQ8 busy636 0 motornotbusy636
	SLEEP
	JR motorwaiting636
  motornotbusy636:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB637:
    DATA32 tmp638
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp638
    JR_NEQ32 0 tmp638 alreadylaunched638
    OBJECT_START TF_VIDVIG_0
  alreadylaunched638:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB639:
    ADDF VGV_C 1.0 VGV_C
  else526_1:
  endif526:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB641:
    JR_GTEQF VGV_H 25.0 else642_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif642
  else642_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else642_2:
  endif642:
    JR_NEQF VGV_COLOR4 4.0 else645_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer646
	DATA8 nos646
	DATA8 busy646
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer646 nos646
	JR_EQ8 0 nos646 motornotbusy646
  motorwaiting646:
	OUTPUT_TEST layer646 nos646 busy646
	JR_EQ8 busy646 0 motornotbusy646
	SLEEP
	JR motorwaiting646
  motornotbusy646:
    WRITE32 ENDSUB_F_A3_0:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB647:
    WRITE32 ENDSUB_F_A2_0:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB648:
  while649:
    JR_LTEQF VGV_S3 10.0 and651
    JR_GTF VGV_S2 10.0 or650
  and651:
    JR_GTEQF VGV_S3 10.0 endwhile649
    JR_GTEQF VGV_S2 10.0 endwhile649
  or650:
  whilebody649:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB652:
    JR_LTEQF VGV_S3 10.0 and653
    JR_GTF VGV_S2 10.0 whilebody649
  and653:
    JR_GTEQF VGV_S3 10.0 and654
    JR_LTF VGV_S2 10.0 whilebody649
  and654:
  endwhile649:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 30.0 50.0 'true'

	DATA8 layer656
	DATA8 nos656
	DATA8 busy656
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer656 nos656
	JR_EQ8 0 nos656 motornotbusy656
  motorwaiting656:
	OUTPUT_TEST layer656 nos656 busy656
	JR_EQ8 busy656 0 motornotbusy656
	SLEEP
	JR motorwaiting656
  motornotbusy656:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 -20.0 150.0 'true'

	DATA8 layer657
	DATA8 nos657
	DATA8 busy657
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer657 nos657
	JR_EQ8 0 nos657 motornotbusy657
  motorwaiting657:
	OUTPUT_TEST layer657 nos657 busy657
	JR_EQ8 busy657 0 motornotbusy657
	SLEEP
	JR motorwaiting657
  motornotbusy657:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer658
	DATA8 nos658
	DATA8 busy658
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer658 nos658
	JR_EQ8 0 nos658 motornotbusy658
  motorwaiting658:
	OUTPUT_TEST layer658 nos658 busy658
	JR_EQ8 busy658 0 motornotbusy658
	SLEEP
	JR motorwaiting658
  motornotbusy658:
    WRITE32 ENDSUB_F_A2_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB659:
    WRITE32 ENDSUB_F_A3_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB660:
  while661:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile661
  whilebody661:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody661
  endwhile661:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB666:
    WRITE32 ENDSUB_F_A3_0:CALLSUB667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB667:
  while668:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile668
  whilebody668:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody668
  endwhile668:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer673
	DATA8 nos673
	DATA8 busy673
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer673 nos673
	JR_EQ8 0 nos673 motornotbusy673
  motorwaiting673:
	OUTPUT_TEST layer673 nos673 busy673
	JR_EQ8 busy673 0 motornotbusy673
	SLEEP
	JR motorwaiting673
  motornotbusy673:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 20.0 'true'

	DATA8 layer674
	DATA8 nos674
	DATA8 busy674
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer674 nos674
	JR_EQ8 0 nos674 motornotbusy674
  motorwaiting674:
	OUTPUT_TEST layer674 nos674 busy674
	JR_EQ8 busy674 0 motornotbusy674
	SLEEP
	JR motorwaiting674
  motornotbusy674:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 30.0 'true'

	DATA8 layer675
	DATA8 nos675
	DATA8 busy675
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer675 nos675
	JR_EQ8 0 nos675 motornotbusy675
  motorwaiting675:
	OUTPUT_TEST layer675 nos675 busy675
	JR_EQ8 busy675 0 motornotbusy675
	SLEEP
	JR motorwaiting675
  motornotbusy675:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf676
    DATA8 flag676
    DIVF 360.0 VGV_L tmpf676
    CP_EQF 0.0 VGV_L flag676
    SELECTF flag676 0.0 tmpf676 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while679:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf683
    DATA8 flag683
    DIVF F.1 2.0 tmpf683
    CP_EQF 0.0 2.0 flag683
    SELECTF flag683 0.0 tmpf683 F.0

    JR_GTEQF F.0 VGV_X endwhile679
  whilebody679:
    WRITE32 ENDSUB_F_A3_0:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB684:
    WRITE32 ENDSUB_F_A2_0:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB685:
    JR_GTEQF VGV_SPEED 80.0 else686_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else686_1:
  endif686:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB688:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf692
    DATA8 flag692
    DIVF F.1 2.0 tmpf692
    CP_EQF 0.0 2.0 flag692
    SELECTF flag692 0.0 tmpf692 F.0

    JR_LTF F.0 VGV_X whilebody679
  endwhile679:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB694:
    WRITE32 ENDSUB_F_A2_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB695:
  while696:
    JR_LTEQF VGV_S3 15.0 and698
    JR_GTF VGV_S2 15.0 or697
  and698:
    JR_GTEQF VGV_S3 15.0 endwhile696
    JR_GTEQF VGV_S2 15.0 endwhile696
  or697:
  whilebody696:
    WRITE32 ENDSUB_F_A3_0:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB699:
    WRITE32 ENDSUB_F_A2_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB700:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB701:
    JR_LTEQF VGV_S3 15.0 and702
    JR_GTF VGV_S2 15.0 whilebody696
  and702:
    JR_GTEQF VGV_S3 15.0 and703
    JR_LTF VGV_S2 15.0 whilebody696
  and703:
  endwhile696:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.225 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer705
	DATA8 nos705
	DATA8 busy705
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer705 nos705
	JR_EQ8 0 nos705 motornotbusy705
  motorwaiting705:
	OUTPUT_TEST layer705 nos705 busy705
	JR_EQ8 busy705 0 motornotbusy705
	SLEEP
	JR motorwaiting705
  motornotbusy705:
    WRITE32 ENDSUB_F_A3_0:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB706:
    WRITE32 ENDSUB_F_A2_0:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB707:
  while708:
    JR_GTEQF VGV_S2 60.0 endwhile708
  whilebody708:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody708
  endwhile708:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB711:
    WRITE32 ENDSUB_F_A2_0:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB712:
  while713:
    JR_LTEQF VGV_S3 10.0 and715
    JR_GTF VGV_S2 10.0 or714
  and715:
    JR_GTEQF VGV_S3 10.0 endwhile713
    JR_GTEQF VGV_S2 10.0 endwhile713
  or714:
  whilebody713:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB716:
    JR_LTEQF VGV_S3 10.0 and717
    JR_GTF VGV_S2 10.0 whilebody713
  and717:
    JR_GTEQF VGV_S3 10.0 and718
    JR_LTF VGV_S2 10.0 whilebody713
  and718:
  endwhile713:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 1.0 else720_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB721:
    CALL MOTOR.RESETCOUNT 'bc'
  while723:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf727
    DATA8 flag727
    DIVF F.1 2.0 tmpf727
    CP_EQF 0.0 2.0 flag727
    SELECTF flag727 0.0 tmpf727 F.0

    JR_GTEQF F.0 500.0 endwhile723
  whilebody723:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB728:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf732
    DATA8 flag732
    DIVF F.1 2.0 tmpf732
    CP_EQF 0.0 2.0 flag732
    SELECTF flag732 0.0 tmpf732 F.0

    JR_LTF F.0 500.0 whilebody723
  endwhile723:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds735
	MOVEF_32 500.0 milliseconds735
	DATA32 timer735
	TIMER_WAIT milliseconds735 timer735
	TIMER_READY timer735
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB737:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf738
    DATA8 flag738
    DIVF 360.0 VGV_L tmpf738
    CP_EQF 0.0 VGV_L flag738
    SELECTF flag738 0.0 tmpf738 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while741:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile741
  whilebody741:
    JR_GTEQF VGV_SPEED 80.0 else743_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else743_1:
  endif743:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB745:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody741
  endwhile741:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB748:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB749:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB750:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB752:
    CALL MOTOR.RESETCOUNT 'bc'
  while754:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf758
    DATA8 flag758
    DIVF F.1 2.0 tmpf758
    CP_EQF 0.0 2.0 flag758
    SELECTF flag758 0.0 tmpf758 F.0

    JR_GTEQF F.0 400.0 endwhile754
  whilebody754:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB759:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf763
    DATA8 flag763
    DIVF F.1 2.0 tmpf763
    CP_EQF 0.0 2.0 flag763
    SELECTF flag763 0.0 tmpf763 F.0

    JR_LTF F.0 400.0 whilebody754
  endwhile754:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer765
	DATA8 nos765
	DATA8 busy765
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer765 nos765
	JR_EQ8 0 nos765 motornotbusy765
  motorwaiting765:
	OUTPUT_TEST layer765 nos765 busy765
	JR_EQ8 busy765 0 motornotbusy765
	SLEEP
	JR motorwaiting765
  motornotbusy765:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds767
	MOVEF_32 500.0 milliseconds767
	DATA32 timer767
	TIMER_WAIT milliseconds767 timer767
	TIMER_READY timer767
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer769
	DATA8 nos769
	DATA8 busy769
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer769 nos769
	JR_EQ8 0 nos769 motornotbusy769
  motorwaiting769:
	OUTPUT_TEST layer769 nos769 busy769
	JR_EQ8 busy769 0 motornotbusy769
	SLEEP
	JR motorwaiting769
  motornotbusy769:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer770
	DATA8 nos770
	DATA8 busy770
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer770 nos770
	JR_EQ8 0 nos770 motornotbusy770
  motorwaiting770:
	OUTPUT_TEST layer770 nos770 busy770
	JR_EQ8 busy770 0 motornotbusy770
	SLEEP
	JR motorwaiting770
  motornotbusy770:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB771:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB772:
    WRITE32 ENDSUB_F_PR_0:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB773:
    CALL MOTOR.RESETCOUNT 'bc'
  while775:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf779
    DATA8 flag779
    DIVF F.1 2.0 tmpf779
    CP_EQF 0.0 2.0 flag779
    SELECTF flag779 0.0 tmpf779 F.0

    JR_GTEQF F.0 270.0 endwhile775
  whilebody775:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB780:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf784
    DATA8 flag784
    DIVF F.1 2.0 tmpf784
    CP_EQF 0.0 2.0 flag784
    SELECTF flag784 0.0 tmpf784 F.0

    JR_LTF F.0 270.0 whilebody775
  endwhile775:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds787
	MOVEF_32 500.0 milliseconds787
	DATA32 timer787
	TIMER_WAIT milliseconds787 timer787
	TIMER_READY timer787
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB789:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf790
    DATA8 flag790
    DIVF 360.0 VGV_L tmpf790
    CP_EQF 0.0 VGV_L flag790
    SELECTF flag790 0.0 tmpf790 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while793:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile793
  whilebody793:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB795:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody793
  endwhile793:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB798:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB799:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB800:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB802:
    CALL MOTOR.RESETCOUNT 'bc'
  while804:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf808
    DATA8 flag808
    DIVF F.1 2.0 tmpf808
    CP_EQF 0.0 2.0 flag808
    SELECTF flag808 0.0 tmpf808 F.0

    JR_GTEQF F.0 270.0 endwhile804
  whilebody804:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB809:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf813
    DATA8 flag813
    DIVF F.1 2.0 tmpf813
    CP_EQF 0.0 2.0 flag813
    SELECTF flag813 0.0 tmpf813 F.0

    JR_LTF F.0 270.0 whilebody804
  endwhile804:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer815
	DATA8 nos815
	DATA8 busy815
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer815 nos815
	JR_EQ8 0 nos815 motornotbusy815
  motorwaiting815:
	OUTPUT_TEST layer815 nos815 busy815
	JR_EQ8 busy815 0 motornotbusy815
	SLEEP
	JR motorwaiting815
  motornotbusy815:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds817
	MOVEF_32 500.0 milliseconds817
	DATA32 timer817
	TIMER_WAIT milliseconds817 timer817
	TIMER_READY timer817
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer819
	DATA8 nos819
	DATA8 busy819
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer819 nos819
	JR_EQ8 0 nos819 motornotbusy819
  motorwaiting819:
	OUTPUT_TEST layer819 nos819 busy819
	JR_EQ8 busy819 0 motornotbusy819
	SLEEP
	JR motorwaiting819
  motornotbusy819:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer820
	DATA8 nos820
	DATA8 busy820
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer820 nos820
	JR_EQ8 0 nos820 motornotbusy820
  motorwaiting820:
	OUTPUT_TEST layer820 nos820 busy820
	JR_EQ8 busy820 0 motornotbusy820
	SLEEP
	JR motorwaiting820
  motornotbusy820:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB821:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB822:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer823
	DATA8 nos823
	DATA8 busy823
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer823 nos823
	JR_EQ8 0 nos823 motornotbusy823
  motorwaiting823:
	OUTPUT_TEST layer823 nos823 busy823
	JR_EQ8 busy823 0 motornotbusy823
	SLEEP
	JR motorwaiting823
  motornotbusy823:
    PROGRAM_STOP -1
  else720_1:
  endif720:
  else645_1:
  endif645:
    JR_NEQF VGV_COLOR4 5.0 else825_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB826:
    CALL MOTOR.RESETCOUNT 'bc'
  while828:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf832
    DATA8 flag832
    DIVF F.1 2.0 tmpf832
    CP_EQF 0.0 2.0 flag832
    SELECTF flag832 0.0 tmpf832 F.0

    JR_GTEQF F.0 450.0 endwhile828
  whilebody828:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB833:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf837
    DATA8 flag837
    DIVF F.1 2.0 tmpf837
    CP_EQF 0.0 2.0 flag837
    SELECTF flag837 0.0 tmpf837 F.0

    JR_LTF F.0 450.0 whilebody828
  endwhile828:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds840
	MOVEF_32 500.0 milliseconds840
	DATA32 timer840
	TIMER_WAIT milliseconds840 timer840
	TIMER_READY timer840
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB842:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf843
    DATA8 flag843
    DIVF 360.0 VGV_L tmpf843
    CP_EQF 0.0 VGV_L flag843
    SELECTF flag843 0.0 tmpf843 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while846:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile846
  whilebody846:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB848:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody846
  endwhile846:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB851:
    JR_NEQF VGV_C 1.0 else852_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB853 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB853:
    JR endif852
  else852_1:
    JR_NEQF VGV_C 0.0 else852_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB854:
    JR endif852
  else852_2:
    JR_NEQF VGV_C 2.0 else852_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB855:
    MOVEF_F 160.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB856:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB858:
    CALL MOTOR.RESETCOUNT 'bc'
  while860:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf864
    DATA8 flag864
    DIVF F.1 2.0 tmpf864
    CP_EQF 0.0 2.0 flag864
    SELECTF flag864 0.0 tmpf864 F.0

    JR_GTEQF F.0 250.0 endwhile860
  whilebody860:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB865:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf869
    DATA8 flag869
    DIVF F.1 2.0 tmpf869
    CP_EQF 0.0 2.0 flag869
    SELECTF flag869 0.0 tmpf869 F.0

    JR_LTF F.0 250.0 whilebody860
  endwhile860:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer871
	DATA8 nos871
	DATA8 busy871
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer871 nos871
	JR_EQ8 0 nos871 motornotbusy871
  motorwaiting871:
	OUTPUT_TEST layer871 nos871 busy871
	JR_EQ8 busy871 0 motornotbusy871
	SLEEP
	JR motorwaiting871
  motornotbusy871:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds873
	MOVEF_32 500.0 milliseconds873
	DATA32 timer873
	TIMER_WAIT milliseconds873 timer873
	TIMER_READY timer873
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer875
	DATA8 nos875
	DATA8 busy875
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer875 nos875
	JR_EQ8 0 nos875 motornotbusy875
  motorwaiting875:
	OUTPUT_TEST layer875 nos875 busy875
	JR_EQ8 busy875 0 motornotbusy875
	SLEEP
	JR motorwaiting875
  motornotbusy875:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer876
	DATA8 nos876
	DATA8 busy876
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer876 nos876
	JR_EQ8 0 nos876 motornotbusy876
  motorwaiting876:
	OUTPUT_TEST layer876 nos876 busy876
	JR_EQ8 busy876 0 motornotbusy876
	SLEEP
	JR motorwaiting876
  motornotbusy876:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB877:
    CALL MOTOR.RESETCOUNT 'bc'
  while879:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf883
    DATA8 flag883
    DIVF F.1 2.0 tmpf883
    CP_EQF 0.0 2.0 flag883
    SELECTF flag883 0.0 tmpf883 F.0

    JR_GTEQF F.0 100.0 endwhile879
  whilebody879:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB884:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf888
    DATA8 flag888
    DIVF F.1 2.0 tmpf888
    CP_EQF 0.0 2.0 flag888
    SELECTF flag888 0.0 tmpf888 F.0

    JR_LTF F.0 100.0 whilebody879
  endwhile879:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB890:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer892
	DATA8 nos892
	DATA8 busy892
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer892 nos892
	JR_EQ8 0 nos892 motornotbusy892
  motorwaiting892:
	OUTPUT_TEST layer892 nos892 busy892
	JR_EQ8 busy892 0 motornotbusy892
	SLEEP
	JR motorwaiting892
  motornotbusy892:
    PROGRAM_STOP -1
  else852_3:
  endif852:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB894:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB896:
    CALL MOTOR.RESETCOUNT 'bc'
  while898:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf902
    DATA8 flag902
    DIVF F.1 2.0 tmpf902
    CP_EQF 0.0 2.0 flag902
    SELECTF flag902 0.0 tmpf902 F.0

    JR_GTEQF F.0 250.0 endwhile898
  whilebody898:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB903:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf907
    DATA8 flag907
    DIVF F.1 2.0 tmpf907
    CP_EQF 0.0 2.0 flag907
    SELECTF flag907 0.0 tmpf907 F.0

    JR_LTF F.0 250.0 whilebody898
  endwhile898:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer909
	DATA8 nos909
	DATA8 busy909
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer909 nos909
	JR_EQ8 0 nos909 motornotbusy909
  motorwaiting909:
	OUTPUT_TEST layer909 nos909 busy909
	JR_EQ8 busy909 0 motornotbusy909
	SLEEP
	JR motorwaiting909
  motornotbusy909:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds911
	MOVEF_32 500.0 milliseconds911
	DATA32 timer911
	TIMER_WAIT milliseconds911 timer911
	TIMER_READY timer911
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer913
	DATA8 nos913
	DATA8 busy913
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer913 nos913
	JR_EQ8 0 nos913 motornotbusy913
  motorwaiting913:
	OUTPUT_TEST layer913 nos913 busy913
	JR_EQ8 busy913 0 motornotbusy913
	SLEEP
	JR motorwaiting913
  motornotbusy913:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer914
	DATA8 nos914
	DATA8 busy914
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer914 nos914
	JR_EQ8 0 nos914 motornotbusy914
  motorwaiting914:
	OUTPUT_TEST layer914 nos914 busy914
	JR_EQ8 busy914 0 motornotbusy914
	SLEEP
	JR motorwaiting914
  motornotbusy914:
    DATA32 tmp915
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp915
    JR_NEQ32 0 tmp915 alreadylaunched915
    OBJECT_START TF_VIDVIG_0
  alreadylaunched915:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB916:
    WRITE32 ENDSUB_F_A3_0:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB917:
    WRITE32 ENDSUB_F_A2_0:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB918:
  while919:
    JR_LTEQF VGV_S3 10.0 and921
    JR_GTF VGV_S2 10.0 or920
  and921:
    JR_GTEQF VGV_S3 10.0 endwhile919
    JR_GTEQF VGV_S2 10.0 endwhile919
  or920:
  whilebody919:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB922:
    JR_LTEQF VGV_S3 10.0 and923
    JR_GTF VGV_S2 10.0 whilebody919
  and923:
    JR_GTEQF VGV_S3 10.0 and924
    JR_LTF VGV_S2 10.0 whilebody919
  and924:
  endwhile919:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 30.0 50.0 'true'

	DATA8 layer926
	DATA8 nos926
	DATA8 busy926
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer926 nos926
	JR_EQ8 0 nos926 motornotbusy926
  motorwaiting926:
	OUTPUT_TEST layer926 nos926 busy926
	JR_EQ8 busy926 0 motornotbusy926
	SLEEP
	JR motorwaiting926
  motornotbusy926:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer927
	DATA8 nos927
	DATA8 busy927
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer927 nos927
	JR_EQ8 0 nos927 motornotbusy927
  motorwaiting927:
	OUTPUT_TEST layer927 nos927 busy927
	JR_EQ8 busy927 0 motornotbusy927
	SLEEP
	JR motorwaiting927
  motornotbusy927:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer928
	DATA8 nos928
	DATA8 busy928
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer928 nos928
	JR_EQ8 0 nos928 motornotbusy928
  motorwaiting928:
	OUTPUT_TEST layer928 nos928 busy928
	JR_EQ8 busy928 0 motornotbusy928
	SLEEP
	JR motorwaiting928
  motornotbusy928:
    WRITE32 ENDSUB_F_A2_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB929:
    WRITE32 ENDSUB_F_A3_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB930:
  while931:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile931
  whilebody931:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody931
  endwhile931:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB936:
    WRITE32 ENDSUB_F_A3_0:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB937:
  while938:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile938
  whilebody938:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody938
  endwhile938:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB943:
    WRITE32 ENDSUB_F_A2_0:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB944:
  while945:
    JR_LTEQF VGV_S3 10.0 and947
    JR_GTF VGV_S2 10.0 or946
  and947:
    JR_GTEQF VGV_S3 10.0 endwhile945
    JR_GTEQF VGV_S2 10.0 endwhile945
  or946:
  whilebody945:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB948:
    JR_LTEQF VGV_S3 10.0 and949
    JR_GTF VGV_S2 10.0 whilebody945
  and949:
    JR_GTEQF VGV_S3 10.0 and950
    JR_LTF VGV_S2 10.0 whilebody945
  and950:
  endwhile945:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer952
	DATA8 nos952
	DATA8 busy952
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer952 nos952
	JR_EQ8 0 nos952 motornotbusy952
  motorwaiting952:
	OUTPUT_TEST layer952 nos952 busy952
	JR_EQ8 busy952 0 motornotbusy952
	SLEEP
	JR motorwaiting952
  motornotbusy952:
    WRITE32 ENDSUB_F_A3_0:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB953:
    WRITE32 ENDSUB_F_A2_0:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB954:
  while955:
    JR_LTEQF VGV_S3 10.0 and957
    JR_GTF VGV_S2 10.0 or956
  and957:
    JR_GTEQF VGV_S3 10.0 endwhile955
    JR_GTEQF VGV_S2 10.0 endwhile955
  or956:
  whilebody955:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB958:
    JR_LTEQF VGV_S3 10.0 and959
    JR_GTF VGV_S2 10.0 whilebody955
  and959:
    JR_GTEQF VGV_S3 10.0 and960
    JR_LTF VGV_S2 10.0 whilebody955
  and960:
  endwhile955:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VGV_C 1.0 VGV_C
  else825_1:
  endif825:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB963:
    JR_LTF VGV_H 30.0 or965
    JR_LTEQF VGV_H 280.0 else964_1
  or965:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif964
  else964_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else964_2:
  endif964:
    JR_NEQF VGV_COLOR5 4.0 else968_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer969
	DATA8 nos969
	DATA8 busy969
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer969 nos969
	JR_EQ8 0 nos969 motornotbusy969
  motorwaiting969:
	OUTPUT_TEST layer969 nos969 busy969
	JR_EQ8 busy969 0 motornotbusy969
	SLEEP
	JR motorwaiting969
  motornotbusy969:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB970:
    WRITE32 ENDSUB_F_PR_0:CALLSUB971 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB971:
    CALL MOTOR.RESETCOUNT 'bc'
  while973:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf977
    DATA8 flag977
    DIVF F.1 2.0 tmpf977
    CP_EQF 0.0 2.0 flag977
    SELECTF flag977 0.0 tmpf977 F.0

    JR_GTEQF F.0 270.0 endwhile973
  whilebody973:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB978:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf982
    DATA8 flag982
    DIVF F.1 2.0 tmpf982
    CP_EQF 0.0 2.0 flag982
    SELECTF flag982 0.0 tmpf982 F.0

    JR_LTF F.0 270.0 whilebody973
  endwhile973:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds985
	MOVEF_32 500.0 milliseconds985
	DATA32 timer985
	TIMER_WAIT milliseconds985 timer985
	TIMER_READY timer985
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB987:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB988:
    CALL MOTOR.RESETCOUNT 'bc'
  while990:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf994
    DATA8 flag994
    DIVF F.1 2.0 tmpf994
    CP_EQF 0.0 2.0 flag994
    SELECTF flag994 0.0 tmpf994 F.0

    JR_GTEQF F.0 100.0 endwhile990
  whilebody990:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB995:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf999
    DATA8 flag999
    DIVF F.1 2.0 tmpf999
    CP_EQF 0.0 2.0 flag999
    SELECTF flag999 0.0 tmpf999 F.0

    JR_LTF F.0 100.0 whilebody990
  endwhile990:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 750.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1001
    DATA8 flag1001
    DIVF 360.0 VGV_L tmpf1001
    CP_EQF 0.0 VGV_L flag1001
    SELECTF flag1001 0.0 tmpf1001 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1004:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1004
  whilebody1004:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1006:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1004
  endwhile1004:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1009:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1010:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1011:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer1013
	DATA8 nos1013
	DATA8 busy1013
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1013 nos1013
	JR_EQ8 0 nos1013 motornotbusy1013
  motorwaiting1013:
	OUTPUT_TEST layer1013 nos1013 busy1013
	JR_EQ8 busy1013 0 motornotbusy1013
	SLEEP
	JR motorwaiting1013
  motornotbusy1013:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1015
	DATA8 nos1015
	DATA8 busy1015
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1015 nos1015
	JR_EQ8 0 nos1015 motornotbusy1015
  motorwaiting1015:
	OUTPUT_TEST layer1015 nos1015 busy1015
	JR_EQ8 busy1015 0 motornotbusy1015
	SLEEP
	JR motorwaiting1015
  motornotbusy1015:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1016 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1016:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1017:
  while1018:
    JR_LTEQF VGV_S3 15.0 endwhile1018
  whilebody1018:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1019:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1020:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody1018
  endwhile1018:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1023:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1024:
  while1025:
    JR_GTEQF VGV_S3 60.0 endwhile1025
  whilebody1025:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1026:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1027:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1025
  endwhile1025:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1031:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1035
    DATA8 flag1035
    DIVF F.1 2.0 tmpf1035
    CP_EQF 0.0 2.0 flag1035
    SELECTF flag1035 0.0 tmpf1035 F.0

    JR_GTEQF F.0 270.0 endwhile1031
  whilebody1031:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1036:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1040
    DATA8 flag1040
    DIVF F.1 2.0 tmpf1040
    CP_EQF 0.0 2.0 flag1040
    SELECTF flag1040 0.0 tmpf1040 F.0

    JR_LTF F.0 270.0 whilebody1031
  endwhile1031:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1042
	DATA8 nos1042
	DATA8 busy1042
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1042 nos1042
	JR_EQ8 0 nos1042 motornotbusy1042
  motorwaiting1042:
	OUTPUT_TEST layer1042 nos1042 busy1042
	JR_EQ8 busy1042 0 motornotbusy1042
	SLEEP
	JR motorwaiting1042
  motornotbusy1042:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1044
	MOVEF_32 500.0 milliseconds1044
	DATA32 timer1044
	TIMER_WAIT milliseconds1044 timer1044
	TIMER_READY timer1044
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1046
	DATA8 nos1046
	DATA8 busy1046
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1046 nos1046
	JR_EQ8 0 nos1046 motornotbusy1046
  motorwaiting1046:
	OUTPUT_TEST layer1046 nos1046 busy1046
	JR_EQ8 busy1046 0 motornotbusy1046
	SLEEP
	JR motorwaiting1046
  motornotbusy1046:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1047
	DATA8 nos1047
	DATA8 busy1047
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1047 nos1047
	JR_EQ8 0 nos1047 motornotbusy1047
  motorwaiting1047:
	OUTPUT_TEST layer1047 nos1047 busy1047
	JR_EQ8 busy1047 0 motornotbusy1047
	SLEEP
	JR motorwaiting1047
  motornotbusy1047:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1048:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1049:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1050
	DATA8 nos1050
	DATA8 busy1050
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1050 nos1050
	JR_EQ8 0 nos1050 motornotbusy1050
  motorwaiting1050:
	OUTPUT_TEST layer1050 nos1050 busy1050
	JR_EQ8 busy1050 0 motornotbusy1050
	SLEEP
	JR motorwaiting1050
  motornotbusy1050:
    PROGRAM_STOP -1
  else968_1:
  endif968:
    JR_NEQF VGV_COLOR5 5.0 else1052_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1053:
    CALL MOTOR.RESETCOUNT 'bc'
  while1055:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1059
    DATA8 flag1059
    DIVF F.1 2.0 tmpf1059
    CP_EQF 0.0 2.0 flag1059
    SELECTF flag1059 0.0 tmpf1059 F.0

    JR_GTEQF F.0 500.0 endwhile1055
  whilebody1055:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1060:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1064
    DATA8 flag1064
    DIVF F.1 2.0 tmpf1064
    CP_EQF 0.0 2.0 flag1064
    SELECTF flag1064 0.0 tmpf1064 F.0

    JR_LTF F.0 500.0 whilebody1055
  endwhile1055:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1067
	MOVEF_32 500.0 milliseconds1067
	DATA32 timer1067
	TIMER_WAIT milliseconds1067 timer1067
	TIMER_READY timer1067
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB1069:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1070
    DATA8 flag1070
    DIVF 360.0 VGV_L tmpf1070
    CP_EQF 0.0 VGV_L flag1070
    SELECTF flag1070 0.0 tmpf1070 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1073:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1073
  whilebody1073:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1075:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1073
  endwhile1073:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1078:
    JR_NEQF VGV_C 1.0 else1079_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB1080:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1081 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1081:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1083:
    CALL MOTOR.RESETCOUNT 'bc'
  while1085:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1089
    DATA8 flag1089
    DIVF F.1 2.0 tmpf1089
    CP_EQF 0.0 2.0 flag1089
    SELECTF flag1089 0.0 tmpf1089 F.0

    JR_GTEQF F.0 470.0 endwhile1085
  whilebody1085:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1090:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1094
    DATA8 flag1094
    DIVF F.1 2.0 tmpf1094
    CP_EQF 0.0 2.0 flag1094
    SELECTF flag1094 0.0 tmpf1094 F.0

    JR_LTF F.0 470.0 whilebody1085
  endwhile1085:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1096
	DATA8 nos1096
	DATA8 busy1096
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1096 nos1096
	JR_EQ8 0 nos1096 motornotbusy1096
  motorwaiting1096:
	OUTPUT_TEST layer1096 nos1096 busy1096
	JR_EQ8 busy1096 0 motornotbusy1096
	SLEEP
	JR motorwaiting1096
  motornotbusy1096:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1098
	MOVEF_32 500.0 milliseconds1098
	DATA32 timer1098
	TIMER_WAIT milliseconds1098 timer1098
	TIMER_READY timer1098
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1100
	DATA8 nos1100
	DATA8 busy1100
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1100 nos1100
	JR_EQ8 0 nos1100 motornotbusy1100
  motorwaiting1100:
	OUTPUT_TEST layer1100 nos1100 busy1100
	JR_EQ8 busy1100 0 motornotbusy1100
	SLEEP
	JR motorwaiting1100
  motornotbusy1100:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1101
	DATA8 nos1101
	DATA8 busy1101
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1101 nos1101
	JR_EQ8 0 nos1101 motornotbusy1101
  motorwaiting1101:
	OUTPUT_TEST layer1101 nos1101 busy1101
	JR_EQ8 busy1101 0 motornotbusy1101
	SLEEP
	JR motorwaiting1101
  motornotbusy1101:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1102:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1103:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1104:
    CALL MOTOR.RESETCOUNT 'bc'
  while1106:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1110
    DATA8 flag1110
    DIVF F.1 2.0 tmpf1110
    CP_EQF 0.0 2.0 flag1110
    SELECTF flag1110 0.0 tmpf1110 F.0

    JR_GTEQF F.0 270.0 endwhile1106
  whilebody1106:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1111:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1115
    DATA8 flag1115
    DIVF F.1 2.0 tmpf1115
    CP_EQF 0.0 2.0 flag1115
    SELECTF flag1115 0.0 tmpf1115 F.0

    JR_LTF F.0 270.0 whilebody1106
  endwhile1106:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1118
	MOVEF_32 500.0 milliseconds1118
	DATA32 timer1118
	TIMER_WAIT milliseconds1118 timer1118
	TIMER_READY timer1118
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1120
	DATA8 no1120
	DATA8 mode81120
	
	MOVEF_8 2.0 no1120
	SUB8 no1120 1 no1120
	DIV8 no1120 4 layer1120
	MATH MOD8 no1120 4 no1120

	MOVEF_8 0.0 mode81120
	
	INPUT_DEVICE READY_RAW layer1120 no1120 0 mode81120 0
    DATA8 layer1121
	DATA8 no1121
	DATA8 mode81121
	
	MOVEF_8 3.0 no1121
	SUB8 no1121 1 no1121
	DIV8 no1121 4 layer1121
	MATH MOD8 no1121 4 no1121

	MOVEF_8 0.0 mode81121
	
	INPUT_DEVICE READY_RAW layer1121 no1121 0 mode81121 0
  while1122:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1124
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1123
  and1124:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1127
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1123
  and1127:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1122
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1122
  or1123:
  whilebody1122:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1133
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1122
  and1133:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1136
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1122
  and1136:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1139
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1122
  and1139:
  endwhile1122:
  while1142:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1142
  whilebody1142:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1142
  endwhile1142:
    CALL MOTOR.STOP 'B' 'True'
  while1147:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1147
  whilebody1147:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1147
  endwhile1147:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1152
	DATA8 nos1152
	DATA8 busy1152
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1152 nos1152
	JR_EQ8 0 nos1152 motornotbusy1152
  motorwaiting1152:
	OUTPUT_TEST layer1152 nos1152 busy1152
	JR_EQ8 busy1152 0 motornotbusy1152
	SLEEP
	JR motorwaiting1152
  motornotbusy1152:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1154
	DATA8 nos1154
	DATA8 busy1154
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1154 nos1154
	JR_EQ8 0 nos1154 motornotbusy1154
  motorwaiting1154:
	OUTPUT_TEST layer1154 nos1154 busy1154
	JR_EQ8 busy1154 0 motornotbusy1154
	SLEEP
	JR motorwaiting1154
  motornotbusy1154:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1156:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1157:
  while1158:
    JR_LTEQF VGV_S3 10.0 endwhile1158
  whilebody1158:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1159:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1160:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1158
  endwhile1158:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1162:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1163:
  while1164:
    JR_GTEQF VGV_S3 55.0 endwhile1164
  whilebody1164:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1165:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1166:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1164
  endwhile1164:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1000.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1169
    DATA8 flag1169
    DIVF 360.0 VGV_L tmpf1169
    CP_EQF 0.0 VGV_L flag1169
    SELECTF flag1169 0.0 tmpf1169 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1172:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1172
  whilebody1172:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1174:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1172
  endwhile1172:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1177:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1178:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1179:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1181:
    CALL MOTOR.RESETCOUNT 'bc'
  while1183:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1187
    DATA8 flag1187
    DIVF F.1 2.0 tmpf1187
    CP_EQF 0.0 2.0 flag1187
    SELECTF flag1187 0.0 tmpf1187 F.0

    JR_GTEQF F.0 270.0 endwhile1183
  whilebody1183:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1188:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1192
    DATA8 flag1192
    DIVF F.1 2.0 tmpf1192
    CP_EQF 0.0 2.0 flag1192
    SELECTF flag1192 0.0 tmpf1192 F.0

    JR_LTF F.0 270.0 whilebody1183
  endwhile1183:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1194
	DATA8 nos1194
	DATA8 busy1194
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1194 nos1194
	JR_EQ8 0 nos1194 motornotbusy1194
  motorwaiting1194:
	OUTPUT_TEST layer1194 nos1194 busy1194
	JR_EQ8 busy1194 0 motornotbusy1194
	SLEEP
	JR motorwaiting1194
  motornotbusy1194:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1196
	MOVEF_32 500.0 milliseconds1196
	DATA32 timer1196
	TIMER_WAIT milliseconds1196 timer1196
	TIMER_READY timer1196
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1198
	DATA8 nos1198
	DATA8 busy1198
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1198 nos1198
	JR_EQ8 0 nos1198 motornotbusy1198
  motorwaiting1198:
	OUTPUT_TEST layer1198 nos1198 busy1198
	JR_EQ8 busy1198 0 motornotbusy1198
	SLEEP
	JR motorwaiting1198
  motornotbusy1198:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1199
	DATA8 nos1199
	DATA8 busy1199
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1199 nos1199
	JR_EQ8 0 nos1199 motornotbusy1199
  motorwaiting1199:
	OUTPUT_TEST layer1199 nos1199 busy1199
	JR_EQ8 busy1199 0 motornotbusy1199
	SLEEP
	JR motorwaiting1199
  motornotbusy1199:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1200:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1201:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1202
	DATA8 nos1202
	DATA8 busy1202
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1202 nos1202
	JR_EQ8 0 nos1202 motornotbusy1202
  motorwaiting1202:
	OUTPUT_TEST layer1202 nos1202 busy1202
	JR_EQ8 busy1202 0 motornotbusy1202
	SLEEP
	JR motorwaiting1202
  motornotbusy1202:
    PROGRAM_STOP -1
    JR endif1079
  else1079_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1204:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1205:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1207:
    CALL MOTOR.RESETCOUNT 'bc'
  while1209:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1213
    DATA8 flag1213
    DIVF F.1 2.0 tmpf1213
    CP_EQF 0.0 2.0 flag1213
    SELECTF flag1213 0.0 tmpf1213 F.0

    JR_GTEQF F.0 470.0 endwhile1209
  whilebody1209:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1214:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1218
    DATA8 flag1218
    DIVF F.1 2.0 tmpf1218
    CP_EQF 0.0 2.0 flag1218
    SELECTF flag1218 0.0 tmpf1218 F.0

    JR_LTF F.0 470.0 whilebody1209
  endwhile1209:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1220
	DATA8 nos1220
	DATA8 busy1220
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1220 nos1220
	JR_EQ8 0 nos1220 motornotbusy1220
  motorwaiting1220:
	OUTPUT_TEST layer1220 nos1220 busy1220
	JR_EQ8 busy1220 0 motornotbusy1220
	SLEEP
	JR motorwaiting1220
  motornotbusy1220:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1222
	MOVEF_32 500.0 milliseconds1222
	DATA32 timer1222
	TIMER_WAIT milliseconds1222 timer1222
	TIMER_READY timer1222
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1224
	DATA8 nos1224
	DATA8 busy1224
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1224 nos1224
	JR_EQ8 0 nos1224 motornotbusy1224
  motorwaiting1224:
	OUTPUT_TEST layer1224 nos1224 busy1224
	JR_EQ8 busy1224 0 motornotbusy1224
	SLEEP
	JR motorwaiting1224
  motornotbusy1224:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1225
	DATA8 nos1225
	DATA8 busy1225
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1225 nos1225
	JR_EQ8 0 nos1225 motornotbusy1225
  motorwaiting1225:
	OUTPUT_TEST layer1225 nos1225 busy1225
	JR_EQ8 busy1225 0 motornotbusy1225
	SLEEP
	JR motorwaiting1225
  motornotbusy1225:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1226:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1227:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1228
	DATA8 nos1228
	DATA8 busy1228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1228 nos1228
	JR_EQ8 0 nos1228 motornotbusy1228
  motorwaiting1228:
	OUTPUT_TEST layer1228 nos1228 busy1228
	JR_EQ8 busy1228 0 motornotbusy1228
	SLEEP
	JR motorwaiting1228
  motornotbusy1228:
    PROGRAM_STOP -1
  else1079_2:
  endif1079:
  else1052_1:
  endif1052:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1231
	DATA8 nos1231
	DATA8 busy1231
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1231 nos1231
	JR_EQ8 0 nos1231 motornotbusy1231
  motorwaiting1231:
	OUTPUT_TEST layer1231 nos1231 busy1231
	JR_EQ8 busy1231 0 motornotbusy1231
	SLEEP
	JR motorwaiting1231
  motornotbusy1231:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1232
	DATA8 nos1232
	DATA8 busy1232
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1232 nos1232
	JR_EQ8 0 nos1232 motornotbusy1232
  motorwaiting1232:
	OUTPUT_TEST layer1232 nos1232 busy1232
	JR_EQ8 busy1232 0 motornotbusy1232
	SLEEP
	JR motorwaiting1232
  motornotbusy1232:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1234
	DATA8 nos1234
	DATA8 busy1234
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1234 nos1234
	JR_EQ8 0 nos1234 motornotbusy1234
  motorwaiting1234:
	OUTPUT_TEST layer1234 nos1234 busy1234
	JR_EQ8 busy1234 0 motornotbusy1234
	SLEEP
	JR motorwaiting1234
  motornotbusy1234:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1235
	DATA8 nos1235
	DATA8 busy1235
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1235 nos1235
	JR_EQ8 0 nos1235 motornotbusy1235
  motorwaiting1235:
	OUTPUT_TEST layer1235 nos1235 busy1235
	JR_EQ8 busy1235 0 motornotbusy1235
	SLEEP
	JR motorwaiting1235
  motornotbusy1235:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1237
    DATA8 flag1237
    DIVF 360.0 VGV_L tmpf1237
    CP_EQF 0.0 VGV_L flag1237
    SELECTF flag1237 0.0 tmpf1237 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1240:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1240
  whilebody1240:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1242:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1240
  endwhile1240:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1245:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1247
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1247
    JR_NEQ32 0 tmp1247 alreadylaunched1247
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1247:
ENDTHREAD:
    RETURN
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1248
    DATA8 flag1248
    DIVF 360.0 VGV_L tmpf1248
    CP_EQF 0.0 VGV_L flag1248
    SELECTF flag1248 0.0 tmpf1248 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1251:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1255
    DATA8 flag1255
    DIVF F.1 2.0 tmpf1255
    CP_EQF 0.0 2.0 flag1255
    SELECTF flag1255 0.0 tmpf1255 F.0

    JR_GTEQF F.0 VGV_X endwhile1251
  whilebody1251:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1256:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1257:
    JR_GTEQF VGV_SPEED 80.0 else1258_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1258_1:
  endif1258:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1260:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1264
    DATA8 flag1264
    DIVF F.1 2.0 tmpf1264
    CP_EQF 0.0 2.0 flag1264
    SELECTF flag1264 0.0 tmpf1264 F.0

    JR_LTF F.0 VGV_X whilebody1251
  endwhile1251:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1266:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1267:
  while1268:
    JR_LTEQF VGV_S3 15.0 and1270
    JR_GTF VGV_S2 15.0 or1269
  and1270:
    JR_GTEQF VGV_S3 15.0 endwhile1268
    JR_GTEQF VGV_S2 15.0 endwhile1268
  or1269:
  whilebody1268:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1271:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1272:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1273:
    JR_LTEQF VGV_S3 15.0 and1274
    JR_GTF VGV_S2 15.0 whilebody1268
  and1274:
    JR_GTEQF VGV_S3 15.0 and1275
    JR_LTF VGV_S2 15.0 whilebody1268
  and1275:
  endwhile1268:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.225 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 40.0 'true'

	DATA8 layer1277
	DATA8 nos1277
	DATA8 busy1277
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1277 nos1277
	JR_EQ8 0 nos1277 motornotbusy1277
  motorwaiting1277:
	OUTPUT_TEST layer1277 nos1277 busy1277
	JR_EQ8 busy1277 0 motornotbusy1277
	SLEEP
	JR motorwaiting1277
  motornotbusy1277:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1279
	DATA8 nos1279
	DATA8 busy1279
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1279 nos1279
	JR_EQ8 0 nos1279 motornotbusy1279
  motorwaiting1279:
	OUTPUT_TEST layer1279 nos1279 busy1279
	JR_EQ8 busy1279 0 motornotbusy1279
	SLEEP
	JR motorwaiting1279
  motornotbusy1279:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1280:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1281:
  while1282:
    JR_LTEQF VGV_S2 15.0 endwhile1282
  whilebody1282:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1283:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1284:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1282
  endwhile1282:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1287:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1288:
  while1289:
    JR_GTEQF VGV_S2 55.0 endwhile1289
  whilebody1289:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1290:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1291:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1289
  endwhile1289:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer1294
	DATA8 nos1294
	DATA8 busy1294
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1294 nos1294
	JR_EQ8 0 nos1294 motornotbusy1294
  motorwaiting1294:
	OUTPUT_TEST layer1294 nos1294 busy1294
	JR_EQ8 busy1294 0 motornotbusy1294
	SLEEP
	JR motorwaiting1294
  motornotbusy1294:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1296
	DATA8 nos1296
	DATA8 busy1296
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1296 nos1296
	JR_EQ8 0 nos1296 motornotbusy1296
  motorwaiting1296:
	OUTPUT_TEST layer1296 nos1296 busy1296
	JR_EQ8 busy1296 0 motornotbusy1296
	SLEEP
	JR motorwaiting1296
  motornotbusy1296:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1297:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1298:
  while1299:
    JR_LTEQF VGV_S3 15.0 endwhile1299
  whilebody1299:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1300:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1301:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1299
  endwhile1299:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1304:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1305:
  while1306:
    JR_GTEQF VGV_S3 60.0 endwhile1306
  whilebody1306:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1307:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1308:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1306
  endwhile1306:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1311:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1312:
  while1313:
    JR_LTEQF VGV_S2 9.0 and1315
    JR_GTF VGV_S3 9.0 or1314
  and1315:
    JR_GTEQF VGV_S2 9.0 and1316
    JR_GTF VGV_S3 9.0 or1314
  and1316:
    JR_LTEQF VGV_S2 9.0 endwhile1313
    JR_GTEQF VGV_S3 9.0 endwhile1313
  or1314:
  whilebody1313:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1317:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1318:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1320
    JR_GTF VGV_S3 9.0 whilebody1313
  and1320:
    JR_GTEQF VGV_S2 9.0 and1321
    JR_GTF VGV_S3 9.0 whilebody1313
  and1321:
    JR_LTEQF VGV_S2 9.0 and1322
    JR_LTF VGV_S3 9.0 whilebody1313
  and1322:
  endwhile1313:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1323
	DATA8 nos1323
	DATA8 busy1323
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1323 nos1323
	JR_EQ8 0 nos1323 motornotbusy1323
  motorwaiting1323:
	OUTPUT_TEST layer1323 nos1323 busy1323
	JR_EQ8 busy1323 0 motornotbusy1323
	SLEEP
	JR motorwaiting1323
  motornotbusy1323:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1325
	DATA8 nos1325
	DATA8 busy1325
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1325 nos1325
	JR_EQ8 0 nos1325 motornotbusy1325
  motorwaiting1325:
	OUTPUT_TEST layer1325 nos1325 busy1325
	JR_EQ8 busy1325 0 motornotbusy1325
	SLEEP
	JR motorwaiting1325
  motornotbusy1325:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1327:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1328:
  while1329:
    JR_LTEQF VGV_S2 10.0 endwhile1329
  whilebody1329:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1330:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1331:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1329
  endwhile1329:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1333:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1334:
  while1335:
    JR_GTEQF VGV_S2 60.0 endwhile1335
  whilebody1335:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1336:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1337:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1335
  endwhile1335:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1340:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1341
	DATA8 nos1341
	DATA8 busy1341
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1341 nos1341
	JR_EQ8 0 nos1341 motornotbusy1341
  motorwaiting1341:
	OUTPUT_TEST layer1341 nos1341 busy1341
	JR_EQ8 busy1341 0 motornotbusy1341
	SLEEP
	JR motorwaiting1341
  motornotbusy1341:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1343
	DATA8 nos1343
	DATA8 busy1343
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1343 nos1343
	JR_EQ8 0 nos1343 motornotbusy1343
  motorwaiting1343:
	OUTPUT_TEST layer1343 nos1343 busy1343
	JR_EQ8 busy1343 0 motornotbusy1343
	SLEEP
	JR motorwaiting1343
  motornotbusy1343:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1345:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1346:
  while1347:
    JR_LTEQF VGV_S3 8.0 endwhile1347
  whilebody1347:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1348:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1349:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1347
  endwhile1347:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1351:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1352:
  while1353:
    JR_GTEQF VGV_S3 55.0 endwhile1353
  whilebody1353:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1354:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1355:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1353
  endwhile1353:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1358
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1358
    JR_NEQ32 0 tmp1358 alreadylaunched1358
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1358:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1359:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1360:
  while1361:
    JR_LTEQF VGV_S3 15.0 and1363
    JR_GTF VGV_S2 15.0 or1362
  and1363:
    JR_GTEQF VGV_S3 15.0 and1364
    JR_GTF VGV_S2 15.0 or1362
  and1364:
    JR_LTEQF VGV_S3 15.0 endwhile1361
    JR_GTEQF VGV_S2 15.0 endwhile1361
  or1362:
  whilebody1361:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1365:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1366:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1367:
    JR_LTEQF VGV_S3 15.0 and1368
    JR_GTF VGV_S2 15.0 whilebody1361
  and1368:
    JR_GTEQF VGV_S3 15.0 and1369
    JR_GTF VGV_S2 15.0 whilebody1361
  and1369:
    JR_LTEQF VGV_S3 15.0 and1370
    JR_LTF VGV_S2 15.0 whilebody1361
  and1370:
  endwhile1361:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1372
	DATA8 nos1372
	DATA8 busy1372
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1372 nos1372
	JR_EQ8 0 nos1372 motornotbusy1372
  motorwaiting1372:
	OUTPUT_TEST layer1372 nos1372 busy1372
	JR_EQ8 busy1372 0 motornotbusy1372
	SLEEP
	JR motorwaiting1372
  motornotbusy1372:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1373
	DATA8 nos1373
	DATA8 busy1373
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1373 nos1373
	JR_EQ8 0 nos1373 motornotbusy1373
  motorwaiting1373:
	OUTPUT_TEST layer1373 nos1373 busy1373
	JR_EQ8 busy1373 0 motornotbusy1373
	SLEEP
	JR motorwaiting1373
  motornotbusy1373:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1376:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1377:
  while1378:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1378
  whilebody1378:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1380:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1381:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1382:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1378
  endwhile1378:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1386
	MOVEF_32 500.0 milliseconds1386
	DATA32 timer1386
	TIMER_WAIT milliseconds1386 timer1386
	TIMER_READY timer1386
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1388
	DATA8 nos1388
	DATA8 busy1388
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1388 nos1388
	JR_EQ8 0 nos1388 motornotbusy1388
  motorwaiting1388:
	OUTPUT_TEST layer1388 nos1388 busy1388
	JR_EQ8 busy1388 0 motornotbusy1388
	SLEEP
	JR motorwaiting1388
  motornotbusy1388:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -80.0
    DATA32 milliseconds1390
	MOVEF_32 2000.0 milliseconds1390
	DATA32 timer1390
	TIMER_WAIT milliseconds1390 timer1390
	TIMER_READY timer1390
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1392
	DATA8 nos1392
	DATA8 busy1392
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1392 nos1392
	JR_EQ8 0 nos1392 motornotbusy1392
  motorwaiting1392:
	OUTPUT_TEST layer1392 nos1392 busy1392
	JR_EQ8 busy1392 0 motornotbusy1392
	SLEEP
	JR motorwaiting1392
  motornotbusy1392:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1393
	DATA8 nos1393
	DATA8 busy1393
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1393 nos1393
	JR_EQ8 0 nos1393 motornotbusy1393
  motorwaiting1393:
	OUTPUT_TEST layer1393 nos1393 busy1393
	JR_EQ8 busy1393 0 motornotbusy1393
	SLEEP
	JR motorwaiting1393
  motornotbusy1393:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1394
	DATA8 nos1394
	DATA8 busy1394
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1394 nos1394
	JR_EQ8 0 nos1394 motornotbusy1394
  motorwaiting1394:
	OUTPUT_TEST layer1394 nos1394 busy1394
	JR_EQ8 busy1394 0 motornotbusy1394
	SLEEP
	JR motorwaiting1394
  motornotbusy1394:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1395:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1396
	DATA8 nos1396
	DATA8 busy1396
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1396 nos1396
	JR_EQ8 0 nos1396 motornotbusy1396
  motorwaiting1396:
	OUTPUT_TEST layer1396 nos1396 busy1396
	JR_EQ8 busy1396 0 motornotbusy1396
	SLEEP
	JR motorwaiting1396
  motornotbusy1396:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1397
	DATA8 nos1397
	DATA8 busy1397
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1397 nos1397
	JR_EQ8 0 nos1397 motornotbusy1397
  motorwaiting1397:
	OUTPUT_TEST layer1397 nos1397 busy1397
	JR_EQ8 busy1397 0 motornotbusy1397
	SLEEP
	JR motorwaiting1397
  motornotbusy1397:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1399:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1400:
  while1401:
    JR_LTEQF VGV_S2 15.0 endwhile1401
  whilebody1401:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1402:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1403:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1401
  endwhile1401:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1406:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1407:
  while1408:
    JR_GTEQF VGV_S2 40.0 endwhile1408
  whilebody1408:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1409:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1410:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 40.0 whilebody1408
  endwhile1408:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1413:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1414:
  while1415:
    JR_LTEQF VGV_S3 15.0 and1417
    JR_GTF VGV_S2 15.0 or1416
  and1417:
    JR_GTEQF VGV_S3 15.0 endwhile1415
    JR_GTEQF VGV_S2 15.0 endwhile1415
  or1416:
  whilebody1415:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1418:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1419:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1420:
    JR_LTEQF VGV_S3 15.0 and1421
    JR_GTF VGV_S2 15.0 whilebody1415
  and1421:
    JR_GTEQF VGV_S3 15.0 and1422
    JR_LTF VGV_S2 15.0 whilebody1415
  and1422:
  endwhile1415:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1424:
    CALL MOTOR.RESETCOUNT 'bc'
  while1426:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1430
    DATA8 flag1430
    DIVF F.1 2.0 tmpf1430
    CP_EQF 0.0 2.0 flag1430
    SELECTF flag1430 0.0 tmpf1430 F.0

    JR_GTEQF F.0 200.0 endwhile1426
  whilebody1426:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1431:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1435
    DATA8 flag1435
    DIVF F.1 2.0 tmpf1435
    CP_EQF 0.0 2.0 flag1435
    SELECTF flag1435 0.0 tmpf1435 F.0

    JR_LTF F.0 200.0 whilebody1426
  endwhile1426:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1437:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1438:
    MOVEF_F 1.0 VGV_I
  for1439:
    JR_GTF VGV_I 1.0 endfor1439
  forbody1439:
    MOVEF_F 0.33 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1440:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1441:
  while1442:
    JR_LTEQF VGV_S3 15.0 and1444
    JR_GTF VGV_S2 15.0 or1443
  and1444:
    JR_GTEQF VGV_S3 15.0 endwhile1442
    JR_GTEQF VGV_S2 15.0 endwhile1442
  or1443:
  whilebody1442:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1445:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1446:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1447:
    JR_LTEQF VGV_S3 15.0 and1448
    JR_GTF VGV_S2 15.0 whilebody1442
  and1448:
    JR_GTEQF VGV_S3 15.0 and1449
    JR_LTF VGV_S2 15.0 whilebody1442
  and1449:
  endwhile1442:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1451
	DATA8 nos1451
	DATA8 busy1451
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1451 nos1451
	JR_EQ8 0 nos1451 motornotbusy1451
  motorwaiting1451:
	OUTPUT_TEST layer1451 nos1451 busy1451
	JR_EQ8 busy1451 0 motornotbusy1451
	SLEEP
	JR motorwaiting1451
  motornotbusy1451:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1439
  endfor1439:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 20.0 'true'

	DATA8 layer1453
	DATA8 nos1453
	DATA8 busy1453
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1453 nos1453
	JR_EQ8 0 nos1453 motornotbusy1453
  motorwaiting1453:
	OUTPUT_TEST layer1453 nos1453 busy1453
	JR_EQ8 busy1453 0 motornotbusy1453
	SLEEP
	JR motorwaiting1453
  motornotbusy1453:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1455
	DATA8 nos1455
	DATA8 busy1455
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1455 nos1455
	JR_EQ8 0 nos1455 motornotbusy1455
  motorwaiting1455:
	OUTPUT_TEST layer1455 nos1455 busy1455
	JR_EQ8 busy1455 0 motornotbusy1455
	SLEEP
	JR motorwaiting1455
  motornotbusy1455:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1456
	DATA8 nos1456
	DATA8 busy1456
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1456 nos1456
	JR_EQ8 0 nos1456 motornotbusy1456
  motorwaiting1456:
	OUTPUT_TEST layer1456 nos1456 busy1456
	JR_EQ8 busy1456 0 motornotbusy1456
	SLEEP
	JR motorwaiting1456
  motornotbusy1456:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 90.0 'true'

	DATA8 layer1457
	DATA8 nos1457
	DATA8 busy1457
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1457 nos1457
	JR_EQ8 0 nos1457 motornotbusy1457
  motorwaiting1457:
	OUTPUT_TEST layer1457 nos1457 busy1457
	JR_EQ8 busy1457 0 motornotbusy1457
	SLEEP
	JR motorwaiting1457
  motornotbusy1457:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1459
	MOVEF_32 500.0 milliseconds1459
	DATA32 timer1459
	TIMER_WAIT milliseconds1459 timer1459
	TIMER_READY timer1459
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 65.0 'true'

	DATA8 layer1461
	DATA8 nos1461
	DATA8 busy1461
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1461 nos1461
	JR_EQ8 0 nos1461 motornotbusy1461
  motorwaiting1461:
	OUTPUT_TEST layer1461 nos1461 busy1461
	JR_EQ8 busy1461 0 motornotbusy1461
	SLEEP
	JR motorwaiting1461
  motornotbusy1461:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 365.0 'true'

	DATA8 layer1462
	DATA8 nos1462
	DATA8 busy1462
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1462 nos1462
	JR_EQ8 0 nos1462 motornotbusy1462
  motorwaiting1462:
	OUTPUT_TEST layer1462 nos1462 busy1462
	JR_EQ8 busy1462 0 motornotbusy1462
	SLEEP
	JR motorwaiting1462
  motornotbusy1462:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1463:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1464:
  while1465:
    JR_LTEQF VGV_S3 10.0 and1467
    JR_GTF VGV_S2 10.0 or1466
  and1467:
    JR_GTEQF VGV_S3 10.0 and1468
    JR_GTF VGV_S2 10.0 or1466
  and1468:
    JR_LTEQF VGV_S3 6.0 endwhile1465
    JR_GTEQF VGV_S2 6.0 endwhile1465
  or1466:
  whilebody1465:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1469:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1470:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1472
    JR_GTF VGV_S2 10.0 whilebody1465
  and1472:
    JR_GTEQF VGV_S3 10.0 and1473
    JR_GTF VGV_S2 10.0 whilebody1465
  and1473:
    JR_LTEQF VGV_S3 6.0 and1474
    JR_LTF VGV_S2 6.0 whilebody1465
  and1474:
  endwhile1465:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1476
	DATA8 nos1476
	DATA8 busy1476
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1476 nos1476
	JR_EQ8 0 nos1476 motornotbusy1476
  motorwaiting1476:
	OUTPUT_TEST layer1476 nos1476 busy1476
	JR_EQ8 busy1476 0 motornotbusy1476
	SLEEP
	JR motorwaiting1476
  motornotbusy1476:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1478:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1479:
  while1480:
    JR_LTEQF VGV_S3 10.0 endwhile1480
  whilebody1480:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1481:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1482:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1480
  endwhile1480:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1485:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1486:
  while1487:
    JR_GTEQF VGV_S3 60.0 endwhile1487
  whilebody1487:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1488:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1489:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1487
  endwhile1487:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1492
	MOVEF_32 100.0 milliseconds1492
	DATA32 timer1492
	TIMER_WAIT milliseconds1492 timer1492
	TIMER_READY timer1492
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    MOVEF_F 0.33 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1493:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1494:
  while1495:
    JR_LTEQF VGV_S3 15.0 and1497
    JR_GTF VGV_S2 15.0 or1496
  and1497:
    JR_GTEQF VGV_S3 15.0 endwhile1495
    JR_GTEQF VGV_S2 15.0 endwhile1495
  or1496:
  whilebody1495:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1498:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1499:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1500:
    JR_LTEQF VGV_S3 15.0 and1501
    JR_GTF VGV_S2 15.0 whilebody1495
  and1501:
    JR_GTEQF VGV_S3 15.0 and1502
    JR_LTF VGV_S2 15.0 whilebody1495
  and1502:
  endwhile1495:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_PR_0:CALLSUB1504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1504:
    CALL MOTOR.RESETCOUNT 'bc'
  while1506:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1510
    DATA8 flag1510
    DIVF F.1 2.0 tmpf1510
    CP_EQF 0.0 2.0 flag1510
    SELECTF flag1510 0.0 tmpf1510 F.0

    JR_GTEQF F.0 200.0 endwhile1506
  whilebody1506:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1511:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1515
    DATA8 flag1515
    DIVF F.1 2.0 tmpf1515
    CP_EQF 0.0 2.0 flag1515
    SELECTF flag1515 0.0 tmpf1515 F.0

    JR_LTF F.0 200.0 whilebody1506
  endwhile1506:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1517:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1518:
    MOVEF_F 1.0 VGV_I
  for1519:
    JR_GTF VGV_I 2.0 endfor1519
  forbody1519:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1520
	DATA8 nos1520
	DATA8 busy1520
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1520 nos1520
	JR_EQ8 0 nos1520 motornotbusy1520
  motorwaiting1520:
	OUTPUT_TEST layer1520 nos1520 busy1520
	JR_EQ8 busy1520 0 motornotbusy1520
	SLEEP
	JR motorwaiting1520
  motornotbusy1520:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1521:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1522:
  while1523:
    JR_LTEQF VGV_S3 15.0 and1525
    JR_GTF VGV_S2 15.0 or1524
  and1525:
    JR_GTEQF VGV_S3 15.0 endwhile1523
    JR_GTEQF VGV_S2 15.0 endwhile1523
  or1524:
  whilebody1523:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1526:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1527:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1528:
    JR_LTEQF VGV_S3 15.0 and1529
    JR_GTF VGV_S2 15.0 whilebody1523
  and1529:
    JR_GTEQF VGV_S3 15.0 and1530
    JR_LTF VGV_S2 15.0 whilebody1523
  and1530:
  endwhile1523:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1519
  endfor1519:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1533
	DATA8 nos1533
	DATA8 busy1533
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1533 nos1533
	JR_EQ8 0 nos1533 motornotbusy1533
  motorwaiting1533:
	OUTPUT_TEST layer1533 nos1533 busy1533
	JR_EQ8 busy1533 0 motornotbusy1533
	SLEEP
	JR motorwaiting1533
  motornotbusy1533:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1535:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1536:
    MOVEF_F 80.0 VGV_J
  while1537:
    JR_LTEQF VGV_S3 10.0 endwhile1537
  whilebody1537:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1538:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1539:
    JR_LTEQF VGV_J 30.0 else1540_1
    SUBF VGV_J 0.1 VGV_J
  else1540_1:
  endif1540:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1537
  endwhile1537:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1544:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1545:
    MOVEF_F 80.0 VGV_J
  while1546:
    JR_GTEQF VGV_S3 15.0 endwhile1546
  whilebody1546:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1547:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1548:
    JR_LTEQF VGV_J 30.0 else1549_1
    SUBF VGV_J 0.1 VGV_J
  else1549_1:
  endif1549:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1546
  endwhile1546:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1554:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1558
    DATA8 flag1558
    DIVF F.1 2.0 tmpf1558
    CP_EQF 0.0 2.0 flag1558
    SELECTF flag1558 0.0 tmpf1558 F.0

    JR_GTEQF F.0 50.0 endwhile1554
  whilebody1554:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1559:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1560:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1561:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1562:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1564
    DATA8 flag1564
    DIVF F.1 2.0 tmpf1564
    CP_EQF 0.0 2.0 flag1564
    SELECTF flag1564 0.0 tmpf1564 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1576
    DATA8 flag1576
    DIVF F.1 2.0 tmpf1576
    CP_EQF 0.0 2.0 flag1576
    SELECTF flag1576 0.0 tmpf1576 F.0

    JR_LTF F.0 50.0 whilebody1554
  endwhile1554:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 18.0 950.0 'true'

	DATA8 layer1578
	DATA8 nos1578
	DATA8 busy1578
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1578 nos1578
	JR_EQ8 0 nos1578 motornotbusy1578
  motorwaiting1578:
	OUTPUT_TEST layer1578 nos1578 busy1578
	JR_EQ8 busy1578 0 motornotbusy1578
	SLEEP
	JR motorwaiting1578
  motornotbusy1578:
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 -18.0 40.0 'true'

	DATA8 layer1579
	DATA8 nos1579
	DATA8 busy1579
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1579 nos1579
	JR_EQ8 0 nos1579 motornotbusy1579
  motorwaiting1579:
	OUTPUT_TEST layer1579 nos1579 busy1579
	JR_EQ8 busy1579 0 motornotbusy1579
	SLEEP
	JR motorwaiting1579
  motornotbusy1579:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1581
	MOVEF_32 500.0 milliseconds1581
	DATA32 timer1581
	TIMER_WAIT milliseconds1581 timer1581
	TIMER_READY timer1581
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1584:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1588
    DATA8 flag1588
    DIVF F.1 2.0 tmpf1588
    CP_EQF 0.0 2.0 flag1588
    SELECTF flag1588 0.0 tmpf1588 F.0

    JR_LTEQF F.0 -260.0 endwhile1584
  whilebody1584:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1593
    DATA8 flag1593
    DIVF F.1 2.0 tmpf1593
    CP_EQF 0.0 2.0 flag1593
    SELECTF flag1593 0.0 tmpf1593 F.0

    JR_GTF F.0 -260.0 whilebody1584
  endwhile1584:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1595
	DATA8 nos1595
	DATA8 busy1595
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1595 nos1595
	JR_EQ8 0 nos1595 motornotbusy1595
  motorwaiting1595:
	OUTPUT_TEST layer1595 nos1595 busy1595
	JR_EQ8 busy1595 0 motornotbusy1595
	SLEEP
	JR motorwaiting1595
  motornotbusy1595:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1597:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1598:
  while1599:
    JR_LTEQF VGV_S3 10.0 and1601
    JR_GTF VGV_S2 10.0 or1600
  and1601:
    JR_LTEQF VGV_S3 10.0 and1602
    JR_LTF VGV_S2 10.0 or1600
  and1602:
    JR_GTEQF VGV_S3 10.0 endwhile1599
    JR_LTEQF VGV_S2 10.0 endwhile1599
  or1600:
  whilebody1599:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1603:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1604:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1606
    JR_GTF VGV_S2 10.0 whilebody1599
  and1606:
    JR_LTEQF VGV_S3 10.0 and1607
    JR_LTF VGV_S2 10.0 whilebody1599
  and1607:
    JR_GTEQF VGV_S3 10.0 and1608
    JR_GTF VGV_S2 10.0 whilebody1599
  and1608:
  endwhile1599:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1610
	DATA8 nos1610
	DATA8 busy1610
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1610 nos1610
	JR_EQ8 0 nos1610 motornotbusy1610
  motorwaiting1610:
	OUTPUT_TEST layer1610 nos1610 busy1610
	JR_EQ8 busy1610 0 motornotbusy1610
	SLEEP
	JR motorwaiting1610
  motornotbusy1610:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1611:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1612:
  while1613:
    JR_LTEQF VGV_S3 10.0 endwhile1613
  whilebody1613:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1614:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1615:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1613
  endwhile1613:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1617:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1618:
  while1619:
    JR_GTEQF VGV_S3 15.0 endwhile1619
  whilebody1619:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1620:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1621:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1619
  endwhile1619:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    MOVEF_F 0.27 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1624:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1625:
  while1626:
    JR_LTEQF VGV_S3 15.0 and1628
    JR_GTF VGV_S2 15.0 or1627
  and1628:
    JR_GTEQF VGV_S3 15.0 endwhile1626
    JR_GTEQF VGV_S2 15.0 endwhile1626
  or1627:
  whilebody1626:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1629:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1630:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1631:
    JR_LTEQF VGV_S3 15.0 and1632
    JR_GTF VGV_S2 15.0 whilebody1626
  and1632:
    JR_GTEQF VGV_S3 15.0 and1633
    JR_LTF VGV_S2 15.0 whilebody1626
  and1633:
  endwhile1626:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1635
	DATA8 nos1635
	DATA8 busy1635
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1635 nos1635
	JR_EQ8 0 nos1635 motornotbusy1635
  motorwaiting1635:
	OUTPUT_TEST layer1635 nos1635 busy1635
	JR_EQ8 busy1635 0 motornotbusy1635
	SLEEP
	JR motorwaiting1635
  motornotbusy1635:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1636:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1637:
  while1638:
    JR_LTEQF VGV_S3 15.0 endwhile1638
  whilebody1638:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1639:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1640:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1638
  endwhile1638:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1643:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1644:
  while1645:
    JR_GTEQF VGV_S3 15.0 endwhile1645
  whilebody1645:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1646:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1647:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1645
  endwhile1645:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1651:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile1651
  whilebody1651:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1653:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody1651
  endwhile1651:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1656:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1657:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1658:
    JR_GTF VGV_I 3.0 endfor1658
  forbody1658:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1659:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1660:
  while1661:
    JR_LTEQF VGV_S3 15.0 and1663
    JR_GTF VGV_S2 15.0 or1662
  and1663:
    JR_GTEQF VGV_S3 15.0 endwhile1661
    JR_GTEQF VGV_S2 15.0 endwhile1661
  or1662:
  whilebody1661:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1664:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1665:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1666:
    JR_LTEQF VGV_S3 15.0 and1667
    JR_GTF VGV_S2 15.0 whilebody1661
  and1667:
    JR_GTEQF VGV_S3 15.0 and1668
    JR_LTF VGV_S2 15.0 whilebody1661
  and1668:
  endwhile1661:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1670
	DATA8 nos1670
	DATA8 busy1670
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1670 nos1670
	JR_EQ8 0 nos1670 motornotbusy1670
  motorwaiting1670:
	OUTPUT_TEST layer1670 nos1670 busy1670
	JR_EQ8 busy1670 0 motornotbusy1670
	SLEEP
	JR motorwaiting1670
  motornotbusy1670:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1658
  endfor1658:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 150.0 'true'

	DATA8 layer1673
	DATA8 nos1673
	DATA8 busy1673
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1673 nos1673
	JR_EQ8 0 nos1673 motornotbusy1673
  motorwaiting1673:
	OUTPUT_TEST layer1673 nos1673 busy1673
	JR_EQ8 busy1673 0 motornotbusy1673
	SLEEP
	JR motorwaiting1673
  motornotbusy1673:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1674
	DATA8 nos1674
	DATA8 busy1674
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1674 nos1674
	JR_EQ8 0 nos1674 motornotbusy1674
  motorwaiting1674:
	OUTPUT_TEST layer1674 nos1674 busy1674
	JR_EQ8 busy1674 0 motornotbusy1674
	SLEEP
	JR motorwaiting1674
  motornotbusy1674:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1676
	MOVEF_32 500.0 milliseconds1676
	DATA32 timer1676
	TIMER_WAIT milliseconds1676 timer1676
	TIMER_READY timer1676
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 80.0 'true'

	DATA8 layer1678
	DATA8 nos1678
	DATA8 busy1678
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1678 nos1678
	JR_EQ8 0 nos1678 motornotbusy1678
  motorwaiting1678:
	OUTPUT_TEST layer1678 nos1678 busy1678
	JR_EQ8 busy1678 0 motornotbusy1678
	SLEEP
	JR motorwaiting1678
  motornotbusy1678:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 380.0 'true'

	DATA8 layer1679
	DATA8 nos1679
	DATA8 busy1679
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1679 nos1679
	JR_EQ8 0 nos1679 motornotbusy1679
  motorwaiting1679:
	OUTPUT_TEST layer1679 nos1679 busy1679
	JR_EQ8 busy1679 0 motornotbusy1679
	SLEEP
	JR motorwaiting1679
  motornotbusy1679:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer1680
	DATA8 nos1680
	DATA8 busy1680
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1680 nos1680
	JR_EQ8 0 nos1680 motornotbusy1680
  motorwaiting1680:
	OUTPUT_TEST layer1680 nos1680 busy1680
	JR_EQ8 busy1680 0 motornotbusy1680
	SLEEP
	JR motorwaiting1680
  motornotbusy1680:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1681
	DATA8 nos1681
	DATA8 busy1681
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1681 nos1681
	JR_EQ8 0 nos1681 motornotbusy1681
  motorwaiting1681:
	OUTPUT_TEST layer1681 nos1681 busy1681
	JR_EQ8 busy1681 0 motornotbusy1681
	SLEEP
	JR motorwaiting1681
  motornotbusy1681:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1682
	DATA8 nos1682
	DATA8 busy1682
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1682 nos1682
	JR_EQ8 0 nos1682 motornotbusy1682
  motorwaiting1682:
	OUTPUT_TEST layer1682 nos1682 busy1682
	JR_EQ8 busy1682 0 motornotbusy1682
	SLEEP
	JR motorwaiting1682
  motornotbusy1682:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1683:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1684:
  while1685:
    JR_LTEQF VGV_S3 10.0 and1687
    JR_GTF VGV_S2 10.0 or1686
  and1687:
    JR_GTEQF VGV_S3 10.0 and1688
    JR_GTF VGV_S2 10.0 or1686
  and1688:
    JR_LTEQF VGV_S3 10.0 endwhile1685
    JR_GTEQF VGV_S2 10.0 endwhile1685
  or1686:
  whilebody1685:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1689:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1690:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1692
    JR_GTF VGV_S2 10.0 whilebody1685
  and1692:
    JR_GTEQF VGV_S3 10.0 and1693
    JR_GTF VGV_S2 10.0 whilebody1685
  and1693:
    JR_LTEQF VGV_S3 10.0 and1694
    JR_LTF VGV_S2 10.0 whilebody1685
  and1694:
  endwhile1685:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1696
	DATA8 nos1696
	DATA8 busy1696
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1696 nos1696
	JR_EQ8 0 nos1696 motornotbusy1696
  motorwaiting1696:
	OUTPUT_TEST layer1696 nos1696 busy1696
	JR_EQ8 busy1696 0 motornotbusy1696
	SLEEP
	JR motorwaiting1696
  motornotbusy1696:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1698
	DATA8 nos1698
	DATA8 busy1698
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1698 nos1698
	JR_EQ8 0 nos1698 motornotbusy1698
  motorwaiting1698:
	OUTPUT_TEST layer1698 nos1698 busy1698
	JR_EQ8 busy1698 0 motornotbusy1698
	SLEEP
	JR motorwaiting1698
  motornotbusy1698:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1699:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1700:
  while1701:
    JR_LTEQF VGV_S3 15.0 endwhile1701
  whilebody1701:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1702:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1703:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1701
  endwhile1701:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1706:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1707:
  while1708:
    JR_GTEQF VGV_S3 60.0 endwhile1708
  whilebody1708:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1709:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1710:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1708
  endwhile1708:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1713:
    JR_GTF VGV_I 1.0 endfor1713
  forbody1713:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1714:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1715:
  while1716:
    JR_LTEQF VGV_S3 10.0 and1718
    JR_GTF VGV_S2 10.0 or1717
  and1718:
    JR_GTEQF VGV_S3 10.0 endwhile1716
    JR_GTEQF VGV_S2 10.0 endwhile1716
  or1717:
  whilebody1716:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1719:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1720:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1721:
    JR_LTEQF VGV_S3 10.0 and1722
    JR_GTF VGV_S2 10.0 whilebody1716
  and1722:
    JR_GTEQF VGV_S3 10.0 and1723
    JR_LTF VGV_S2 10.0 whilebody1716
  and1723:
  endwhile1716:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1725
	DATA8 nos1725
	DATA8 busy1725
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1725 nos1725
	JR_EQ8 0 nos1725 motornotbusy1725
  motorwaiting1725:
	OUTPUT_TEST layer1725 nos1725 busy1725
	JR_EQ8 busy1725 0 motornotbusy1725
	SLEEP
	JR motorwaiting1725
  motornotbusy1725:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1713
  endfor1713:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1728:
    CALL MOTOR.RESETCOUNT 'bc'
  while1730:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1734
    DATA8 flag1734
    DIVF F.1 2.0 tmpf1734
    CP_EQF 0.0 2.0 flag1734
    SELECTF flag1734 0.0 tmpf1734 F.0

    JR_GTEQF F.0 220.0 endwhile1730
  whilebody1730:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1735:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1739
    DATA8 flag1739
    DIVF F.1 2.0 tmpf1739
    CP_EQF 0.0 2.0 flag1739
    SELECTF flag1739 0.0 tmpf1739 F.0

    JR_LTF F.0 220.0 whilebody1730
  endwhile1730:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1741
	MOVEF_32 100.0 milliseconds1741
	DATA32 timer1741
	TIMER_WAIT milliseconds1741 timer1741
	TIMER_READY timer1741
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1743
	MOVEF_32 500.0 milliseconds1743
	DATA32 timer1743
	TIMER_WAIT milliseconds1743 timer1743
	TIMER_READY timer1743
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1745:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1746:
  while1747:
    JR_LTEQF VGV_S2 9.0 and1749
    JR_GTF VGV_S3 9.0 or1748
  and1749:
    JR_GTEQF VGV_S2 9.0 and1750
    JR_GTF VGV_S3 9.0 or1748
  and1750:
    JR_LTEQF VGV_S2 9.0 endwhile1747
    JR_GTEQF VGV_S3 9.0 endwhile1747
  or1748:
  whilebody1747:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1751:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1752:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1754
    JR_GTF VGV_S3 9.0 whilebody1747
  and1754:
    JR_GTEQF VGV_S2 9.0 and1755
    JR_GTF VGV_S3 9.0 whilebody1747
  and1755:
    JR_LTEQF VGV_S2 9.0 and1756
    JR_LTF VGV_S3 9.0 whilebody1747
  and1756:
  endwhile1747:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1757
	DATA8 nos1757
	DATA8 busy1757
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1757 nos1757
	JR_EQ8 0 nos1757 motornotbusy1757
  motorwaiting1757:
	OUTPUT_TEST layer1757 nos1757 busy1757
	JR_EQ8 busy1757 0 motornotbusy1757
	SLEEP
	JR motorwaiting1757
  motornotbusy1757:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1759
	DATA8 nos1759
	DATA8 busy1759
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1759 nos1759
	JR_EQ8 0 nos1759 motornotbusy1759
  motorwaiting1759:
	OUTPUT_TEST layer1759 nos1759 busy1759
	JR_EQ8 busy1759 0 motornotbusy1759
	SLEEP
	JR motorwaiting1759
  motornotbusy1759:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1761:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1762:
  while1763:
    JR_LTEQF VGV_S2 10.0 endwhile1763
  whilebody1763:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1764:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1765:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1763
  endwhile1763:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1767:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1768:
  while1769:
    JR_GTEQF VGV_S2 60.0 endwhile1769
  whilebody1769:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1770:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1771:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1769
  endwhile1769:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1774
    DATA8 flag1774
    DIVF 360.0 VGV_L tmpf1774
    CP_EQF 0.0 VGV_L flag1774
    SELECTF flag1774 0.0 tmpf1774 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1777:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1777
  whilebody1777:
    JR_GTEQF VGV_SPEED 60.0 else1779_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1779_1:
  endif1779:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1781:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1777
  endwhile1777:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1784:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1785:
    MOVEF_F 1350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1786:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1788
	DATA8 nos1788
	DATA8 busy1788
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1788 nos1788
	JR_EQ8 0 nos1788 motornotbusy1788
  motorwaiting1788:
	OUTPUT_TEST layer1788 nos1788 busy1788
	JR_EQ8 busy1788 0 motornotbusy1788
	SLEEP
	JR motorwaiting1788
  motornotbusy1788:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1789:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1790:
  while1791:
    JR_LTEQF VGV_S3 10.0 and1793
    JR_GTF VGV_S2 10.0 or1792
  and1793:
    JR_GTEQF VGV_S3 10.0 endwhile1791
    JR_GTEQF VGV_S2 10.0 endwhile1791
  or1792:
  whilebody1791:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1794:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1795:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1796:
    JR_LTEQF VGV_S3 10.0 and1797
    JR_GTF VGV_S2 10.0 whilebody1791
  and1797:
    JR_GTEQF VGV_S3 10.0 and1798
    JR_LTF VGV_S2 10.0 whilebody1791
  and1798:
  endwhile1791:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1800:
    CALL MOTOR.RESETCOUNT 'bc'
  while1802:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1806
    DATA8 flag1806
    DIVF F.1 2.0 tmpf1806
    CP_EQF 0.0 2.0 flag1806
    SELECTF flag1806 0.0 tmpf1806 F.0

    JR_GTEQF F.0 200.0 endwhile1802
  whilebody1802:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1807:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1808:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1809:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1813
    DATA8 flag1813
    DIVF F.1 2.0 tmpf1813
    CP_EQF 0.0 2.0 flag1813
    SELECTF flag1813 0.0 tmpf1813 F.0

    JR_LTF F.0 200.0 whilebody1802
  endwhile1802:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1815
	DATA8 nos1815
	DATA8 busy1815
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1815 nos1815
	JR_EQ8 0 nos1815 motornotbusy1815
  motorwaiting1815:
	OUTPUT_TEST layer1815 nos1815 busy1815
	JR_EQ8 busy1815 0 motornotbusy1815
	SLEEP
	JR motorwaiting1815
  motornotbusy1815:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1817
	MOVEF_32 500.0 milliseconds1817
	DATA32 timer1817
	TIMER_WAIT milliseconds1817 timer1817
	TIMER_READY timer1817
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1819
	DATA8 nos1819
	DATA8 busy1819
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1819 nos1819
	JR_EQ8 0 nos1819 motornotbusy1819
  motorwaiting1819:
	OUTPUT_TEST layer1819 nos1819 busy1819
	JR_EQ8 busy1819 0 motornotbusy1819
	SLEEP
	JR motorwaiting1819
  motornotbusy1819:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 35.0 'true'

	DATA8 layer1820
	DATA8 nos1820
	DATA8 busy1820
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1820 nos1820
	JR_EQ8 0 nos1820 motornotbusy1820
  motorwaiting1820:
	OUTPUT_TEST layer1820 nos1820 busy1820
	JR_EQ8 busy1820 0 motornotbusy1820
	SLEEP
	JR motorwaiting1820
  motornotbusy1820:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1821:
    DATA32 tmp1822
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1822
    JR_NEQ32 0 tmp1822 alreadylaunched1822
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1822:
    MOVEF_F 0.5 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1823:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1824:
  while1825:
    JR_LTEQF VGV_S3 15.0 and1827
    JR_GTF VGV_S2 15.0 or1826
  and1827:
    JR_GTEQF VGV_S3 15.0 endwhile1825
    JR_GTEQF VGV_S2 15.0 endwhile1825
  or1826:
  whilebody1825:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1828:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1829:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1830:
    JR_LTEQF VGV_S3 15.0 and1831
    JR_GTF VGV_S2 15.0 whilebody1825
  and1831:
    JR_GTEQF VGV_S3 15.0 and1832
    JR_LTF VGV_S2 15.0 whilebody1825
  and1832:
  endwhile1825:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1834
	DATA8 nos1834
	DATA8 busy1834
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1834 nos1834
	JR_EQ8 0 nos1834 motornotbusy1834
  motorwaiting1834:
	OUTPUT_TEST layer1834 nos1834 busy1834
	JR_EQ8 busy1834 0 motornotbusy1834
	SLEEP
	JR motorwaiting1834
  motornotbusy1834:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1835:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1836:
  while1837:
    JR_LTEQF VGV_S3 15.0 and1839
    JR_GTF VGV_S2 15.0 or1838
  and1839:
    JR_GTEQF VGV_S3 15.0 endwhile1837
    JR_GTEQF VGV_S2 15.0 endwhile1837
  or1838:
  whilebody1837:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1840:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1841:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1842:
    JR_LTEQF VGV_S3 15.0 and1843
    JR_GTF VGV_S2 15.0 whilebody1837
  and1843:
    JR_GTEQF VGV_S3 15.0 and1844
    JR_LTF VGV_S2 15.0 whilebody1837
  and1844:
  endwhile1837:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1846
	DATA8 nos1846
	DATA8 busy1846
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1846 nos1846
	JR_EQ8 0 nos1846 motornotbusy1846
  motorwaiting1846:
	OUTPUT_TEST layer1846 nos1846 busy1846
	JR_EQ8 busy1846 0 motornotbusy1846
	SLEEP
	JR motorwaiting1846
  motornotbusy1846:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer1847
	DATA8 nos1847
	DATA8 busy1847
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1847 nos1847
	JR_EQ8 0 nos1847 motornotbusy1847
  motorwaiting1847:
	OUTPUT_TEST layer1847 nos1847 busy1847
	JR_EQ8 busy1847 0 motornotbusy1847
	SLEEP
	JR motorwaiting1847
  motornotbusy1847:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1849:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1850:
  while1851:
    JR_LTEQF VGV_S2 12.0 endwhile1851
  whilebody1851:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1852:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1853 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1853:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 12.0 whilebody1851
  endwhile1851:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1856:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1857:
  while1858:
    JR_GTEQF VGV_S2 60.0 endwhile1858
  whilebody1858:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1859:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1860:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1858
  endwhile1858:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1864:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1868
    DATA8 flag1868
    DIVF F.1 2.0 tmpf1868
    CP_EQF 0.0 2.0 flag1868
    SELECTF flag1868 0.0 tmpf1868 F.0

    JR_GTEQF F.0 300.0 endwhile1864
  whilebody1864:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1869:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1870 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1870:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1871:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1875
    DATA8 flag1875
    DIVF F.1 2.0 tmpf1875
    CP_EQF 0.0 2.0 flag1875
    SELECTF flag1875 0.0 tmpf1875 F.0

    JR_LTF F.0 300.0 whilebody1864
  endwhile1864:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1877:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1878:
  while1879:
    JR_LTEQF VGV_S3 15.0 and1881
    JR_GTF VGV_S2 15.0 or1880
  and1881:
    JR_GTEQF VGV_S3 10.0 endwhile1879
    JR_GTEQF VGV_S2 15.0 endwhile1879
  or1880:
  whilebody1879:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1882:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1883:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1884:
    JR_LTEQF VGV_S3 15.0 and1885
    JR_GTF VGV_S2 15.0 whilebody1879
  and1885:
    JR_GTEQF VGV_S3 10.0 and1886
    JR_LTF VGV_S2 15.0 whilebody1879
  and1886:
  endwhile1879:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1888
	DATA8 no1888
	DATA8 mode81888
	
	MOVEF_8 1.0 no1888
	SUB8 no1888 1 no1888
	DIV8 no1888 4 layer1888
	MATH MOD8 no1888 4 no1888

	MOVEF_8 2.0 mode81888
	
	INPUT_DEVICE READY_RAW layer1888 no1888 0 mode81888 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1895
    DATA8 flag1895
    DIVF VGV_SRED 255.0 tmpf1895
    CP_EQF 0.0 255.0 flag1895
    SELECTF flag1895 0.0 tmpf1895 VGV_SRED

    DATAF tmpf1896
    DATA8 flag1896
    DIVF VGV_SGREEN 255.0 tmpf1896
    CP_EQF 0.0 255.0 flag1896
    SELECTF flag1896 0.0 tmpf1896 VGV_SGREEN

    DATAF tmpf1897
    DATA8 flag1897
    DIVF VGV_SBLUE 255.0 tmpf1897
    CP_EQF 0.0 255.0 flag1897
    SELECTF flag1897 0.0 tmpf1897 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1898_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1898_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1898
  else1898_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1898_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1898_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1898
  else1898_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1898_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1898_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1898_3:
  endif1898:
    JR_GTEQF VGV_SRED VGV_SGREEN else1899_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1899_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1899
  else1899_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1899_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1899_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1899
  else1899_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1899_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1899_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1899_3:
  endif1899:
    JR_NEQF VGV_MAX VGV_MIN else1900_1
    MOVEF_F 0.0 VGV_H
    JR endif1900
  else1900_1:
    JR_NEQF VGV_SRED VGV_MAX else1901_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1902_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1906
    DATA8 flag1906
    DIVF F.0 F.1 tmpf1906
    CP_EQF 0.0 F.1 flag1906
    SELECTF flag1906 0.0 tmpf1906 VGV_H

    JR endif1902
  else1902_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1910
    DATA8 flag1910
    DIVF F.1 F.2 tmpf1910
    CP_EQF 0.0 F.2 flag1910
    SELECTF flag1910 0.0 tmpf1910 F.0

    ADDF F.0 360.0 VGV_H
  else1902_2:
  endif1902:
    JR endif1901
  else1901_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1912_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1916
    DATA8 flag1916
    DIVF F.1 F.2 tmpf1916
    CP_EQF 0.0 F.2 flag1916
    SELECTF flag1916 0.0 tmpf1916 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1912
  else1912_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1921
    DATA8 flag1921
    DIVF F.1 F.2 tmpf1921
    CP_EQF 0.0 F.2 flag1921
    SELECTF flag1921 0.0 tmpf1921 F.0

    ADDF F.0 240.0 VGV_H
  else1912_2:
  endif1912:
  else1901_2:
  endif1901:
  else1900_2:
  endif1900:
    JR_NEQF VGV_MAX 0.0 else1923_1
    MOVEF_F 0.0 VGV_S
    JR endif1923
  else1923_1:
    DATAF tmpf1924
    DATA8 flag1924
    DIVF VGV_MIN VGV_MAX tmpf1924
    CP_EQF 0.0 VGV_MAX flag1924
    SELECTF flag1924 0.0 tmpf1924 F.0

    SUBF 1.0 F.0 VGV_S
  else1923_2:
  endif1923:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1933
	DATA8 no1933
	DATA8 mode81933
	
	MOVEF_8 1.0 no1933
	SUB8 no1933 1 no1933
	DIV8 no1933 4 layer1933
	MATH MOD8 no1933 4 no1933

	MOVEF_8 2.0 mode81933
	
	INPUT_DEVICE READY_RAW layer1933 no1933 0 mode81933 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1934:
    JR_GTF VGV_P 100.0 endfor1934
  forbody1934:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1935:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1934
  endfor1934:
    DATAF tmpf1940
    DATA8 flag1940
    DIVF VGV_X 100.0 tmpf1940
    CP_EQF 0.0 100.0 flag1940
    SELECTF flag1940 0.0 tmpf1940 VGV_H

    DATAF tmpf1941
    DATA8 flag1941
    DIVF VGV_Z 100.0 tmpf1941
    CP_EQF 0.0 100.0 flag1941
    SELECTF flag1941 0.0 tmpf1941 VGV_S

    DATAF tmpf1942
    DATA8 flag1942
    DIVF VGV_D 100.0 tmpf1942
    CP_EQF 0.0 100.0 flag1942
    SELECTF flag1942 0.0 tmpf1942 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1950
	DATA8 no1950
	DATA8 mode81950
	
	MOVEF_8 1.0 no1950
	SUB8 no1950 1 no1950
	DIV8 no1950 4 layer1950
	MATH MOD8 no1950 4 no1950

	MOVEF_8 2.0 mode81950
	
	INPUT_DEVICE READY_RAW layer1950 no1950 0 mode81950 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1957
    DATA8 flag1957
    DIVF VGV_SRED 255.0 tmpf1957
    CP_EQF 0.0 255.0 flag1957
    SELECTF flag1957 0.0 tmpf1957 VGV_SRED

    DATAF tmpf1958
    DATA8 flag1958
    DIVF VGV_SGREEN 255.0 tmpf1958
    CP_EQF 0.0 255.0 flag1958
    SELECTF flag1958 0.0 tmpf1958 VGV_SGREEN

    DATAF tmpf1959
    DATA8 flag1959
    DIVF VGV_SBLUE 255.0 tmpf1959
    CP_EQF 0.0 255.0 flag1959
    SELECTF flag1959 0.0 tmpf1959 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1960_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1960_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1960
  else1960_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1960_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1960_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1960
  else1960_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1960_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1960_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1960_3:
  endif1960:
    JR_GTEQF VGV_SRED VGV_SGREEN else1961_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1961_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1961
  else1961_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1961_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1961_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1961
  else1961_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1961_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1961_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1961_3:
  endif1961:
    JR_NEQF VGV_MAX VGV_MIN else1962_1
    MOVEF_F 0.0 VGV_H
    JR endif1962
  else1962_1:
    JR_NEQF VGV_SRED VGV_MAX else1963_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1964_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1968
    DATA8 flag1968
    DIVF F.0 F.1 tmpf1968
    CP_EQF 0.0 F.1 flag1968
    SELECTF flag1968 0.0 tmpf1968 VGV_H

    JR endif1964
  else1964_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1972
    DATA8 flag1972
    DIVF F.1 F.2 tmpf1972
    CP_EQF 0.0 F.2 flag1972
    SELECTF flag1972 0.0 tmpf1972 F.0

    ADDF F.0 360.0 VGV_H
  else1964_2:
  endif1964:
    JR endif1963
  else1963_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1974_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1978
    DATA8 flag1978
    DIVF F.1 F.2 tmpf1978
    CP_EQF 0.0 F.2 flag1978
    SELECTF flag1978 0.0 tmpf1978 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1974
  else1974_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1983
    DATA8 flag1983
    DIVF F.1 F.2 tmpf1983
    CP_EQF 0.0 F.2 flag1983
    SELECTF flag1983 0.0 tmpf1983 F.0

    ADDF F.0 240.0 VGV_H
  else1974_2:
  endif1974:
  else1963_2:
  endif1963:
  else1962_2:
  endif1962:
    JR_NEQF VGV_MAX 0.0 else1985_1
    MOVEF_F 0.0 VGV_S
    JR endif1985
  else1985_1:
    DATAF tmpf1986
    DATA8 flag1986
    DIVF VGV_MIN VGV_MAX tmpf1986
    CP_EQF 0.0 VGV_MAX flag1986
    SELECTF flag1986 0.0 tmpf1986 F.0

    SUBF 1.0 F.0 VGV_S
  else1985_2:
  endif1985:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1990
    JR_LTF VGV_H 360.0 or1989
  and1990:
    JR_LTF VGV_H 0.0 else1988_1
    JR_GTF VGV_H 20.0 else1988_1
    JR_LTEQF VGV_S 0.3 else1988_1
    JR_GTF VGV_S 1.0 else1988_1
    JR_LTEQF VGV_V 0.025 else1988_1
    JR_GTEQF VGV_V 0.1 else1988_1
  or1989:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1988
  else1988_1:
    JR_LTF VGV_H 20.0 else1988_2
    JR_GTEQF VGV_H 60.0 else1988_2
    JR_LTF VGV_S 0.4 else1988_2
    JR_LTEQF VGV_V 0.03 else1988_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1988
  else1988_2:
    MOVEF_F 6.0 VGV_COLOR
  else1988_3:
  endif1988:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1991
	DATA8 no1991
	DATA8 mode81991
	
	MOVEF_8 1.0 no1991
	SUB8 no1991 1 no1991
	DIV8 no1991 4 layer1991
	MATH MOD8 no1991 4 no1991

	MOVEF_8 2.0 mode81991
	
	INPUT_DEVICE READY_RAW layer1991 no1991 0 mode81991 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1998
    DATA8 flag1998
    DIVF VGV_SRED 255.0 tmpf1998
    CP_EQF 0.0 255.0 flag1998
    SELECTF flag1998 0.0 tmpf1998 VGV_SRED

    DATAF tmpf1999
    DATA8 flag1999
    DIVF VGV_SGREEN 255.0 tmpf1999
    CP_EQF 0.0 255.0 flag1999
    SELECTF flag1999 0.0 tmpf1999 VGV_SGREEN

    DATAF tmpf2000
    DATA8 flag2000
    DIVF VGV_SBLUE 255.0 tmpf2000
    CP_EQF 0.0 255.0 flag2000
    SELECTF flag2000 0.0 tmpf2000 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else2001_1
    JR_LTEQF VGV_SRED VGV_SBLUE else2001_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif2001
  else2001_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else2001_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else2001_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif2001
  else2001_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else2001_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else2001_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else2001_3:
  endif2001:
    JR_GTEQF VGV_SRED VGV_SGREEN else2002_1
    JR_GTEQF VGV_SRED VGV_SBLUE else2002_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif2002
  else2002_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else2002_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else2002_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif2002
  else2002_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else2002_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else2002_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else2002_3:
  endif2002:
    JR_NEQF VGV_MAX VGV_MIN else2003_1
    MOVEF_F 0.0 VGV_H
    JR endif2003
  else2003_1:
    JR_NEQF VGV_SRED VGV_MAX else2004_1
    JR_LTF VGV_SGREEN VGV_SBLUE else2005_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf2009
    DATA8 flag2009
    DIVF F.0 F.1 tmpf2009
    CP_EQF 0.0 F.1 flag2009
    SELECTF flag2009 0.0 tmpf2009 VGV_H

    JR endif2005
  else2005_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf2013
    DATA8 flag2013
    DIVF F.1 F.2 tmpf2013
    CP_EQF 0.0 F.2 flag2013
    SELECTF flag2013 0.0 tmpf2013 F.0

    ADDF F.0 360.0 VGV_H
  else2005_2:
  endif2005:
    JR endif2004
  else2004_1:
    JR_NEQF VGV_MAX VGV_SGREEN else2015_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf2019
    DATA8 flag2019
    DIVF F.1 F.2 tmpf2019
    CP_EQF 0.0 F.2 flag2019
    SELECTF flag2019 0.0 tmpf2019 F.0

    ADDF F.0 120.0 VGV_H
    JR endif2015
  else2015_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf2024
    DATA8 flag2024
    DIVF F.1 F.2 tmpf2024
    CP_EQF 0.0 F.2 flag2024
    SELECTF flag2024 0.0 tmpf2024 F.0

    ADDF F.0 240.0 VGV_H
  else2015_2:
  endif2015:
  else2004_2:
  endif2004:
  else2003_2:
  endif2003:
    JR_NEQF VGV_MAX 0.0 else2026_1
    MOVEF_F 0.0 VGV_S
    JR endif2026
  else2026_1:
    DATAF tmpf2027
    DATA8 flag2027
    DIVF VGV_MIN VGV_MAX tmpf2027
    CP_EQF 0.0 VGV_MAX flag2027
    SELECTF flag2027 0.0 tmpf2027 F.0

    SUBF 1.0 F.0 VGV_S
  else2026_2:
  endif2026:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and2031
    JR_LTF VGV_H 360.0 or2030
  and2031:
    JR_LTF VGV_H 0.0 else2029_1
    JR_GTF VGV_H 30.0 else2029_1
    JR_LTEQF VGV_S 0.3 else2029_1
    JR_GTF VGV_S 1.0 else2029_1
    JR_LTF VGV_V 0.0 else2029_1
    JR_GTEQF VGV_V 0.02 else2029_1
  or2030:
    MOVEF_F 5.0 VGV_COLOR
    JR endif2029
  else2029_1:
    JR_LTF VGV_H 0.0 else2029_2
    JR_GTEQF VGV_H 60.0 else2029_2
    JR_LTF VGV_S 0.4 else2029_2
    JR_GTF VGV_S 1.0 else2029_2
    JR_LTEQF VGV_V 0.003 else2029_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif2029
  else2029_2:
    MOVEF_F 6.0 VGV_COLOR
  else2029_3:
  endif2029:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf2036
    DATA8 flag2036
    DIVF F.0 F.1 tmpf2036
    CP_EQF 0.0 F.1 flag2036
    SELECTF flag2036 0.0 tmpf2036 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf2041
    DATA8 flag2041
    DIVF F.0 F.1 tmpf2041
    CP_EQF 0.0 F.1 flag2041
    SELECTF flag2041 0.0 tmpf2041 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2042:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2043:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K3 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds2054
	MOVEF_32 100.0 milliseconds2054
	DATA32 timer2054
	TIMER_WAIT milliseconds2054 timer2054
	TIMER_READY timer2054
  while2055:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile2055
  whilebody2055:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody2055
  endwhile2055:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds2061
	MOVEF_32 350.0 milliseconds2061
	DATA32 timer2061
	TIMER_WAIT milliseconds2061 timer2061
	TIMER_READY timer2061
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2063:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2064:
  while2065:
    JR_LTEQF VGV_S2 9.0 and2067
    JR_GTF VGV_S3 9.0 or2066
  and2067:
    JR_GTEQF VGV_S2 9.0 and2068
    JR_GTF VGV_S3 9.0 or2066
  and2068:
    JR_LTEQF VGV_S2 9.0 endwhile2065
    JR_GTEQF VGV_S3 9.0 endwhile2065
  or2066:
  whilebody2065:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2069:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2070:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and2072
    JR_GTF VGV_S3 9.0 whilebody2065
  and2072:
    JR_GTEQF VGV_S2 9.0 and2073
    JR_GTF VGV_S3 9.0 whilebody2065
  and2073:
    JR_LTEQF VGV_S2 9.0 and2074
    JR_LTF VGV_S3 9.0 whilebody2065
  and2074:
  endwhile2065:
  while2075:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile2075
  whilebody2075:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody2075
  endwhile2075:
    CALL MOTOR.STOP 'B' 'True'
  while2080:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2080
  whilebody2080:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2080
  endwhile2080:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2085
	DATA8 no2085
	DATA8 mode82085
	
	MOVEF_8 2.0 no2085
	SUB8 no2085 1 no2085
	DIV8 no2085 4 layer2085
	MATH MOD8 no2085 4 no2085

	MOVEF_8 0.0 mode82085
	
	INPUT_DEVICE READY_RAW layer2085 no2085 0 mode82085 0
    DATA8 layer2086
	DATA8 no2086
	DATA8 mode82086
	
	MOVEF_8 3.0 no2086
	SUB8 no2086 1 no2086
	DIV8 no2086 4 layer2086
	MATH MOD8 no2086 4 no2086

	MOVEF_8 0.0 mode82086
	
	INPUT_DEVICE READY_RAW layer2086 no2086 0 mode82086 0
  while2087:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2087
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2087
  whilebody2087:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2091
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2087
  and2091:
  endwhile2087:
    CALL MOTOR.STOP 'BC' 'True'
  while2095:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2095
  whilebody2095:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2095
  endwhile2095:
    CALL MOTOR.STOP 'B' 'True'
  while2100:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2100
  whilebody2100:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2100
  endwhile2100:
    CALL MOTOR.STOP 'C' 'True'
  while2105:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2105
  whilebody2105:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2105
  endwhile2105:
    CALL MOTOR.STOP 'B' 'True'
  while2110:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2110
  whilebody2110:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2110
  endwhile2110:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall EV3FILE.OPENWRITE       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_WRITE fullname handle16

	MOVE16_F handle16 handle
}
subcall EV3FILE.WRITELINE     // FSV
{
	IN_F handle
	IN_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE WRITE_TEXT handle16 6 text
invalidhandle:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
