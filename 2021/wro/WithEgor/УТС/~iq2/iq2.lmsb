DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2035
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2035:
    JR_NEQ32 SUBPROGRAM 1 dispatch2036
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2036:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 45.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENWRITE 'a123/colib.dat' VGV_F
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    CALL EV3FILE.CLOSE VGV_F
    WRITE32 ENDSUB_F_A3_0:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB70:
    WRITE32 ENDSUB_F_A2_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB71:
  while72:
    JR_LTEQF VGV_S3 10.0 and74
    JR_GTF VGV_S2 10.0 or73
  and74:
    JR_GTEQF VGV_S3 10.0 endwhile72
    JR_GTEQF VGV_S2 10.0 endwhile72
  or73:
  whilebody72:
    WRITE32 ENDSUB_F_A3_0:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB75:
    WRITE32 ENDSUB_F_A2_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB76:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB77:
    JR_LTEQF VGV_S3 10.0 and78
    JR_GTF VGV_S2 10.0 whilebody72
  and78:
    JR_GTEQF VGV_S3 10.0 and79
    JR_LTF VGV_S2 10.0 whilebody72
  and79:
  endwhile72:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB81:
    JR_GTEQF VGV_S 0.6 else82_1
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif82
  else82_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else82_2:
  endif82:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer85
	DATA8 nos85
	DATA8 busy85
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer85 nos85
	JR_EQ8 0 nos85 motornotbusy85
  motorwaiting85:
	OUTPUT_TEST layer85 nos85 busy85
	JR_EQ8 busy85 0 motornotbusy85
	SLEEP
	JR motorwaiting85
  motornotbusy85:
    JR_NEQF VGV_COLOR 4.0 else86_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB87:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer88
	DATA8 nos88
	DATA8 busy88
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer88 nos88
	JR_EQ8 0 nos88 motornotbusy88
  motorwaiting88:
	OUTPUT_TEST layer88 nos88 busy88
	JR_EQ8 busy88 0 motornotbusy88
	SLEEP
	JR motorwaiting88
  motornotbusy88:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer90
	DATA8 nos90
	DATA8 busy90
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer90 nos90
	JR_EQ8 0 nos90 motornotbusy90
  motorwaiting90:
	OUTPUT_TEST layer90 nos90 busy90
	JR_EQ8 busy90 0 motornotbusy90
	SLEEP
	JR motorwaiting90
  motornotbusy90:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while94:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 500.0 endwhile94
  whilebody94:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB96:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 500.0 whilebody94
  endwhile94:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB99:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer100
	DATA8 nos100
	DATA8 busy100
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer100 nos100
	JR_EQ8 0 nos100 motornotbusy100
  motorwaiting100:
	OUTPUT_TEST layer100 nos100 busy100
	JR_EQ8 busy100 0 motornotbusy100
	SLEEP
	JR motorwaiting100
  motornotbusy100:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer102
	DATA8 nos102
	DATA8 busy102
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer102 nos102
	JR_EQ8 0 nos102 motornotbusy102
  motorwaiting102:
	OUTPUT_TEST layer102 nos102 busy102
	JR_EQ8 busy102 0 motornotbusy102
	SLEEP
	JR motorwaiting102
  motornotbusy102:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while105:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf109
    DATA8 flag109
    DIVF F.1 2.0 tmpf109
    CP_EQF 0.0 2.0 flag109
    SELECTF flag109 0.0 tmpf109 F.0

    JR_GTEQF F.0 100.0 endwhile105
  whilebody105:
    WRITE32 ENDSUB_F_A3_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB110:
    WRITE32 ENDSUB_F_A2_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB111:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB112:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf116
    DATA8 flag116
    DIVF F.1 2.0 tmpf116
    CP_EQF 0.0 2.0 flag116
    SELECTF flag116 0.0 tmpf116 F.0

    JR_LTF F.0 100.0 whilebody105
  endwhile105:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB118:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else120_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB121:
    ADDF VGV_C 1.0 VGV_C
    JR endif120
  else120_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer124
	DATA8 nos124
	DATA8 busy124
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer124 nos124
	JR_EQ8 0 nos124 motornotbusy124
  motorwaiting124:
	OUTPUT_TEST layer124 nos124 busy124
	JR_EQ8 busy124 0 motornotbusy124
	SLEEP
	JR motorwaiting124
  motornotbusy124:
  while125:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or126
  and127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and130
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or126
  and130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile125
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile125
  or126:
  whilebody125:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and136
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody125
  and136:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and139
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody125
  and139:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and142
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody125
  and142:
  endwhile125:
    WRITE32 ENDSUB_F_A3_0:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB145:
    WRITE32 ENDSUB_F_A2_0:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB146:
  while147:
    JR_LTEQF VGV_S3 10.0 and149
    JR_GTF VGV_S2 10.0 or148
  and149:
    JR_GTEQF VGV_S3 10.0 endwhile147
    JR_GTEQF VGV_S2 10.0 endwhile147
  or148:
  whilebody147:
    WRITE32 ENDSUB_F_A3_0:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB150:
    WRITE32 ENDSUB_F_A2_0:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB151:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB152:
    JR_LTEQF VGV_S3 10.0 and153
    JR_GTF VGV_S2 10.0 whilebody147
  and153:
    JR_GTEQF VGV_S3 10.0 and154
    JR_LTF VGV_S2 10.0 whilebody147
  and154:
  endwhile147:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    WRITE32 ENDSUB_F_A3_0:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB156:
    WRITE32 ENDSUB_F_A2_0:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB157:
  while158:
    JR_LTEQF VGV_S3 10.0 and160
    JR_GTF VGV_S2 10.0 or159
  and160:
    JR_GTEQF VGV_S3 10.0 endwhile158
    JR_GTEQF VGV_S2 10.0 endwhile158
  or159:
  whilebody158:
    WRITE32 ENDSUB_F_A3_0:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB161:
    WRITE32 ENDSUB_F_A2_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB162:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB163:
    JR_LTEQF VGV_S3 10.0 and164
    JR_GTF VGV_S2 10.0 whilebody158
  and164:
    JR_GTEQF VGV_S3 10.0 and165
    JR_LTF VGV_S2 10.0 whilebody158
  and165:
  endwhile158:
    CALL MOTOR.STOP 'bc' 'true'
  else120_2:
  endif120:
    JR endif86
  else86_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB167:
    WRITE32 ENDSUB_F_A2_0:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB168:
  while169:
    JR_LTEQF VGV_S3 10.0 and171
    JR_GTF VGV_S2 10.0 or170
  and171:
    JR_GTEQF VGV_S3 10.0 endwhile169
    JR_GTEQF VGV_S2 10.0 endwhile169
  or170:
  whilebody169:
    WRITE32 ENDSUB_F_A3_0:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB172:
    WRITE32 ENDSUB_F_A2_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB173:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB174:
    JR_LTEQF VGV_S3 10.0 and175
    JR_GTF VGV_S2 10.0 whilebody169
  and175:
    JR_GTEQF VGV_S3 10.0 and176
    JR_LTF VGV_S2 10.0 whilebody169
  and176:
  endwhile169:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer179
	DATA8 nos179
	DATA8 busy179
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer179 nos179
	JR_EQ8 0 nos179 motornotbusy179
  motorwaiting179:
	OUTPUT_TEST layer179 nos179 busy179
	JR_EQ8 busy179 0 motornotbusy179
	SLEEP
	JR motorwaiting179
  motornotbusy179:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds182
	MOVEF_32 500.0 milliseconds182
	DATA32 timer182
	TIMER_WAIT milliseconds182 timer182
	TIMER_READY timer182
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB184:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while186:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile186
  whilebody186:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB188:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody186
  endwhile186:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else191_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB192:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer193
	DATA8 nos193
	DATA8 busy193
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer193 nos193
	JR_EQ8 0 nos193 motornotbusy193
  motorwaiting193:
	OUTPUT_TEST layer193 nos193 busy193
	JR_EQ8 busy193 0 motornotbusy193
	SLEEP
	JR motorwaiting193
  motornotbusy193:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB195:
    WRITE32 ENDSUB_F_A2_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB196:
  while197:
    JR_LTEQF VGV_S3 15.0 endwhile197
  whilebody197:
    WRITE32 ENDSUB_F_A3_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB198:
    WRITE32 ENDSUB_F_A2_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB199:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody197
  endwhile197:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB202:
    WRITE32 ENDSUB_F_A2_0:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB203:
  while204:
    JR_GTEQF VGV_S3 35.0 endwhile204
  whilebody204:
    WRITE32 ENDSUB_F_A3_0:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB205:
    WRITE32 ENDSUB_F_A2_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB206:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody204
  endwhile204:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB210:
    WRITE32 ENDSUB_F_A2_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB211:
  while212:
    JR_LTEQF VGV_S3 10.0 and214
    JR_GTF VGV_S2 10.0 or213
  and214:
    JR_GTEQF VGV_S3 10.0 endwhile212
    JR_GTEQF VGV_S2 10.0 endwhile212
  or213:
  whilebody212:
    WRITE32 ENDSUB_F_A3_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB215:
    WRITE32 ENDSUB_F_A2_0:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB216:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB217:
    JR_LTEQF VGV_S3 10.0 and218
    JR_GTF VGV_S2 10.0 whilebody212
  and218:
    JR_GTEQF VGV_S3 10.0 and219
    JR_LTF VGV_S2 10.0 whilebody212
  and219:
  endwhile212:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB221:
    ADDF VGV_C 1.0 VGV_C
    JR endif191
  else191_1:
    DATA32 tmp223
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp223
    JR_NEQ32 0 tmp223 alreadylaunched223
    OBJECT_START TF_VIDVIG_0
  alreadylaunched223:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB224:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer225
	DATA8 nos225
	DATA8 busy225
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer225 nos225
	JR_EQ8 0 nos225 motornotbusy225
  motorwaiting225:
	OUTPUT_TEST layer225 nos225 busy225
	JR_EQ8 busy225 0 motornotbusy225
	SLEEP
	JR motorwaiting225
  motornotbusy225:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer226
	DATA8 nos226
	DATA8 busy226
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer226 nos226
	JR_EQ8 0 nos226 motornotbusy226
  motorwaiting226:
	OUTPUT_TEST layer226 nos226 busy226
	JR_EQ8 busy226 0 motornotbusy226
	SLEEP
	JR motorwaiting226
  motornotbusy226:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB228:
    WRITE32 ENDSUB_F_A2_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB229:
  while230:
    JR_LTEQF VGV_S3 10.0 and232
    JR_GTF VGV_S2 10.0 or231
  and232:
    JR_GTEQF VGV_S3 10.0 endwhile230
    JR_GTEQF VGV_S2 10.0 endwhile230
  or231:
  whilebody230:
    WRITE32 ENDSUB_F_A3_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB233:
    WRITE32 ENDSUB_F_A2_0:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB234:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB235:
    JR_LTEQF VGV_S3 10.0 and236
    JR_GTF VGV_S2 10.0 whilebody230
  and236:
    JR_GTEQF VGV_S3 10.0 and237
    JR_LTF VGV_S2 10.0 whilebody230
  and237:
  endwhile230:
    CALL MOTOR.STOP 'bc' 'true'
  else191_2:
  endif191:
  else86_2:
  endif86:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB239:
    JR_GTEQF VGV_H 35.0 else240_1
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif240
  else240_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else240_2:
  endif240:
    JR_NEQF VGV_COLOR2 4.0 else243_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer244
	DATA8 nos244
	DATA8 busy244
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer244 nos244
	JR_EQ8 0 nos244 motornotbusy244
  motorwaiting244:
	OUTPUT_TEST layer244 nos244 busy244
	JR_EQ8 busy244 0 motornotbusy244
	SLEEP
	JR motorwaiting244
  motornotbusy244:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB245:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif243
  else243_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB247:
    CALL MOTOR.RESETCOUNT 'bc'
  while249:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile249
  whilebody249:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB251:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody249
  endwhile249:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds255
	MOVEF_32 100.0 milliseconds255
	DATA32 timer255
	TIMER_WAIT milliseconds255 timer255
	TIMER_READY timer255
    WRITE32 ENDSUB_F_NPL_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB256:
    MOVEF_F 1230.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf257
    DATA8 flag257
    DIVF 360.0 VGV_L tmpf257
    CP_EQF 0.0 VGV_L flag257
    SELECTF flag257 0.0 tmpf257 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while261:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf265
    DATA8 flag265
    DIVF F.1 2.0 tmpf265
    CP_EQF 0.0 2.0 flag265
    SELECTF flag265 0.0 tmpf265 F.0

    JR_GTEQF F.0 VGV_X endwhile261
  whilebody261:
    WRITE32 ENDSUB_F_A3_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB266:
    WRITE32 ENDSUB_F_A2_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB267:
    JR_GTEQF VGV_SPEED 60.0 else268_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else268_1:
  endif268:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB270:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf274
    DATA8 flag274
    DIVF F.1 2.0 tmpf274
    CP_EQF 0.0 2.0 flag274
    SELECTF flag274 0.0 tmpf274 F.0

    JR_LTF F.0 VGV_X whilebody261
  endwhile261:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB276:
    JR_NEQF VGV_C 1.0 else277_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB278:
    JR endif277
  else277_1:
    JR_NEQF VGV_C 0.0 else277_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB279:
  else277_2:
  endif277:
    MOVEF_F 1040.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB280:
    WRITE32 ENDSUB_F_A3_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB281:
    WRITE32 ENDSUB_F_A2_0:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB282:
  while283:
    JR_LTEQF VGV_S3 10.0 and285
    JR_GTF VGV_S2 10.0 or284
  and285:
    JR_GTEQF VGV_S3 10.0 endwhile283
    JR_GTEQF VGV_S2 10.0 endwhile283
  or284:
  whilebody283:
    WRITE32 ENDSUB_F_A3_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB286:
    WRITE32 ENDSUB_F_A2_0:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB287:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB288:
    JR_LTEQF VGV_S3 10.0 and289
    JR_GTF VGV_S2 10.0 whilebody283
  and289:
    JR_GTEQF VGV_S3 10.0 and290
    JR_LTF VGV_S2 10.0 whilebody283
  and290:
  endwhile283:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer292
	DATA8 nos292
	DATA8 busy292
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer292 nos292
	JR_EQ8 0 nos292 motornotbusy292
  motorwaiting292:
	OUTPUT_TEST layer292 nos292 busy292
	JR_EQ8 busy292 0 motornotbusy292
	SLEEP
	JR motorwaiting292
  motornotbusy292:
    WRITE32 ENDSUB_F_A3_0:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB293:
    WRITE32 ENDSUB_F_A2_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB294:
  while295:
    JR_LTEQF VGV_S3 10.0 and297
    JR_GTF VGV_S2 10.0 or296
  and297:
    JR_GTEQF VGV_S3 10.0 endwhile295
    JR_GTEQF VGV_S2 10.0 endwhile295
  or296:
  whilebody295:
    WRITE32 ENDSUB_F_A3_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB298:
    WRITE32 ENDSUB_F_A2_0:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB299:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB300:
    JR_LTEQF VGV_S3 10.0 and301
    JR_GTF VGV_S2 10.0 whilebody295
  and301:
    JR_GTEQF VGV_S3 10.0 and302
    JR_LTF VGV_S2 10.0 whilebody295
  and302:
  endwhile295:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB304:
    CALL MOTOR.RESETCOUNT 'bc'
  while306:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf310
    DATA8 flag310
    DIVF F.1 2.0 tmpf310
    CP_EQF 0.0 2.0 flag310
    SELECTF flag310 0.0 tmpf310 F.0

    JR_GTEQF F.0 350.0 endwhile306
  whilebody306:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB311:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf315
    DATA8 flag315
    DIVF F.1 2.0 tmpf315
    CP_EQF 0.0 2.0 flag315
    SELECTF flag315 0.0 tmpf315 F.0

    JR_LTF F.0 350.0 whilebody306
  endwhile306:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer317
	DATA8 nos317
	DATA8 busy317
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer317 nos317
	JR_EQ8 0 nos317 motornotbusy317
  motorwaiting317:
	OUTPUT_TEST layer317 nos317 busy317
	JR_EQ8 busy317 0 motornotbusy317
	SLEEP
	JR motorwaiting317
  motornotbusy317:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds319
	MOVEF_32 500.0 milliseconds319
	DATA32 timer319
	TIMER_WAIT milliseconds319 timer319
	TIMER_READY timer319
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer321
	DATA8 nos321
	DATA8 busy321
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer321 nos321
	JR_EQ8 0 nos321 motornotbusy321
  motorwaiting321:
	OUTPUT_TEST layer321 nos321 busy321
	JR_EQ8 busy321 0 motornotbusy321
	SLEEP
	JR motorwaiting321
  motornotbusy321:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    DATA32 tmp324
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp324
    JR_NEQ32 0 tmp324 alreadylaunched324
    OBJECT_START TF_VIDVIG_0
  alreadylaunched324:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB325:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB326:
    ADDF VGV_C 1.0 VGV_C
  else243_2:
  endif243:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB328:
    JR_GTF VGV_H 120.0 or330
    JR_LTF VGV_H 0.0 else329_1
    JR_GTF VGV_H 30.0 else329_1
  or330:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif329
  else329_1:
    JR_GTEQF VGV_H 120.0 else329_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif329
  else329_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else329_3:
  endif329:
    JR_NEQF VGV_COLOR3 4.0 else334_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer335
	DATA8 nos335
	DATA8 busy335
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer335 nos335
	JR_EQ8 0 nos335 motornotbusy335
  motorwaiting335:
	OUTPUT_TEST layer335 nos335 busy335
	JR_EQ8 busy335 0 motornotbusy335
	SLEEP
	JR motorwaiting335
  motornotbusy335:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB336:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else338_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB339:
    CALL MOTOR.RESETCOUNT 'bc'
  while341:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf345
    DATA8 flag345
    DIVF F.1 2.0 tmpf345
    CP_EQF 0.0 2.0 flag345
    SELECTF flag345 0.0 tmpf345 F.0

    JR_GTEQF F.0 450.0 endwhile341
  whilebody341:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB346:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf350
    DATA8 flag350
    DIVF F.1 2.0 tmpf350
    CP_EQF 0.0 2.0 flag350
    SELECTF flag350 0.0 tmpf350 F.0

    JR_LTF F.0 450.0 whilebody341
  endwhile341:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds353
	MOVEF_32 500.0 milliseconds353
	DATA32 timer353
	TIMER_WAIT milliseconds353 timer353
	TIMER_READY timer353
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB355:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf356
    DATA8 flag356
    DIVF 360.0 VGV_L tmpf356
    CP_EQF 0.0 VGV_L flag356
    SELECTF flag356 0.0 tmpf356 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while359:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile359
  whilebody359:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB361:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody359
  endwhile359:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB364:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB365:
    MOVEF_F 400.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB366:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB368:
    CALL MOTOR.RESETCOUNT 'bc'
  while370:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf374
    DATA8 flag374
    DIVF F.1 2.0 tmpf374
    CP_EQF 0.0 2.0 flag374
    SELECTF flag374 0.0 tmpf374 F.0

    JR_GTEQF F.0 300.0 endwhile370
  whilebody370:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB375:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf379
    DATA8 flag379
    DIVF F.1 2.0 tmpf379
    CP_EQF 0.0 2.0 flag379
    SELECTF flag379 0.0 tmpf379 F.0

    JR_LTF F.0 300.0 whilebody370
  endwhile370:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer381
	DATA8 nos381
	DATA8 busy381
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer381 nos381
	JR_EQ8 0 nos381 motornotbusy381
  motorwaiting381:
	OUTPUT_TEST layer381 nos381 busy381
	JR_EQ8 busy381 0 motornotbusy381
	SLEEP
	JR motorwaiting381
  motornotbusy381:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds383
	MOVEF_32 500.0 milliseconds383
	DATA32 timer383
	TIMER_WAIT milliseconds383 timer383
	TIMER_READY timer383
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer385
	DATA8 nos385
	DATA8 busy385
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer385 nos385
	JR_EQ8 0 nos385 motornotbusy385
  motorwaiting385:
	OUTPUT_TEST layer385 nos385 busy385
	JR_EQ8 busy385 0 motornotbusy385
	SLEEP
	JR motorwaiting385
  motornotbusy385:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer386
	DATA8 nos386
	DATA8 busy386
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer386 nos386
	JR_EQ8 0 nos386 motornotbusy386
  motorwaiting386:
	OUTPUT_TEST layer386 nos386 busy386
	JR_EQ8 busy386 0 motornotbusy386
	SLEEP
	JR motorwaiting386
  motornotbusy386:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB387:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB388:
    WRITE32 ENDSUB_F_PR_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB389:
    CALL MOTOR.RESETCOUNT 'bc'
  while391:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf395
    DATA8 flag395
    DIVF F.1 2.0 tmpf395
    CP_EQF 0.0 2.0 flag395
    SELECTF flag395 0.0 tmpf395 F.0

    JR_GTEQF F.0 500.0 endwhile391
  whilebody391:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB396:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf400
    DATA8 flag400
    DIVF F.1 2.0 tmpf400
    CP_EQF 0.0 2.0 flag400
    SELECTF flag400 0.0 tmpf400 F.0

    JR_LTF F.0 500.0 whilebody391
  endwhile391:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds403
	MOVEF_32 500.0 milliseconds403
	DATA32 timer403
	TIMER_WAIT milliseconds403 timer403
	TIMER_READY timer403
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB405:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf406
    DATA8 flag406
    DIVF 360.0 VGV_L tmpf406
    CP_EQF 0.0 VGV_L flag406
    SELECTF flag406 0.0 tmpf406 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while409:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile409
  whilebody409:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB411:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody409
  endwhile409:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB414:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB415:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB416:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB418:
    CALL MOTOR.RESETCOUNT 'bc'
  while420:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf424
    DATA8 flag424
    DIVF F.1 2.0 tmpf424
    CP_EQF 0.0 2.0 flag424
    SELECTF flag424 0.0 tmpf424 F.0

    JR_GTEQF F.0 470.0 endwhile420
  whilebody420:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB425:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf429
    DATA8 flag429
    DIVF F.1 2.0 tmpf429
    CP_EQF 0.0 2.0 flag429
    SELECTF flag429 0.0 tmpf429 F.0

    JR_LTF F.0 470.0 whilebody420
  endwhile420:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer431
	DATA8 nos431
	DATA8 busy431
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer431 nos431
	JR_EQ8 0 nos431 motornotbusy431
  motorwaiting431:
	OUTPUT_TEST layer431 nos431 busy431
	JR_EQ8 busy431 0 motornotbusy431
	SLEEP
	JR motorwaiting431
  motornotbusy431:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds433
	MOVEF_32 500.0 milliseconds433
	DATA32 timer433
	TIMER_WAIT milliseconds433 timer433
	TIMER_READY timer433
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer435
	DATA8 nos435
	DATA8 busy435
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer435 nos435
	JR_EQ8 0 nos435 motornotbusy435
  motorwaiting435:
	OUTPUT_TEST layer435 nos435 busy435
	JR_EQ8 busy435 0 motornotbusy435
	SLEEP
	JR motorwaiting435
  motornotbusy435:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer436
	DATA8 nos436
	DATA8 busy436
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer436 nos436
	JR_EQ8 0 nos436 motornotbusy436
  motorwaiting436:
	OUTPUT_TEST layer436 nos436 busy436
	JR_EQ8 busy436 0 motornotbusy436
	SLEEP
	JR motorwaiting436
  motornotbusy436:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB437:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB438:
    WRITE32 ENDSUB_F_PR_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB439:
    CALL MOTOR.RESETCOUNT 'bc'
  while441:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf445
    DATA8 flag445
    DIVF F.1 2.0 tmpf445
    CP_EQF 0.0 2.0 flag445
    SELECTF flag445 0.0 tmpf445 F.0

    JR_GTEQF F.0 270.0 endwhile441
  whilebody441:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB446:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf450
    DATA8 flag450
    DIVF F.1 2.0 tmpf450
    CP_EQF 0.0 2.0 flag450
    SELECTF flag450 0.0 tmpf450 F.0

    JR_LTF F.0 270.0 whilebody441
  endwhile441:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds453
	MOVEF_32 500.0 milliseconds453
	DATA32 timer453
	TIMER_WAIT milliseconds453 timer453
	TIMER_READY timer453
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB455:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf456
    DATA8 flag456
    DIVF 360.0 VGV_L tmpf456
    CP_EQF 0.0 VGV_L flag456
    SELECTF flag456 0.0 tmpf456 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while459:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile459
  whilebody459:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB461:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody459
  endwhile459:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB464:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB465:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB466:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB468:
    CALL MOTOR.RESETCOUNT 'bc'
  while470:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf474
    DATA8 flag474
    DIVF F.1 2.0 tmpf474
    CP_EQF 0.0 2.0 flag474
    SELECTF flag474 0.0 tmpf474 F.0

    JR_GTEQF F.0 270.0 endwhile470
  whilebody470:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB475:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf479
    DATA8 flag479
    DIVF F.1 2.0 tmpf479
    CP_EQF 0.0 2.0 flag479
    SELECTF flag479 0.0 tmpf479 F.0

    JR_LTF F.0 270.0 whilebody470
  endwhile470:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer481
	DATA8 nos481
	DATA8 busy481
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer481 nos481
	JR_EQ8 0 nos481 motornotbusy481
  motorwaiting481:
	OUTPUT_TEST layer481 nos481 busy481
	JR_EQ8 busy481 0 motornotbusy481
	SLEEP
	JR motorwaiting481
  motornotbusy481:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds483
	MOVEF_32 500.0 milliseconds483
	DATA32 timer483
	TIMER_WAIT milliseconds483 timer483
	TIMER_READY timer483
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer485
	DATA8 nos485
	DATA8 busy485
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer485 nos485
	JR_EQ8 0 nos485 motornotbusy485
  motorwaiting485:
	OUTPUT_TEST layer485 nos485 busy485
	JR_EQ8 busy485 0 motornotbusy485
	SLEEP
	JR motorwaiting485
  motornotbusy485:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer486
	DATA8 nos486
	DATA8 busy486
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer486 nos486
	JR_EQ8 0 nos486 motornotbusy486
  motorwaiting486:
	OUTPUT_TEST layer486 nos486 busy486
	JR_EQ8 busy486 0 motornotbusy486
	SLEEP
	JR motorwaiting486
  motornotbusy486:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB487:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB488:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer489
	DATA8 nos489
	DATA8 busy489
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer489 nos489
	JR_EQ8 0 nos489 motornotbusy489
  motorwaiting489:
	OUTPUT_TEST layer489 nos489 busy489
	JR_EQ8 busy489 0 motornotbusy489
	SLEEP
	JR motorwaiting489
  motornotbusy489:
    PROGRAM_STOP -1
  else338_1:
  endif338:
  else334_1:
  endif334:
    JR_NEQF VGV_COLOR3 5.0 else491_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB492:
    CALL MOTOR.RESETCOUNT 'bc'
  while494:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf498
    DATA8 flag498
    DIVF F.1 2.0 tmpf498
    CP_EQF 0.0 2.0 flag498
    SELECTF flag498 0.0 tmpf498 F.0

    JR_GTEQF F.0 300.0 endwhile494
  whilebody494:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB499:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf503
    DATA8 flag503
    DIVF F.1 2.0 tmpf503
    CP_EQF 0.0 2.0 flag503
    SELECTF flag503 0.0 tmpf503 F.0

    JR_LTF F.0 300.0 whilebody494
  endwhile494:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds506
	MOVEF_32 500.0 milliseconds506
	DATA32 timer506
	TIMER_WAIT milliseconds506 timer506
	TIMER_READY timer506
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB508:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf509
    DATA8 flag509
    DIVF 360.0 VGV_L tmpf509
    CP_EQF 0.0 VGV_L flag509
    SELECTF flag509 0.0 tmpf509 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while512:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile512
  whilebody512:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB514:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody512
  endwhile512:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB517:
    JR_NEQF VGV_C 1.0 else518_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB519:
    JR endif518
  else518_1:
    JR_NEQF VGV_C 0.0 else518_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB520:
    JR endif518
  else518_2:
    JR_NEQF VGV_C 2.0 else518_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB521:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB522:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds524
	MOVEF_32 100.0 milliseconds524
	DATA32 timer524
	TIMER_WAIT milliseconds524 timer524
	TIMER_READY timer524
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer525
	DATA8 nos525
	DATA8 busy525
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer525 nos525
	JR_EQ8 0 nos525 motornotbusy525
  motorwaiting525:
	OUTPUT_TEST layer525 nos525 busy525
	JR_EQ8 busy525 0 motornotbusy525
	SLEEP
	JR motorwaiting525
  motornotbusy525:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
    WRITE32 ENDSUB_F_A3_0:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB528:
    WRITE32 ENDSUB_F_A2_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB529:
  while530:
    JR_LTEQF VGV_S2 15.0 endwhile530
  whilebody530:
    WRITE32 ENDSUB_F_A3_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB531:
    WRITE32 ENDSUB_F_A2_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB532:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody530
  endwhile530:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB535:
    WRITE32 ENDSUB_F_A2_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB536:
  while537:
    JR_GTEQF VGV_S2 55.0 endwhile537
  whilebody537:
    WRITE32 ENDSUB_F_A3_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB538:
    WRITE32 ENDSUB_F_A2_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB539:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody537
  endwhile537:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while543:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf547
    DATA8 flag547
    DIVF F.1 2.0 tmpf547
    CP_EQF 0.0 2.0 flag547
    SELECTF flag547 0.0 tmpf547 F.0

    JR_GTEQF F.0 270.0 endwhile543
  whilebody543:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB548:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf552
    DATA8 flag552
    DIVF F.1 2.0 tmpf552
    CP_EQF 0.0 2.0 flag552
    SELECTF flag552 0.0 tmpf552 F.0

    JR_LTF F.0 270.0 whilebody543
  endwhile543:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer554
	DATA8 nos554
	DATA8 busy554
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer554 nos554
	JR_EQ8 0 nos554 motornotbusy554
  motorwaiting554:
	OUTPUT_TEST layer554 nos554 busy554
	JR_EQ8 busy554 0 motornotbusy554
	SLEEP
	JR motorwaiting554
  motornotbusy554:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds556
	MOVEF_32 500.0 milliseconds556
	DATA32 timer556
	TIMER_WAIT milliseconds556 timer556
	TIMER_READY timer556
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer558
	DATA8 nos558
	DATA8 busy558
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer558 nos558
	JR_EQ8 0 nos558 motornotbusy558
  motorwaiting558:
	OUTPUT_TEST layer558 nos558 busy558
	JR_EQ8 busy558 0 motornotbusy558
	SLEEP
	JR motorwaiting558
  motornotbusy558:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer559
	DATA8 nos559
	DATA8 busy559
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer559 nos559
	JR_EQ8 0 nos559 motornotbusy559
  motorwaiting559:
	OUTPUT_TEST layer559 nos559 busy559
	JR_EQ8 busy559 0 motornotbusy559
	SLEEP
	JR motorwaiting559
  motornotbusy559:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB560:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB561:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer563
	DATA8 nos563
	DATA8 busy563
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer563 nos563
	JR_EQ8 0 nos563 motornotbusy563
  motorwaiting563:
	OUTPUT_TEST layer563 nos563 busy563
	JR_EQ8 busy563 0 motornotbusy563
	SLEEP
	JR motorwaiting563
  motornotbusy563:
    PROGRAM_STOP -1
  else518_3:
  endif518:
    MOVEF_F 700.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB565:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer567
	DATA8 nos567
	DATA8 busy567
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer567 nos567
	JR_EQ8 0 nos567 motornotbusy567
  motorwaiting567:
	OUTPUT_TEST layer567 nos567 busy567
	JR_EQ8 busy567 0 motornotbusy567
	SLEEP
	JR motorwaiting567
  motornotbusy567:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer569
	DATA8 nos569
	DATA8 busy569
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer569 nos569
	JR_EQ8 0 nos569 motornotbusy569
  motorwaiting569:
	OUTPUT_TEST layer569 nos569 busy569
	JR_EQ8 busy569 0 motornotbusy569
	SLEEP
	JR motorwaiting569
  motornotbusy569:
    WRITE32 ENDSUB_F_A3_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB570:
    WRITE32 ENDSUB_F_A2_0:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB571:
  while572:
    JR_LTEQF VGV_S2 15.0 endwhile572
  whilebody572:
    WRITE32 ENDSUB_F_A3_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB573:
    WRITE32 ENDSUB_F_A2_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB574:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody572
  endwhile572:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB577:
    WRITE32 ENDSUB_F_A2_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB578:
  while579:
    JR_GTEQF VGV_S2 55.0 endwhile579
  whilebody579:
    WRITE32 ENDSUB_F_A3_0:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB580:
    WRITE32 ENDSUB_F_A2_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB581:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody579
  endwhile579:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while585:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf589
    DATA8 flag589
    DIVF F.1 2.0 tmpf589
    CP_EQF 0.0 2.0 flag589
    SELECTF flag589 0.0 tmpf589 F.0

    JR_GTEQF F.0 200.0 endwhile585
  whilebody585:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB590:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf594
    DATA8 flag594
    DIVF F.1 2.0 tmpf594
    CP_EQF 0.0 2.0 flag594
    SELECTF flag594 0.0 tmpf594 F.0

    JR_LTF F.0 200.0 whilebody585
  endwhile585:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer596
	DATA8 nos596
	DATA8 busy596
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer596 nos596
	JR_EQ8 0 nos596 motornotbusy596
  motorwaiting596:
	OUTPUT_TEST layer596 nos596 busy596
	JR_EQ8 busy596 0 motornotbusy596
	SLEEP
	JR motorwaiting596
  motornotbusy596:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds598
	MOVEF_32 500.0 milliseconds598
	DATA32 timer598
	TIMER_WAIT milliseconds598 timer598
	TIMER_READY timer598
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer600
	DATA8 nos600
	DATA8 busy600
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer600 nos600
	JR_EQ8 0 nos600 motornotbusy600
  motorwaiting600:
	OUTPUT_TEST layer600 nos600 busy600
	JR_EQ8 busy600 0 motornotbusy600
	SLEEP
	JR motorwaiting600
  motornotbusy600:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer601
	DATA8 nos601
	DATA8 busy601
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer601 nos601
	JR_EQ8 0 nos601 motornotbusy601
  motorwaiting601:
	OUTPUT_TEST layer601 nos601 busy601
	JR_EQ8 busy601 0 motornotbusy601
	SLEEP
	JR motorwaiting601
  motornotbusy601:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB602:
    DATA32 tmp603
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp603
    JR_NEQ32 0 tmp603 alreadylaunched603
    OBJECT_START TF_VIDVIG_0
  alreadylaunched603:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB604:
    ADDF VGV_C 1.0 VGV_C
  else491_1:
  endif491:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB606:
    JR_GTEQF VGV_H 25.0 else607_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif607
  else607_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else607_2:
  endif607:
    JR_NEQF VGV_COLOR4 4.0 else610_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer611
	DATA8 nos611
	DATA8 busy611
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer611 nos611
	JR_EQ8 0 nos611 motornotbusy611
  motorwaiting611:
	OUTPUT_TEST layer611 nos611 busy611
	JR_EQ8 busy611 0 motornotbusy611
	SLEEP
	JR motorwaiting611
  motornotbusy611:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB612:
    JR_NEQF VGV_C 1.0 else613_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB614:
    CALL MOTOR.RESETCOUNT 'bc'
  while616:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf620
    DATA8 flag620
    DIVF F.1 2.0 tmpf620
    CP_EQF 0.0 2.0 flag620
    SELECTF flag620 0.0 tmpf620 F.0

    JR_GTEQF F.0 500.0 endwhile616
  whilebody616:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB621:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf625
    DATA8 flag625
    DIVF F.1 2.0 tmpf625
    CP_EQF 0.0 2.0 flag625
    SELECTF flag625 0.0 tmpf625 F.0

    JR_LTF F.0 500.0 whilebody616
  endwhile616:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds628
	MOVEF_32 500.0 milliseconds628
	DATA32 timer628
	TIMER_WAIT milliseconds628 timer628
	TIMER_READY timer628
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB630:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf631
    DATA8 flag631
    DIVF 360.0 VGV_L tmpf631
    CP_EQF 0.0 VGV_L flag631
    SELECTF flag631 0.0 tmpf631 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while634:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile634
  whilebody634:
    JR_GTEQF VGV_SPEED 80.0 else636_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else636_1:
  endif636:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB638:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody634
  endwhile634:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB641:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB642:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB643:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB645:
    CALL MOTOR.RESETCOUNT 'bc'
  while647:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf651
    DATA8 flag651
    DIVF F.1 2.0 tmpf651
    CP_EQF 0.0 2.0 flag651
    SELECTF flag651 0.0 tmpf651 F.0

    JR_GTEQF F.0 400.0 endwhile647
  whilebody647:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB652:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf656
    DATA8 flag656
    DIVF F.1 2.0 tmpf656
    CP_EQF 0.0 2.0 flag656
    SELECTF flag656 0.0 tmpf656 F.0

    JR_LTF F.0 400.0 whilebody647
  endwhile647:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer658
	DATA8 nos658
	DATA8 busy658
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer658 nos658
	JR_EQ8 0 nos658 motornotbusy658
  motorwaiting658:
	OUTPUT_TEST layer658 nos658 busy658
	JR_EQ8 busy658 0 motornotbusy658
	SLEEP
	JR motorwaiting658
  motornotbusy658:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds660
	MOVEF_32 500.0 milliseconds660
	DATA32 timer660
	TIMER_WAIT milliseconds660 timer660
	TIMER_READY timer660
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer662
	DATA8 nos662
	DATA8 busy662
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer662 nos662
	JR_EQ8 0 nos662 motornotbusy662
  motorwaiting662:
	OUTPUT_TEST layer662 nos662 busy662
	JR_EQ8 busy662 0 motornotbusy662
	SLEEP
	JR motorwaiting662
  motornotbusy662:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer663
	DATA8 nos663
	DATA8 busy663
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer663 nos663
	JR_EQ8 0 nos663 motornotbusy663
  motorwaiting663:
	OUTPUT_TEST layer663 nos663 busy663
	JR_EQ8 busy663 0 motornotbusy663
	SLEEP
	JR motorwaiting663
  motornotbusy663:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB664:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB665:
    WRITE32 ENDSUB_F_PR_0:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB666:
    CALL MOTOR.RESETCOUNT 'bc'
  while668:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf672
    DATA8 flag672
    DIVF F.1 2.0 tmpf672
    CP_EQF 0.0 2.0 flag672
    SELECTF flag672 0.0 tmpf672 F.0

    JR_GTEQF F.0 270.0 endwhile668
  whilebody668:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB673:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf677
    DATA8 flag677
    DIVF F.1 2.0 tmpf677
    CP_EQF 0.0 2.0 flag677
    SELECTF flag677 0.0 tmpf677 F.0

    JR_LTF F.0 270.0 whilebody668
  endwhile668:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds680
	MOVEF_32 500.0 milliseconds680
	DATA32 timer680
	TIMER_WAIT milliseconds680 timer680
	TIMER_READY timer680
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB682:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf683
    DATA8 flag683
    DIVF 360.0 VGV_L tmpf683
    CP_EQF 0.0 VGV_L flag683
    SELECTF flag683 0.0 tmpf683 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while686:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile686
  whilebody686:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB688:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody686
  endwhile686:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB691:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB692:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB693:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB695:
    CALL MOTOR.RESETCOUNT 'bc'
  while697:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf701
    DATA8 flag701
    DIVF F.1 2.0 tmpf701
    CP_EQF 0.0 2.0 flag701
    SELECTF flag701 0.0 tmpf701 F.0

    JR_GTEQF F.0 270.0 endwhile697
  whilebody697:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB702:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf706
    DATA8 flag706
    DIVF F.1 2.0 tmpf706
    CP_EQF 0.0 2.0 flag706
    SELECTF flag706 0.0 tmpf706 F.0

    JR_LTF F.0 270.0 whilebody697
  endwhile697:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer708
	DATA8 nos708
	DATA8 busy708
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer708 nos708
	JR_EQ8 0 nos708 motornotbusy708
  motorwaiting708:
	OUTPUT_TEST layer708 nos708 busy708
	JR_EQ8 busy708 0 motornotbusy708
	SLEEP
	JR motorwaiting708
  motornotbusy708:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds710
	MOVEF_32 500.0 milliseconds710
	DATA32 timer710
	TIMER_WAIT milliseconds710 timer710
	TIMER_READY timer710
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer712
	DATA8 nos712
	DATA8 busy712
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer712 nos712
	JR_EQ8 0 nos712 motornotbusy712
  motorwaiting712:
	OUTPUT_TEST layer712 nos712 busy712
	JR_EQ8 busy712 0 motornotbusy712
	SLEEP
	JR motorwaiting712
  motornotbusy712:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer713
	DATA8 nos713
	DATA8 busy713
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer713 nos713
	JR_EQ8 0 nos713 motornotbusy713
  motorwaiting713:
	OUTPUT_TEST layer713 nos713 busy713
	JR_EQ8 busy713 0 motornotbusy713
	SLEEP
	JR motorwaiting713
  motornotbusy713:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB714:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB715:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer716
	DATA8 nos716
	DATA8 busy716
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer716 nos716
	JR_EQ8 0 nos716 motornotbusy716
  motorwaiting716:
	OUTPUT_TEST layer716 nos716 busy716
	JR_EQ8 busy716 0 motornotbusy716
	SLEEP
	JR motorwaiting716
  motornotbusy716:
    PROGRAM_STOP -1
  else613_1:
  endif613:
  else610_1:
  endif610:
    JR_NEQF VGV_COLOR4 5.0 else718_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB719:
    CALL MOTOR.RESETCOUNT 'bc'
  while721:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf725
    DATA8 flag725
    DIVF F.1 2.0 tmpf725
    CP_EQF 0.0 2.0 flag725
    SELECTF flag725 0.0 tmpf725 F.0

    JR_GTEQF F.0 450.0 endwhile721
  whilebody721:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB726:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf730
    DATA8 flag730
    DIVF F.1 2.0 tmpf730
    CP_EQF 0.0 2.0 flag730
    SELECTF flag730 0.0 tmpf730 F.0

    JR_LTF F.0 450.0 whilebody721
  endwhile721:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds733
	MOVEF_32 500.0 milliseconds733
	DATA32 timer733
	TIMER_WAIT milliseconds733 timer733
	TIMER_READY timer733
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB735:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf736
    DATA8 flag736
    DIVF 360.0 VGV_L tmpf736
    CP_EQF 0.0 VGV_L flag736
    SELECTF flag736 0.0 tmpf736 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while739:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile739
  whilebody739:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB741:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody739
  endwhile739:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB744:
    JR_NEQF VGV_C 1.0 else745_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB746:
    JR endif745
  else745_1:
    JR_NEQF VGV_C 0.0 else745_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB747:
    JR endif745
  else745_2:
    JR_NEQF VGV_C 2.0 else745_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB748:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB749:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB751:
    CALL MOTOR.RESETCOUNT 'bc'
  while753:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 2.0 tmpf757
    CP_EQF 0.0 2.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    JR_GTEQF F.0 250.0 endwhile753
  whilebody753:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB758:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf762
    DATA8 flag762
    DIVF F.1 2.0 tmpf762
    CP_EQF 0.0 2.0 flag762
    SELECTF flag762 0.0 tmpf762 F.0

    JR_LTF F.0 250.0 whilebody753
  endwhile753:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer764
	DATA8 nos764
	DATA8 busy764
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer764 nos764
	JR_EQ8 0 nos764 motornotbusy764
  motorwaiting764:
	OUTPUT_TEST layer764 nos764 busy764
	JR_EQ8 busy764 0 motornotbusy764
	SLEEP
	JR motorwaiting764
  motornotbusy764:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds766
	MOVEF_32 500.0 milliseconds766
	DATA32 timer766
	TIMER_WAIT milliseconds766 timer766
	TIMER_READY timer766
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer768
	DATA8 nos768
	DATA8 busy768
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer768 nos768
	JR_EQ8 0 nos768 motornotbusy768
  motorwaiting768:
	OUTPUT_TEST layer768 nos768 busy768
	JR_EQ8 busy768 0 motornotbusy768
	SLEEP
	JR motorwaiting768
  motornotbusy768:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer769
	DATA8 nos769
	DATA8 busy769
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer769 nos769
	JR_EQ8 0 nos769 motornotbusy769
  motorwaiting769:
	OUTPUT_TEST layer769 nos769 busy769
	JR_EQ8 busy769 0 motornotbusy769
	SLEEP
	JR motorwaiting769
  motornotbusy769:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB770:
    CALL MOTOR.RESETCOUNT 'bc'
  while772:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf776
    DATA8 flag776
    DIVF F.1 2.0 tmpf776
    CP_EQF 0.0 2.0 flag776
    SELECTF flag776 0.0 tmpf776 F.0

    JR_GTEQF F.0 100.0 endwhile772
  whilebody772:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB777:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf781
    DATA8 flag781
    DIVF F.1 2.0 tmpf781
    CP_EQF 0.0 2.0 flag781
    SELECTF flag781 0.0 tmpf781 F.0

    JR_LTF F.0 100.0 whilebody772
  endwhile772:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB783:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer785
	DATA8 nos785
	DATA8 busy785
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer785 nos785
	JR_EQ8 0 nos785 motornotbusy785
  motorwaiting785:
	OUTPUT_TEST layer785 nos785 busy785
	JR_EQ8 busy785 0 motornotbusy785
	SLEEP
	JR motorwaiting785
  motornotbusy785:
    PROGRAM_STOP -1
  else745_3:
  endif745:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB787:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB789:
    CALL MOTOR.RESETCOUNT 'bc'
  while791:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf795
    DATA8 flag795
    DIVF F.1 2.0 tmpf795
    CP_EQF 0.0 2.0 flag795
    SELECTF flag795 0.0 tmpf795 F.0

    JR_GTEQF F.0 250.0 endwhile791
  whilebody791:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB796:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf800
    DATA8 flag800
    DIVF F.1 2.0 tmpf800
    CP_EQF 0.0 2.0 flag800
    SELECTF flag800 0.0 tmpf800 F.0

    JR_LTF F.0 250.0 whilebody791
  endwhile791:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer802
	DATA8 nos802
	DATA8 busy802
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer802 nos802
	JR_EQ8 0 nos802 motornotbusy802
  motorwaiting802:
	OUTPUT_TEST layer802 nos802 busy802
	JR_EQ8 busy802 0 motornotbusy802
	SLEEP
	JR motorwaiting802
  motornotbusy802:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds804
	MOVEF_32 500.0 milliseconds804
	DATA32 timer804
	TIMER_WAIT milliseconds804 timer804
	TIMER_READY timer804
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer806
	DATA8 nos806
	DATA8 busy806
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer806 nos806
	JR_EQ8 0 nos806 motornotbusy806
  motorwaiting806:
	OUTPUT_TEST layer806 nos806 busy806
	JR_EQ8 busy806 0 motornotbusy806
	SLEEP
	JR motorwaiting806
  motornotbusy806:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer807
	DATA8 nos807
	DATA8 busy807
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer807 nos807
	JR_EQ8 0 nos807 motornotbusy807
  motorwaiting807:
	OUTPUT_TEST layer807 nos807 busy807
	JR_EQ8 busy807 0 motornotbusy807
	SLEEP
	JR motorwaiting807
  motornotbusy807:
    DATA32 tmp808
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp808
    JR_NEQ32 0 tmp808 alreadylaunched808
    OBJECT_START TF_VIDVIG_0
  alreadylaunched808:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB809:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB810:
    ADDF VGV_C 1.0 VGV_C
  else718_1:
  endif718:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB812:
    JR_LTF VGV_H 30.0 or814
    JR_LTEQF VGV_H 280.0 else813_1
  or814:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif813
  else813_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else813_2:
  endif813:
    JR_NEQF VGV_COLOR5 4.0 else817_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer818
	DATA8 nos818
	DATA8 busy818
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer818 nos818
	JR_EQ8 0 nos818 motornotbusy818
  motorwaiting818:
	OUTPUT_TEST layer818 nos818 busy818
	JR_EQ8 busy818 0 motornotbusy818
	SLEEP
	JR motorwaiting818
  motornotbusy818:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB819:
    WRITE32 ENDSUB_F_PR_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB820:
    CALL MOTOR.RESETCOUNT 'bc'
  while822:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf826
    DATA8 flag826
    DIVF F.1 2.0 tmpf826
    CP_EQF 0.0 2.0 flag826
    SELECTF flag826 0.0 tmpf826 F.0

    JR_GTEQF F.0 270.0 endwhile822
  whilebody822:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB827:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf831
    DATA8 flag831
    DIVF F.1 2.0 tmpf831
    CP_EQF 0.0 2.0 flag831
    SELECTF flag831 0.0 tmpf831 F.0

    JR_LTF F.0 270.0 whilebody822
  endwhile822:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds834
	MOVEF_32 500.0 milliseconds834
	DATA32 timer834
	TIMER_WAIT milliseconds834 timer834
	TIMER_READY timer834
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB836:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB837:
    CALL MOTOR.RESETCOUNT 'bc'
  while839:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf843
    DATA8 flag843
    DIVF F.1 2.0 tmpf843
    CP_EQF 0.0 2.0 flag843
    SELECTF flag843 0.0 tmpf843 F.0

    JR_GTEQF F.0 100.0 endwhile839
  whilebody839:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB844:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf848
    DATA8 flag848
    DIVF F.1 2.0 tmpf848
    CP_EQF 0.0 2.0 flag848
    SELECTF flag848 0.0 tmpf848 F.0

    JR_LTF F.0 100.0 whilebody839
  endwhile839:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 750.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf850
    DATA8 flag850
    DIVF 360.0 VGV_L tmpf850
    CP_EQF 0.0 VGV_L flag850
    SELECTF flag850 0.0 tmpf850 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while853:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile853
  whilebody853:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB855:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody853
  endwhile853:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB858:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB859:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB860:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer862
	DATA8 nos862
	DATA8 busy862
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer862 nos862
	JR_EQ8 0 nos862 motornotbusy862
  motorwaiting862:
	OUTPUT_TEST layer862 nos862 busy862
	JR_EQ8 busy862 0 motornotbusy862
	SLEEP
	JR motorwaiting862
  motornotbusy862:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer864
	DATA8 nos864
	DATA8 busy864
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer864 nos864
	JR_EQ8 0 nos864 motornotbusy864
  motorwaiting864:
	OUTPUT_TEST layer864 nos864 busy864
	JR_EQ8 busy864 0 motornotbusy864
	SLEEP
	JR motorwaiting864
  motornotbusy864:
    WRITE32 ENDSUB_F_A3_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB865:
    WRITE32 ENDSUB_F_A2_0:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB866:
  while867:
    JR_LTEQF VGV_S3 15.0 endwhile867
  whilebody867:
    WRITE32 ENDSUB_F_A3_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB868:
    WRITE32 ENDSUB_F_A2_0:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB869:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody867
  endwhile867:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB872:
    WRITE32 ENDSUB_F_A2_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB873:
  while874:
    JR_GTEQF VGV_S3 60.0 endwhile874
  whilebody874:
    WRITE32 ENDSUB_F_A3_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB875:
    WRITE32 ENDSUB_F_A2_0:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB876:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody874
  endwhile874:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while880:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf884
    DATA8 flag884
    DIVF F.1 2.0 tmpf884
    CP_EQF 0.0 2.0 flag884
    SELECTF flag884 0.0 tmpf884 F.0

    JR_GTEQF F.0 270.0 endwhile880
  whilebody880:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB885:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf889
    DATA8 flag889
    DIVF F.1 2.0 tmpf889
    CP_EQF 0.0 2.0 flag889
    SELECTF flag889 0.0 tmpf889 F.0

    JR_LTF F.0 270.0 whilebody880
  endwhile880:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer891
	DATA8 nos891
	DATA8 busy891
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer891 nos891
	JR_EQ8 0 nos891 motornotbusy891
  motorwaiting891:
	OUTPUT_TEST layer891 nos891 busy891
	JR_EQ8 busy891 0 motornotbusy891
	SLEEP
	JR motorwaiting891
  motornotbusy891:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds893
	MOVEF_32 500.0 milliseconds893
	DATA32 timer893
	TIMER_WAIT milliseconds893 timer893
	TIMER_READY timer893
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer895
	DATA8 nos895
	DATA8 busy895
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer895 nos895
	JR_EQ8 0 nos895 motornotbusy895
  motorwaiting895:
	OUTPUT_TEST layer895 nos895 busy895
	JR_EQ8 busy895 0 motornotbusy895
	SLEEP
	JR motorwaiting895
  motornotbusy895:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer896
	DATA8 nos896
	DATA8 busy896
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer896 nos896
	JR_EQ8 0 nos896 motornotbusy896
  motorwaiting896:
	OUTPUT_TEST layer896 nos896 busy896
	JR_EQ8 busy896 0 motornotbusy896
	SLEEP
	JR motorwaiting896
  motornotbusy896:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB897:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB898:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer899
	DATA8 nos899
	DATA8 busy899
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer899 nos899
	JR_EQ8 0 nos899 motornotbusy899
  motorwaiting899:
	OUTPUT_TEST layer899 nos899 busy899
	JR_EQ8 busy899 0 motornotbusy899
	SLEEP
	JR motorwaiting899
  motornotbusy899:
    PROGRAM_STOP -1
  else817_1:
  endif817:
    JR_NEQF VGV_COLOR5 5.0 else901_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB902:
    CALL MOTOR.RESETCOUNT 'bc'
  while904:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf908
    DATA8 flag908
    DIVF F.1 2.0 tmpf908
    CP_EQF 0.0 2.0 flag908
    SELECTF flag908 0.0 tmpf908 F.0

    JR_GTEQF F.0 500.0 endwhile904
  whilebody904:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB909:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf913
    DATA8 flag913
    DIVF F.1 2.0 tmpf913
    CP_EQF 0.0 2.0 flag913
    SELECTF flag913 0.0 tmpf913 F.0

    JR_LTF F.0 500.0 whilebody904
  endwhile904:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds916
	MOVEF_32 500.0 milliseconds916
	DATA32 timer916
	TIMER_WAIT milliseconds916 timer916
	TIMER_READY timer916
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB918:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf919
    DATA8 flag919
    DIVF 360.0 VGV_L tmpf919
    CP_EQF 0.0 VGV_L flag919
    SELECTF flag919 0.0 tmpf919 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while922:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile922
  whilebody922:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB924:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody922
  endwhile922:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB927:
    JR_NEQF VGV_C 1.0 else928_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB929:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB930:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB932:
    CALL MOTOR.RESETCOUNT 'bc'
  while934:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf938
    DATA8 flag938
    DIVF F.1 2.0 tmpf938
    CP_EQF 0.0 2.0 flag938
    SELECTF flag938 0.0 tmpf938 F.0

    JR_GTEQF F.0 470.0 endwhile934
  whilebody934:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB939:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf943
    DATA8 flag943
    DIVF F.1 2.0 tmpf943
    CP_EQF 0.0 2.0 flag943
    SELECTF flag943 0.0 tmpf943 F.0

    JR_LTF F.0 470.0 whilebody934
  endwhile934:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer945
	DATA8 nos945
	DATA8 busy945
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer945 nos945
	JR_EQ8 0 nos945 motornotbusy945
  motorwaiting945:
	OUTPUT_TEST layer945 nos945 busy945
	JR_EQ8 busy945 0 motornotbusy945
	SLEEP
	JR motorwaiting945
  motornotbusy945:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds947
	MOVEF_32 500.0 milliseconds947
	DATA32 timer947
	TIMER_WAIT milliseconds947 timer947
	TIMER_READY timer947
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer949
	DATA8 nos949
	DATA8 busy949
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer949 nos949
	JR_EQ8 0 nos949 motornotbusy949
  motorwaiting949:
	OUTPUT_TEST layer949 nos949 busy949
	JR_EQ8 busy949 0 motornotbusy949
	SLEEP
	JR motorwaiting949
  motornotbusy949:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer950
	DATA8 nos950
	DATA8 busy950
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer950 nos950
	JR_EQ8 0 nos950 motornotbusy950
  motorwaiting950:
	OUTPUT_TEST layer950 nos950 busy950
	JR_EQ8 busy950 0 motornotbusy950
	SLEEP
	JR motorwaiting950
  motornotbusy950:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB951:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB952:
    WRITE32 ENDSUB_F_PR_0:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB953:
    CALL MOTOR.RESETCOUNT 'bc'
  while955:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf959
    DATA8 flag959
    DIVF F.1 2.0 tmpf959
    CP_EQF 0.0 2.0 flag959
    SELECTF flag959 0.0 tmpf959 F.0

    JR_GTEQF F.0 270.0 endwhile955
  whilebody955:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB960:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf964
    DATA8 flag964
    DIVF F.1 2.0 tmpf964
    CP_EQF 0.0 2.0 flag964
    SELECTF flag964 0.0 tmpf964 F.0

    JR_LTF F.0 270.0 whilebody955
  endwhile955:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds967
	MOVEF_32 500.0 milliseconds967
	DATA32 timer967
	TIMER_WAIT milliseconds967 timer967
	TIMER_READY timer967
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer969
	DATA8 no969
	DATA8 mode8969
	
	MOVEF_8 2.0 no969
	SUB8 no969 1 no969
	DIV8 no969 4 layer969
	MATH MOD8 no969 4 no969

	MOVEF_8 0.0 mode8969
	
	INPUT_DEVICE READY_RAW layer969 no969 0 mode8969 0
    DATA8 layer970
	DATA8 no970
	DATA8 mode8970
	
	MOVEF_8 3.0 no970
	SUB8 no970 1 no970
	DIV8 no970 4 layer970
	MATH MOD8 no970 4 no970

	MOVEF_8 0.0 mode8970
	
	INPUT_DEVICE READY_RAW layer970 no970 0 mode8970 0
  while971:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and973
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or972
  and973:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and976
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or972
  and976:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile971
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile971
  or972:
  whilebody971:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and982
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody971
  and982:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and985
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody971
  and985:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and988
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody971
  and988:
  endwhile971:
  while991:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile991
  whilebody991:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody991
  endwhile991:
    CALL MOTOR.STOP 'B' 'True'
  while996:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile996
  whilebody996:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody996
  endwhile996:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1001
	DATA8 nos1001
	DATA8 busy1001
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1001 nos1001
	JR_EQ8 0 nos1001 motornotbusy1001
  motorwaiting1001:
	OUTPUT_TEST layer1001 nos1001 busy1001
	JR_EQ8 busy1001 0 motornotbusy1001
	SLEEP
	JR motorwaiting1001
  motornotbusy1001:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1003
	DATA8 nos1003
	DATA8 busy1003
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1003 nos1003
	JR_EQ8 0 nos1003 motornotbusy1003
  motorwaiting1003:
	OUTPUT_TEST layer1003 nos1003 busy1003
	JR_EQ8 busy1003 0 motornotbusy1003
	SLEEP
	JR motorwaiting1003
  motornotbusy1003:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1005:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1006:
  while1007:
    JR_LTEQF VGV_S3 10.0 endwhile1007
  whilebody1007:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1008:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1009:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1007
  endwhile1007:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1011:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1012:
  while1013:
    JR_GTEQF VGV_S3 55.0 endwhile1013
  whilebody1013:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1014:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1015:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1013
  endwhile1013:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1000.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1018
    DATA8 flag1018
    DIVF 360.0 VGV_L tmpf1018
    CP_EQF 0.0 VGV_L flag1018
    SELECTF flag1018 0.0 tmpf1018 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1021:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1021
  whilebody1021:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1023:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1021
  endwhile1021:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1026:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1027:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1028:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1030:
    CALL MOTOR.RESETCOUNT 'bc'
  while1032:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1036
    DATA8 flag1036
    DIVF F.1 2.0 tmpf1036
    CP_EQF 0.0 2.0 flag1036
    SELECTF flag1036 0.0 tmpf1036 F.0

    JR_GTEQF F.0 270.0 endwhile1032
  whilebody1032:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1037:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1041
    DATA8 flag1041
    DIVF F.1 2.0 tmpf1041
    CP_EQF 0.0 2.0 flag1041
    SELECTF flag1041 0.0 tmpf1041 F.0

    JR_LTF F.0 270.0 whilebody1032
  endwhile1032:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1043
	DATA8 nos1043
	DATA8 busy1043
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1043 nos1043
	JR_EQ8 0 nos1043 motornotbusy1043
  motorwaiting1043:
	OUTPUT_TEST layer1043 nos1043 busy1043
	JR_EQ8 busy1043 0 motornotbusy1043
	SLEEP
	JR motorwaiting1043
  motornotbusy1043:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1045
	MOVEF_32 500.0 milliseconds1045
	DATA32 timer1045
	TIMER_WAIT milliseconds1045 timer1045
	TIMER_READY timer1045
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1047
	DATA8 nos1047
	DATA8 busy1047
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1047 nos1047
	JR_EQ8 0 nos1047 motornotbusy1047
  motorwaiting1047:
	OUTPUT_TEST layer1047 nos1047 busy1047
	JR_EQ8 busy1047 0 motornotbusy1047
	SLEEP
	JR motorwaiting1047
  motornotbusy1047:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1048
	DATA8 nos1048
	DATA8 busy1048
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1048 nos1048
	JR_EQ8 0 nos1048 motornotbusy1048
  motorwaiting1048:
	OUTPUT_TEST layer1048 nos1048 busy1048
	JR_EQ8 busy1048 0 motornotbusy1048
	SLEEP
	JR motorwaiting1048
  motornotbusy1048:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1049:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1050:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1051
	DATA8 nos1051
	DATA8 busy1051
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1051 nos1051
	JR_EQ8 0 nos1051 motornotbusy1051
  motorwaiting1051:
	OUTPUT_TEST layer1051 nos1051 busy1051
	JR_EQ8 busy1051 0 motornotbusy1051
	SLEEP
	JR motorwaiting1051
  motornotbusy1051:
    PROGRAM_STOP -1
    JR endif928
  else928_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1053:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1054:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1056:
    CALL MOTOR.RESETCOUNT 'bc'
  while1058:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1062
    DATA8 flag1062
    DIVF F.1 2.0 tmpf1062
    CP_EQF 0.0 2.0 flag1062
    SELECTF flag1062 0.0 tmpf1062 F.0

    JR_GTEQF F.0 470.0 endwhile1058
  whilebody1058:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1063:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1067
    DATA8 flag1067
    DIVF F.1 2.0 tmpf1067
    CP_EQF 0.0 2.0 flag1067
    SELECTF flag1067 0.0 tmpf1067 F.0

    JR_LTF F.0 470.0 whilebody1058
  endwhile1058:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1069
	DATA8 nos1069
	DATA8 busy1069
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1069 nos1069
	JR_EQ8 0 nos1069 motornotbusy1069
  motorwaiting1069:
	OUTPUT_TEST layer1069 nos1069 busy1069
	JR_EQ8 busy1069 0 motornotbusy1069
	SLEEP
	JR motorwaiting1069
  motornotbusy1069:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1071
	MOVEF_32 500.0 milliseconds1071
	DATA32 timer1071
	TIMER_WAIT milliseconds1071 timer1071
	TIMER_READY timer1071
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 50.0 'true'

	DATA8 layer1073
	DATA8 nos1073
	DATA8 busy1073
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1073 nos1073
	JR_EQ8 0 nos1073 motornotbusy1073
  motorwaiting1073:
	OUTPUT_TEST layer1073 nos1073 busy1073
	JR_EQ8 busy1073 0 motornotbusy1073
	SLEEP
	JR motorwaiting1073
  motornotbusy1073:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1074
	DATA8 nos1074
	DATA8 busy1074
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1074 nos1074
	JR_EQ8 0 nos1074 motornotbusy1074
  motorwaiting1074:
	OUTPUT_TEST layer1074 nos1074 busy1074
	JR_EQ8 busy1074 0 motornotbusy1074
	SLEEP
	JR motorwaiting1074
  motornotbusy1074:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1075:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1076:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1077
	DATA8 nos1077
	DATA8 busy1077
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1077 nos1077
	JR_EQ8 0 nos1077 motornotbusy1077
  motorwaiting1077:
	OUTPUT_TEST layer1077 nos1077 busy1077
	JR_EQ8 busy1077 0 motornotbusy1077
	SLEEP
	JR motorwaiting1077
  motornotbusy1077:
    PROGRAM_STOP -1
  else928_2:
  endif928:
  else901_1:
  endif901:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1080
	DATA8 nos1080
	DATA8 busy1080
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1080 nos1080
	JR_EQ8 0 nos1080 motornotbusy1080
  motorwaiting1080:
	OUTPUT_TEST layer1080 nos1080 busy1080
	JR_EQ8 busy1080 0 motornotbusy1080
	SLEEP
	JR motorwaiting1080
  motornotbusy1080:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1081
	DATA8 nos1081
	DATA8 busy1081
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1081 nos1081
	JR_EQ8 0 nos1081 motornotbusy1081
  motorwaiting1081:
	OUTPUT_TEST layer1081 nos1081 busy1081
	JR_EQ8 busy1081 0 motornotbusy1081
	SLEEP
	JR motorwaiting1081
  motornotbusy1081:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1083
	DATA8 nos1083
	DATA8 busy1083
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1083 nos1083
	JR_EQ8 0 nos1083 motornotbusy1083
  motorwaiting1083:
	OUTPUT_TEST layer1083 nos1083 busy1083
	JR_EQ8 busy1083 0 motornotbusy1083
	SLEEP
	JR motorwaiting1083
  motornotbusy1083:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1084
	DATA8 nos1084
	DATA8 busy1084
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1084 nos1084
	JR_EQ8 0 nos1084 motornotbusy1084
  motorwaiting1084:
	OUTPUT_TEST layer1084 nos1084 busy1084
	JR_EQ8 busy1084 0 motornotbusy1084
	SLEEP
	JR motorwaiting1084
  motornotbusy1084:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1086
    DATA8 flag1086
    DIVF 360.0 VGV_L tmpf1086
    CP_EQF 0.0 VGV_L flag1086
    SELECTF flag1086 0.0 tmpf1086 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1089:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1089
  whilebody1089:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1091 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1091:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1089
  endwhile1089:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1094:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1096
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1096
    JR_NEQ32 0 tmp1096 alreadylaunched1096
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1096:
ENDTHREAD:
    RETURN
SUB_F_SB2_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1097:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1098:
  while1099:
    JR_LTEQF VGV_S3 10.0 and1101
    JR_GTF VGV_S2 10.0 or1100
  and1101:
    JR_GTEQF VGV_S3 10.0 endwhile1099
    JR_GTEQF VGV_S2 10.0 endwhile1099
  or1100:
  whilebody1099:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1102:
    JR_LTEQF VGV_S3 10.0 and1103
    JR_GTF VGV_S2 10.0 whilebody1099
  and1103:
    JR_GTEQF VGV_S3 10.0 and1104
    JR_LTF VGV_S2 10.0 whilebody1099
  and1104:
  endwhile1099:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1106
	DATA8 nos1106
	DATA8 busy1106
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1106 nos1106
	JR_EQ8 0 nos1106 motornotbusy1106
  motorwaiting1106:
	OUTPUT_TEST layer1106 nos1106 busy1106
	JR_EQ8 busy1106 0 motornotbusy1106
	SLEEP
	JR motorwaiting1106
  motornotbusy1106:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1107
	DATA8 nos1107
	DATA8 busy1107
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1107 nos1107
	JR_EQ8 0 nos1107 motornotbusy1107
  motorwaiting1107:
	OUTPUT_TEST layer1107 nos1107 busy1107
	JR_EQ8 busy1107 0 motornotbusy1107
	SLEEP
	JR motorwaiting1107
  motornotbusy1107:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer1108
	DATA8 nos1108
	DATA8 busy1108
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1108 nos1108
	JR_EQ8 0 nos1108 motornotbusy1108
  motorwaiting1108:
	OUTPUT_TEST layer1108 nos1108 busy1108
	JR_EQ8 busy1108 0 motornotbusy1108
	SLEEP
	JR motorwaiting1108
  motornotbusy1108:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1109:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1110:
  while1111:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile1111
  whilebody1111:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody1111
  endwhile1111:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1116:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1117:
  while1118:
    JR_GTEQF VGV_S3 55.0 endwhile1118
  whilebody1118:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1119:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1120:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 55.0 whilebody1118
  endwhile1118:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1123
	DATA8 nos1123
	DATA8 busy1123
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1123 nos1123
	JR_EQ8 0 nos1123 motornotbusy1123
  motorwaiting1123:
	OUTPUT_TEST layer1123 nos1123 busy1123
	JR_EQ8 busy1123 0 motornotbusy1123
	SLEEP
	JR motorwaiting1123
  motornotbusy1123:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1124:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1125
    DATA8 flag1125
    DIVF 360.0 VGV_L tmpf1125
    CP_EQF 0.0 VGV_L flag1125
    SELECTF flag1125 0.0 tmpf1125 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1128:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1132
    DATA8 flag1132
    DIVF F.1 2.0 tmpf1132
    CP_EQF 0.0 2.0 flag1132
    SELECTF flag1132 0.0 tmpf1132 F.0

    JR_GTEQF F.0 VGV_X endwhile1128
  whilebody1128:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1133:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1134:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1135:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1139
    DATA8 flag1139
    DIVF F.1 2.0 tmpf1139
    CP_EQF 0.0 2.0 flag1139
    SELECTF flag1139 0.0 tmpf1139 F.0

    JR_LTF F.0 VGV_X whilebody1128
  endwhile1128:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1141:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1142:
  while1143:
    JR_LTEQF VGV_S3 15.0 and1145
    JR_GTF VGV_S2 15.0 or1144
  and1145:
    JR_GTEQF VGV_S3 15.0 endwhile1143
    JR_GTEQF VGV_S2 15.0 endwhile1143
  or1144:
  whilebody1143:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1146:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1147:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1148:
    JR_LTEQF VGV_S3 15.0 and1149
    JR_GTF VGV_S2 15.0 whilebody1143
  and1149:
    JR_GTEQF VGV_S3 15.0 and1150
    JR_LTF VGV_S2 15.0 whilebody1143
  and1150:
  endwhile1143:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1152
	DATA8 nos1152
	DATA8 busy1152
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1152 nos1152
	JR_EQ8 0 nos1152 motornotbusy1152
  motorwaiting1152:
	OUTPUT_TEST layer1152 nos1152 busy1152
	JR_EQ8 busy1152 0 motornotbusy1152
	SLEEP
	JR motorwaiting1152
  motornotbusy1152:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1153:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1154:
  while1155:
    JR_GTEQF VGV_S2 60.0 endwhile1155
  whilebody1155:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1155
  endwhile1155:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1159:
  while1160:
    JR_LTEQF VGV_S3 10.0 and1162
    JR_GTF VGV_S2 10.0 or1161
  and1162:
    JR_GTEQF VGV_S3 10.0 endwhile1160
    JR_GTEQF VGV_S2 10.0 endwhile1160
  or1161:
  whilebody1160:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1163:
    JR_LTEQF VGV_S3 10.0 and1164
    JR_GTF VGV_S2 10.0 whilebody1160
  and1164:
    JR_GTEQF VGV_S3 10.0 and1165
    JR_LTF VGV_S2 10.0 whilebody1160
  and1165:
  endwhile1160:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1167
    DATA8 flag1167
    DIVF 360.0 VGV_L tmpf1167
    CP_EQF 0.0 VGV_L flag1167
    SELECTF flag1167 0.0 tmpf1167 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1170:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1174
    DATA8 flag1174
    DIVF F.1 2.0 tmpf1174
    CP_EQF 0.0 2.0 flag1174
    SELECTF flag1174 0.0 tmpf1174 F.0

    JR_GTEQF F.0 VGV_X endwhile1170
  whilebody1170:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1175:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1176:
    JR_GTEQF VGV_SPEED 80.0 else1177_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1177_1:
  endif1177:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1179:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1183
    DATA8 flag1183
    DIVF F.1 2.0 tmpf1183
    CP_EQF 0.0 2.0 flag1183
    SELECTF flag1183 0.0 tmpf1183 F.0

    JR_LTF F.0 VGV_X whilebody1170
  endwhile1170:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1185:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1186:
  while1187:
    JR_LTEQF VGV_S3 15.0 and1189
    JR_GTF VGV_S2 15.0 or1188
  and1189:
    JR_GTEQF VGV_S3 15.0 endwhile1187
    JR_GTEQF VGV_S2 15.0 endwhile1187
  or1188:
  whilebody1187:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1190:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1191:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1192:
    JR_LTEQF VGV_S3 15.0 and1193
    JR_GTF VGV_S2 15.0 whilebody1187
  and1193:
    JR_GTEQF VGV_S3 15.0 and1194
    JR_LTF VGV_S2 15.0 whilebody1187
  and1194:
  endwhile1187:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.225 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 40.0 'true'

	DATA8 layer1196
	DATA8 nos1196
	DATA8 busy1196
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1196 nos1196
	JR_EQ8 0 nos1196 motornotbusy1196
  motorwaiting1196:
	OUTPUT_TEST layer1196 nos1196 busy1196
	JR_EQ8 busy1196 0 motornotbusy1196
	SLEEP
	JR motorwaiting1196
  motornotbusy1196:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1198
	DATA8 nos1198
	DATA8 busy1198
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1198 nos1198
	JR_EQ8 0 nos1198 motornotbusy1198
  motorwaiting1198:
	OUTPUT_TEST layer1198 nos1198 busy1198
	JR_EQ8 busy1198 0 motornotbusy1198
	SLEEP
	JR motorwaiting1198
  motornotbusy1198:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1199:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1200:
  while1201:
    JR_LTEQF VGV_S2 15.0 endwhile1201
  whilebody1201:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1202:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1203:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1201
  endwhile1201:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1207:
  while1208:
    JR_GTEQF VGV_S2 55.0 endwhile1208
  whilebody1208:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1209:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1210:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1208
  endwhile1208:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer1213
	DATA8 nos1213
	DATA8 busy1213
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1213 nos1213
	JR_EQ8 0 nos1213 motornotbusy1213
  motorwaiting1213:
	OUTPUT_TEST layer1213 nos1213 busy1213
	JR_EQ8 busy1213 0 motornotbusy1213
	SLEEP
	JR motorwaiting1213
  motornotbusy1213:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1215
	DATA8 nos1215
	DATA8 busy1215
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1215 nos1215
	JR_EQ8 0 nos1215 motornotbusy1215
  motorwaiting1215:
	OUTPUT_TEST layer1215 nos1215 busy1215
	JR_EQ8 busy1215 0 motornotbusy1215
	SLEEP
	JR motorwaiting1215
  motornotbusy1215:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1216:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1217:
  while1218:
    JR_LTEQF VGV_S3 15.0 endwhile1218
  whilebody1218:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1220:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody1218
  endwhile1218:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1223:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1224:
  while1225:
    JR_GTEQF VGV_S3 60.0 endwhile1225
  whilebody1225:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1226:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1227:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1225
  endwhile1225:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1230:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1231:
  while1232:
    JR_LTEQF VGV_S2 9.0 and1234
    JR_GTF VGV_S3 9.0 or1233
  and1234:
    JR_GTEQF VGV_S2 9.0 and1235
    JR_GTF VGV_S3 9.0 or1233
  and1235:
    JR_LTEQF VGV_S2 9.0 endwhile1232
    JR_GTEQF VGV_S3 9.0 endwhile1232
  or1233:
  whilebody1232:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1236:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1237:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1239
    JR_GTF VGV_S3 9.0 whilebody1232
  and1239:
    JR_GTEQF VGV_S2 9.0 and1240
    JR_GTF VGV_S3 9.0 whilebody1232
  and1240:
    JR_LTEQF VGV_S2 9.0 and1241
    JR_LTF VGV_S3 9.0 whilebody1232
  and1241:
  endwhile1232:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 53.0 'true'

	DATA8 layer1242
	DATA8 nos1242
	DATA8 busy1242
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1242 nos1242
	JR_EQ8 0 nos1242 motornotbusy1242
  motorwaiting1242:
	OUTPUT_TEST layer1242 nos1242 busy1242
	JR_EQ8 busy1242 0 motornotbusy1242
	SLEEP
	JR motorwaiting1242
  motornotbusy1242:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1244
	DATA8 nos1244
	DATA8 busy1244
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1244 nos1244
	JR_EQ8 0 nos1244 motornotbusy1244
  motorwaiting1244:
	OUTPUT_TEST layer1244 nos1244 busy1244
	JR_EQ8 busy1244 0 motornotbusy1244
	SLEEP
	JR motorwaiting1244
  motornotbusy1244:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1246:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1247:
  while1248:
    JR_LTEQF VGV_S2 10.0 endwhile1248
  whilebody1248:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1249:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1250:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1248
  endwhile1248:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1252:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1253:
  while1254:
    JR_GTEQF VGV_S2 60.0 endwhile1254
  whilebody1254:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1255:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1256:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1254
  endwhile1254:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1259:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1260
	DATA8 nos1260
	DATA8 busy1260
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1260 nos1260
	JR_EQ8 0 nos1260 motornotbusy1260
  motorwaiting1260:
	OUTPUT_TEST layer1260 nos1260 busy1260
	JR_EQ8 busy1260 0 motornotbusy1260
	SLEEP
	JR motorwaiting1260
  motornotbusy1260:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1262
	DATA8 nos1262
	DATA8 busy1262
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1262 nos1262
	JR_EQ8 0 nos1262 motornotbusy1262
  motorwaiting1262:
	OUTPUT_TEST layer1262 nos1262 busy1262
	JR_EQ8 busy1262 0 motornotbusy1262
	SLEEP
	JR motorwaiting1262
  motornotbusy1262:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1264:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1265:
  while1266:
    JR_LTEQF VGV_S3 8.0 endwhile1266
  whilebody1266:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1267:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1268:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1266
  endwhile1266:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1270:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1271:
  while1272:
    JR_GTEQF VGV_S3 55.0 endwhile1272
  whilebody1272:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1273:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1274:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1272
  endwhile1272:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1277
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1277
    JR_NEQ32 0 tmp1277 alreadylaunched1277
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1277:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1278:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1279:
  while1280:
    JR_LTEQF VGV_S3 15.0 and1282
    JR_GTF VGV_S2 15.0 or1281
  and1282:
    JR_GTEQF VGV_S3 15.0 and1283
    JR_GTF VGV_S2 15.0 or1281
  and1283:
    JR_LTEQF VGV_S3 15.0 endwhile1280
    JR_GTEQF VGV_S2 15.0 endwhile1280
  or1281:
  whilebody1280:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1285:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1286:
    JR_LTEQF VGV_S3 15.0 and1287
    JR_GTF VGV_S2 15.0 whilebody1280
  and1287:
    JR_GTEQF VGV_S3 15.0 and1288
    JR_GTF VGV_S2 15.0 whilebody1280
  and1288:
    JR_LTEQF VGV_S3 15.0 and1289
    JR_LTF VGV_S2 15.0 whilebody1280
  and1289:
  endwhile1280:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1291
	DATA8 nos1291
	DATA8 busy1291
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1291 nos1291
	JR_EQ8 0 nos1291 motornotbusy1291
  motorwaiting1291:
	OUTPUT_TEST layer1291 nos1291 busy1291
	JR_EQ8 busy1291 0 motornotbusy1291
	SLEEP
	JR motorwaiting1291
  motornotbusy1291:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1292
	DATA8 nos1292
	DATA8 busy1292
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1292 nos1292
	JR_EQ8 0 nos1292 motornotbusy1292
  motorwaiting1292:
	OUTPUT_TEST layer1292 nos1292 busy1292
	JR_EQ8 busy1292 0 motornotbusy1292
	SLEEP
	JR motorwaiting1292
  motornotbusy1292:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1295:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1296:
  while1297:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1297
  whilebody1297:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1299:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1300:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1301:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1297
  endwhile1297:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1305
	MOVEF_32 500.0 milliseconds1305
	DATA32 timer1305
	TIMER_WAIT milliseconds1305 timer1305
	TIMER_READY timer1305
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1307
	DATA8 nos1307
	DATA8 busy1307
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1307 nos1307
	JR_EQ8 0 nos1307 motornotbusy1307
  motorwaiting1307:
	OUTPUT_TEST layer1307 nos1307 busy1307
	JR_EQ8 busy1307 0 motornotbusy1307
	SLEEP
	JR motorwaiting1307
  motornotbusy1307:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -80.0
    DATA32 milliseconds1309
	MOVEF_32 2000.0 milliseconds1309
	DATA32 timer1309
	TIMER_WAIT milliseconds1309 timer1309
	TIMER_READY timer1309
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1311
	DATA8 nos1311
	DATA8 busy1311
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1311 nos1311
	JR_EQ8 0 nos1311 motornotbusy1311
  motorwaiting1311:
	OUTPUT_TEST layer1311 nos1311 busy1311
	JR_EQ8 busy1311 0 motornotbusy1311
	SLEEP
	JR motorwaiting1311
  motornotbusy1311:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1312
	DATA8 nos1312
	DATA8 busy1312
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1312 nos1312
	JR_EQ8 0 nos1312 motornotbusy1312
  motorwaiting1312:
	OUTPUT_TEST layer1312 nos1312 busy1312
	JR_EQ8 busy1312 0 motornotbusy1312
	SLEEP
	JR motorwaiting1312
  motornotbusy1312:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1313
	DATA8 nos1313
	DATA8 busy1313
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1313 nos1313
	JR_EQ8 0 nos1313 motornotbusy1313
  motorwaiting1313:
	OUTPUT_TEST layer1313 nos1313 busy1313
	JR_EQ8 busy1313 0 motornotbusy1313
	SLEEP
	JR motorwaiting1313
  motornotbusy1313:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1314:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 40.0 'true'

	DATA8 layer1315
	DATA8 nos1315
	DATA8 busy1315
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1315 nos1315
	JR_EQ8 0 nos1315 motornotbusy1315
  motorwaiting1315:
	OUTPUT_TEST layer1315 nos1315 busy1315
	JR_EQ8 busy1315 0 motornotbusy1315
	SLEEP
	JR motorwaiting1315
  motornotbusy1315:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1316
	DATA8 nos1316
	DATA8 busy1316
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1316 nos1316
	JR_EQ8 0 nos1316 motornotbusy1316
  motorwaiting1316:
	OUTPUT_TEST layer1316 nos1316 busy1316
	JR_EQ8 busy1316 0 motornotbusy1316
	SLEEP
	JR motorwaiting1316
  motornotbusy1316:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1318:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1319:
  while1320:
    JR_LTEQF VGV_S2 15.0 endwhile1320
  whilebody1320:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1321:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1322:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1320
  endwhile1320:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1325:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1326:
  while1327:
    JR_GTEQF VGV_S2 50.0 endwhile1327
  whilebody1327:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1328:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1329:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1327
  endwhile1327:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1332:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1333:
  while1334:
    JR_LTEQF VGV_S3 15.0 and1336
    JR_GTF VGV_S2 15.0 or1335
  and1336:
    JR_GTEQF VGV_S3 15.0 endwhile1334
    JR_GTEQF VGV_S2 15.0 endwhile1334
  or1335:
  whilebody1334:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1337:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1338:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1339:
    JR_LTEQF VGV_S3 15.0 and1340
    JR_GTF VGV_S2 15.0 whilebody1334
  and1340:
    JR_GTEQF VGV_S3 15.0 and1341
    JR_LTF VGV_S2 15.0 whilebody1334
  and1341:
  endwhile1334:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1343:
    CALL MOTOR.RESETCOUNT 'bc'
  while1345:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1349
    DATA8 flag1349
    DIVF F.1 2.0 tmpf1349
    CP_EQF 0.0 2.0 flag1349
    SELECTF flag1349 0.0 tmpf1349 F.0

    JR_GTEQF F.0 200.0 endwhile1345
  whilebody1345:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1350:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1354
    DATA8 flag1354
    DIVF F.1 2.0 tmpf1354
    CP_EQF 0.0 2.0 flag1354
    SELECTF flag1354 0.0 tmpf1354 F.0

    JR_LTF F.0 200.0 whilebody1345
  endwhile1345:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1356:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1357:
    MOVEF_F 1.0 VGV_I
  for1358:
    JR_GTF VGV_I 1.0 endfor1358
  forbody1358:
    MOVEF_F 0.33 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1359:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1360:
  while1361:
    JR_LTEQF VGV_S3 15.0 and1363
    JR_GTF VGV_S2 15.0 or1362
  and1363:
    JR_GTEQF VGV_S3 15.0 endwhile1361
    JR_GTEQF VGV_S2 15.0 endwhile1361
  or1362:
  whilebody1361:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1364:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1365:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1366:
    JR_LTEQF VGV_S3 15.0 and1367
    JR_GTF VGV_S2 15.0 whilebody1361
  and1367:
    JR_GTEQF VGV_S3 15.0 and1368
    JR_LTF VGV_S2 15.0 whilebody1361
  and1368:
  endwhile1361:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1370
	DATA8 nos1370
	DATA8 busy1370
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1370 nos1370
	JR_EQ8 0 nos1370 motornotbusy1370
  motorwaiting1370:
	OUTPUT_TEST layer1370 nos1370 busy1370
	JR_EQ8 busy1370 0 motornotbusy1370
	SLEEP
	JR motorwaiting1370
  motornotbusy1370:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1358
  endfor1358:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 30.0 'true'

	DATA8 layer1372
	DATA8 nos1372
	DATA8 busy1372
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1372 nos1372
	JR_EQ8 0 nos1372 motornotbusy1372
  motorwaiting1372:
	OUTPUT_TEST layer1372 nos1372 busy1372
	JR_EQ8 busy1372 0 motornotbusy1372
	SLEEP
	JR motorwaiting1372
  motornotbusy1372:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 178.0 'true'

	DATA8 layer1374
	DATA8 nos1374
	DATA8 busy1374
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1374 nos1374
	JR_EQ8 0 nos1374 motornotbusy1374
  motorwaiting1374:
	OUTPUT_TEST layer1374 nos1374 busy1374
	JR_EQ8 busy1374 0 motornotbusy1374
	SLEEP
	JR motorwaiting1374
  motornotbusy1374:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 145.0 'true'

	DATA8 layer1375
	DATA8 nos1375
	DATA8 busy1375
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1375 nos1375
	JR_EQ8 0 nos1375 motornotbusy1375
  motorwaiting1375:
	OUTPUT_TEST layer1375 nos1375 busy1375
	JR_EQ8 busy1375 0 motornotbusy1375
	SLEEP
	JR motorwaiting1375
  motornotbusy1375:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1377
	MOVEF_32 500.0 milliseconds1377
	DATA32 timer1377
	TIMER_WAIT milliseconds1377 timer1377
	TIMER_READY timer1377
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 110.0 'true'

	DATA8 layer1379
	DATA8 nos1379
	DATA8 busy1379
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1379 nos1379
	JR_EQ8 0 nos1379 motornotbusy1379
  motorwaiting1379:
	OUTPUT_TEST layer1379 nos1379 busy1379
	JR_EQ8 busy1379 0 motornotbusy1379
	SLEEP
	JR motorwaiting1379
  motornotbusy1379:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 390.0 'true'

	DATA8 layer1380
	DATA8 nos1380
	DATA8 busy1380
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1380 nos1380
	JR_EQ8 0 nos1380 motornotbusy1380
  motorwaiting1380:
	OUTPUT_TEST layer1380 nos1380 busy1380
	JR_EQ8 busy1380 0 motornotbusy1380
	SLEEP
	JR motorwaiting1380
  motornotbusy1380:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1381:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1382:
  while1383:
    JR_LTEQF VGV_S3 10.0 and1385
    JR_GTF VGV_S2 10.0 or1384
  and1385:
    JR_GTEQF VGV_S3 10.0 and1386
    JR_GTF VGV_S2 10.0 or1384
  and1386:
    JR_LTEQF VGV_S3 6.0 endwhile1383
    JR_GTEQF VGV_S2 6.0 endwhile1383
  or1384:
  whilebody1383:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1387:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1388:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1390
    JR_GTF VGV_S2 10.0 whilebody1383
  and1390:
    JR_GTEQF VGV_S3 10.0 and1391
    JR_GTF VGV_S2 10.0 whilebody1383
  and1391:
    JR_LTEQF VGV_S3 6.0 and1392
    JR_LTF VGV_S2 6.0 whilebody1383
  and1392:
  endwhile1383:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1394
	DATA8 nos1394
	DATA8 busy1394
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1394 nos1394
	JR_EQ8 0 nos1394 motornotbusy1394
  motorwaiting1394:
	OUTPUT_TEST layer1394 nos1394 busy1394
	JR_EQ8 busy1394 0 motornotbusy1394
	SLEEP
	JR motorwaiting1394
  motornotbusy1394:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1396:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1397:
  while1398:
    JR_LTEQF VGV_S3 10.0 endwhile1398
  whilebody1398:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1399:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1400:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1398
  endwhile1398:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1403:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1404:
  while1405:
    JR_GTEQF VGV_S3 60.0 endwhile1405
  whilebody1405:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1406:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1407:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1405
  endwhile1405:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1410
	MOVEF_32 100.0 milliseconds1410
	DATA32 timer1410
	TIMER_WAIT milliseconds1410 timer1410
	TIMER_READY timer1410
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    MOVEF_F 0.33 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1411:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1412:
  while1413:
    JR_LTEQF VGV_S3 15.0 and1415
    JR_GTF VGV_S2 15.0 or1414
  and1415:
    JR_GTEQF VGV_S3 15.0 endwhile1413
    JR_GTEQF VGV_S2 15.0 endwhile1413
  or1414:
  whilebody1413:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1416:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1417:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1418:
    JR_LTEQF VGV_S3 15.0 and1419
    JR_GTF VGV_S2 15.0 whilebody1413
  and1419:
    JR_GTEQF VGV_S3 15.0 and1420
    JR_LTF VGV_S2 15.0 whilebody1413
  and1420:
  endwhile1413:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_PR_0:CALLSUB1422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1422:
    CALL MOTOR.RESETCOUNT 'bc'
  while1424:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1428
    DATA8 flag1428
    DIVF F.1 2.0 tmpf1428
    CP_EQF 0.0 2.0 flag1428
    SELECTF flag1428 0.0 tmpf1428 F.0

    JR_GTEQF F.0 200.0 endwhile1424
  whilebody1424:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1429:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1433
    DATA8 flag1433
    DIVF F.1 2.0 tmpf1433
    CP_EQF 0.0 2.0 flag1433
    SELECTF flag1433 0.0 tmpf1433 F.0

    JR_LTF F.0 200.0 whilebody1424
  endwhile1424:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1435:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1436:
    MOVEF_F 1.0 VGV_I
  for1437:
    JR_GTF VGV_I 2.0 endfor1437
  forbody1437:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1438
	DATA8 nos1438
	DATA8 busy1438
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1438 nos1438
	JR_EQ8 0 nos1438 motornotbusy1438
  motorwaiting1438:
	OUTPUT_TEST layer1438 nos1438 busy1438
	JR_EQ8 busy1438 0 motornotbusy1438
	SLEEP
	JR motorwaiting1438
  motornotbusy1438:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1439:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1440:
  while1441:
    JR_LTEQF VGV_S3 15.0 and1443
    JR_GTF VGV_S2 15.0 or1442
  and1443:
    JR_GTEQF VGV_S3 15.0 endwhile1441
    JR_GTEQF VGV_S2 15.0 endwhile1441
  or1442:
  whilebody1441:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1444:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1445:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1446:
    JR_LTEQF VGV_S3 15.0 and1447
    JR_GTF VGV_S2 15.0 whilebody1441
  and1447:
    JR_GTEQF VGV_S3 15.0 and1448
    JR_LTF VGV_S2 15.0 whilebody1441
  and1448:
  endwhile1441:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1437
  endfor1437:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1451
	DATA8 nos1451
	DATA8 busy1451
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1451 nos1451
	JR_EQ8 0 nos1451 motornotbusy1451
  motorwaiting1451:
	OUTPUT_TEST layer1451 nos1451 busy1451
	JR_EQ8 busy1451 0 motornotbusy1451
	SLEEP
	JR motorwaiting1451
  motornotbusy1451:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1453:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1454:
    MOVEF_F 80.0 VGV_J
  while1455:
    JR_LTEQF VGV_S3 10.0 endwhile1455
  whilebody1455:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1456:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1457:
    JR_LTEQF VGV_J 30.0 else1458_1
    SUBF VGV_J 0.1 VGV_J
  else1458_1:
  endif1458:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1455
  endwhile1455:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1462:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1463:
    MOVEF_F 80.0 VGV_J
  while1464:
    JR_GTEQF VGV_S3 15.0 endwhile1464
  whilebody1464:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1465:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1466:
    JR_LTEQF VGV_J 30.0 else1467_1
    SUBF VGV_J 0.1 VGV_J
  else1467_1:
  endif1467:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1464
  endwhile1464:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1472:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1476
    DATA8 flag1476
    DIVF F.1 2.0 tmpf1476
    CP_EQF 0.0 2.0 flag1476
    SELECTF flag1476 0.0 tmpf1476 F.0

    JR_GTEQF F.0 50.0 endwhile1472
  whilebody1472:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1477:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1478:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1479:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1480:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1482
    DATA8 flag1482
    DIVF F.1 2.0 tmpf1482
    CP_EQF 0.0 2.0 flag1482
    SELECTF flag1482 0.0 tmpf1482 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1494
    DATA8 flag1494
    DIVF F.1 2.0 tmpf1494
    CP_EQF 0.0 2.0 flag1494
    SELECTF flag1494 0.0 tmpf1494 F.0

    JR_LTF F.0 50.0 whilebody1472
  endwhile1472:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 18.0 95.0 'true'

	DATA8 layer1496
	DATA8 nos1496
	DATA8 busy1496
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1496 nos1496
	JR_EQ8 0 nos1496 motornotbusy1496
  motorwaiting1496:
	OUTPUT_TEST layer1496 nos1496 busy1496
	JR_EQ8 busy1496 0 motornotbusy1496
	SLEEP
	JR motorwaiting1496
  motornotbusy1496:
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 -18.0 30.0 'true'

	DATA8 layer1497
	DATA8 nos1497
	DATA8 busy1497
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1497 nos1497
	JR_EQ8 0 nos1497 motornotbusy1497
  motorwaiting1497:
	OUTPUT_TEST layer1497 nos1497 busy1497
	JR_EQ8 busy1497 0 motornotbusy1497
	SLEEP
	JR motorwaiting1497
  motornotbusy1497:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1499
	MOVEF_32 500.0 milliseconds1499
	DATA32 timer1499
	TIMER_WAIT milliseconds1499 timer1499
	TIMER_READY timer1499
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1502:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1506
    DATA8 flag1506
    DIVF F.1 2.0 tmpf1506
    CP_EQF 0.0 2.0 flag1506
    SELECTF flag1506 0.0 tmpf1506 F.0

    JR_LTEQF F.0 -260.0 endwhile1502
  whilebody1502:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1511
    DATA8 flag1511
    DIVF F.1 2.0 tmpf1511
    CP_EQF 0.0 2.0 flag1511
    SELECTF flag1511 0.0 tmpf1511 F.0

    JR_GTF F.0 -260.0 whilebody1502
  endwhile1502:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 147.0 'true'

	DATA8 layer1513
	DATA8 nos1513
	DATA8 busy1513
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1513 nos1513
	JR_EQ8 0 nos1513 motornotbusy1513
  motorwaiting1513:
	OUTPUT_TEST layer1513 nos1513 busy1513
	JR_EQ8 busy1513 0 motornotbusy1513
	SLEEP
	JR motorwaiting1513
  motornotbusy1513:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1515:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1516:
  while1517:
    JR_LTEQF VGV_S3 10.0 and1519
    JR_GTF VGV_S2 10.0 or1518
  and1519:
    JR_LTEQF VGV_S3 10.0 and1520
    JR_LTF VGV_S2 10.0 or1518
  and1520:
    JR_GTEQF VGV_S3 10.0 endwhile1517
    JR_LTEQF VGV_S2 10.0 endwhile1517
  or1518:
  whilebody1517:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1521:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1522:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1524
    JR_GTF VGV_S2 10.0 whilebody1517
  and1524:
    JR_LTEQF VGV_S3 10.0 and1525
    JR_LTF VGV_S2 10.0 whilebody1517
  and1525:
    JR_GTEQF VGV_S3 10.0 and1526
    JR_GTF VGV_S2 10.0 whilebody1517
  and1526:
  endwhile1517:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1528
	DATA8 nos1528
	DATA8 busy1528
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1528 nos1528
	JR_EQ8 0 nos1528 motornotbusy1528
  motorwaiting1528:
	OUTPUT_TEST layer1528 nos1528 busy1528
	JR_EQ8 busy1528 0 motornotbusy1528
	SLEEP
	JR motorwaiting1528
  motornotbusy1528:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1529:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1530:
  while1531:
    JR_LTEQF VGV_S3 10.0 endwhile1531
  whilebody1531:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1532:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1533:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1531
  endwhile1531:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1535:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1536:
  while1537:
    JR_GTEQF VGV_S3 15.0 endwhile1537
  whilebody1537:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1538:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1539:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1537
  endwhile1537:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    MOVEF_F 0.33 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1542:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1543:
  while1544:
    JR_LTEQF VGV_S3 20.0 and1546
    JR_GTF VGV_S2 20.0 or1545
  and1546:
    JR_GTEQF VGV_S3 20.0 endwhile1544
    JR_GTEQF VGV_S2 20.0 endwhile1544
  or1545:
  whilebody1544:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1547:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1548:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1549:
    JR_LTEQF VGV_S3 20.0 and1550
    JR_GTF VGV_S2 20.0 whilebody1544
  and1550:
    JR_GTEQF VGV_S3 20.0 and1551
    JR_LTF VGV_S2 20.0 whilebody1544
  and1551:
  endwhile1544:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1553
	DATA8 nos1553
	DATA8 busy1553
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1553 nos1553
	JR_EQ8 0 nos1553 motornotbusy1553
  motorwaiting1553:
	OUTPUT_TEST layer1553 nos1553 busy1553
	JR_EQ8 busy1553 0 motornotbusy1553
	SLEEP
	JR motorwaiting1553
  motornotbusy1553:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1554:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1555:
  while1556:
    JR_LTEQF VGV_S3 15.0 endwhile1556
  whilebody1556:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1557:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1558:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1556
  endwhile1556:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1561:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1562:
  while1563:
    JR_GTEQF VGV_S3 15.0 endwhile1563
  whilebody1563:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1564:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1565:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1563
  endwhile1563:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1569:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile1569
  whilebody1569:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1571:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody1569
  endwhile1569:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1574:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1575:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1576:
    JR_GTF VGV_I 3.0 endfor1576
  forbody1576:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1577:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1578:
  while1579:
    JR_LTEQF VGV_S3 15.0 and1581
    JR_GTF VGV_S2 15.0 or1580
  and1581:
    JR_GTEQF VGV_S3 15.0 endwhile1579
    JR_GTEQF VGV_S2 15.0 endwhile1579
  or1580:
  whilebody1579:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1582:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1583:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1584:
    JR_LTEQF VGV_S3 15.0 and1585
    JR_GTF VGV_S2 15.0 whilebody1579
  and1585:
    JR_GTEQF VGV_S3 15.0 and1586
    JR_LTF VGV_S2 15.0 whilebody1579
  and1586:
  endwhile1579:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1588
	DATA8 nos1588
	DATA8 busy1588
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1588 nos1588
	JR_EQ8 0 nos1588 motornotbusy1588
  motorwaiting1588:
	OUTPUT_TEST layer1588 nos1588 busy1588
	JR_EQ8 busy1588 0 motornotbusy1588
	SLEEP
	JR motorwaiting1588
  motornotbusy1588:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1576
  endfor1576:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 170.0 'true'

	DATA8 layer1591
	DATA8 nos1591
	DATA8 busy1591
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1591 nos1591
	JR_EQ8 0 nos1591 motornotbusy1591
  motorwaiting1591:
	OUTPUT_TEST layer1591 nos1591 busy1591
	JR_EQ8 busy1591 0 motornotbusy1591
	SLEEP
	JR motorwaiting1591
  motornotbusy1591:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1592
	DATA8 nos1592
	DATA8 busy1592
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1592 nos1592
	JR_EQ8 0 nos1592 motornotbusy1592
  motorwaiting1592:
	OUTPUT_TEST layer1592 nos1592 busy1592
	JR_EQ8 busy1592 0 motornotbusy1592
	SLEEP
	JR motorwaiting1592
  motornotbusy1592:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1594
	MOVEF_32 500.0 milliseconds1594
	DATA32 timer1594
	TIMER_WAIT milliseconds1594 timer1594
	TIMER_READY timer1594
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1596
	DATA8 nos1596
	DATA8 busy1596
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1596 nos1596
	JR_EQ8 0 nos1596 motornotbusy1596
  motorwaiting1596:
	OUTPUT_TEST layer1596 nos1596 busy1596
	JR_EQ8 busy1596 0 motornotbusy1596
	SLEEP
	JR motorwaiting1596
  motornotbusy1596:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 410.0 'true'

	DATA8 layer1597
	DATA8 nos1597
	DATA8 busy1597
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1597 nos1597
	JR_EQ8 0 nos1597 motornotbusy1597
  motorwaiting1597:
	OUTPUT_TEST layer1597 nos1597 busy1597
	JR_EQ8 busy1597 0 motornotbusy1597
	SLEEP
	JR motorwaiting1597
  motornotbusy1597:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer1598
	DATA8 nos1598
	DATA8 busy1598
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1598 nos1598
	JR_EQ8 0 nos1598 motornotbusy1598
  motorwaiting1598:
	OUTPUT_TEST layer1598 nos1598 busy1598
	JR_EQ8 busy1598 0 motornotbusy1598
	SLEEP
	JR motorwaiting1598
  motornotbusy1598:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1599
	DATA8 nos1599
	DATA8 busy1599
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1599 nos1599
	JR_EQ8 0 nos1599 motornotbusy1599
  motorwaiting1599:
	OUTPUT_TEST layer1599 nos1599 busy1599
	JR_EQ8 busy1599 0 motornotbusy1599
	SLEEP
	JR motorwaiting1599
  motornotbusy1599:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1600
	DATA8 nos1600
	DATA8 busy1600
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1600 nos1600
	JR_EQ8 0 nos1600 motornotbusy1600
  motorwaiting1600:
	OUTPUT_TEST layer1600 nos1600 busy1600
	JR_EQ8 busy1600 0 motornotbusy1600
	SLEEP
	JR motorwaiting1600
  motornotbusy1600:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1601:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1602:
  while1603:
    JR_LTEQF VGV_S3 10.0 and1605
    JR_GTF VGV_S2 10.0 or1604
  and1605:
    JR_GTEQF VGV_S3 10.0 and1606
    JR_GTF VGV_S2 10.0 or1604
  and1606:
    JR_LTEQF VGV_S3 10.0 endwhile1603
    JR_GTEQF VGV_S2 10.0 endwhile1603
  or1604:
  whilebody1603:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1607:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1608:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1610
    JR_GTF VGV_S2 10.0 whilebody1603
  and1610:
    JR_GTEQF VGV_S3 10.0 and1611
    JR_GTF VGV_S2 10.0 whilebody1603
  and1611:
    JR_LTEQF VGV_S3 10.0 and1612
    JR_LTF VGV_S2 10.0 whilebody1603
  and1612:
  endwhile1603:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1614
	DATA8 nos1614
	DATA8 busy1614
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1614 nos1614
	JR_EQ8 0 nos1614 motornotbusy1614
  motorwaiting1614:
	OUTPUT_TEST layer1614 nos1614 busy1614
	JR_EQ8 busy1614 0 motornotbusy1614
	SLEEP
	JR motorwaiting1614
  motornotbusy1614:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1616
	DATA8 nos1616
	DATA8 busy1616
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1616 nos1616
	JR_EQ8 0 nos1616 motornotbusy1616
  motorwaiting1616:
	OUTPUT_TEST layer1616 nos1616 busy1616
	JR_EQ8 busy1616 0 motornotbusy1616
	SLEEP
	JR motorwaiting1616
  motornotbusy1616:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1617:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1618:
  while1619:
    JR_LTEQF VGV_S3 15.0 endwhile1619
  whilebody1619:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1620:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1621:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1619
  endwhile1619:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1624:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1625:
  while1626:
    JR_GTEQF VGV_S3 60.0 endwhile1626
  whilebody1626:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1627:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1628:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1626
  endwhile1626:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1631:
    JR_GTF VGV_I 1.0 endfor1631
  forbody1631:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1632:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1633:
  while1634:
    JR_LTEQF VGV_S3 10.0 and1636
    JR_GTF VGV_S2 10.0 or1635
  and1636:
    JR_GTEQF VGV_S3 10.0 endwhile1634
    JR_GTEQF VGV_S2 10.0 endwhile1634
  or1635:
  whilebody1634:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1637:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1638:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1639:
    JR_LTEQF VGV_S3 10.0 and1640
    JR_GTF VGV_S2 10.0 whilebody1634
  and1640:
    JR_GTEQF VGV_S3 10.0 and1641
    JR_LTF VGV_S2 10.0 whilebody1634
  and1641:
  endwhile1634:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1643
	DATA8 nos1643
	DATA8 busy1643
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1643 nos1643
	JR_EQ8 0 nos1643 motornotbusy1643
  motorwaiting1643:
	OUTPUT_TEST layer1643 nos1643 busy1643
	JR_EQ8 busy1643 0 motornotbusy1643
	SLEEP
	JR motorwaiting1643
  motornotbusy1643:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1631
  endfor1631:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1646:
    CALL MOTOR.RESETCOUNT 'bc'
  while1648:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1652
    DATA8 flag1652
    DIVF F.1 2.0 tmpf1652
    CP_EQF 0.0 2.0 flag1652
    SELECTF flag1652 0.0 tmpf1652 F.0

    JR_GTEQF F.0 220.0 endwhile1648
  whilebody1648:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1653:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1657
    DATA8 flag1657
    DIVF F.1 2.0 tmpf1657
    CP_EQF 0.0 2.0 flag1657
    SELECTF flag1657 0.0 tmpf1657 F.0

    JR_LTF F.0 220.0 whilebody1648
  endwhile1648:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1659
	MOVEF_32 100.0 milliseconds1659
	DATA32 timer1659
	TIMER_WAIT milliseconds1659 timer1659
	TIMER_READY timer1659
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1661
	MOVEF_32 500.0 milliseconds1661
	DATA32 timer1661
	TIMER_WAIT milliseconds1661 timer1661
	TIMER_READY timer1661
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1663:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1664:
  while1665:
    JR_LTEQF VGV_S2 9.0 and1667
    JR_GTF VGV_S3 9.0 or1666
  and1667:
    JR_GTEQF VGV_S2 9.0 and1668
    JR_GTF VGV_S3 9.0 or1666
  and1668:
    JR_LTEQF VGV_S2 9.0 endwhile1665
    JR_GTEQF VGV_S3 9.0 endwhile1665
  or1666:
  whilebody1665:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1669:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1670:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1672
    JR_GTF VGV_S3 9.0 whilebody1665
  and1672:
    JR_GTEQF VGV_S2 9.0 and1673
    JR_GTF VGV_S3 9.0 whilebody1665
  and1673:
    JR_LTEQF VGV_S2 9.0 and1674
    JR_LTF VGV_S3 9.0 whilebody1665
  and1674:
  endwhile1665:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1675
	DATA8 nos1675
	DATA8 busy1675
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1675 nos1675
	JR_EQ8 0 nos1675 motornotbusy1675
  motorwaiting1675:
	OUTPUT_TEST layer1675 nos1675 busy1675
	JR_EQ8 busy1675 0 motornotbusy1675
	SLEEP
	JR motorwaiting1675
  motornotbusy1675:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1677
	DATA8 nos1677
	DATA8 busy1677
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1677 nos1677
	JR_EQ8 0 nos1677 motornotbusy1677
  motorwaiting1677:
	OUTPUT_TEST layer1677 nos1677 busy1677
	JR_EQ8 busy1677 0 motornotbusy1677
	SLEEP
	JR motorwaiting1677
  motornotbusy1677:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1679:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1680:
  while1681:
    JR_LTEQF VGV_S2 10.0 endwhile1681
  whilebody1681:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1682:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1683:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1681
  endwhile1681:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1685:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1686:
  while1687:
    JR_GTEQF VGV_S2 60.0 endwhile1687
  whilebody1687:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1688:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1689:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1687
  endwhile1687:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1692
    DATA8 flag1692
    DIVF 360.0 VGV_L tmpf1692
    CP_EQF 0.0 VGV_L flag1692
    SELECTF flag1692 0.0 tmpf1692 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1695:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1695
  whilebody1695:
    JR_GTEQF VGV_SPEED 60.0 else1697_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1697_1:
  endif1697:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1699:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1695
  endwhile1695:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1702:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1703:
    MOVEF_F 1240.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1704:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1706
	DATA8 nos1706
	DATA8 busy1706
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1706 nos1706
	JR_EQ8 0 nos1706 motornotbusy1706
  motorwaiting1706:
	OUTPUT_TEST layer1706 nos1706 busy1706
	JR_EQ8 busy1706 0 motornotbusy1706
	SLEEP
	JR motorwaiting1706
  motornotbusy1706:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1707:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1708:
  while1709:
    JR_LTEQF VGV_S3 10.0 and1711
    JR_GTF VGV_S2 10.0 or1710
  and1711:
    JR_GTEQF VGV_S3 10.0 endwhile1709
    JR_GTEQF VGV_S2 10.0 endwhile1709
  or1710:
  whilebody1709:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1712:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1713:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1714:
    JR_LTEQF VGV_S3 10.0 and1715
    JR_GTF VGV_S2 10.0 whilebody1709
  and1715:
    JR_GTEQF VGV_S3 10.0 and1716
    JR_LTF VGV_S2 10.0 whilebody1709
  and1716:
  endwhile1709:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1718:
    CALL MOTOR.RESETCOUNT 'bc'
  while1720:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1724
    DATA8 flag1724
    DIVF F.1 2.0 tmpf1724
    CP_EQF 0.0 2.0 flag1724
    SELECTF flag1724 0.0 tmpf1724 F.0

    JR_GTEQF F.0 200.0 endwhile1720
  whilebody1720:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1725:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1726:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1727:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1731
    DATA8 flag1731
    DIVF F.1 2.0 tmpf1731
    CP_EQF 0.0 2.0 flag1731
    SELECTF flag1731 0.0 tmpf1731 F.0

    JR_LTF F.0 200.0 whilebody1720
  endwhile1720:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 50.0 'true'

	DATA8 layer1733
	DATA8 nos1733
	DATA8 busy1733
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1733 nos1733
	JR_EQ8 0 nos1733 motornotbusy1733
  motorwaiting1733:
	OUTPUT_TEST layer1733 nos1733 busy1733
	JR_EQ8 busy1733 0 motornotbusy1733
	SLEEP
	JR motorwaiting1733
  motornotbusy1733:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1735
	MOVEF_32 500.0 milliseconds1735
	DATA32 timer1735
	TIMER_WAIT milliseconds1735 timer1735
	TIMER_READY timer1735
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1737
	DATA8 nos1737
	DATA8 busy1737
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1737 nos1737
	JR_EQ8 0 nos1737 motornotbusy1737
  motorwaiting1737:
	OUTPUT_TEST layer1737 nos1737 busy1737
	JR_EQ8 busy1737 0 motornotbusy1737
	SLEEP
	JR motorwaiting1737
  motornotbusy1737:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1738:
    DATA32 tmp1739
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1739
    JR_NEQ32 0 tmp1739 alreadylaunched1739
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1739:
    MOVEF_F 0.5 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1740:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1741:
  while1742:
    JR_LTEQF VGV_S3 15.0 and1744
    JR_GTF VGV_S2 15.0 or1743
  and1744:
    JR_GTEQF VGV_S3 15.0 endwhile1742
    JR_GTEQF VGV_S2 15.0 endwhile1742
  or1743:
  whilebody1742:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1745:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1746:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1747:
    JR_LTEQF VGV_S3 15.0 and1748
    JR_GTF VGV_S2 15.0 whilebody1742
  and1748:
    JR_GTEQF VGV_S3 15.0 and1749
    JR_LTF VGV_S2 15.0 whilebody1742
  and1749:
  endwhile1742:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1751
	DATA8 nos1751
	DATA8 busy1751
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1751 nos1751
	JR_EQ8 0 nos1751 motornotbusy1751
  motorwaiting1751:
	OUTPUT_TEST layer1751 nos1751 busy1751
	JR_EQ8 busy1751 0 motornotbusy1751
	SLEEP
	JR motorwaiting1751
  motornotbusy1751:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1752:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1753:
  while1754:
    JR_LTEQF VGV_S3 15.0 and1756
    JR_GTF VGV_S2 15.0 or1755
  and1756:
    JR_GTEQF VGV_S3 15.0 endwhile1754
    JR_GTEQF VGV_S2 15.0 endwhile1754
  or1755:
  whilebody1754:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1757:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1758:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1759:
    JR_LTEQF VGV_S3 15.0 and1760
    JR_GTF VGV_S2 15.0 whilebody1754
  and1760:
    JR_GTEQF VGV_S3 15.0 and1761
    JR_LTF VGV_S2 15.0 whilebody1754
  and1761:
  endwhile1754:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1763
	DATA8 nos1763
	DATA8 busy1763
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1763 nos1763
	JR_EQ8 0 nos1763 motornotbusy1763
  motorwaiting1763:
	OUTPUT_TEST layer1763 nos1763 busy1763
	JR_EQ8 busy1763 0 motornotbusy1763
	SLEEP
	JR motorwaiting1763
  motornotbusy1763:
    CALL MOTOR.SCHEDULESYNC 'bc' -33.0 30.0 300.0 'true'

	DATA8 layer1764
	DATA8 nos1764
	DATA8 busy1764
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1764 nos1764
	JR_EQ8 0 nos1764 motornotbusy1764
  motorwaiting1764:
	OUTPUT_TEST layer1764 nos1764 busy1764
	JR_EQ8 busy1764 0 motornotbusy1764
	SLEEP
	JR motorwaiting1764
  motornotbusy1764:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1766:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1767:
  while1768:
    JR_LTEQF VGV_S2 12.0 endwhile1768
  whilebody1768:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1769:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1770:
    CALL MOTOR.STARTSYNC 'bc' -23.0 20.0
    JR_GTF VGV_S2 12.0 whilebody1768
  endwhile1768:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1773:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1774:
  while1775:
    JR_GTEQF VGV_S2 60.0 endwhile1775
  whilebody1775:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1776:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1777:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1775
  endwhile1775:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1781:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1785
    DATA8 flag1785
    DIVF F.1 2.0 tmpf1785
    CP_EQF 0.0 2.0 flag1785
    SELECTF flag1785 0.0 tmpf1785 F.0

    JR_GTEQF F.0 300.0 endwhile1781
  whilebody1781:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1786:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1787:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1788:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1792
    DATA8 flag1792
    DIVF F.1 2.0 tmpf1792
    CP_EQF 0.0 2.0 flag1792
    SELECTF flag1792 0.0 tmpf1792 F.0

    JR_LTF F.0 300.0 whilebody1781
  endwhile1781:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1794:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1795:
  while1796:
    JR_LTEQF VGV_S3 15.0 and1798
    JR_GTF VGV_S2 15.0 or1797
  and1798:
    JR_GTEQF VGV_S3 10.0 endwhile1796
    JR_GTEQF VGV_S2 15.0 endwhile1796
  or1797:
  whilebody1796:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1799:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1800:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1801:
    JR_LTEQF VGV_S3 15.0 and1802
    JR_GTF VGV_S2 15.0 whilebody1796
  and1802:
    JR_GTEQF VGV_S3 10.0 and1803
    JR_LTF VGV_S2 15.0 whilebody1796
  and1803:
  endwhile1796:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1805
	DATA8 no1805
	DATA8 mode81805
	
	MOVEF_8 1.0 no1805
	SUB8 no1805 1 no1805
	DIV8 no1805 4 layer1805
	MATH MOD8 no1805 4 no1805

	MOVEF_8 2.0 mode81805
	
	INPUT_DEVICE READY_RAW layer1805 no1805 0 mode81805 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1812
    DATA8 flag1812
    DIVF VGV_SRED 255.0 tmpf1812
    CP_EQF 0.0 255.0 flag1812
    SELECTF flag1812 0.0 tmpf1812 VGV_SRED

    DATAF tmpf1813
    DATA8 flag1813
    DIVF VGV_SGREEN 255.0 tmpf1813
    CP_EQF 0.0 255.0 flag1813
    SELECTF flag1813 0.0 tmpf1813 VGV_SGREEN

    DATAF tmpf1814
    DATA8 flag1814
    DIVF VGV_SBLUE 255.0 tmpf1814
    CP_EQF 0.0 255.0 flag1814
    SELECTF flag1814 0.0 tmpf1814 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1815_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1815_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1815
  else1815_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1815_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1815_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1815
  else1815_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1815_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1815_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1815_3:
  endif1815:
    JR_GTEQF VGV_SRED VGV_SGREEN else1816_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1816_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1816
  else1816_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1816_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1816_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1816
  else1816_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1816_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1816_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1816_3:
  endif1816:
    JR_NEQF VGV_MAX VGV_MIN else1817_1
    MOVEF_F 0.0 VGV_H
    JR endif1817
  else1817_1:
    JR_NEQF VGV_SRED VGV_MAX else1818_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1819_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1823
    DATA8 flag1823
    DIVF F.0 F.1 tmpf1823
    CP_EQF 0.0 F.1 flag1823
    SELECTF flag1823 0.0 tmpf1823 VGV_H

    JR endif1819
  else1819_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1827
    DATA8 flag1827
    DIVF F.1 F.2 tmpf1827
    CP_EQF 0.0 F.2 flag1827
    SELECTF flag1827 0.0 tmpf1827 F.0

    ADDF F.0 360.0 VGV_H
  else1819_2:
  endif1819:
    JR endif1818
  else1818_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1829_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1833
    DATA8 flag1833
    DIVF F.1 F.2 tmpf1833
    CP_EQF 0.0 F.2 flag1833
    SELECTF flag1833 0.0 tmpf1833 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1829
  else1829_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1838
    DATA8 flag1838
    DIVF F.1 F.2 tmpf1838
    CP_EQF 0.0 F.2 flag1838
    SELECTF flag1838 0.0 tmpf1838 F.0

    ADDF F.0 240.0 VGV_H
  else1829_2:
  endif1829:
  else1818_2:
  endif1818:
  else1817_2:
  endif1817:
    JR_NEQF VGV_MAX 0.0 else1840_1
    MOVEF_F 0.0 VGV_S
    JR endif1840
  else1840_1:
    DATAF tmpf1841
    DATA8 flag1841
    DIVF VGV_MIN VGV_MAX tmpf1841
    CP_EQF 0.0 VGV_MAX flag1841
    SELECTF flag1841 0.0 tmpf1841 F.0

    SUBF 1.0 F.0 VGV_S
  else1840_2:
  endif1840:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1850
	DATA8 no1850
	DATA8 mode81850
	
	MOVEF_8 1.0 no1850
	SUB8 no1850 1 no1850
	DIV8 no1850 4 layer1850
	MATH MOD8 no1850 4 no1850

	MOVEF_8 2.0 mode81850
	
	INPUT_DEVICE READY_RAW layer1850 no1850 0 mode81850 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1851:
    JR_GTF VGV_P 100.0 endfor1851
  forbody1851:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1852:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1851
  endfor1851:
    DATAF tmpf1857
    DATA8 flag1857
    DIVF VGV_X 100.0 tmpf1857
    CP_EQF 0.0 100.0 flag1857
    SELECTF flag1857 0.0 tmpf1857 VGV_H

    DATAF tmpf1858
    DATA8 flag1858
    DIVF VGV_Z 100.0 tmpf1858
    CP_EQF 0.0 100.0 flag1858
    SELECTF flag1858 0.0 tmpf1858 VGV_S

    DATAF tmpf1859
    DATA8 flag1859
    DIVF VGV_D 100.0 tmpf1859
    CP_EQF 0.0 100.0 flag1859
    SELECTF flag1859 0.0 tmpf1859 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1867
	DATA8 no1867
	DATA8 mode81867
	
	MOVEF_8 1.0 no1867
	SUB8 no1867 1 no1867
	DIV8 no1867 4 layer1867
	MATH MOD8 no1867 4 no1867

	MOVEF_8 2.0 mode81867
	
	INPUT_DEVICE READY_RAW layer1867 no1867 0 mode81867 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1874
    DATA8 flag1874
    DIVF VGV_SRED 255.0 tmpf1874
    CP_EQF 0.0 255.0 flag1874
    SELECTF flag1874 0.0 tmpf1874 VGV_SRED

    DATAF tmpf1875
    DATA8 flag1875
    DIVF VGV_SGREEN 255.0 tmpf1875
    CP_EQF 0.0 255.0 flag1875
    SELECTF flag1875 0.0 tmpf1875 VGV_SGREEN

    DATAF tmpf1876
    DATA8 flag1876
    DIVF VGV_SBLUE 255.0 tmpf1876
    CP_EQF 0.0 255.0 flag1876
    SELECTF flag1876 0.0 tmpf1876 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1877_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1877_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1877
  else1877_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1877_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1877_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1877
  else1877_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1877_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1877_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1877_3:
  endif1877:
    JR_GTEQF VGV_SRED VGV_SGREEN else1878_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1878_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1878
  else1878_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1878_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1878_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1878
  else1878_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1878_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1878_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1878_3:
  endif1878:
    JR_NEQF VGV_MAX VGV_MIN else1879_1
    MOVEF_F 0.0 VGV_H
    JR endif1879
  else1879_1:
    JR_NEQF VGV_SRED VGV_MAX else1880_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1881_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1885
    DATA8 flag1885
    DIVF F.0 F.1 tmpf1885
    CP_EQF 0.0 F.1 flag1885
    SELECTF flag1885 0.0 tmpf1885 VGV_H

    JR endif1881
  else1881_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1889
    DATA8 flag1889
    DIVF F.1 F.2 tmpf1889
    CP_EQF 0.0 F.2 flag1889
    SELECTF flag1889 0.0 tmpf1889 F.0

    ADDF F.0 360.0 VGV_H
  else1881_2:
  endif1881:
    JR endif1880
  else1880_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1891_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1895
    DATA8 flag1895
    DIVF F.1 F.2 tmpf1895
    CP_EQF 0.0 F.2 flag1895
    SELECTF flag1895 0.0 tmpf1895 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1891
  else1891_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1900
    DATA8 flag1900
    DIVF F.1 F.2 tmpf1900
    CP_EQF 0.0 F.2 flag1900
    SELECTF flag1900 0.0 tmpf1900 F.0

    ADDF F.0 240.0 VGV_H
  else1891_2:
  endif1891:
  else1880_2:
  endif1880:
  else1879_2:
  endif1879:
    JR_NEQF VGV_MAX 0.0 else1902_1
    MOVEF_F 0.0 VGV_S
    JR endif1902
  else1902_1:
    DATAF tmpf1903
    DATA8 flag1903
    DIVF VGV_MIN VGV_MAX tmpf1903
    CP_EQF 0.0 VGV_MAX flag1903
    SELECTF flag1903 0.0 tmpf1903 F.0

    SUBF 1.0 F.0 VGV_S
  else1902_2:
  endif1902:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1907
    JR_LTF VGV_H 360.0 or1906
  and1907:
    JR_LTF VGV_H 0.0 else1905_1
    JR_GTF VGV_H 20.0 else1905_1
    JR_LTEQF VGV_S 0.3 else1905_1
    JR_GTF VGV_S 1.0 else1905_1
    JR_LTEQF VGV_V 0.025 else1905_1
    JR_GTEQF VGV_V 0.1 else1905_1
  or1906:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1905
  else1905_1:
    JR_LTF VGV_H 20.0 else1905_2
    JR_GTEQF VGV_H 60.0 else1905_2
    JR_LTF VGV_S 0.4 else1905_2
    JR_LTEQF VGV_V 0.03 else1905_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1905
  else1905_2:
    MOVEF_F 6.0 VGV_COLOR
  else1905_3:
  endif1905:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1908
	DATA8 no1908
	DATA8 mode81908
	
	MOVEF_8 1.0 no1908
	SUB8 no1908 1 no1908
	DIV8 no1908 4 layer1908
	MATH MOD8 no1908 4 no1908

	MOVEF_8 2.0 mode81908
	
	INPUT_DEVICE READY_RAW layer1908 no1908 0 mode81908 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1915
    DATA8 flag1915
    DIVF VGV_SRED 255.0 tmpf1915
    CP_EQF 0.0 255.0 flag1915
    SELECTF flag1915 0.0 tmpf1915 VGV_SRED

    DATAF tmpf1916
    DATA8 flag1916
    DIVF VGV_SGREEN 255.0 tmpf1916
    CP_EQF 0.0 255.0 flag1916
    SELECTF flag1916 0.0 tmpf1916 VGV_SGREEN

    DATAF tmpf1917
    DATA8 flag1917
    DIVF VGV_SBLUE 255.0 tmpf1917
    CP_EQF 0.0 255.0 flag1917
    SELECTF flag1917 0.0 tmpf1917 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1918_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1918_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1918
  else1918_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1918_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1918_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1918
  else1918_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1918_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1918_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1918_3:
  endif1918:
    JR_GTEQF VGV_SRED VGV_SGREEN else1919_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1919_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1919
  else1919_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1919_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1919_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1919
  else1919_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1919_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1919_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1919_3:
  endif1919:
    JR_NEQF VGV_MAX VGV_MIN else1920_1
    MOVEF_F 0.0 VGV_H
    JR endif1920
  else1920_1:
    JR_NEQF VGV_SRED VGV_MAX else1921_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1922_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1926
    DATA8 flag1926
    DIVF F.0 F.1 tmpf1926
    CP_EQF 0.0 F.1 flag1926
    SELECTF flag1926 0.0 tmpf1926 VGV_H

    JR endif1922
  else1922_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1930
    DATA8 flag1930
    DIVF F.1 F.2 tmpf1930
    CP_EQF 0.0 F.2 flag1930
    SELECTF flag1930 0.0 tmpf1930 F.0

    ADDF F.0 360.0 VGV_H
  else1922_2:
  endif1922:
    JR endif1921
  else1921_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1932_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1936
    DATA8 flag1936
    DIVF F.1 F.2 tmpf1936
    CP_EQF 0.0 F.2 flag1936
    SELECTF flag1936 0.0 tmpf1936 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1932
  else1932_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1941
    DATA8 flag1941
    DIVF F.1 F.2 tmpf1941
    CP_EQF 0.0 F.2 flag1941
    SELECTF flag1941 0.0 tmpf1941 F.0

    ADDF F.0 240.0 VGV_H
  else1932_2:
  endif1932:
  else1921_2:
  endif1921:
  else1920_2:
  endif1920:
    JR_NEQF VGV_MAX 0.0 else1943_1
    MOVEF_F 0.0 VGV_S
    JR endif1943
  else1943_1:
    DATAF tmpf1944
    DATA8 flag1944
    DIVF VGV_MIN VGV_MAX tmpf1944
    CP_EQF 0.0 VGV_MAX flag1944
    SELECTF flag1944 0.0 tmpf1944 F.0

    SUBF 1.0 F.0 VGV_S
  else1943_2:
  endif1943:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1948
    JR_LTF VGV_H 360.0 or1947
  and1948:
    JR_LTF VGV_H 0.0 else1946_1
    JR_GTF VGV_H 30.0 else1946_1
    JR_LTEQF VGV_S 0.3 else1946_1
    JR_GTF VGV_S 1.0 else1946_1
    JR_LTF VGV_V 0.0 else1946_1
    JR_GTEQF VGV_V 0.02 else1946_1
  or1947:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1946
  else1946_1:
    JR_LTF VGV_H 0.0 else1946_2
    JR_GTEQF VGV_H 60.0 else1946_2
    JR_LTF VGV_S 0.4 else1946_2
    JR_GTF VGV_S 1.0 else1946_2
    JR_LTEQF VGV_V 0.003 else1946_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1946
  else1946_2:
    MOVEF_F 6.0 VGV_COLOR
  else1946_3:
  endif1946:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1953
    DATA8 flag1953
    DIVF F.0 F.1 tmpf1953
    CP_EQF 0.0 F.1 flag1953
    SELECTF flag1953 0.0 tmpf1953 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1958
    DATA8 flag1958
    DIVF F.0 F.1 tmpf1958
    CP_EQF 0.0 F.1 flag1958
    SELECTF flag1958 0.0 tmpf1958 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1959:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1960:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K3 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1974
	MOVEF_32 100.0 milliseconds1974
	DATA32 timer1974
	TIMER_WAIT milliseconds1974 timer1974
	TIMER_READY timer1974
  while1975:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile1975
  whilebody1975:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody1975
  endwhile1975:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1981
	MOVEF_32 350.0 milliseconds1981
	DATA32 timer1981
	TIMER_WAIT milliseconds1981 timer1981
	TIMER_READY timer1981
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1983:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1984:
  while1985:
    JR_LTEQF VGV_S2 9.0 and1987
    JR_GTF VGV_S3 9.0 or1986
  and1987:
    JR_GTEQF VGV_S2 9.0 and1988
    JR_GTF VGV_S3 9.0 or1986
  and1988:
    JR_LTEQF VGV_S2 9.0 endwhile1985
    JR_GTEQF VGV_S3 9.0 endwhile1985
  or1986:
  whilebody1985:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1989:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1990:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1992
    JR_GTF VGV_S3 9.0 whilebody1985
  and1992:
    JR_GTEQF VGV_S2 9.0 and1993
    JR_GTF VGV_S3 9.0 whilebody1985
  and1993:
    JR_LTEQF VGV_S2 9.0 and1994
    JR_LTF VGV_S3 9.0 whilebody1985
  and1994:
  endwhile1985:
  while1995:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1995
  whilebody1995:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1995
  endwhile1995:
    CALL MOTOR.STOP 'B' 'True'
  while2000:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2000
  whilebody2000:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2000
  endwhile2000:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2005
	DATA8 no2005
	DATA8 mode82005
	
	MOVEF_8 2.0 no2005
	SUB8 no2005 1 no2005
	DIV8 no2005 4 layer2005
	MATH MOD8 no2005 4 no2005

	MOVEF_8 0.0 mode82005
	
	INPUT_DEVICE READY_RAW layer2005 no2005 0 mode82005 0
    DATA8 layer2006
	DATA8 no2006
	DATA8 mode82006
	
	MOVEF_8 3.0 no2006
	SUB8 no2006 1 no2006
	DIV8 no2006 4 layer2006
	MATH MOD8 no2006 4 no2006

	MOVEF_8 0.0 mode82006
	
	INPUT_DEVICE READY_RAW layer2006 no2006 0 mode82006 0
  while2007:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2007
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2007
  whilebody2007:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2011
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2007
  and2011:
  endwhile2007:
    CALL MOTOR.STOP 'BC' 'True'
  while2015:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2015
  whilebody2015:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2015
  endwhile2015:
    CALL MOTOR.STOP 'B' 'True'
  while2020:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2020
  whilebody2020:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2020
  endwhile2020:
    CALL MOTOR.STOP 'C' 'True'
  while2025:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2025
  whilebody2025:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2025
  endwhile2025:
    CALL MOTOR.STOP 'B' 'True'
  while2030:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2030
  whilebody2030:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2030
  endwhile2030:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall EV3FILE.OPENWRITE       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_WRITE fullname handle16

	MOVE16_F handle16 handle
}
subcall EV3FILE.WRITELINE     // FSV
{
	IN_F handle
	IN_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE WRITE_TEXT handle16 6 text
invalidhandle:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
