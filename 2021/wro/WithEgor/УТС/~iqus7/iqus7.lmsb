DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_L
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2042
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2042:
    JR_NEQ32 SUBPROGRAM 1 dispatch2043
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2043:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_L
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_2:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB60:
    WRITE32 ENDSUB_F_A2_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB61:
  while62:
    JR_LTEQF VGV_S3 10.0 and64
    JR_GTF VGV_S2 10.0 or63
  and64:
    JR_GTEQF VGV_S3 10.0 endwhile62
    JR_GTEQF VGV_S2 10.0 endwhile62
  or63:
  whilebody62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB65:
    WRITE32 ENDSUB_F_A2_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB66:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB67:
    JR_LTEQF VGV_S3 10.0 and68
    JR_GTF VGV_S2 10.0 whilebody62
  and68:
    JR_GTEQF VGV_S3 10.0 and69
    JR_LTF VGV_S2 10.0 whilebody62
  and69:
  endwhile62:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB71:
    JR_GTF VGV_H 100.0 or73
    JR_LTF VGV_H 0.0 else72_1
    JR_GTF VGV_H 32.0 else72_1
  or73:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif72
  else72_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else72_2:
  endif72:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    JR_NEQF VGV_COLOR 4.0 else77_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB78:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer81
	DATA8 nos81
	DATA8 busy81
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer81 nos81
	JR_EQ8 0 nos81 motornotbusy81
  motorwaiting81:
	OUTPUT_TEST layer81 nos81 busy81
	JR_EQ8 busy81 0 motornotbusy81
	SLEEP
	JR motorwaiting81
  motornotbusy81:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while85:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 625.0 endwhile85
  whilebody85:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB87:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 625.0 whilebody85
  endwhile85:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB90:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer91
	DATA8 nos91
	DATA8 busy91
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer91 nos91
	JR_EQ8 0 nos91 motornotbusy91
  motorwaiting91:
	OUTPUT_TEST layer91 nos91 busy91
	JR_EQ8 busy91 0 motornotbusy91
	SLEEP
	JR motorwaiting91
  motornotbusy91:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer93
	DATA8 nos93
	DATA8 busy93
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer93 nos93
	JR_EQ8 0 nos93 motornotbusy93
  motorwaiting93:
	OUTPUT_TEST layer93 nos93 busy93
	JR_EQ8 busy93 0 motornotbusy93
	SLEEP
	JR motorwaiting93
  motornotbusy93:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while96:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf100
    DATA8 flag100
    DIVF F.1 2.0 tmpf100
    CP_EQF 0.0 2.0 flag100
    SELECTF flag100 0.0 tmpf100 F.0

    JR_GTEQF F.0 100.0 endwhile96
  whilebody96:
    WRITE32 ENDSUB_F_A3_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB101:
    WRITE32 ENDSUB_F_A2_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB102:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB103:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf107
    DATA8 flag107
    DIVF F.1 2.0 tmpf107
    CP_EQF 0.0 2.0 flag107
    SELECTF flag107 0.0 tmpf107 F.0

    JR_LTF F.0 100.0 whilebody96
  endwhile96:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB109:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else111_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB112:
    ADDF VGV_C 1.0 VGV_C
    JR endif111
  else111_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer115
	DATA8 nos115
	DATA8 busy115
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer115 nos115
	JR_EQ8 0 nos115 motornotbusy115
  motorwaiting115:
	OUTPUT_TEST layer115 nos115 busy115
	JR_EQ8 busy115 0 motornotbusy115
	SLEEP
	JR motorwaiting115
  motornotbusy115:
  while116:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and118
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or117
  and118:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and121
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or117
  and121:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile116
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile116
  or117:
  whilebody116:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and130
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody116
  and130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and133
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and133:
  endwhile116:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB136:
    WRITE32 ENDSUB_F_A2_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB137:
  while138:
    JR_LTEQF VGV_S3 10.0 and140
    JR_GTF VGV_S2 10.0 or139
  and140:
    JR_GTEQF VGV_S3 10.0 endwhile138
    JR_GTEQF VGV_S2 10.0 endwhile138
  or139:
  whilebody138:
    WRITE32 ENDSUB_F_A3_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB141:
    WRITE32 ENDSUB_F_A2_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB142:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB143:
    JR_LTEQF VGV_S3 10.0 and144
    JR_GTF VGV_S2 10.0 whilebody138
  and144:
    JR_GTEQF VGV_S3 10.0 and145
    JR_LTF VGV_S2 10.0 whilebody138
  and145:
  endwhile138:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
  else111_2:
  endif111:
    JR endif77
  else77_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
  while160:
    JR_LTEQF VGV_S3 10.0 and162
    JR_GTF VGV_S2 10.0 or161
  and162:
    JR_GTEQF VGV_S3 10.0 endwhile160
    JR_GTEQF VGV_S2 10.0 endwhile160
  or161:
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB163:
    WRITE32 ENDSUB_F_A2_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB164:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB165:
    JR_LTEQF VGV_S3 10.0 and166
    JR_GTF VGV_S2 10.0 whilebody160
  and166:
    JR_GTEQF VGV_S3 10.0 and167
    JR_LTF VGV_S2 10.0 whilebody160
  and167:
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer170
	DATA8 nos170
	DATA8 busy170
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer170 nos170
	JR_EQ8 0 nos170 motornotbusy170
  motorwaiting170:
	OUTPUT_TEST layer170 nos170 busy170
	JR_EQ8 busy170 0 motornotbusy170
	SLEEP
	JR motorwaiting170
  motornotbusy170:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -60.0
    DATA32 milliseconds173
	MOVEF_32 250.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB175:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while177:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile177
  whilebody177:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB179:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody177
  endwhile177:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else182_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB183:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB186:
    WRITE32 ENDSUB_F_A2_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB187:
  while188:
    JR_LTEQF VGV_S3 15.0 endwhile188
  whilebody188:
    WRITE32 ENDSUB_F_A3_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB189:
    WRITE32 ENDSUB_F_A2_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB190:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VGV_S3 15.0 whilebody188
  endwhile188:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB193:
    WRITE32 ENDSUB_F_A2_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB194:
  while195:
    JR_GTEQF VGV_S3 35.0 endwhile195
  whilebody195:
    WRITE32 ENDSUB_F_A3_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB196:
    WRITE32 ENDSUB_F_A2_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB197:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VGV_S3 35.0 whilebody195
  endwhile195:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB201:
    WRITE32 ENDSUB_F_A2_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB202:
  while203:
    JR_LTEQF VGV_S3 10.0 and205
    JR_GTF VGV_S2 10.0 or204
  and205:
    JR_GTEQF VGV_S3 10.0 endwhile203
    JR_GTEQF VGV_S2 10.0 endwhile203
  or204:
  whilebody203:
    WRITE32 ENDSUB_F_A3_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB207:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB208:
    JR_LTEQF VGV_S3 10.0 and209
    JR_GTF VGV_S2 10.0 whilebody203
  and209:
    JR_GTEQF VGV_S3 10.0 and210
    JR_LTF VGV_S2 10.0 whilebody203
  and210:
  endwhile203:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB212:
    ADDF VGV_C 1.0 VGV_C
    JR endif182
  else182_1:
    DATA32 tmp214
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp214
    JR_NEQ32 0 tmp214 alreadylaunched214
    OBJECT_START TF_VIDVIG_0
  alreadylaunched214:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB215:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer216
	DATA8 nos216
	DATA8 busy216
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer216 nos216
	JR_EQ8 0 nos216 motornotbusy216
  motorwaiting216:
	OUTPUT_TEST layer216 nos216 busy216
	JR_EQ8 busy216 0 motornotbusy216
	SLEEP
	JR motorwaiting216
  motornotbusy216:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB220:
  while221:
    JR_LTEQF VGV_S3 10.0 and223
    JR_GTF VGV_S2 10.0 or222
  and223:
    JR_GTEQF VGV_S3 10.0 endwhile221
    JR_GTEQF VGV_S2 10.0 endwhile221
  or222:
  whilebody221:
    WRITE32 ENDSUB_F_A3_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB225:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB226:
    JR_LTEQF VGV_S3 10.0 and227
    JR_GTF VGV_S2 10.0 whilebody221
  and227:
    JR_GTEQF VGV_S3 10.0 and228
    JR_LTF VGV_S2 10.0 whilebody221
  and228:
  endwhile221:
    CALL MOTOR.STOP 'bc' 'true'
  else182_2:
  endif182:
  else77_2:
  endif77:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB230:
    JR_LTF VGV_H 33.0 or232
    JR_LTEQF VGV_H 100.0 else231_1
  or232:
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif231
  else231_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else231_2:
  endif231:
    JR_NEQF VGV_COLOR2 4.0 else235_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB237:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif235
  else235_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB239:
    CALL MOTOR.RESETCOUNT 'bc'
  while241:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 210.0 endwhile241
  whilebody241:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB243:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 210.0 whilebody241
  endwhile241:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 20.0 20.0 190.0 'true'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds248
	MOVEF_32 100.0 milliseconds248
	DATA32 timer248
	TIMER_WAIT milliseconds248 timer248
	TIMER_READY timer248
    WRITE32 ENDSUB_F_NPL_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB249:
    MOVEF_F 1230.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB250:
    WRITE32 ENDSUB_F_REDL_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB251:
    JR_NEQF VGV_C 1.0 else252_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB253:
    JR endif252
  else252_1:
    JR_NEQF VGV_C 0.0 else252_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB254:
  else252_2:
  endif252:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB255:
    WRITE32 ENDSUB_F_A3_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB256:
    WRITE32 ENDSUB_F_A2_0:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB257:
  while258:
    JR_LTEQF VGV_S3 10.0 and260
    JR_GTF VGV_S2 10.0 or259
  and260:
    JR_GTEQF VGV_S3 10.0 endwhile258
    JR_GTEQF VGV_S2 10.0 endwhile258
  or259:
  whilebody258:
    WRITE32 ENDSUB_F_A3_0:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB261:
    WRITE32 ENDSUB_F_A2_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB262:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB263:
    JR_LTEQF VGV_S3 10.0 and264
    JR_GTF VGV_S2 10.0 whilebody258
  and264:
    JR_GTEQF VGV_S3 10.0 and265
    JR_LTF VGV_S2 10.0 whilebody258
  and265:
  endwhile258:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer267
	DATA8 nos267
	DATA8 busy267
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer267 nos267
	JR_EQ8 0 nos267 motornotbusy267
  motorwaiting267:
	OUTPUT_TEST layer267 nos267 busy267
	JR_EQ8 busy267 0 motornotbusy267
	SLEEP
	JR motorwaiting267
  motornotbusy267:
    WRITE32 ENDSUB_F_A3_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB268:
    WRITE32 ENDSUB_F_A2_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB269:
  while270:
    JR_LTEQF VGV_S3 10.0 and272
    JR_GTF VGV_S2 10.0 or271
  and272:
    JR_GTEQF VGV_S3 10.0 endwhile270
    JR_GTEQF VGV_S2 10.0 endwhile270
  or271:
  whilebody270:
    WRITE32 ENDSUB_F_A3_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB273:
    WRITE32 ENDSUB_F_A2_0:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB274:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB275:
    JR_LTEQF VGV_S3 10.0 and276
    JR_GTF VGV_S2 10.0 whilebody270
  and276:
    JR_GTEQF VGV_S3 10.0 and277
    JR_LTF VGV_S2 10.0 whilebody270
  and277:
  endwhile270:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB279:
    CALL MOTOR.RESETCOUNT 'bc'
  while281:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf285
    DATA8 flag285
    DIVF F.1 2.0 tmpf285
    CP_EQF 0.0 2.0 flag285
    SELECTF flag285 0.0 tmpf285 F.0

    JR_GTEQF F.0 160.0 endwhile281
  whilebody281:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB286:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf290
    DATA8 flag290
    DIVF F.1 2.0 tmpf290
    CP_EQF 0.0 2.0 flag290
    SELECTF flag290 0.0 tmpf290 F.0

    JR_LTF F.0 160.0 whilebody281
  endwhile281:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer292
	DATA8 nos292
	DATA8 busy292
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer292 nos292
	JR_EQ8 0 nos292 motornotbusy292
  motorwaiting292:
	OUTPUT_TEST layer292 nos292 busy292
	JR_EQ8 busy292 0 motornotbusy292
	SLEEP
	JR motorwaiting292
  motornotbusy292:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds294
	MOVEF_32 500.0 milliseconds294
	DATA32 timer294
	TIMER_WAIT milliseconds294 timer294
	TIMER_READY timer294
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer296
	DATA8 nos296
	DATA8 busy296
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer296 nos296
	JR_EQ8 0 nos296 motornotbusy296
  motorwaiting296:
	OUTPUT_TEST layer296 nos296 busy296
	JR_EQ8 busy296 0 motornotbusy296
	SLEEP
	JR motorwaiting296
  motornotbusy296:
    DATA32 tmp297
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp297
    JR_NEQ32 0 tmp297 alreadylaunched297
    OBJECT_START TF_VIDVIG_0
  alreadylaunched297:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB298:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB299:
    ADDF VGV_C 1.0 VGV_C
  else235_2:
  endif235:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB301:
    JR_GTF VGV_H 120.0 or303
    JR_LTF VGV_H 0.0 else302_1
    JR_GTF VGV_H 30.0 else302_1
  or303:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif302
  else302_1:
    JR_GTEQF VGV_H 120.0 else302_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif302
  else302_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else302_3:
  endif302:
    JR_NEQF VGV_COLOR3 4.0 else307_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB309:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else311_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB312:
    CALL MOTOR.RESETCOUNT 'bc'
  while314:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf318
    DATA8 flag318
    DIVF F.1 2.0 tmpf318
    CP_EQF 0.0 2.0 flag318
    SELECTF flag318 0.0 tmpf318 F.0

    JR_GTEQF F.0 210.0 endwhile314
  whilebody314:
    MOVEF_F 50.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB319:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf323
    DATA8 flag323
    DIVF F.1 2.0 tmpf323
    CP_EQF 0.0 2.0 flag323
    SELECTF flag323 0.0 tmpf323 F.0

    JR_LTF F.0 210.0 whilebody314
  endwhile314:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds327
	MOVEF_32 500.0 milliseconds327
	DATA32 timer327
	TIMER_WAIT milliseconds327 timer327
	TIMER_READY timer327
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB329:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf330
    DATA8 flag330
    DIVF 360.0 VGV_L tmpf330
    CP_EQF 0.0 VGV_L flag330
    SELECTF flag330 0.0 tmpf330 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while333:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf337
    DATA8 flag337
    DIVF F.1 2.0 tmpf337
    CP_EQF 0.0 2.0 flag337
    SELECTF flag337 0.0 tmpf337 F.0

    JR_GTEQF F.0 VGV_X endwhile333
  whilebody333:
    WRITE32 ENDSUB_F_A3_0:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB338:
    WRITE32 ENDSUB_F_A2_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB339:
    JR_GTEQF VGV_SPEED 80.0 else340_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else340_1:
  endif340:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB342:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf346
    DATA8 flag346
    DIVF F.1 2.0 tmpf346
    CP_EQF 0.0 2.0 flag346
    SELECTF flag346 0.0 tmpf346 F.0

    JR_LTF F.0 VGV_X whilebody333
  endwhile333:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB348:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB349:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB350:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB352:
    CALL MOTOR.RESETCOUNT 'bc'
  while354:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf358
    DATA8 flag358
    DIVF F.1 2.0 tmpf358
    CP_EQF 0.0 2.0 flag358
    SELECTF flag358 0.0 tmpf358 F.0

    JR_GTEQF F.0 210.0 endwhile354
  whilebody354:
    MOVEF_F 50.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB359:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf363
    DATA8 flag363
    DIVF F.1 2.0 tmpf363
    CP_EQF 0.0 2.0 flag363
    SELECTF flag363 0.0 tmpf363 F.0

    JR_LTF F.0 210.0 whilebody354
  endwhile354:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 40.0 40.0 190.0 'true'

	DATA8 layer365
	DATA8 nos365
	DATA8 busy365
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer365 nos365
	JR_EQ8 0 nos365 motornotbusy365
  motorwaiting365:
	OUTPUT_TEST layer365 nos365 busy365
	JR_EQ8 busy365 0 motornotbusy365
	SLEEP
	JR motorwaiting365
  motornotbusy365:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds367
	MOVEF_32 500.0 milliseconds367
	DATA32 timer367
	TIMER_WAIT milliseconds367 timer367
	TIMER_READY timer367
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB369:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB370:
    WRITE32 ENDSUB_F_PR_0:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB371:
    CALL MOTOR.RESETCOUNT 'bc'
  while373:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf377
    DATA8 flag377
    DIVF F.1 2.0 tmpf377
    CP_EQF 0.0 2.0 flag377
    SELECTF flag377 0.0 tmpf377 F.0

    JR_GTEQF F.0 400.0 endwhile373
  whilebody373:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB378:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf382
    DATA8 flag382
    DIVF F.1 2.0 tmpf382
    CP_EQF 0.0 2.0 flag382
    SELECTF flag382 0.0 tmpf382 F.0

    JR_LTF F.0 400.0 whilebody373
  endwhile373:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds385
	MOVEF_32 500.0 milliseconds385
	DATA32 timer385
	TIMER_WAIT milliseconds385 timer385
	TIMER_READY timer385
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB387:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf388
    DATA8 flag388
    DIVF 360.0 VGV_L tmpf388
    CP_EQF 0.0 VGV_L flag388
    SELECTF flag388 0.0 tmpf388 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while391:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf395
    DATA8 flag395
    DIVF F.1 2.0 tmpf395
    CP_EQF 0.0 2.0 flag395
    SELECTF flag395 0.0 tmpf395 F.0

    JR_GTEQF F.0 VGV_X endwhile391
  whilebody391:
    WRITE32 ENDSUB_F_A3_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB396:
    WRITE32 ENDSUB_F_A2_0:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB397:
    JR_GTEQF VGV_SPEED 80.0 else398_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else398_1:
  endif398:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB400:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf404
    DATA8 flag404
    DIVF F.1 2.0 tmpf404
    CP_EQF 0.0 2.0 flag404
    SELECTF flag404 0.0 tmpf404 F.0

    JR_LTF F.0 VGV_X whilebody391
  endwhile391:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB406:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB407:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB408:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB410:
    CALL MOTOR.RESETCOUNT 'bc'
  while412:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf416
    DATA8 flag416
    DIVF F.1 2.0 tmpf416
    CP_EQF 0.0 2.0 flag416
    SELECTF flag416 0.0 tmpf416 F.0

    JR_GTEQF F.0 160.0 endwhile412
  whilebody412:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB417:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf421
    DATA8 flag421
    DIVF F.1 2.0 tmpf421
    CP_EQF 0.0 2.0 flag421
    SELECTF flag421 0.0 tmpf421 F.0

    JR_LTF F.0 160.0 whilebody412
  endwhile412:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 40.0 40.0 240.0 'true'

	DATA8 layer423
	DATA8 nos423
	DATA8 busy423
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer423 nos423
	JR_EQ8 0 nos423 motornotbusy423
  motorwaiting423:
	OUTPUT_TEST layer423 nos423 busy423
	JR_EQ8 busy423 0 motornotbusy423
	SLEEP
	JR motorwaiting423
  motornotbusy423:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds425
	MOVEF_32 500.0 milliseconds425
	DATA32 timer425
	TIMER_WAIT milliseconds425 timer425
	TIMER_READY timer425
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB427:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB428:
    WRITE32 ENDSUB_F_PR_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB429:
    CALL MOTOR.RESETCOUNT 'bc'
  while431:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf435
    DATA8 flag435
    DIVF F.1 2.0 tmpf435
    CP_EQF 0.0 2.0 flag435
    SELECTF flag435 0.0 tmpf435 F.0

    JR_GTEQF F.0 80.0 endwhile431
  whilebody431:
    MOVEF_F 50.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB436:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf440
    DATA8 flag440
    DIVF F.1 2.0 tmpf440
    CP_EQF 0.0 2.0 flag440
    SELECTF flag440 0.0 tmpf440 F.0

    JR_LTF F.0 80.0 whilebody431
  endwhile431:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer442
	DATA8 nos442
	DATA8 busy442
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer442 nos442
	JR_EQ8 0 nos442 motornotbusy442
  motorwaiting442:
	OUTPUT_TEST layer442 nos442 busy442
	JR_EQ8 busy442 0 motornotbusy442
	SLEEP
	JR motorwaiting442
  motornotbusy442:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds444
	MOVEF_32 500.0 milliseconds444
	DATA32 timer444
	TIMER_WAIT milliseconds444 timer444
	TIMER_READY timer444
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB446:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf447
    DATA8 flag447
    DIVF 360.0 VGV_L tmpf447
    CP_EQF 0.0 VGV_L flag447
    SELECTF flag447 0.0 tmpf447 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while450:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf454
    DATA8 flag454
    DIVF F.1 2.0 tmpf454
    CP_EQF 0.0 2.0 flag454
    SELECTF flag454 0.0 tmpf454 F.0

    JR_GTEQF F.0 VGV_X endwhile450
  whilebody450:
    WRITE32 ENDSUB_F_A3_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB455:
    WRITE32 ENDSUB_F_A2_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB456:
    JR_GTEQF VGV_SPEED 80.0 else457_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else457_1:
  endif457:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB459:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf463
    DATA8 flag463
    DIVF F.1 2.0 tmpf463
    CP_EQF 0.0 2.0 flag463
    SELECTF flag463 0.0 tmpf463 F.0

    JR_LTF F.0 VGV_X whilebody450
  endwhile450:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB465:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB466:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB467:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB469:
    CALL MOTOR.RESETCOUNT 'bc'
  while471:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf475
    DATA8 flag475
    DIVF F.1 2.0 tmpf475
    CP_EQF 0.0 2.0 flag475
    SELECTF flag475 0.0 tmpf475 F.0

    JR_GTEQF F.0 50.0 endwhile471
  whilebody471:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB476:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf480
    DATA8 flag480
    DIVF F.1 2.0 tmpf480
    CP_EQF 0.0 2.0 flag480
    SELECTF flag480 0.0 tmpf480 F.0

    JR_LTF F.0 50.0 whilebody471
  endwhile471:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer482
	DATA8 nos482
	DATA8 busy482
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer482 nos482
	JR_EQ8 0 nos482 motornotbusy482
  motorwaiting482:
	OUTPUT_TEST layer482 nos482 busy482
	JR_EQ8 busy482 0 motornotbusy482
	SLEEP
	JR motorwaiting482
  motornotbusy482:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds484
	MOVEF_32 500.0 milliseconds484
	DATA32 timer484
	TIMER_WAIT milliseconds484 timer484
	TIMER_READY timer484
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB486:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB487:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB488:
  else311_1:
  endif311:
  else307_1:
  endif307:
    JR_NEQF VGV_COLOR3 5.0 else489_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB490:
    CALL MOTOR.RESETCOUNT 'bc'
  while492:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf496
    DATA8 flag496
    DIVF F.1 2.0 tmpf496
    CP_EQF 0.0 2.0 flag496
    SELECTF flag496 0.0 tmpf496 F.0

    JR_GTEQF F.0 180.0 endwhile492
  whilebody492:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB497:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf501
    DATA8 flag501
    DIVF F.1 2.0 tmpf501
    CP_EQF 0.0 2.0 flag501
    SELECTF flag501 0.0 tmpf501 F.0

    JR_LTF F.0 180.0 whilebody492
  endwhile492:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer503
	DATA8 nos503
	DATA8 busy503
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer503 nos503
	JR_EQ8 0 nos503 motornotbusy503
  motorwaiting503:
	OUTPUT_TEST layer503 nos503 busy503
	JR_EQ8 busy503 0 motornotbusy503
	SLEEP
	JR motorwaiting503
  motornotbusy503:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds505
	MOVEF_32 500.0 milliseconds505
	DATA32 timer505
	TIMER_WAIT milliseconds505 timer505
	TIMER_READY timer505
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB507:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf508
    DATA8 flag508
    DIVF 360.0 VGV_L tmpf508
    CP_EQF 0.0 VGV_L flag508
    SELECTF flag508 0.0 tmpf508 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while511:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf515
    DATA8 flag515
    DIVF F.1 2.0 tmpf515
    CP_EQF 0.0 2.0 flag515
    SELECTF flag515 0.0 tmpf515 F.0

    JR_GTEQF F.0 VGV_X endwhile511
  whilebody511:
    WRITE32 ENDSUB_F_A3_0:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB516:
    WRITE32 ENDSUB_F_A2_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB517:
    JR_GTEQF VGV_SPEED 80.0 else518_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else518_1:
  endif518:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB520:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf524
    DATA8 flag524
    DIVF F.1 2.0 tmpf524
    CP_EQF 0.0 2.0 flag524
    SELECTF flag524 0.0 tmpf524 F.0

    JR_LTF F.0 VGV_X whilebody511
  endwhile511:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB526:
    JR_NEQF VGV_C 1.0 else527_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB528:
    JR endif527
  else527_1:
    JR_NEQF VGV_C 0.0 else527_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB529:
    JR endif527
  else527_2:
    JR_NEQF VGV_C 2.0 else527_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB530:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB531:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds533
	MOVEF_32 100.0 milliseconds533
	DATA32 timer533
	TIMER_WAIT milliseconds533 timer533
	TIMER_READY timer533
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 20.0 'true'

	DATA8 layer534
	DATA8 nos534
	DATA8 busy534
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer534 nos534
	JR_EQ8 0 nos534 motornotbusy534
  motorwaiting534:
	OUTPUT_TEST layer534 nos534 busy534
	JR_EQ8 busy534 0 motornotbusy534
	SLEEP
	JR motorwaiting534
  motornotbusy534:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer536
	DATA8 nos536
	DATA8 busy536
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer536 nos536
	JR_EQ8 0 nos536 motornotbusy536
  motorwaiting536:
	OUTPUT_TEST layer536 nos536 busy536
	JR_EQ8 busy536 0 motornotbusy536
	SLEEP
	JR motorwaiting536
  motornotbusy536:
    WRITE32 ENDSUB_F_A3_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB537:
    WRITE32 ENDSUB_F_A2_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB538:
  while539:
    JR_LTEQF VGV_S2 15.0 endwhile539
  whilebody539:
    WRITE32 ENDSUB_F_A3_0:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB540:
    WRITE32 ENDSUB_F_A2_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB541:
    CALL MOTOR.STARTSYNC 'bc' -15.0 30.0
    JR_GTF VGV_S2 15.0 whilebody539
  endwhile539:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB544:
    WRITE32 ENDSUB_F_A2_0:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB545:
  while546:
    JR_GTEQF VGV_S2 55.0 endwhile546
  whilebody546:
    WRITE32 ENDSUB_F_A3_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB547:
    WRITE32 ENDSUB_F_A2_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB548:
    CALL MOTOR.STARTSYNC 'bc' -15.0 30.0
    JR_LTF VGV_S2 55.0 whilebody546
  endwhile546:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while552:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf556
    DATA8 flag556
    DIVF F.1 2.0 tmpf556
    CP_EQF 0.0 2.0 flag556
    SELECTF flag556 0.0 tmpf556 F.0

    JR_GTEQF F.0 170.0 endwhile552
  whilebody552:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB557:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf561
    DATA8 flag561
    DIVF F.1 2.0 tmpf561
    CP_EQF 0.0 2.0 flag561
    SELECTF flag561 0.0 tmpf561 F.0

    JR_LTF F.0 170.0 whilebody552
  endwhile552:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds564
	MOVEF_32 500.0 milliseconds564
	DATA32 timer564
	TIMER_WAIT milliseconds564 timer564
	TIMER_READY timer564
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB566:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB567:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB569:
  else527_3:
  endif527:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB570:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer572
	DATA8 nos572
	DATA8 busy572
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer572 nos572
	JR_EQ8 0 nos572 motornotbusy572
  motorwaiting572:
	OUTPUT_TEST layer572 nos572 busy572
	JR_EQ8 busy572 0 motornotbusy572
	SLEEP
	JR motorwaiting572
  motornotbusy572:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer574
	DATA8 nos574
	DATA8 busy574
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer574 nos574
	JR_EQ8 0 nos574 motornotbusy574
  motorwaiting574:
	OUTPUT_TEST layer574 nos574 busy574
	JR_EQ8 busy574 0 motornotbusy574
	SLEEP
	JR motorwaiting574
  motornotbusy574:
    WRITE32 ENDSUB_F_A3_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB575:
    WRITE32 ENDSUB_F_A2_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB576:
  while577:
    JR_LTEQF VGV_S2 15.0 endwhile577
  whilebody577:
    WRITE32 ENDSUB_F_A3_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB578:
    WRITE32 ENDSUB_F_A2_0:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB579:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody577
  endwhile577:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB582:
    WRITE32 ENDSUB_F_A2_0:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB583:
  while584:
    JR_GTEQF VGV_S2 55.0 endwhile584
  whilebody584:
    WRITE32 ENDSUB_F_A3_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB585:
    WRITE32 ENDSUB_F_A2_0:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB586:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody584
  endwhile584:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while590:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf594
    DATA8 flag594
    DIVF F.1 2.0 tmpf594
    CP_EQF 0.0 2.0 flag594
    SELECTF flag594 0.0 tmpf594 F.0

    JR_GTEQF F.0 10.0 endwhile590
  whilebody590:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB595:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf599
    DATA8 flag599
    DIVF F.1 2.0 tmpf599
    CP_EQF 0.0 2.0 flag599
    SELECTF flag599 0.0 tmpf599 F.0

    JR_LTF F.0 10.0 whilebody590
  endwhile590:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer600
	DATA8 nos600
	DATA8 busy600
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer600 nos600
	JR_EQ8 0 nos600 motornotbusy600
  motorwaiting600:
	OUTPUT_TEST layer600 nos600 busy600
	JR_EQ8 busy600 0 motornotbusy600
	SLEEP
	JR motorwaiting600
  motornotbusy600:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds603
	MOVEF_32 500.0 milliseconds603
	DATA32 timer603
	TIMER_WAIT milliseconds603 timer603
	TIMER_READY timer603
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB605:
    DATA32 tmp606
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp606
    JR_NEQ32 0 tmp606 alreadylaunched606
    OBJECT_START TF_VIDVIG_0
  alreadylaunched606:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB607:
    ADDF VGV_C 1.0 VGV_C
  else489_1:
  endif489:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB609:
    JR_GTEQF VGV_H 25.0 else610_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif610
  else610_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else610_2:
  endif610:
    JR_NEQF VGV_COLOR4 4.0 else613_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer614
	DATA8 nos614
	DATA8 busy614
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer614 nos614
	JR_EQ8 0 nos614 motornotbusy614
  motorwaiting614:
	OUTPUT_TEST layer614 nos614 busy614
	JR_EQ8 busy614 0 motornotbusy614
	SLEEP
	JR motorwaiting614
  motornotbusy614:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB615:
    JR_NEQF VGV_C 1.0 else616_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB617:
    CALL MOTOR.RESETCOUNT 'bc'
  while619:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf623
    DATA8 flag623
    DIVF F.1 2.0 tmpf623
    CP_EQF 0.0 2.0 flag623
    SELECTF flag623 0.0 tmpf623 F.0

    JR_GTEQF F.0 210.0 endwhile619
  whilebody619:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB624:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf628
    DATA8 flag628
    DIVF F.1 2.0 tmpf628
    CP_EQF 0.0 2.0 flag628
    SELECTF flag628 0.0 tmpf628 F.0

    JR_LTF F.0 210.0 whilebody619
  endwhile619:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer630
	DATA8 nos630
	DATA8 busy630
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer630 nos630
	JR_EQ8 0 nos630 motornotbusy630
  motorwaiting630:
	OUTPUT_TEST layer630 nos630 busy630
	JR_EQ8 busy630 0 motornotbusy630
	SLEEP
	JR motorwaiting630
  motornotbusy630:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds632
	MOVEF_32 500.0 milliseconds632
	DATA32 timer632
	TIMER_WAIT milliseconds632 timer632
	TIMER_READY timer632
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB634:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf635
    DATA8 flag635
    DIVF 360.0 VGV_L tmpf635
    CP_EQF 0.0 VGV_L flag635
    SELECTF flag635 0.0 tmpf635 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while638:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf642
    DATA8 flag642
    DIVF F.1 2.0 tmpf642
    CP_EQF 0.0 2.0 flag642
    SELECTF flag642 0.0 tmpf642 F.0

    JR_GTEQF F.0 VGV_X endwhile638
  whilebody638:
    WRITE32 ENDSUB_F_A3_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB643:
    WRITE32 ENDSUB_F_A2_0:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB644:
    JR_GTEQF VGV_SPEED 80.0 else645_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else645_1:
  endif645:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB647:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf651
    DATA8 flag651
    DIVF F.1 2.0 tmpf651
    CP_EQF 0.0 2.0 flag651
    SELECTF flag651 0.0 tmpf651 F.0

    JR_LTF F.0 VGV_X whilebody638
  endwhile638:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB653:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB654:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB655:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer657
	DATA8 nos657
	DATA8 busy657
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer657 nos657
	JR_EQ8 0 nos657 motornotbusy657
  motorwaiting657:
	OUTPUT_TEST layer657 nos657 busy657
	JR_EQ8 busy657 0 motornotbusy657
	SLEEP
	JR motorwaiting657
  motornotbusy657:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB658:
    WRITE32 ENDSUB_F_PR_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB659:
    CALL MOTOR.RESETCOUNT 'bc'
  while661:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf665
    DATA8 flag665
    DIVF F.1 2.0 tmpf665
    CP_EQF 0.0 2.0 flag665
    SELECTF flag665 0.0 tmpf665 F.0

    JR_GTEQF F.0 110.0 endwhile661
  whilebody661:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB666:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf670
    DATA8 flag670
    DIVF F.1 2.0 tmpf670
    CP_EQF 0.0 2.0 flag670
    SELECTF flag670 0.0 tmpf670 F.0

    JR_LTF F.0 110.0 whilebody661
  endwhile661:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer672
	DATA8 nos672
	DATA8 busy672
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer672 nos672
	JR_EQ8 0 nos672 motornotbusy672
  motorwaiting672:
	OUTPUT_TEST layer672 nos672 busy672
	JR_EQ8 busy672 0 motornotbusy672
	SLEEP
	JR motorwaiting672
  motornotbusy672:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds674
	MOVEF_32 500.0 milliseconds674
	DATA32 timer674
	TIMER_WAIT milliseconds674 timer674
	TIMER_READY timer674
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB676:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB677:
    WRITE32 ENDSUB_F_PR_0:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB678:
    CALL MOTOR.RESETCOUNT 'bc'
  while680:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf684
    DATA8 flag684
    DIVF F.1 2.0 tmpf684
    CP_EQF 0.0 2.0 flag684
    SELECTF flag684 0.0 tmpf684 F.0

    JR_GTEQF F.0 80.0 endwhile680
  whilebody680:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB685:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf689
    DATA8 flag689
    DIVF F.1 2.0 tmpf689
    CP_EQF 0.0 2.0 flag689
    SELECTF flag689 0.0 tmpf689 F.0

    JR_LTF F.0 80.0 whilebody680
  endwhile680:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer691
	DATA8 nos691
	DATA8 busy691
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer691 nos691
	JR_EQ8 0 nos691 motornotbusy691
  motorwaiting691:
	OUTPUT_TEST layer691 nos691 busy691
	JR_EQ8 busy691 0 motornotbusy691
	SLEEP
	JR motorwaiting691
  motornotbusy691:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds693
	MOVEF_32 500.0 milliseconds693
	DATA32 timer693
	TIMER_WAIT milliseconds693 timer693
	TIMER_READY timer693
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB695:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf696
    DATA8 flag696
    DIVF 360.0 VGV_L tmpf696
    CP_EQF 0.0 VGV_L flag696
    SELECTF flag696 0.0 tmpf696 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while699:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf703
    DATA8 flag703
    DIVF F.1 2.0 tmpf703
    CP_EQF 0.0 2.0 flag703
    SELECTF flag703 0.0 tmpf703 F.0

    JR_GTEQF F.0 VGV_X endwhile699
  whilebody699:
    WRITE32 ENDSUB_F_A3_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB704:
    WRITE32 ENDSUB_F_A2_0:CALLSUB705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB705:
    JR_GTEQF VGV_SPEED 80.0 else706_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else706_1:
  endif706:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB708:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf712
    DATA8 flag712
    DIVF F.1 2.0 tmpf712
    CP_EQF 0.0 2.0 flag712
    SELECTF flag712 0.0 tmpf712 F.0

    JR_LTF F.0 VGV_X whilebody699
  endwhile699:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB714:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB715:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB716:
    WRITE32 ENDSUB_F_PR_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB717:
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while719:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf723
    DATA8 flag723
    DIVF F.1 2.0 tmpf723
    CP_EQF 0.0 2.0 flag723
    SELECTF flag723 0.0 tmpf723 F.0

    JR_GTEQF F.0 110.0 endwhile719
  whilebody719:
    WRITE32 ENDSUB_F_A3_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB724:
    WRITE32 ENDSUB_F_A2_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB725:
    JR_GTEQF VGV_SPEED 80.0 else726_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else726_1:
  endif726:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB728:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf732
    DATA8 flag732
    DIVF F.1 2.0 tmpf732
    CP_EQF 0.0 2.0 flag732
    SELECTF flag732 0.0 tmpf732 F.0

    JR_LTF F.0 110.0 whilebody719
  endwhile719:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer734
	DATA8 nos734
	DATA8 busy734
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer734 nos734
	JR_EQ8 0 nos734 motornotbusy734
  motorwaiting734:
	OUTPUT_TEST layer734 nos734 busy734
	JR_EQ8 busy734 0 motornotbusy734
	SLEEP
	JR motorwaiting734
  motornotbusy734:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds736
	MOVEF_32 500.0 milliseconds736
	DATA32 timer736
	TIMER_WAIT milliseconds736 timer736
	TIMER_READY timer736
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB738:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB739:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB740:
  else616_1:
  endif616:
  else613_1:
  endif613:
    JR_NEQF VGV_COLOR4 5.0 else741_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB742:
    CALL MOTOR.RESETCOUNT 'bc'
  while744:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf748
    DATA8 flag748
    DIVF F.1 2.0 tmpf748
    CP_EQF 0.0 2.0 flag748
    SELECTF flag748 0.0 tmpf748 F.0

    JR_GTEQF F.0 260.0 endwhile744
  whilebody744:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB749:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf753
    DATA8 flag753
    DIVF F.1 2.0 tmpf753
    CP_EQF 0.0 2.0 flag753
    SELECTF flag753 0.0 tmpf753 F.0

    JR_LTF F.0 260.0 whilebody744
  endwhile744:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer755
	DATA8 nos755
	DATA8 busy755
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer755 nos755
	JR_EQ8 0 nos755 motornotbusy755
  motorwaiting755:
	OUTPUT_TEST layer755 nos755 busy755
	JR_EQ8 busy755 0 motornotbusy755
	SLEEP
	JR motorwaiting755
  motornotbusy755:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds757
	MOVEF_32 500.0 milliseconds757
	DATA32 timer757
	TIMER_WAIT milliseconds757 timer757
	TIMER_READY timer757
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB759:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf760
    DATA8 flag760
    DIVF 360.0 VGV_L tmpf760
    CP_EQF 0.0 VGV_L flag760
    SELECTF flag760 0.0 tmpf760 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while763:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf767
    DATA8 flag767
    DIVF F.1 2.0 tmpf767
    CP_EQF 0.0 2.0 flag767
    SELECTF flag767 0.0 tmpf767 F.0

    JR_GTEQF F.0 VGV_X endwhile763
  whilebody763:
    WRITE32 ENDSUB_F_A3_0:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB768:
    WRITE32 ENDSUB_F_A2_0:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB769:
    JR_GTEQF VGV_SPEED 80.0 else770_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else770_1:
  endif770:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB772:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf776
    DATA8 flag776
    DIVF F.1 2.0 tmpf776
    CP_EQF 0.0 2.0 flag776
    SELECTF flag776 0.0 tmpf776 F.0

    JR_LTF F.0 VGV_X whilebody763
  endwhile763:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB778:
    JR_NEQF VGV_C 1.0 else779_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB780:
    JR endif779
  else779_1:
    JR_NEQF VGV_C 0.0 else779_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB781:
    JR endif779
  else779_2:
    JR_NEQF VGV_C 2.0 else779_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB782:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB783:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB785:
    CALL MOTOR.RESETCOUNT 'bc'
  while787:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf791
    DATA8 flag791
    DIVF F.1 2.0 tmpf791
    CP_EQF 0.0 2.0 flag791
    SELECTF flag791 0.0 tmpf791 F.0

    JR_GTEQF F.0 450.0 endwhile787
  whilebody787:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB792:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf796
    DATA8 flag796
    DIVF F.1 2.0 tmpf796
    CP_EQF 0.0 2.0 flag796
    SELECTF flag796 0.0 tmpf796 F.0

    JR_LTF F.0 450.0 whilebody787
  endwhile787:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer798
	DATA8 nos798
	DATA8 busy798
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer798 nos798
	JR_EQ8 0 nos798 motornotbusy798
  motorwaiting798:
	OUTPUT_TEST layer798 nos798 busy798
	JR_EQ8 busy798 0 motornotbusy798
	SLEEP
	JR motorwaiting798
  motornotbusy798:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds800
	MOVEF_32 500.0 milliseconds800
	DATA32 timer800
	TIMER_WAIT milliseconds800 timer800
	TIMER_READY timer800
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB802:
    CALL MOTOR.RESETCOUNT 'bc'
  while804:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf808
    DATA8 flag808
    DIVF F.1 2.0 tmpf808
    CP_EQF 0.0 2.0 flag808
    SELECTF flag808 0.0 tmpf808 F.0

    JR_GTEQF F.0 100.0 endwhile804
  whilebody804:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB809:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf813
    DATA8 flag813
    DIVF F.1 2.0 tmpf813
    CP_EQF 0.0 2.0 flag813
    SELECTF flag813 0.0 tmpf813 F.0

    JR_LTF F.0 100.0 whilebody804
  endwhile804:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB815:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB817:
  else779_3:
  endif779:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB818:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB820:
    CALL MOTOR.RESETCOUNT 'bc'
  while822:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf826
    DATA8 flag826
    DIVF F.1 2.0 tmpf826
    CP_EQF 0.0 2.0 flag826
    SELECTF flag826 0.0 tmpf826 F.0

    JR_GTEQF F.0 250.0 endwhile822
  whilebody822:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB827:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf831
    DATA8 flag831
    DIVF F.1 2.0 tmpf831
    CP_EQF 0.0 2.0 flag831
    SELECTF flag831 0.0 tmpf831 F.0

    JR_LTF F.0 250.0 whilebody822
  endwhile822:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds834
	MOVEF_32 500.0 milliseconds834
	DATA32 timer834
	TIMER_WAIT milliseconds834 timer834
	TIMER_READY timer834
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp836
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp836
    JR_NEQ32 0 tmp836 alreadylaunched836
    OBJECT_START TF_VIDVIG_0
  alreadylaunched836:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB837:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB838:
    ADDF VGV_C 1.0 VGV_C
  else741_1:
  endif741:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB840:
    JR_LTF VGV_H 30.0 or842
    JR_LTEQF VGV_H 100.0 else841_1
  or842:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif841
  else841_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else841_2:
  endif841:
    JR_NEQF VGV_COLOR5 4.0 else845_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer846
	DATA8 nos846
	DATA8 busy846
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer846 nos846
	JR_EQ8 0 nos846 motornotbusy846
  motorwaiting846:
	OUTPUT_TEST layer846 nos846 busy846
	JR_EQ8 busy846 0 motornotbusy846
	SLEEP
	JR motorwaiting846
  motornotbusy846:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB847:
    WRITE32 ENDSUB_F_PR_0:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB848:
    CALL MOTOR.RESETCOUNT 'bc'
  while850:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf854
    DATA8 flag854
    DIVF F.1 2.0 tmpf854
    CP_EQF 0.0 2.0 flag854
    SELECTF flag854 0.0 tmpf854 F.0

    JR_GTEQF F.0 270.0 endwhile850
  whilebody850:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB855:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf859
    DATA8 flag859
    DIVF F.1 2.0 tmpf859
    CP_EQF 0.0 2.0 flag859
    SELECTF flag859 0.0 tmpf859 F.0

    JR_LTF F.0 270.0 whilebody850
  endwhile850:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds862
	MOVEF_32 500.0 milliseconds862
	DATA32 timer862
	TIMER_WAIT milliseconds862 timer862
	TIMER_READY timer862
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB864:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB865:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf866
    DATA8 flag866
    DIVF 360.0 VGV_L tmpf866
    CP_EQF 0.0 VGV_L flag866
    SELECTF flag866 0.0 tmpf866 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while869:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf873
    DATA8 flag873
    DIVF F.1 2.0 tmpf873
    CP_EQF 0.0 2.0 flag873
    SELECTF flag873 0.0 tmpf873 F.0

    JR_GTEQF F.0 VGV_X endwhile869
  whilebody869:
    WRITE32 ENDSUB_F_A3_0:CALLSUB874 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB874:
    WRITE32 ENDSUB_F_A2_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB875:
    JR_GTEQF VGV_SPEED 80.0 else876_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else876_1:
  endif876:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB878:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf882
    DATA8 flag882
    DIVF F.1 2.0 tmpf882
    CP_EQF 0.0 2.0 flag882
    SELECTF flag882 0.0 tmpf882 F.0

    JR_LTF F.0 VGV_X whilebody869
  endwhile869:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB884:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB885:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB886:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer888
	DATA8 nos888
	DATA8 busy888
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer888 nos888
	JR_EQ8 0 nos888 motornotbusy888
  motorwaiting888:
	OUTPUT_TEST layer888 nos888 busy888
	JR_EQ8 busy888 0 motornotbusy888
	SLEEP
	JR motorwaiting888
  motornotbusy888:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer890
	DATA8 nos890
	DATA8 busy890
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer890 nos890
	JR_EQ8 0 nos890 motornotbusy890
  motorwaiting890:
	OUTPUT_TEST layer890 nos890 busy890
	JR_EQ8 busy890 0 motornotbusy890
	SLEEP
	JR motorwaiting890
  motornotbusy890:
    WRITE32 ENDSUB_F_A3_0:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB891:
    WRITE32 ENDSUB_F_A2_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB892:
  while893:
    JR_LTEQF VGV_S3 15.0 endwhile893
  whilebody893:
    WRITE32 ENDSUB_F_A3_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB894:
    WRITE32 ENDSUB_F_A2_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB895:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody893
  endwhile893:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB898:
    WRITE32 ENDSUB_F_A2_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB899:
  while900:
    JR_GTEQF VGV_S3 60.0 endwhile900
  whilebody900:
    WRITE32 ENDSUB_F_A3_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB901:
    WRITE32 ENDSUB_F_A2_0:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB902:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody900
  endwhile900:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while906:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf910
    DATA8 flag910
    DIVF F.1 2.0 tmpf910
    CP_EQF 0.0 2.0 flag910
    SELECTF flag910 0.0 tmpf910 F.0

    JR_GTEQF F.0 80.0 endwhile906
  whilebody906:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB911:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf915
    DATA8 flag915
    DIVF F.1 2.0 tmpf915
    CP_EQF 0.0 2.0 flag915
    SELECTF flag915 0.0 tmpf915 F.0

    JR_LTF F.0 80.0 whilebody906
  endwhile906:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer916
	DATA8 nos916
	DATA8 busy916
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer916 nos916
	JR_EQ8 0 nos916 motornotbusy916
  motorwaiting916:
	OUTPUT_TEST layer916 nos916 busy916
	JR_EQ8 busy916 0 motornotbusy916
	SLEEP
	JR motorwaiting916
  motornotbusy916:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds919
	MOVEF_32 500.0 milliseconds919
	DATA32 timer919
	TIMER_WAIT milliseconds919 timer919
	TIMER_READY timer919
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB921:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB922:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB923:
  else845_1:
  endif845:
    JR_NEQF VGV_COLOR5 5.0 else924_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB925:
    CALL MOTOR.RESETCOUNT 'bc'
  while927:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf931
    DATA8 flag931
    DIVF F.1 2.0 tmpf931
    CP_EQF 0.0 2.0 flag931
    SELECTF flag931 0.0 tmpf931 F.0

    JR_GTEQF F.0 210.0 endwhile927
  whilebody927:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB932:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf936
    DATA8 flag936
    DIVF F.1 2.0 tmpf936
    CP_EQF 0.0 2.0 flag936
    SELECTF flag936 0.0 tmpf936 F.0

    JR_LTF F.0 210.0 whilebody927
  endwhile927:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer938
	DATA8 nos938
	DATA8 busy938
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer938 nos938
	JR_EQ8 0 nos938 motornotbusy938
  motorwaiting938:
	OUTPUT_TEST layer938 nos938 busy938
	JR_EQ8 busy938 0 motornotbusy938
	SLEEP
	JR motorwaiting938
  motornotbusy938:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds940
	MOVEF_32 500.0 milliseconds940
	DATA32 timer940
	TIMER_WAIT milliseconds940 timer940
	TIMER_READY timer940
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB942:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf943
    DATA8 flag943
    DIVF 360.0 VGV_L tmpf943
    CP_EQF 0.0 VGV_L flag943
    SELECTF flag943 0.0 tmpf943 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while946:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf950
    DATA8 flag950
    DIVF F.1 2.0 tmpf950
    CP_EQF 0.0 2.0 flag950
    SELECTF flag950 0.0 tmpf950 F.0

    JR_GTEQF F.0 VGV_X endwhile946
  whilebody946:
    WRITE32 ENDSUB_F_A3_0:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB951:
    WRITE32 ENDSUB_F_A2_0:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB952:
    JR_GTEQF VGV_SPEED 80.0 else953_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else953_1:
  endif953:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB955:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf959
    DATA8 flag959
    DIVF F.1 2.0 tmpf959
    CP_EQF 0.0 2.0 flag959
    SELECTF flag959 0.0 tmpf959 F.0

    JR_LTF F.0 VGV_X whilebody946
  endwhile946:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB961:
    JR_NEQF VGV_C 1.0 else962_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB963:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB964:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB966:
    CALL MOTOR.RESETCOUNT 'bc'
  while968:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf972
    DATA8 flag972
    DIVF F.1 2.0 tmpf972
    CP_EQF 0.0 2.0 flag972
    SELECTF flag972 0.0 tmpf972 F.0

    JR_GTEQF F.0 160.0 endwhile968
  whilebody968:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB973:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf977
    DATA8 flag977
    DIVF F.1 2.0 tmpf977
    CP_EQF 0.0 2.0 flag977
    SELECTF flag977 0.0 tmpf977 F.0

    JR_LTF F.0 160.0 whilebody968
  endwhile968:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds980
	MOVEF_32 500.0 milliseconds980
	DATA32 timer980
	TIMER_WAIT milliseconds980 timer980
	TIMER_READY timer980
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB982:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB983:
    WRITE32 ENDSUB_F_PR_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB984:
    CALL MOTOR.RESETCOUNT 'bc'
  while986:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf990
    DATA8 flag990
    DIVF F.1 2.0 tmpf990
    CP_EQF 0.0 2.0 flag990
    SELECTF flag990 0.0 tmpf990 F.0

    JR_GTEQF F.0 80.0 endwhile986
  whilebody986:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB991:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf995
    DATA8 flag995
    DIVF F.1 2.0 tmpf995
    CP_EQF 0.0 2.0 flag995
    SELECTF flag995 0.0 tmpf995 F.0

    JR_LTF F.0 80.0 whilebody986
  endwhile986:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer997
	DATA8 nos997
	DATA8 busy997
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer997 nos997
	JR_EQ8 0 nos997 motornotbusy997
  motorwaiting997:
	OUTPUT_TEST layer997 nos997 busy997
	JR_EQ8 busy997 0 motornotbusy997
	SLEEP
	JR motorwaiting997
  motornotbusy997:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds999
	MOVEF_32 500.0 milliseconds999
	DATA32 timer999
	TIMER_WAIT milliseconds999 timer999
	TIMER_READY timer999
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1001
	DATA8 no1001
	DATA8 mode81001
	
	MOVEF_8 2.0 no1001
	SUB8 no1001 1 no1001
	DIV8 no1001 4 layer1001
	MATH MOD8 no1001 4 no1001

	MOVEF_8 0.0 mode81001
	
	INPUT_DEVICE READY_RAW layer1001 no1001 0 mode81001 0
    DATA8 layer1002
	DATA8 no1002
	DATA8 mode81002
	
	MOVEF_8 3.0 no1002
	SUB8 no1002 1 no1002
	DIV8 no1002 4 layer1002
	MATH MOD8 no1002 4 no1002

	MOVEF_8 0.0 mode81002
	
	INPUT_DEVICE READY_RAW layer1002 no1002 0 mode81002 0
  while1003:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1005
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1004
  and1005:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1008
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1004
  and1008:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1003
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1003
  or1004:
  whilebody1003:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1014
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1003
  and1014:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1017
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1003
  and1017:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1020
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1003
  and1020:
  endwhile1003:
  while1023:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1023
  whilebody1023:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1023
  endwhile1023:
    CALL MOTOR.STOP 'B' 'True'
  while1028:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1028
  whilebody1028:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1028
  endwhile1028:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1033
	DATA8 nos1033
	DATA8 busy1033
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1033 nos1033
	JR_EQ8 0 nos1033 motornotbusy1033
  motorwaiting1033:
	OUTPUT_TEST layer1033 nos1033 busy1033
	JR_EQ8 busy1033 0 motornotbusy1033
	SLEEP
	JR motorwaiting1033
  motornotbusy1033:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1035
	DATA8 nos1035
	DATA8 busy1035
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1035 nos1035
	JR_EQ8 0 nos1035 motornotbusy1035
  motorwaiting1035:
	OUTPUT_TEST layer1035 nos1035 busy1035
	JR_EQ8 busy1035 0 motornotbusy1035
	SLEEP
	JR motorwaiting1035
  motornotbusy1035:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1037:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1038:
  while1039:
    JR_LTEQF VGV_S3 10.0 endwhile1039
  whilebody1039:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1040:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1041:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1039
  endwhile1039:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1043:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1044:
  while1045:
    JR_GTEQF VGV_S3 55.0 endwhile1045
  whilebody1045:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1046 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1046:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1047:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1045
  endwhile1045:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1050
    DATA8 flag1050
    DIVF 360.0 VGV_L tmpf1050
    CP_EQF 0.0 VGV_L flag1050
    SELECTF flag1050 0.0 tmpf1050 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1053:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1057
    DATA8 flag1057
    DIVF F.1 2.0 tmpf1057
    CP_EQF 0.0 2.0 flag1057
    SELECTF flag1057 0.0 tmpf1057 F.0

    JR_GTEQF F.0 VGV_X endwhile1053
  whilebody1053:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1058:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1059:
    JR_GTEQF VGV_SPEED 80.0 else1060_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1060_1:
  endif1060:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1062:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1066
    DATA8 flag1066
    DIVF F.1 2.0 tmpf1066
    CP_EQF 0.0 2.0 flag1066
    SELECTF flag1066 0.0 tmpf1066 F.0

    JR_LTF F.0 VGV_X whilebody1053
  endwhile1053:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1068:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1069:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1070:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1072:
    CALL MOTOR.RESETCOUNT 'bc'
  while1074:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1078
    DATA8 flag1078
    DIVF F.1 2.0 tmpf1078
    CP_EQF 0.0 2.0 flag1078
    SELECTF flag1078 0.0 tmpf1078 F.0

    JR_GTEQF F.0 80.0 endwhile1074
  whilebody1074:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1079:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1083
    DATA8 flag1083
    DIVF F.1 2.0 tmpf1083
    CP_EQF 0.0 2.0 flag1083
    SELECTF flag1083 0.0 tmpf1083 F.0

    JR_LTF F.0 80.0 whilebody1074
  endwhile1074:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1085
	DATA8 nos1085
	DATA8 busy1085
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1085 nos1085
	JR_EQ8 0 nos1085 motornotbusy1085
  motorwaiting1085:
	OUTPUT_TEST layer1085 nos1085 busy1085
	JR_EQ8 busy1085 0 motornotbusy1085
	SLEEP
	JR motorwaiting1085
  motornotbusy1085:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1087
	MOVEF_32 500.0 milliseconds1087
	DATA32 timer1087
	TIMER_WAIT milliseconds1087 timer1087
	TIMER_READY timer1087
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1089:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1090:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1091 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1091:
    JR endif962
  else962_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1092:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1093 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1093:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1095:
    CALL MOTOR.RESETCOUNT 'bc'
  while1097:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1101
    DATA8 flag1101
    DIVF F.1 2.0 tmpf1101
    CP_EQF 0.0 2.0 flag1101
    SELECTF flag1101 0.0 tmpf1101 F.0

    JR_GTEQF F.0 160.0 endwhile1097
  whilebody1097:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1102:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1106
    DATA8 flag1106
    DIVF F.1 2.0 tmpf1106
    CP_EQF 0.0 2.0 flag1106
    SELECTF flag1106 0.0 tmpf1106 F.0

    JR_LTF F.0 160.0 whilebody1097
  endwhile1097:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1108
	DATA8 nos1108
	DATA8 busy1108
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1108 nos1108
	JR_EQ8 0 nos1108 motornotbusy1108
  motorwaiting1108:
	OUTPUT_TEST layer1108 nos1108 busy1108
	JR_EQ8 busy1108 0 motornotbusy1108
	SLEEP
	JR motorwaiting1108
  motornotbusy1108:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1110
	MOVEF_32 500.0 milliseconds1110
	DATA32 timer1110
	TIMER_WAIT milliseconds1110 timer1110
	TIMER_READY timer1110
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1112:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1113:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1114:
  else962_2:
  endif962:
  else924_1:
  endif924:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1116
	DATA8 nos1116
	DATA8 busy1116
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1116 nos1116
	JR_EQ8 0 nos1116 motornotbusy1116
  motorwaiting1116:
	OUTPUT_TEST layer1116 nos1116 busy1116
	JR_EQ8 busy1116 0 motornotbusy1116
	SLEEP
	JR motorwaiting1116
  motornotbusy1116:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1117
	DATA8 nos1117
	DATA8 busy1117
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1117 nos1117
	JR_EQ8 0 nos1117 motornotbusy1117
  motorwaiting1117:
	OUTPUT_TEST layer1117 nos1117 busy1117
	JR_EQ8 busy1117 0 motornotbusy1117
	SLEEP
	JR motorwaiting1117
  motornotbusy1117:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1119
	DATA8 nos1119
	DATA8 busy1119
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1119 nos1119
	JR_EQ8 0 nos1119 motornotbusy1119
  motorwaiting1119:
	OUTPUT_TEST layer1119 nos1119 busy1119
	JR_EQ8 busy1119 0 motornotbusy1119
	SLEEP
	JR motorwaiting1119
  motornotbusy1119:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1120
	DATA8 nos1120
	DATA8 busy1120
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1120 nos1120
	JR_EQ8 0 nos1120 motornotbusy1120
  motorwaiting1120:
	OUTPUT_TEST layer1120 nos1120 busy1120
	JR_EQ8 busy1120 0 motornotbusy1120
	SLEEP
	JR motorwaiting1120
  motornotbusy1120:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1122
    DATA8 flag1122
    DIVF 360.0 VGV_L tmpf1122
    CP_EQF 0.0 VGV_L flag1122
    SELECTF flag1122 0.0 tmpf1122 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1125:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1129
    DATA8 flag1129
    DIVF F.1 2.0 tmpf1129
    CP_EQF 0.0 2.0 flag1129
    SELECTF flag1129 0.0 tmpf1129 F.0

    JR_GTEQF F.0 VGV_X endwhile1125
  whilebody1125:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1130:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1131:
    JR_GTEQF VGV_SPEED 80.0 else1132_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1132_1:
  endif1132:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1134:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1138
    DATA8 flag1138
    DIVF F.1 2.0 tmpf1138
    CP_EQF 0.0 2.0 flag1138
    SELECTF flag1138 0.0 tmpf1138 F.0

    JR_LTF F.0 VGV_X whilebody1125
  endwhile1125:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1140:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1142
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1142
    JR_NEQ32 0 tmp1142 alreadylaunched1142
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1142:
ENDTHREAD:
    RETURN
SUB_F_FINISH_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 146.0 'true'

	DATA8 layer1143
	DATA8 nos1143
	DATA8 busy1143
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1143 nos1143
	JR_EQ8 0 nos1143 motornotbusy1143
  motorwaiting1143:
	OUTPUT_TEST layer1143 nos1143 busy1143
	JR_EQ8 busy1143 0 motornotbusy1143
	SLEEP
	JR motorwaiting1143
  motornotbusy1143:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 146.0 'true'

	DATA8 layer1144
	DATA8 nos1144
	DATA8 busy1144
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1144 nos1144
	JR_EQ8 0 nos1144 motornotbusy1144
  motorwaiting1144:
	OUTPUT_TEST layer1144 nos1144 busy1144
	JR_EQ8 busy1144 0 motornotbusy1144
	SLEEP
	JR motorwaiting1144
  motornotbusy1144:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1145
	DATA8 nos1145
	DATA8 busy1145
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1145 nos1145
	JR_EQ8 0 nos1145 motornotbusy1145
  motorwaiting1145:
	OUTPUT_TEST layer1145 nos1145 busy1145
	JR_EQ8 busy1145 0 motornotbusy1145
	SLEEP
	JR motorwaiting1145
  motornotbusy1145:
    PROGRAM_STOP -1
RETSUB_F_FINISH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_0:
SUB_F_SB2_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1148:
  while1149:
    JR_LTEQF VGV_S3 10.0 and1151
    JR_GTF VGV_S2 10.0 or1150
  and1151:
    JR_GTEQF VGV_S3 10.0 endwhile1149
    JR_GTEQF VGV_S2 10.0 endwhile1149
  or1150:
  whilebody1149:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1152:
    JR_LTEQF VGV_S3 10.0 and1153
    JR_GTF VGV_S2 10.0 whilebody1149
  and1153:
    JR_GTEQF VGV_S3 10.0 and1154
    JR_LTF VGV_S2 10.0 whilebody1149
  and1154:
  endwhile1149:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1156
	DATA8 nos1156
	DATA8 busy1156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1156 nos1156
	JR_EQ8 0 nos1156 motornotbusy1156
  motorwaiting1156:
	OUTPUT_TEST layer1156 nos1156 busy1156
	JR_EQ8 busy1156 0 motornotbusy1156
	SLEEP
	JR motorwaiting1156
  motornotbusy1156:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 150.0 'true'

	DATA8 layer1157
	DATA8 nos1157
	DATA8 busy1157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1157 nos1157
	JR_EQ8 0 nos1157 motornotbusy1157
  motorwaiting1157:
	OUTPUT_TEST layer1157 nos1157 busy1157
	JR_EQ8 busy1157 0 motornotbusy1157
	SLEEP
	JR motorwaiting1157
  motornotbusy1157:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer1158
	DATA8 nos1158
	DATA8 busy1158
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1158 nos1158
	JR_EQ8 0 nos1158 motornotbusy1158
  motorwaiting1158:
	OUTPUT_TEST layer1158 nos1158 busy1158
	JR_EQ8 busy1158 0 motornotbusy1158
	SLEEP
	JR motorwaiting1158
  motornotbusy1158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1159:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1160:
  while1161:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1161
  whilebody1161:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1161
  endwhile1161:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1166:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1167:
  while1168:
    JR_GTEQF VGV_S3 55.0 endwhile1168
  whilebody1168:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1169:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1170:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1168
  endwhile1168:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1173
	DATA8 nos1173
	DATA8 busy1173
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1173 nos1173
	JR_EQ8 0 nos1173 motornotbusy1173
  motorwaiting1173:
	OUTPUT_TEST layer1173 nos1173 busy1173
	JR_EQ8 busy1173 0 motornotbusy1173
	SLEEP
	JR motorwaiting1173
  motornotbusy1173:
  while1174:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 61.0 or1175
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 61.0 endwhile1174
  or1175:
  whilebody1174:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 61.0 whilebody1174
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 61.0 whilebody1174
  endwhile1174:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1182:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1183
    DATA8 flag1183
    DIVF 360.0 VGV_L tmpf1183
    CP_EQF 0.0 VGV_L flag1183
    SELECTF flag1183 0.0 tmpf1183 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1186:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1190
    DATA8 flag1190
    DIVF F.1 2.0 tmpf1190
    CP_EQF 0.0 2.0 flag1190
    SELECTF flag1190 0.0 tmpf1190 F.0

    JR_GTEQF F.0 VGV_X endwhile1186
  whilebody1186:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1191:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1192:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1193:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1197
    DATA8 flag1197
    DIVF F.1 2.0 tmpf1197
    CP_EQF 0.0 2.0 flag1197
    SELECTF flag1197 0.0 tmpf1197 F.0

    JR_LTF F.0 VGV_X whilebody1186
  endwhile1186:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1199:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1200:
  while1201:
    JR_LTEQF VGV_S3 15.0 and1203
    JR_GTF VGV_S2 15.0 or1202
  and1203:
    JR_GTEQF VGV_S3 15.0 endwhile1201
    JR_GTEQF VGV_S2 15.0 endwhile1201
  or1202:
  whilebody1201:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1204:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1205:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1206:
    JR_LTEQF VGV_S3 15.0 and1207
    JR_GTF VGV_S2 15.0 whilebody1201
  and1207:
    JR_GTEQF VGV_S3 15.0 and1208
    JR_LTF VGV_S2 15.0 whilebody1201
  and1208:
  endwhile1201:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1210
	DATA8 nos1210
	DATA8 busy1210
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1210 nos1210
	JR_EQ8 0 nos1210 motornotbusy1210
  motorwaiting1210:
	OUTPUT_TEST layer1210 nos1210 busy1210
	JR_EQ8 busy1210 0 motornotbusy1210
	SLEEP
	JR motorwaiting1210
  motornotbusy1210:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1211:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1212:
  while1213:
    JR_GTEQF VGV_S2 60.0 endwhile1213
  whilebody1213:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1213
  endwhile1213:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1216:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1217:
  while1218:
    JR_LTEQF VGV_S3 10.0 and1220
    JR_GTF VGV_S2 10.0 or1219
  and1220:
    JR_GTEQF VGV_S3 10.0 endwhile1218
    JR_GTEQF VGV_S2 10.0 endwhile1218
  or1219:
  whilebody1218:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1221:
    JR_LTEQF VGV_S3 10.0 and1222
    JR_GTF VGV_S2 10.0 whilebody1218
  and1222:
    JR_GTEQF VGV_S3 10.0 and1223
    JR_LTF VGV_S2 10.0 whilebody1218
  and1223:
  endwhile1218:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1225
    DATA8 flag1225
    DIVF 360.0 VGV_L tmpf1225
    CP_EQF 0.0 VGV_L flag1225
    SELECTF flag1225 0.0 tmpf1225 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 35.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1228:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1232
    DATA8 flag1232
    DIVF F.1 2.0 tmpf1232
    CP_EQF 0.0 2.0 flag1232
    SELECTF flag1232 0.0 tmpf1232 F.0

    JR_GTEQF F.0 VGV_X endwhile1228
  whilebody1228:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1233:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1234:
    JR_GTEQF VGV_SPEED 85.0 else1235_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1235_1:
  endif1235:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1237:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1241
    DATA8 flag1241
    DIVF F.1 2.0 tmpf1241
    CP_EQF 0.0 2.0 flag1241
    SELECTF flag1241 0.0 tmpf1241 F.0

    JR_LTF F.0 VGV_X whilebody1228
  endwhile1228:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1243:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1244:
  while1245:
    JR_LTEQF VGV_S3 15.0 and1247
    JR_GTF VGV_S2 15.0 or1246
  and1247:
    JR_GTEQF VGV_S3 15.0 endwhile1245
    JR_GTEQF VGV_S2 15.0 endwhile1245
  or1246:
  whilebody1245:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1248:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1249:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1250:
    JR_LTEQF VGV_S3 15.0 and1251
    JR_GTF VGV_S2 15.0 whilebody1245
  and1251:
    JR_GTEQF VGV_S3 15.0 and1252
    JR_LTF VGV_S2 15.0 whilebody1245
  and1252:
  endwhile1245:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 40.0 'true'

	DATA8 layer1254
	DATA8 nos1254
	DATA8 busy1254
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1254 nos1254
	JR_EQ8 0 nos1254 motornotbusy1254
  motorwaiting1254:
	OUTPUT_TEST layer1254 nos1254 busy1254
	JR_EQ8 busy1254 0 motornotbusy1254
	SLEEP
	JR motorwaiting1254
  motornotbusy1254:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1256
	DATA8 nos1256
	DATA8 busy1256
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1256 nos1256
	JR_EQ8 0 nos1256 motornotbusy1256
  motorwaiting1256:
	OUTPUT_TEST layer1256 nos1256 busy1256
	JR_EQ8 busy1256 0 motornotbusy1256
	SLEEP
	JR motorwaiting1256
  motornotbusy1256:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1257:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1258:
  while1259:
    JR_LTEQF VGV_S2 15.0 endwhile1259
  whilebody1259:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1260:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1261:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1259
  endwhile1259:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1264:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1265:
  while1266:
    JR_GTEQF VGV_S2 55.0 endwhile1266
  whilebody1266:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1267:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1268:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1266
  endwhile1266:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1271
	DATA8 nos1271
	DATA8 busy1271
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1271 nos1271
	JR_EQ8 0 nos1271 motornotbusy1271
  motorwaiting1271:
	OUTPUT_TEST layer1271 nos1271 busy1271
	JR_EQ8 busy1271 0 motornotbusy1271
	SLEEP
	JR motorwaiting1271
  motornotbusy1271:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1273
	DATA8 nos1273
	DATA8 busy1273
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1273 nos1273
	JR_EQ8 0 nos1273 motornotbusy1273
  motorwaiting1273:
	OUTPUT_TEST layer1273 nos1273 busy1273
	JR_EQ8 busy1273 0 motornotbusy1273
	SLEEP
	JR motorwaiting1273
  motornotbusy1273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1274:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1275:
  while1276:
    JR_LTEQF VGV_S3 15.0 endwhile1276
  whilebody1276:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1277:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1278:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1276
  endwhile1276:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1281:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1282:
  while1283:
    JR_GTEQF VGV_S3 60.0 endwhile1283
  whilebody1283:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1285:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1283
  endwhile1283:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1288:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1289:
  while1290:
    JR_LTEQF VGV_S2 9.0 and1292
    JR_GTF VGV_S3 9.0 or1291
  and1292:
    JR_GTEQF VGV_S2 9.0 and1293
    JR_GTF VGV_S3 9.0 or1291
  and1293:
    JR_LTEQF VGV_S2 9.0 endwhile1290
    JR_GTEQF VGV_S3 9.0 endwhile1290
  or1291:
  whilebody1290:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1294:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1295:
    CALL MOTOR.STARTSYNC 'BC' -40.0 -40.0
    JR_LTEQF VGV_S2 9.0 and1297
    JR_GTF VGV_S3 9.0 whilebody1290
  and1297:
    JR_GTEQF VGV_S2 9.0 and1298
    JR_GTF VGV_S3 9.0 whilebody1290
  and1298:
    JR_LTEQF VGV_S2 9.0 and1299
    JR_LTF VGV_S3 9.0 whilebody1290
  and1299:
  endwhile1290:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 60.0 'true'

	DATA8 layer1300
	DATA8 nos1300
	DATA8 busy1300
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1300 nos1300
	JR_EQ8 0 nos1300 motornotbusy1300
  motorwaiting1300:
	OUTPUT_TEST layer1300 nos1300 busy1300
	JR_EQ8 busy1300 0 motornotbusy1300
	SLEEP
	JR motorwaiting1300
  motornotbusy1300:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 90.0 'true'

	DATA8 layer1302
	DATA8 nos1302
	DATA8 busy1302
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1302 nos1302
	JR_EQ8 0 nos1302 motornotbusy1302
  motorwaiting1302:
	OUTPUT_TEST layer1302 nos1302 busy1302
	JR_EQ8 busy1302 0 motornotbusy1302
	SLEEP
	JR motorwaiting1302
  motornotbusy1302:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1304:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1305:
  while1306:
    JR_LTEQF VGV_S2 10.0 endwhile1306
  whilebody1306:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1307:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1308:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 10.0 whilebody1306
  endwhile1306:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1310:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1311:
  while1312:
    JR_GTEQF VGV_S2 60.0 endwhile1312
  whilebody1312:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1313:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1314:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1312
  endwhile1312:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1317:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 33.0 'true'

	DATA8 layer1318
	DATA8 nos1318
	DATA8 busy1318
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1318 nos1318
	JR_EQ8 0 nos1318 motornotbusy1318
  motorwaiting1318:
	OUTPUT_TEST layer1318 nos1318 busy1318
	JR_EQ8 busy1318 0 motornotbusy1318
	SLEEP
	JR motorwaiting1318
  motornotbusy1318:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1320
	DATA8 nos1320
	DATA8 busy1320
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1320 nos1320
	JR_EQ8 0 nos1320 motornotbusy1320
  motorwaiting1320:
	OUTPUT_TEST layer1320 nos1320 busy1320
	JR_EQ8 busy1320 0 motornotbusy1320
	SLEEP
	JR motorwaiting1320
  motornotbusy1320:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1322:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1323:
  while1324:
    JR_LTEQF VGV_S3 8.0 endwhile1324
  whilebody1324:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1325:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1326:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 8.0 whilebody1324
  endwhile1324:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1328:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1329:
  while1330:
    JR_GTEQF VGV_S3 55.0 endwhile1330
  whilebody1330:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1331:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1332:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1330
  endwhile1330:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1335
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1335
    JR_NEQ32 0 tmp1335 alreadylaunched1335
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1335:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1336:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1337:
  while1338:
    JR_LTEQF VGV_S3 15.0 and1340
    JR_GTF VGV_S2 15.0 or1339
  and1340:
    JR_GTEQF VGV_S3 15.0 and1341
    JR_GTF VGV_S2 15.0 or1339
  and1341:
    JR_LTEQF VGV_S3 15.0 endwhile1338
    JR_GTEQF VGV_S2 15.0 endwhile1338
  or1339:
  whilebody1338:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1342:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1343:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1344:
    JR_LTEQF VGV_S3 15.0 and1345
    JR_GTF VGV_S2 15.0 whilebody1338
  and1345:
    JR_GTEQF VGV_S3 15.0 and1346
    JR_GTF VGV_S2 15.0 whilebody1338
  and1346:
    JR_LTEQF VGV_S3 15.0 and1347
    JR_LTF VGV_S2 15.0 whilebody1338
  and1347:
  endwhile1338:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1349
	DATA8 nos1349
	DATA8 busy1349
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1349 nos1349
	JR_EQ8 0 nos1349 motornotbusy1349
  motorwaiting1349:
	OUTPUT_TEST layer1349 nos1349 busy1349
	JR_EQ8 busy1349 0 motornotbusy1349
	SLEEP
	JR motorwaiting1349
  motornotbusy1349:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1350
	DATA8 nos1350
	DATA8 busy1350
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1350 nos1350
	JR_EQ8 0 nos1350 motornotbusy1350
  motorwaiting1350:
	OUTPUT_TEST layer1350 nos1350 busy1350
	JR_EQ8 busy1350 0 motornotbusy1350
	SLEEP
	JR motorwaiting1350
  motornotbusy1350:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1353:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1354:
  while1355:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1355
  whilebody1355:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1357:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1358:
    MOVEF_F 70.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1359:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1355
  endwhile1355:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -60.0
    DATA32 milliseconds1363
	MOVEF_32 250.0 milliseconds1363
	DATA32 timer1363
	TIMER_WAIT milliseconds1363 timer1363
	TIMER_READY timer1363
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1365
	DATA8 nos1365
	DATA8 busy1365
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1365 nos1365
	JR_EQ8 0 nos1365 motornotbusy1365
  motorwaiting1365:
	OUTPUT_TEST layer1365 nos1365 busy1365
	JR_EQ8 busy1365 0 motornotbusy1365
	SLEEP
	JR motorwaiting1365
  motornotbusy1365:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -100.0
    DATA32 milliseconds1367
	MOVEF_32 1400.0 milliseconds1367
	DATA32 timer1367
	TIMER_WAIT milliseconds1367 timer1367
	TIMER_READY timer1367
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1369
	DATA8 nos1369
	DATA8 busy1369
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1369 nos1369
	JR_EQ8 0 nos1369 motornotbusy1369
  motorwaiting1369:
	OUTPUT_TEST layer1369 nos1369 busy1369
	JR_EQ8 busy1369 0 motornotbusy1369
	SLEEP
	JR motorwaiting1369
  motornotbusy1369:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1370
	DATA8 nos1370
	DATA8 busy1370
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1370 nos1370
	JR_EQ8 0 nos1370 motornotbusy1370
  motorwaiting1370:
	OUTPUT_TEST layer1370 nos1370 busy1370
	JR_EQ8 busy1370 0 motornotbusy1370
	SLEEP
	JR motorwaiting1370
  motornotbusy1370:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1371
	DATA8 nos1371
	DATA8 busy1371
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1371 nos1371
	JR_EQ8 0 nos1371 motornotbusy1371
  motorwaiting1371:
	OUTPUT_TEST layer1371 nos1371 busy1371
	JR_EQ8 busy1371 0 motornotbusy1371
	SLEEP
	JR motorwaiting1371
  motornotbusy1371:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1372:
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 45.0 'true'

	DATA8 layer1373
	DATA8 nos1373
	DATA8 busy1373
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1373 nos1373
	JR_EQ8 0 nos1373 motornotbusy1373
  motorwaiting1373:
	OUTPUT_TEST layer1373 nos1373 busy1373
	JR_EQ8 busy1373 0 motornotbusy1373
	SLEEP
	JR motorwaiting1373
  motornotbusy1373:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1374
	DATA8 nos1374
	DATA8 busy1374
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1374 nos1374
	JR_EQ8 0 nos1374 motornotbusy1374
  motorwaiting1374:
	OUTPUT_TEST layer1374 nos1374 busy1374
	JR_EQ8 busy1374 0 motornotbusy1374
	SLEEP
	JR motorwaiting1374
  motornotbusy1374:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1376:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1377:
  while1378:
    JR_LTEQF VGV_S2 15.0 endwhile1378
  whilebody1378:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1379:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1380:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1378
  endwhile1378:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1383:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1384:
  while1385:
    JR_GTEQF VGV_S2 50.0 endwhile1385
  whilebody1385:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1386:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1387:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1385
  endwhile1385:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1390:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1391:
  while1392:
    JR_LTEQF VGV_S3 15.0 and1394
    JR_GTF VGV_S2 15.0 or1393
  and1394:
    JR_GTEQF VGV_S3 15.0 endwhile1392
    JR_GTEQF VGV_S2 15.0 endwhile1392
  or1393:
  whilebody1392:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1395:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1396:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1397:
    JR_LTEQF VGV_S3 15.0 and1398
    JR_GTF VGV_S2 15.0 whilebody1392
  and1398:
    JR_GTEQF VGV_S3 15.0 and1399
    JR_LTF VGV_S2 15.0 whilebody1392
  and1399:
  endwhile1392:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1401:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.RESETCOUNT 'bc'
  while1403:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1407
    DATA8 flag1407
    DIVF F.1 2.0 tmpf1407
    CP_EQF 0.0 2.0 flag1407
    SELECTF flag1407 0.0 tmpf1407 F.0

    JR_GTEQF F.0 200.0 endwhile1403
  whilebody1403:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1408:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1412
    DATA8 flag1412
    DIVF F.1 2.0 tmpf1412
    CP_EQF 0.0 2.0 flag1412
    SELECTF flag1412 0.0 tmpf1412 F.0

    JR_LTF F.0 200.0 whilebody1403
  endwhile1403:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1414:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1415:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1416:
    JR_GTF VGV_I 1.0 endfor1416
  forbody1416:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1417:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1418:
  while1419:
    JR_LTEQF VGV_S3 15.0 and1421
    JR_GTF VGV_S2 15.0 or1420
  and1421:
    JR_GTEQF VGV_S3 15.0 endwhile1419
    JR_GTEQF VGV_S2 15.0 endwhile1419
  or1420:
  whilebody1419:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1422:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1423:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1424:
    JR_LTEQF VGV_S3 15.0 and1425
    JR_GTF VGV_S2 15.0 whilebody1419
  and1425:
    JR_GTEQF VGV_S3 15.0 and1426
    JR_LTF VGV_S2 15.0 whilebody1419
  and1426:
  endwhile1419:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 30.0 'true'

	DATA8 layer1428
	DATA8 nos1428
	DATA8 busy1428
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1428 nos1428
	JR_EQ8 0 nos1428 motornotbusy1428
  motorwaiting1428:
	OUTPUT_TEST layer1428 nos1428 busy1428
	JR_EQ8 busy1428 0 motornotbusy1428
	SLEEP
	JR motorwaiting1428
  motornotbusy1428:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1416
  endfor1416:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 5.0 'true'

	DATA8 layer1431
	DATA8 nos1431
	DATA8 busy1431
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1431 nos1431
	JR_EQ8 0 nos1431 motornotbusy1431
  motorwaiting1431:
	OUTPUT_TEST layer1431 nos1431 busy1431
	JR_EQ8 busy1431 0 motornotbusy1431
	SLEEP
	JR motorwaiting1431
  motornotbusy1431:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 185.0 'true'

	DATA8 layer1432
	DATA8 nos1432
	DATA8 busy1432
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1432 nos1432
	JR_EQ8 0 nos1432 motornotbusy1432
  motorwaiting1432:
	OUTPUT_TEST layer1432 nos1432 busy1432
	JR_EQ8 busy1432 0 motornotbusy1432
	SLEEP
	JR motorwaiting1432
  motornotbusy1432:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1433
	DATA8 nos1433
	DATA8 busy1433
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1433 nos1433
	JR_EQ8 0 nos1433 motornotbusy1433
  motorwaiting1433:
	OUTPUT_TEST layer1433 nos1433 busy1433
	JR_EQ8 busy1433 0 motornotbusy1433
	SLEEP
	JR motorwaiting1433
  motornotbusy1433:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1435
	MOVEF_32 500.0 milliseconds1435
	DATA32 timer1435
	TIMER_WAIT milliseconds1435 timer1435
	TIMER_READY timer1435
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -50.0 -50.0 110.0 'true'

	DATA8 layer1437
	DATA8 nos1437
	DATA8 busy1437
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1437 nos1437
	JR_EQ8 0 nos1437 motornotbusy1437
  motorwaiting1437:
	OUTPUT_TEST layer1437 nos1437 busy1437
	JR_EQ8 busy1437 0 motornotbusy1437
	SLEEP
	JR motorwaiting1437
  motornotbusy1437:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 0.0 415.0 'true'

	DATA8 layer1438
	DATA8 nos1438
	DATA8 busy1438
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1438 nos1438
	JR_EQ8 0 nos1438 motornotbusy1438
  motorwaiting1438:
	OUTPUT_TEST layer1438 nos1438 busy1438
	JR_EQ8 busy1438 0 motornotbusy1438
	SLEEP
	JR motorwaiting1438
  motornotbusy1438:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1439:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1440:
  while1441:
    JR_LTEQF VGV_S3 10.0 and1443
    JR_GTF VGV_S2 10.0 or1442
  and1443:
    JR_GTEQF VGV_S3 10.0 and1444
    JR_GTF VGV_S2 10.0 or1442
  and1444:
    JR_LTEQF VGV_S3 6.0 endwhile1441
    JR_GTEQF VGV_S2 6.0 endwhile1441
  or1442:
  whilebody1441:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1445:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1446:
    CALL MOTOR.STARTPOWER 'bc' 50.0
    JR_LTEQF VGV_S3 10.0 and1448
    JR_GTF VGV_S2 10.0 whilebody1441
  and1448:
    JR_GTEQF VGV_S3 10.0 and1449
    JR_GTF VGV_S2 10.0 whilebody1441
  and1449:
    JR_LTEQF VGV_S3 6.0 and1450
    JR_LTF VGV_S2 6.0 whilebody1441
  and1450:
  endwhile1441:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1452
	DATA8 nos1452
	DATA8 busy1452
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1452 nos1452
	JR_EQ8 0 nos1452 motornotbusy1452
  motorwaiting1452:
	OUTPUT_TEST layer1452 nos1452 busy1452
	JR_EQ8 busy1452 0 motornotbusy1452
	SLEEP
	JR motorwaiting1452
  motornotbusy1452:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1454:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1455:
  while1456:
    JR_LTEQF VGV_S3 10.0 endwhile1456
  whilebody1456:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1457:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1458:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1456
  endwhile1456:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1461:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1462:
  while1463:
    JR_GTEQF VGV_S3 60.0 endwhile1463
  whilebody1463:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1464:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1465:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1463
  endwhile1463:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1468
	MOVEF_32 100.0 milliseconds1468
	DATA32 timer1468
	TIMER_WAIT milliseconds1468 timer1468
	TIMER_READY timer1468
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1469:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.RESETCOUNT 'bc'
  while1471:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1475
    DATA8 flag1475
    DIVF F.1 2.0 tmpf1475
    CP_EQF 0.0 2.0 flag1475
    SELECTF flag1475 0.0 tmpf1475 F.0

    JR_GTEQF F.0 200.0 endwhile1471
  whilebody1471:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1476:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1480
    DATA8 flag1480
    DIVF F.1 2.0 tmpf1480
    CP_EQF 0.0 2.0 flag1480
    SELECTF flag1480 0.0 tmpf1480 F.0

    JR_LTF F.0 200.0 whilebody1471
  endwhile1471:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1482:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1483:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1484:
    JR_GTF VGV_I 2.0 endfor1484
  forbody1484:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1485:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1486:
  while1487:
    JR_LTEQF VGV_S3 15.0 and1489
    JR_GTF VGV_S2 15.0 or1488
  and1489:
    JR_GTEQF VGV_S3 15.0 endwhile1487
    JR_GTEQF VGV_S2 15.0 endwhile1487
  or1488:
  whilebody1487:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1490:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1491:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1492:
    JR_LTEQF VGV_S3 15.0 and1493
    JR_GTF VGV_S2 15.0 whilebody1487
  and1493:
    JR_GTEQF VGV_S3 15.0 and1494
    JR_LTF VGV_S2 15.0 whilebody1487
  and1494:
  endwhile1487:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 30.0 'true'

	DATA8 layer1496
	DATA8 nos1496
	DATA8 busy1496
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1496 nos1496
	JR_EQ8 0 nos1496 motornotbusy1496
  motorwaiting1496:
	OUTPUT_TEST layer1496 nos1496 busy1496
	JR_EQ8 busy1496 0 motornotbusy1496
	SLEEP
	JR motorwaiting1496
  motornotbusy1496:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1484
  endfor1484:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 15.0 'true'

	DATA8 layer1499
	DATA8 nos1499
	DATA8 busy1499
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1499 nos1499
	JR_EQ8 0 nos1499 motornotbusy1499
  motorwaiting1499:
	OUTPUT_TEST layer1499 nos1499 busy1499
	JR_EQ8 busy1499 0 motornotbusy1499
	SLEEP
	JR motorwaiting1499
  motornotbusy1499:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1501:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1502:
    MOVEF_F 80.0 VGV_J
  while1503:
    JR_LTEQF VGV_S3 10.0 endwhile1503
  whilebody1503:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1504:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1505:
    JR_LTEQF VGV_J 30.0 else1506_1
    SUBF VGV_J 0.1 VGV_J
  else1506_1:
  endif1506:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1503
  endwhile1503:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1510:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1511:
    MOVEF_F 80.0 VGV_J
  while1512:
    JR_GTEQF VGV_S3 15.0 endwhile1512
  whilebody1512:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1513:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1514:
    JR_LTEQF VGV_J 30.0 else1515_1
    SUBF VGV_J 0.1 VGV_J
  else1515_1:
  endif1515:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1512
  endwhile1512:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1520:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1524
    DATA8 flag1524
    DIVF F.1 2.0 tmpf1524
    CP_EQF 0.0 2.0 flag1524
    SELECTF flag1524 0.0 tmpf1524 F.0

    JR_GTEQF F.0 50.0 endwhile1520
  whilebody1520:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1525:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1526:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1527:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1528:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1530
    DATA8 flag1530
    DIVF F.1 2.0 tmpf1530
    CP_EQF 0.0 2.0 flag1530
    SELECTF flag1530 0.0 tmpf1530 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1542
    DATA8 flag1542
    DIVF F.1 2.0 tmpf1542
    CP_EQF 0.0 2.0 flag1542
    SELECTF flag1542 0.0 tmpf1542 F.0

    JR_LTF F.0 50.0 whilebody1520
  endwhile1520:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 95.0 'true'

	DATA8 layer1544
	DATA8 nos1544
	DATA8 busy1544
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1544 nos1544
	JR_EQ8 0 nos1544 motornotbusy1544
  motorwaiting1544:
	OUTPUT_TEST layer1544 nos1544 busy1544
	JR_EQ8 busy1544 0 motornotbusy1544
	SLEEP
	JR motorwaiting1544
  motornotbusy1544:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1546
	MOVEF_32 500.0 milliseconds1546
	DATA32 timer1546
	TIMER_WAIT milliseconds1546 timer1546
	TIMER_READY timer1546
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1549:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1553
    DATA8 flag1553
    DIVF F.1 2.0 tmpf1553
    CP_EQF 0.0 2.0 flag1553
    SELECTF flag1553 0.0 tmpf1553 F.0

    JR_LTEQF F.0 -240.0 endwhile1549
  whilebody1549:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1558
    DATA8 flag1558
    DIVF F.1 2.0 tmpf1558
    CP_EQF 0.0 2.0 flag1558
    SELECTF flag1558 0.0 tmpf1558 F.0

    JR_GTF F.0 -240.0 whilebody1549
  endwhile1549:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1560
	DATA8 nos1560
	DATA8 busy1560
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1560 nos1560
	JR_EQ8 0 nos1560 motornotbusy1560
  motorwaiting1560:
	OUTPUT_TEST layer1560 nos1560 busy1560
	JR_EQ8 busy1560 0 motornotbusy1560
	SLEEP
	JR motorwaiting1560
  motornotbusy1560:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1562:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1563:
  while1564:
    JR_LTEQF VGV_S3 10.0 and1566
    JR_GTF VGV_S2 10.0 or1565
  and1566:
    JR_LTEQF VGV_S3 10.0 and1567
    JR_LTF VGV_S2 10.0 or1565
  and1567:
    JR_GTEQF VGV_S3 10.0 endwhile1564
    JR_LTEQF VGV_S2 10.0 endwhile1564
  or1565:
  whilebody1564:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1568:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1569:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1571
    JR_GTF VGV_S2 10.0 whilebody1564
  and1571:
    JR_LTEQF VGV_S3 10.0 and1572
    JR_LTF VGV_S2 10.0 whilebody1564
  and1572:
    JR_GTEQF VGV_S3 10.0 and1573
    JR_GTF VGV_S2 10.0 whilebody1564
  and1573:
  endwhile1564:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1575
	DATA8 nos1575
	DATA8 busy1575
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1575 nos1575
	JR_EQ8 0 nos1575 motornotbusy1575
  motorwaiting1575:
	OUTPUT_TEST layer1575 nos1575 busy1575
	JR_EQ8 busy1575 0 motornotbusy1575
	SLEEP
	JR motorwaiting1575
  motornotbusy1575:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1576:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1577:
  while1578:
    JR_LTEQF VGV_S3 10.0 endwhile1578
  whilebody1578:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1579:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1580:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1578
  endwhile1578:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1582:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1583:
  while1584:
    JR_GTEQF VGV_S3 15.0 endwhile1584
  whilebody1584:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1585:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1586:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1584
  endwhile1584:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1589
	DATA8 nos1589
	DATA8 busy1589
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1589 nos1589
	JR_EQ8 0 nos1589 motornotbusy1589
  motorwaiting1589:
	OUTPUT_TEST layer1589 nos1589 busy1589
	JR_EQ8 busy1589 0 motornotbusy1589
	SLEEP
	JR motorwaiting1589
  motornotbusy1589:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1590:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1591:
  while1592:
    JR_LTEQF VGV_S3 15.0 endwhile1592
  whilebody1592:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1593:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1594:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1592
  endwhile1592:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1597:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1598:
  while1599:
    JR_GTEQF VGV_S3 15.0 endwhile1599
  whilebody1599:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1600:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1601:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1599
  endwhile1599:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.RESETCOUNT 'bc'
  while1605:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 270.0 endwhile1605
  whilebody1605:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1607:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 270.0 whilebody1605
  endwhile1605:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1610:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1611:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1612:
    JR_GTF VGV_I 3.0 endfor1612
  forbody1612:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1613:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1614:
  while1615:
    JR_LTEQF VGV_S3 15.0 and1617
    JR_GTF VGV_S2 15.0 or1616
  and1617:
    JR_GTEQF VGV_S3 15.0 endwhile1615
    JR_GTEQF VGV_S2 15.0 endwhile1615
  or1616:
  whilebody1615:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1618:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1619:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1620:
    JR_LTEQF VGV_S3 15.0 and1621
    JR_GTF VGV_S2 15.0 whilebody1615
  and1621:
    JR_GTEQF VGV_S3 15.0 and1622
    JR_LTF VGV_S2 15.0 whilebody1615
  and1622:
  endwhile1615:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 30.0 'true'

	DATA8 layer1624
	DATA8 nos1624
	DATA8 busy1624
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1624 nos1624
	JR_EQ8 0 nos1624 motornotbusy1624
  motorwaiting1624:
	OUTPUT_TEST layer1624 nos1624 busy1624
	JR_EQ8 busy1624 0 motornotbusy1624
	SLEEP
	JR motorwaiting1624
  motornotbusy1624:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1612
  endfor1612:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 200.0 'true'

	DATA8 layer1627
	DATA8 nos1627
	DATA8 busy1627
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1627 nos1627
	JR_EQ8 0 nos1627 motornotbusy1627
  motorwaiting1627:
	OUTPUT_TEST layer1627 nos1627 busy1627
	JR_EQ8 busy1627 0 motornotbusy1627
	SLEEP
	JR motorwaiting1627
  motornotbusy1627:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 130.0 'true'

	DATA8 layer1628
	DATA8 nos1628
	DATA8 busy1628
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1628 nos1628
	JR_EQ8 0 nos1628 motornotbusy1628
  motorwaiting1628:
	OUTPUT_TEST layer1628 nos1628 busy1628
	JR_EQ8 busy1628 0 motornotbusy1628
	SLEEP
	JR motorwaiting1628
  motornotbusy1628:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1630
	MOVEF_32 500.0 milliseconds1630
	DATA32 timer1630
	TIMER_WAIT milliseconds1630 timer1630
	TIMER_READY timer1630
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1632
	DATA8 nos1632
	DATA8 busy1632
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1632 nos1632
	JR_EQ8 0 nos1632 motornotbusy1632
  motorwaiting1632:
	OUTPUT_TEST layer1632 nos1632 busy1632
	JR_EQ8 busy1632 0 motornotbusy1632
	SLEEP
	JR motorwaiting1632
  motornotbusy1632:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 0.0 375.0 'true'

	DATA8 layer1633
	DATA8 nos1633
	DATA8 busy1633
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1633 nos1633
	JR_EQ8 0 nos1633 motornotbusy1633
  motorwaiting1633:
	OUTPUT_TEST layer1633 nos1633 busy1633
	JR_EQ8 busy1633 0 motornotbusy1633
	SLEEP
	JR motorwaiting1633
  motornotbusy1633:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 199.0 'true'

	DATA8 layer1634
	DATA8 nos1634
	DATA8 busy1634
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1634 nos1634
	JR_EQ8 0 nos1634 motornotbusy1634
  motorwaiting1634:
	OUTPUT_TEST layer1634 nos1634 busy1634
	JR_EQ8 busy1634 0 motornotbusy1634
	SLEEP
	JR motorwaiting1634
  motornotbusy1634:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1635
	DATA8 nos1635
	DATA8 busy1635
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1635 nos1635
	JR_EQ8 0 nos1635 motornotbusy1635
  motorwaiting1635:
	OUTPUT_TEST layer1635 nos1635 busy1635
	JR_EQ8 busy1635 0 motornotbusy1635
	SLEEP
	JR motorwaiting1635
  motornotbusy1635:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1636
	DATA8 nos1636
	DATA8 busy1636
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1636 nos1636
	JR_EQ8 0 nos1636 motornotbusy1636
  motorwaiting1636:
	OUTPUT_TEST layer1636 nos1636 busy1636
	JR_EQ8 busy1636 0 motornotbusy1636
	SLEEP
	JR motorwaiting1636
  motornotbusy1636:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1637:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1638:
  while1639:
    JR_LTEQF VGV_S3 10.0 and1641
    JR_GTF VGV_S2 10.0 or1640
  and1641:
    JR_GTEQF VGV_S3 10.0 and1642
    JR_GTF VGV_S2 10.0 or1640
  and1642:
    JR_LTEQF VGV_S3 10.0 endwhile1639
    JR_GTEQF VGV_S2 10.0 endwhile1639
  or1640:
  whilebody1639:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1643:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1644:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1646
    JR_GTF VGV_S2 10.0 whilebody1639
  and1646:
    JR_GTEQF VGV_S3 10.0 and1647
    JR_GTF VGV_S2 10.0 whilebody1639
  and1647:
    JR_LTEQF VGV_S3 10.0 and1648
    JR_LTF VGV_S2 10.0 whilebody1639
  and1648:
  endwhile1639:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1650
	DATA8 nos1650
	DATA8 busy1650
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1650 nos1650
	JR_EQ8 0 nos1650 motornotbusy1650
  motorwaiting1650:
	OUTPUT_TEST layer1650 nos1650 busy1650
	JR_EQ8 busy1650 0 motornotbusy1650
	SLEEP
	JR motorwaiting1650
  motornotbusy1650:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1652
	DATA8 nos1652
	DATA8 busy1652
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1652 nos1652
	JR_EQ8 0 nos1652 motornotbusy1652
  motorwaiting1652:
	OUTPUT_TEST layer1652 nos1652 busy1652
	JR_EQ8 busy1652 0 motornotbusy1652
	SLEEP
	JR motorwaiting1652
  motornotbusy1652:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1653:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1654:
  while1655:
    JR_LTEQF VGV_S3 15.0 endwhile1655
  whilebody1655:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1656:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1657:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1655
  endwhile1655:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1660:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1661:
  while1662:
    JR_GTEQF VGV_S3 60.0 endwhile1662
  whilebody1662:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1663:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1664:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1662
  endwhile1662:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1667:
    JR_GTF VGV_I 1.0 endfor1667
  forbody1667:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1668:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1669:
  while1670:
    JR_LTEQF VGV_S3 10.0 and1672
    JR_GTF VGV_S2 10.0 or1671
  and1672:
    JR_GTEQF VGV_S3 10.0 endwhile1670
    JR_GTEQF VGV_S2 10.0 endwhile1670
  or1671:
  whilebody1670:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1673:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1674:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1675:
    JR_LTEQF VGV_S3 10.0 and1676
    JR_GTF VGV_S2 10.0 whilebody1670
  and1676:
    JR_GTEQF VGV_S3 10.0 and1677
    JR_LTF VGV_S2 10.0 whilebody1670
  and1677:
  endwhile1670:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1679
	DATA8 nos1679
	DATA8 busy1679
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1679 nos1679
	JR_EQ8 0 nos1679 motornotbusy1679
  motorwaiting1679:
	OUTPUT_TEST layer1679 nos1679 busy1679
	JR_EQ8 busy1679 0 motornotbusy1679
	SLEEP
	JR motorwaiting1679
  motornotbusy1679:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1667
  endfor1667:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1682:
    CALL MOTOR.RESETCOUNT 'bc'
  while1684:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1688
    DATA8 flag1688
    DIVF F.1 2.0 tmpf1688
    CP_EQF 0.0 2.0 flag1688
    SELECTF flag1688 0.0 tmpf1688 F.0

    JR_GTEQF F.0 30.0 endwhile1684
  whilebody1684:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1689:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1693
    DATA8 flag1693
    DIVF F.1 2.0 tmpf1693
    CP_EQF 0.0 2.0 flag1693
    SELECTF flag1693 0.0 tmpf1693 F.0

    JR_LTF F.0 30.0 whilebody1684
  endwhile1684:
    CALL MOTOR.SCHEDULESYNC 'BC' 40.0 40.0 210.0 'true'

	DATA8 layer1694
	DATA8 nos1694
	DATA8 busy1694
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1694 nos1694
	JR_EQ8 0 nos1694 motornotbusy1694
  motorwaiting1694:
	OUTPUT_TEST layer1694 nos1694 busy1694
	JR_EQ8 busy1694 0 motornotbusy1694
	SLEEP
	JR motorwaiting1694
  motornotbusy1694:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1696
	MOVEF_32 100.0 milliseconds1696
	DATA32 timer1696
	TIMER_WAIT milliseconds1696 timer1696
	TIMER_READY timer1696
    CALL MOTOR.START 'd' 40.0
    DATA32 milliseconds1698
	MOVEF_32 500.0 milliseconds1698
	DATA32 timer1698
	TIMER_WAIT milliseconds1698 timer1698
	TIMER_READY timer1698
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1700:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1701:
  while1702:
    JR_LTEQF VGV_S2 9.0 and1704
    JR_GTF VGV_S3 9.0 or1703
  and1704:
    JR_GTEQF VGV_S2 9.0 and1705
    JR_GTF VGV_S3 9.0 or1703
  and1705:
    JR_LTEQF VGV_S2 9.0 endwhile1702
    JR_GTEQF VGV_S3 9.0 endwhile1702
  or1703:
  whilebody1702:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1706:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1707:
    CALL MOTOR.STARTSYNC 'BC' -40.0 -40.0
    JR_LTEQF VGV_S2 9.0 and1709
    JR_GTF VGV_S3 9.0 whilebody1702
  and1709:
    JR_GTEQF VGV_S2 9.0 and1710
    JR_GTF VGV_S3 9.0 whilebody1702
  and1710:
    JR_LTEQF VGV_S2 9.0 and1711
    JR_LTF VGV_S3 9.0 whilebody1702
  and1711:
  endwhile1702:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 60.0 'true'

	DATA8 layer1712
	DATA8 nos1712
	DATA8 busy1712
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1712 nos1712
	JR_EQ8 0 nos1712 motornotbusy1712
  motorwaiting1712:
	OUTPUT_TEST layer1712 nos1712 busy1712
	JR_EQ8 busy1712 0 motornotbusy1712
	SLEEP
	JR motorwaiting1712
  motornotbusy1712:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 90.0 'true'

	DATA8 layer1714
	DATA8 nos1714
	DATA8 busy1714
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1714 nos1714
	JR_EQ8 0 nos1714 motornotbusy1714
  motorwaiting1714:
	OUTPUT_TEST layer1714 nos1714 busy1714
	JR_EQ8 busy1714 0 motornotbusy1714
	SLEEP
	JR motorwaiting1714
  motornotbusy1714:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1716:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1717:
  while1718:
    JR_LTEQF VGV_S2 10.0 endwhile1718
  whilebody1718:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1719:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1720:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 10.0 whilebody1718
  endwhile1718:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1722:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1723:
  while1724:
    JR_GTEQF VGV_S2 60.0 endwhile1724
  whilebody1724:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1725:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1726:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1724
  endwhile1724:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1729
    DATA8 flag1729
    DIVF 360.0 VGV_L tmpf1729
    CP_EQF 0.0 VGV_L flag1729
    SELECTF flag1729 0.0 tmpf1729 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
  while1732:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1732
  whilebody1732:
    JR_GTEQF VGV_SPEED 80.0 else1734_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1734_1:
  endif1734:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1736:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1732
  endwhile1732:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1739:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1740:
    MOVEF_F 1300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1741:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer1743
	DATA8 nos1743
	DATA8 busy1743
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1743 nos1743
	JR_EQ8 0 nos1743 motornotbusy1743
  motorwaiting1743:
	OUTPUT_TEST layer1743 nos1743 busy1743
	JR_EQ8 busy1743 0 motornotbusy1743
	SLEEP
	JR motorwaiting1743
  motornotbusy1743:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1744:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1745:
  while1746:
    JR_LTEQF VGV_S3 10.0 and1748
    JR_GTF VGV_S2 10.0 or1747
  and1748:
    JR_GTEQF VGV_S3 10.0 endwhile1746
    JR_GTEQF VGV_S2 10.0 endwhile1746
  or1747:
  whilebody1746:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1749:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1750:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1751:
    JR_LTEQF VGV_S3 10.0 and1752
    JR_GTF VGV_S2 10.0 whilebody1746
  and1752:
    JR_GTEQF VGV_S3 10.0 and1753
    JR_LTF VGV_S2 10.0 whilebody1746
  and1753:
  endwhile1746:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1755:
    CALL MOTOR.RESETCOUNT 'bc'
  while1757:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1761
    DATA8 flag1761
    DIVF F.1 2.0 tmpf1761
    CP_EQF 0.0 2.0 flag1761
    SELECTF flag1761 0.0 tmpf1761 F.0

    JR_GTEQF F.0 10.0 endwhile1757
  whilebody1757:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1762:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1763:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1764:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1768
    DATA8 flag1768
    DIVF F.1 2.0 tmpf1768
    CP_EQF 0.0 2.0 flag1768
    SELECTF flag1768 0.0 tmpf1768 F.0

    JR_LTF F.0 10.0 whilebody1757
  endwhile1757:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 40.0 40.0 190.0 'true'

	DATA8 layer1770
	DATA8 nos1770
	DATA8 busy1770
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1770 nos1770
	JR_EQ8 0 nos1770 motornotbusy1770
  motorwaiting1770:
	OUTPUT_TEST layer1770 nos1770 busy1770
	JR_EQ8 busy1770 0 motornotbusy1770
	SLEEP
	JR motorwaiting1770
  motornotbusy1770:
    CALL MOTOR.START 'd' -40.0
    DATA32 milliseconds1772
	MOVEF_32 500.0 milliseconds1772
	DATA32 timer1772
	TIMER_WAIT milliseconds1772 timer1772
	TIMER_READY timer1772
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1774:
    DATA32 tmp1775
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1775
    JR_NEQ32 0 tmp1775 alreadylaunched1775
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1775:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1776:
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    DATA32 milliseconds1777
	MOVEF_32 400.0 milliseconds1777
	DATA32 timer1777
	TIMER_WAIT milliseconds1777 timer1777
	TIMER_READY timer1777
    CALL MOTOR.SCHEDULESYNC 'bc' -25.0 -25.0 150.0 'true'

	DATA8 layer1778
	DATA8 nos1778
	DATA8 busy1778
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1778 nos1778
	JR_EQ8 0 nos1778 motornotbusy1778
  motorwaiting1778:
	OUTPUT_TEST layer1778 nos1778 busy1778
	JR_EQ8 busy1778 0 motornotbusy1778
	SLEEP
	JR motorwaiting1778
  motornotbusy1778:
    DATA32 milliseconds1779
	MOVEF_32 400.0 milliseconds1779
	DATA32 timer1779
	TIMER_WAIT milliseconds1779 timer1779
	TIMER_READY timer1779
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 200.0 'true'

	DATA8 layer1780
	DATA8 nos1780
	DATA8 busy1780
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1780 nos1780
	JR_EQ8 0 nos1780 motornotbusy1780
  motorwaiting1780:
	OUTPUT_TEST layer1780 nos1780 busy1780
	JR_EQ8 busy1780 0 motornotbusy1780
	SLEEP
	JR motorwaiting1780
  motornotbusy1780:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1782:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1783:
  while1784:
    JR_LTEQF VGV_S2 12.0 endwhile1784
  whilebody1784:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1785:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1786:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 12.0 whilebody1784
  endwhile1784:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1789:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1790:
  while1791:
    JR_GTEQF VGV_S2 60.0 endwhile1791
  whilebody1791:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1792:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1793:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1791
  endwhile1791:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1797:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1801
    DATA8 flag1801
    DIVF F.1 2.0 tmpf1801
    CP_EQF 0.0 2.0 flag1801
    SELECTF flag1801 0.0 tmpf1801 F.0

    JR_GTEQF F.0 300.0 endwhile1797
  whilebody1797:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1802:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1803:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1804:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1808
    DATA8 flag1808
    DIVF F.1 2.0 tmpf1808
    CP_EQF 0.0 2.0 flag1808
    SELECTF flag1808 0.0 tmpf1808 F.0

    JR_LTF F.0 300.0 whilebody1797
  endwhile1797:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1810:
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1811
	DATA8 no1811
	DATA8 mode81811
	
	MOVEF_8 1.0 no1811
	SUB8 no1811 1 no1811
	DIV8 no1811 4 layer1811
	MATH MOD8 no1811 4 no1811

	MOVEF_8 2.0 mode81811
	
	INPUT_DEVICE READY_RAW layer1811 no1811 0 mode81811 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1818
    DATA8 flag1818
    DIVF VGV_SRED 255.0 tmpf1818
    CP_EQF 0.0 255.0 flag1818
    SELECTF flag1818 0.0 tmpf1818 VGV_SRED

    DATAF tmpf1819
    DATA8 flag1819
    DIVF VGV_SGREEN 255.0 tmpf1819
    CP_EQF 0.0 255.0 flag1819
    SELECTF flag1819 0.0 tmpf1819 VGV_SGREEN

    DATAF tmpf1820
    DATA8 flag1820
    DIVF VGV_SBLUE 255.0 tmpf1820
    CP_EQF 0.0 255.0 flag1820
    SELECTF flag1820 0.0 tmpf1820 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1821_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1821_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1821
  else1821_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1821_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1821_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1821
  else1821_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1821_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1821_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1821_3:
  endif1821:
    JR_GTEQF VGV_SRED VGV_SGREEN else1822_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1822_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1822
  else1822_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1822_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1822_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1822
  else1822_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1822_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1822_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1822_3:
  endif1822:
    JR_NEQF VGV_MAX VGV_MIN else1823_1
    MOVEF_F 0.0 VGV_H
    JR endif1823
  else1823_1:
    JR_NEQF VGV_SRED VGV_MAX else1824_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1825_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1829
    DATA8 flag1829
    DIVF F.0 F.1 tmpf1829
    CP_EQF 0.0 F.1 flag1829
    SELECTF flag1829 0.0 tmpf1829 VGV_H

    JR endif1825
  else1825_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1833
    DATA8 flag1833
    DIVF F.1 F.2 tmpf1833
    CP_EQF 0.0 F.2 flag1833
    SELECTF flag1833 0.0 tmpf1833 F.0

    ADDF F.0 360.0 VGV_H
  else1825_2:
  endif1825:
    JR endif1824
  else1824_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1835_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1839
    DATA8 flag1839
    DIVF F.1 F.2 tmpf1839
    CP_EQF 0.0 F.2 flag1839
    SELECTF flag1839 0.0 tmpf1839 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1835
  else1835_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1844
    DATA8 flag1844
    DIVF F.1 F.2 tmpf1844
    CP_EQF 0.0 F.2 flag1844
    SELECTF flag1844 0.0 tmpf1844 F.0

    ADDF F.0 240.0 VGV_H
  else1835_2:
  endif1835:
  else1824_2:
  endif1824:
  else1823_2:
  endif1823:
    JR_NEQF VGV_MAX 0.0 else1846_1
    MOVEF_F 0.0 VGV_S
    JR endif1846
  else1846_1:
    DATAF tmpf1847
    DATA8 flag1847
    DIVF VGV_MIN VGV_MAX tmpf1847
    CP_EQF 0.0 VGV_MAX flag1847
    SELECTF flag1847 0.0 tmpf1847 F.0

    SUBF 1.0 F.0 VGV_S
  else1846_2:
  endif1846:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1856
	DATA8 no1856
	DATA8 mode81856
	
	MOVEF_8 1.0 no1856
	SUB8 no1856 1 no1856
	DIV8 no1856 4 layer1856
	MATH MOD8 no1856 4 no1856

	MOVEF_8 2.0 mode81856
	
	INPUT_DEVICE READY_RAW layer1856 no1856 0 mode81856 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1857:
    JR_GTF VGV_P 100.0 endfor1857
  forbody1857:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1858:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1857
  endfor1857:
    DATAF tmpf1863
    DATA8 flag1863
    DIVF VGV_X 100.0 tmpf1863
    CP_EQF 0.0 100.0 flag1863
    SELECTF flag1863 0.0 tmpf1863 VGV_H

    DATAF tmpf1864
    DATA8 flag1864
    DIVF VGV_Z 100.0 tmpf1864
    CP_EQF 0.0 100.0 flag1864
    SELECTF flag1864 0.0 tmpf1864 VGV_S

    DATAF tmpf1865
    DATA8 flag1865
    DIVF VGV_D 100.0 tmpf1865
    CP_EQF 0.0 100.0 flag1865
    SELECTF flag1865 0.0 tmpf1865 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1873
	DATA8 no1873
	DATA8 mode81873
	
	MOVEF_8 1.0 no1873
	SUB8 no1873 1 no1873
	DIV8 no1873 4 layer1873
	MATH MOD8 no1873 4 no1873

	MOVEF_8 2.0 mode81873
	
	INPUT_DEVICE READY_RAW layer1873 no1873 0 mode81873 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1880
    DATA8 flag1880
    DIVF VGV_SRED 255.0 tmpf1880
    CP_EQF 0.0 255.0 flag1880
    SELECTF flag1880 0.0 tmpf1880 VGV_SRED

    DATAF tmpf1881
    DATA8 flag1881
    DIVF VGV_SGREEN 255.0 tmpf1881
    CP_EQF 0.0 255.0 flag1881
    SELECTF flag1881 0.0 tmpf1881 VGV_SGREEN

    DATAF tmpf1882
    DATA8 flag1882
    DIVF VGV_SBLUE 255.0 tmpf1882
    CP_EQF 0.0 255.0 flag1882
    SELECTF flag1882 0.0 tmpf1882 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1883_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1883_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1883
  else1883_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1883_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1883_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1883
  else1883_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1883_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1883_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1883_3:
  endif1883:
    JR_GTEQF VGV_SRED VGV_SGREEN else1884_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1884_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1884
  else1884_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1884_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1884_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1884
  else1884_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1884_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1884_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1884_3:
  endif1884:
    JR_NEQF VGV_MAX VGV_MIN else1885_1
    MOVEF_F 0.0 VGV_H
    JR endif1885
  else1885_1:
    JR_NEQF VGV_SRED VGV_MAX else1886_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1887_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1891
    DATA8 flag1891
    DIVF F.0 F.1 tmpf1891
    CP_EQF 0.0 F.1 flag1891
    SELECTF flag1891 0.0 tmpf1891 VGV_H

    JR endif1887
  else1887_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1895
    DATA8 flag1895
    DIVF F.1 F.2 tmpf1895
    CP_EQF 0.0 F.2 flag1895
    SELECTF flag1895 0.0 tmpf1895 F.0

    ADDF F.0 360.0 VGV_H
  else1887_2:
  endif1887:
    JR endif1886
  else1886_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1897_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1901
    DATA8 flag1901
    DIVF F.1 F.2 tmpf1901
    CP_EQF 0.0 F.2 flag1901
    SELECTF flag1901 0.0 tmpf1901 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1897
  else1897_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1906
    DATA8 flag1906
    DIVF F.1 F.2 tmpf1906
    CP_EQF 0.0 F.2 flag1906
    SELECTF flag1906 0.0 tmpf1906 F.0

    ADDF F.0 240.0 VGV_H
  else1897_2:
  endif1897:
  else1886_2:
  endif1886:
  else1885_2:
  endif1885:
    JR_NEQF VGV_MAX 0.0 else1908_1
    MOVEF_F 0.0 VGV_S
    JR endif1908
  else1908_1:
    DATAF tmpf1909
    DATA8 flag1909
    DIVF VGV_MIN VGV_MAX tmpf1909
    CP_EQF 0.0 VGV_MAX flag1909
    SELECTF flag1909 0.0 tmpf1909 F.0

    SUBF 1.0 F.0 VGV_S
  else1908_2:
  endif1908:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1913
    JR_LTF VGV_H 360.0 or1912
  and1913:
    JR_LTF VGV_H 0.0 else1911_1
    JR_GTF VGV_H 20.0 else1911_1
    JR_LTEQF VGV_S 0.3 else1911_1
    JR_GTF VGV_S 1.0 else1911_1
    JR_LTEQF VGV_V 0.025 else1911_1
    JR_GTEQF VGV_V 0.1 else1911_1
  or1912:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1911
  else1911_1:
    JR_LTF VGV_H 20.0 else1911_2
    JR_GTEQF VGV_H 60.0 else1911_2
    JR_LTF VGV_S 0.4 else1911_2
    JR_LTEQF VGV_V 0.03 else1911_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1911
  else1911_2:
    MOVEF_F 6.0 VGV_COLOR
  else1911_3:
  endif1911:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1914
	DATA8 no1914
	DATA8 mode81914
	
	MOVEF_8 1.0 no1914
	SUB8 no1914 1 no1914
	DIV8 no1914 4 layer1914
	MATH MOD8 no1914 4 no1914

	MOVEF_8 2.0 mode81914
	
	INPUT_DEVICE READY_RAW layer1914 no1914 0 mode81914 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1921
    DATA8 flag1921
    DIVF VGV_SRED 255.0 tmpf1921
    CP_EQF 0.0 255.0 flag1921
    SELECTF flag1921 0.0 tmpf1921 VGV_SRED

    DATAF tmpf1922
    DATA8 flag1922
    DIVF VGV_SGREEN 255.0 tmpf1922
    CP_EQF 0.0 255.0 flag1922
    SELECTF flag1922 0.0 tmpf1922 VGV_SGREEN

    DATAF tmpf1923
    DATA8 flag1923
    DIVF VGV_SBLUE 255.0 tmpf1923
    CP_EQF 0.0 255.0 flag1923
    SELECTF flag1923 0.0 tmpf1923 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1924_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1924_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1924
  else1924_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1924_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1924_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1924
  else1924_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1924_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1924_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1924_3:
  endif1924:
    JR_GTEQF VGV_SRED VGV_SGREEN else1925_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1925_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1925
  else1925_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1925_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1925_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1925
  else1925_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1925_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1925_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1925_3:
  endif1925:
    JR_NEQF VGV_MAX VGV_MIN else1926_1
    MOVEF_F 0.0 VGV_H
    JR endif1926
  else1926_1:
    JR_NEQF VGV_SRED VGV_MAX else1927_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1928_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1932
    DATA8 flag1932
    DIVF F.0 F.1 tmpf1932
    CP_EQF 0.0 F.1 flag1932
    SELECTF flag1932 0.0 tmpf1932 VGV_H

    JR endif1928
  else1928_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1936
    DATA8 flag1936
    DIVF F.1 F.2 tmpf1936
    CP_EQF 0.0 F.2 flag1936
    SELECTF flag1936 0.0 tmpf1936 F.0

    ADDF F.0 360.0 VGV_H
  else1928_2:
  endif1928:
    JR endif1927
  else1927_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1938_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1942
    DATA8 flag1942
    DIVF F.1 F.2 tmpf1942
    CP_EQF 0.0 F.2 flag1942
    SELECTF flag1942 0.0 tmpf1942 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1938
  else1938_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1947
    DATA8 flag1947
    DIVF F.1 F.2 tmpf1947
    CP_EQF 0.0 F.2 flag1947
    SELECTF flag1947 0.0 tmpf1947 F.0

    ADDF F.0 240.0 VGV_H
  else1938_2:
  endif1938:
  else1927_2:
  endif1927:
  else1926_2:
  endif1926:
    JR_NEQF VGV_MAX 0.0 else1949_1
    MOVEF_F 0.0 VGV_S
    JR endif1949
  else1949_1:
    DATAF tmpf1950
    DATA8 flag1950
    DIVF VGV_MIN VGV_MAX tmpf1950
    CP_EQF 0.0 VGV_MAX flag1950
    SELECTF flag1950 0.0 tmpf1950 F.0

    SUBF 1.0 F.0 VGV_S
  else1949_2:
  endif1949:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1954
    JR_LTF VGV_H 360.0 or1953
  and1954:
    JR_LTF VGV_H 0.0 else1952_1
    JR_GTF VGV_H 30.0 else1952_1
    JR_LTEQF VGV_S 0.3 else1952_1
    JR_GTF VGV_S 1.0 else1952_1
    JR_LTF VGV_V 0.0 else1952_1
    JR_GTEQF VGV_V 0.02 else1952_1
  or1953:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1952
  else1952_1:
    JR_LTF VGV_H 0.0 else1952_2
    JR_GTEQF VGV_H 60.0 else1952_2
    JR_LTF VGV_S 0.4 else1952_2
    JR_GTF VGV_S 1.0 else1952_2
    JR_LTEQF VGV_V 0.003 else1952_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1952
  else1952_2:
    MOVEF_F 6.0 VGV_COLOR
  else1952_3:
  endif1952:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1959
    DATA8 flag1959
    DIVF F.0 F.1 tmpf1959
    CP_EQF 0.0 F.1 flag1959
    SELECTF flag1959 0.0 tmpf1959 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1964
    DATA8 flag1964
    DIVF F.0 F.1 tmpf1964
    CP_EQF 0.0 F.1 flag1964
    SELECTF flag1964 0.0 tmpf1964 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1965:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1966:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K3 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZAMOROZ_0:
    JR_EQF VGV_L 1.0 else1976_1
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
  else1976_1:
  endif1976:
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 100.0
    DATA32 milliseconds1981
	MOVEF_32 100.0 milliseconds1981
	DATA32 timer1981
	TIMER_WAIT milliseconds1981 timer1981
	TIMER_READY timer1981
  while1982:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile1982
  whilebody1982:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody1982
  endwhile1982:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1988
	MOVEF_32 250.0 milliseconds1988
	DATA32 timer1988
	TIMER_WAIT milliseconds1988 timer1988
	TIMER_READY timer1988
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1990:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1991:
  while1992:
    JR_LTEQF VGV_S2 9.0 and1994
    JR_GTF VGV_S3 9.0 or1993
  and1994:
    JR_GTEQF VGV_S2 9.0 and1995
    JR_GTF VGV_S3 9.0 or1993
  and1995:
    JR_LTEQF VGV_S2 9.0 endwhile1992
    JR_GTEQF VGV_S3 9.0 endwhile1992
  or1993:
  whilebody1992:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1996:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1997:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1999
    JR_GTF VGV_S3 9.0 whilebody1992
  and1999:
    JR_GTEQF VGV_S2 9.0 and2000
    JR_GTF VGV_S3 9.0 whilebody1992
  and2000:
    JR_LTEQF VGV_S2 9.0 and2001
    JR_LTF VGV_S3 9.0 whilebody1992
  and2001:
  endwhile1992:
  while2002:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile2002
  whilebody2002:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody2002
  endwhile2002:
    CALL MOTOR.STOP 'B' 'True'
  while2007:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2007
  whilebody2007:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2007
  endwhile2007:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2012
	DATA8 no2012
	DATA8 mode82012
	
	MOVEF_8 2.0 no2012
	SUB8 no2012 1 no2012
	DIV8 no2012 4 layer2012
	MATH MOD8 no2012 4 no2012

	MOVEF_8 0.0 mode82012
	
	INPUT_DEVICE READY_RAW layer2012 no2012 0 mode82012 0
    DATA8 layer2013
	DATA8 no2013
	DATA8 mode82013
	
	MOVEF_8 3.0 no2013
	SUB8 no2013 1 no2013
	DIV8 no2013 4 layer2013
	MATH MOD8 no2013 4 no2013

	MOVEF_8 0.0 mode82013
	
	INPUT_DEVICE READY_RAW layer2013 no2013 0 mode82013 0
  while2014:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2014
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2014
  whilebody2014:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2018
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2014
  and2018:
  endwhile2014:
    CALL MOTOR.STOP 'BC' 'True'
  while2022:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2022
  whilebody2022:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2022
  endwhile2022:
    CALL MOTOR.STOP 'B' 'True'
  while2027:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2027
  whilebody2027:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2027
  endwhile2027:
    CALL MOTOR.STOP 'C' 'True'
  while2032:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2032
  whilebody2032:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2032
  endwhile2032:
    CALL MOTOR.STOP 'B' 'True'
  while2037:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2037
  whilebody2037:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2037
  endwhile2037:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
