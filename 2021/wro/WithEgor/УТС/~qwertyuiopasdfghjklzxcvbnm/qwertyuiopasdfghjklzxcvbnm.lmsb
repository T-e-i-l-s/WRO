DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_J
DATAF VGV_COLOR2
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2033
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2033:
    JR_NEQ32 SUBPROGRAM 1 dispatch2034
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2034:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 45.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB60:
    CALL EV3FILE.OPENWRITE 'a123/colib.dat' VGV_F
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    CALL EV3FILE.CLOSE VGV_F
    WRITE32 ENDSUB_F_A3_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB71:
    WRITE32 ENDSUB_F_A2_0:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB72:
  while73:
    JR_LTEQF VGV_S3 10.0 and75
    JR_GTF VGV_S2 10.0 or74
  and75:
    JR_GTEQF VGV_S3 10.0 endwhile73
    JR_GTEQF VGV_S2 10.0 endwhile73
  or74:
  whilebody73:
    WRITE32 ENDSUB_F_A3_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB76:
    WRITE32 ENDSUB_F_A2_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB77:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB78:
    JR_LTEQF VGV_S3 10.0 and79
    JR_GTF VGV_S2 10.0 whilebody73
  and79:
    JR_GTEQF VGV_S3 10.0 and80
    JR_LTF VGV_S2 10.0 whilebody73
  and80:
  endwhile73:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB82:
    JR_GTF VGV_H 120.0 or84
    JR_EQF VGV_H 0.0 or84
    JR_LTF VGV_H 0.0 else83_1
    JR_GTF VGV_H 20.0 else83_1
  or84:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif83
  else83_1:
    JR_GTEQF VGV_H 120.0 else83_2
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif83
  else83_2:
    MOVEF_F 5.0 VGV_COLOR1
  else83_3:
  endif83:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer87
	DATA8 nos87
	DATA8 busy87
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer87 nos87
	JR_EQ8 0 nos87 motornotbusy87
  motorwaiting87:
	OUTPUT_TEST layer87 nos87 busy87
	JR_EQ8 busy87 0 motornotbusy87
	SLEEP
	JR motorwaiting87
  motornotbusy87:
    JR_NEQF VGV_COLOR 4.0 else88_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB89:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer90
	DATA8 nos90
	DATA8 busy90
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer90 nos90
	JR_EQ8 0 nos90 motornotbusy90
  motorwaiting90:
	OUTPUT_TEST layer90 nos90 busy90
	JR_EQ8 busy90 0 motornotbusy90
	SLEEP
	JR motorwaiting90
  motornotbusy90:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while96:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 500.0 endwhile96
  whilebody96:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB98:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 500.0 whilebody96
  endwhile96:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB101:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer102
	DATA8 nos102
	DATA8 busy102
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer102 nos102
	JR_EQ8 0 nos102 motornotbusy102
  motorwaiting102:
	OUTPUT_TEST layer102 nos102 busy102
	JR_EQ8 busy102 0 motornotbusy102
	SLEEP
	JR motorwaiting102
  motornotbusy102:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer104
	DATA8 nos104
	DATA8 busy104
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer104 nos104
	JR_EQ8 0 nos104 motornotbusy104
  motorwaiting104:
	OUTPUT_TEST layer104 nos104 busy104
	JR_EQ8 busy104 0 motornotbusy104
	SLEEP
	JR motorwaiting104
  motornotbusy104:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while107:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf111
    DATA8 flag111
    DIVF F.1 2.0 tmpf111
    CP_EQF 0.0 2.0 flag111
    SELECTF flag111 0.0 tmpf111 F.0

    JR_GTEQF F.0 100.0 endwhile107
  whilebody107:
    WRITE32 ENDSUB_F_A3_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB112:
    WRITE32 ENDSUB_F_A2_0:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB113:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB114:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf118
    DATA8 flag118
    DIVF F.1 2.0 tmpf118
    CP_EQF 0.0 2.0 flag118
    SELECTF flag118 0.0 tmpf118 F.0

    JR_LTF F.0 100.0 whilebody107
  endwhile107:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB120:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else122_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB123:
    ADDF VGV_C 1.0 VGV_C
    JR endif122
  else122_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer125
	DATA8 nos125
	DATA8 busy125
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer125 nos125
	JR_EQ8 0 nos125 motornotbusy125
  motorwaiting125:
	OUTPUT_TEST layer125 nos125 busy125
	JR_EQ8 busy125 0 motornotbusy125
	SLEEP
	JR motorwaiting125
  motornotbusy125:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer126
	DATA8 nos126
	DATA8 busy126
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer126 nos126
	JR_EQ8 0 nos126 motornotbusy126
  motorwaiting126:
	OUTPUT_TEST layer126 nos126 busy126
	JR_EQ8 busy126 0 motornotbusy126
	SLEEP
	JR motorwaiting126
  motornotbusy126:
  while127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and129
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or128
  and129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and132
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or128
  and132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile127
  or128:
  whilebody127:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and138
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody127
  and138:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and141
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody127
  and141:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and144
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody127
  and144:
  endwhile127:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
  while160:
    JR_LTEQF VGV_S3 10.0 and162
    JR_GTF VGV_S2 10.0 or161
  and162:
    JR_GTEQF VGV_S3 10.0 endwhile160
    JR_GTEQF VGV_S2 10.0 endwhile160
  or161:
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB163:
    WRITE32 ENDSUB_F_A2_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB164:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB165:
    JR_LTEQF VGV_S3 10.0 and166
    JR_GTF VGV_S2 10.0 whilebody160
  and166:
    JR_GTEQF VGV_S3 10.0 and167
    JR_LTF VGV_S2 10.0 whilebody160
  and167:
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
  else122_2:
  endif122:
    JR endif88
  else88_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB169:
    WRITE32 ENDSUB_F_A2_0:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB170:
  while171:
    JR_LTEQF VGV_S3 10.0 and173
    JR_GTF VGV_S2 10.0 or172
  and173:
    JR_GTEQF VGV_S3 10.0 endwhile171
    JR_GTEQF VGV_S2 10.0 endwhile171
  or172:
  whilebody171:
    WRITE32 ENDSUB_F_A3_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB174:
    WRITE32 ENDSUB_F_A2_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB175:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB176:
    JR_LTEQF VGV_S3 10.0 and177
    JR_GTF VGV_S2 10.0 whilebody171
  and177:
    JR_GTEQF VGV_S3 10.0 and178
    JR_LTF VGV_S2 10.0 whilebody171
  and178:
  endwhile171:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer181
	DATA8 nos181
	DATA8 busy181
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer181 nos181
	JR_EQ8 0 nos181 motornotbusy181
  motorwaiting181:
	OUTPUT_TEST layer181 nos181 busy181
	JR_EQ8 busy181 0 motornotbusy181
	SLEEP
	JR motorwaiting181
  motornotbusy181:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds184
	MOVEF_32 500.0 milliseconds184
	DATA32 timer184
	TIMER_WAIT milliseconds184 timer184
	TIMER_READY timer184
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB186:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while188:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 550.0 endwhile188
  whilebody188:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB190:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 550.0 whilebody188
  endwhile188:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else193_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB194:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer195
	DATA8 nos195
	DATA8 busy195
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer195 nos195
	JR_EQ8 0 nos195 motornotbusy195
  motorwaiting195:
	OUTPUT_TEST layer195 nos195 busy195
	JR_EQ8 busy195 0 motornotbusy195
	SLEEP
	JR motorwaiting195
  motornotbusy195:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB197:
    WRITE32 ENDSUB_F_A2_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB198:
  while199:
    JR_LTEQF VGV_S3 15.0 endwhile199
  whilebody199:
    WRITE32 ENDSUB_F_A3_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB200:
    WRITE32 ENDSUB_F_A2_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB201:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody199
  endwhile199:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB204:
    WRITE32 ENDSUB_F_A2_0:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB205:
  while206:
    JR_GTEQF VGV_S3 35.0 endwhile206
  whilebody206:
    WRITE32 ENDSUB_F_A3_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB207:
    WRITE32 ENDSUB_F_A2_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB208:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody206
  endwhile206:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB212:
    WRITE32 ENDSUB_F_A2_0:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB213:
  while214:
    JR_LTEQF VGV_S3 10.0 and216
    JR_GTF VGV_S2 10.0 or215
  and216:
    JR_GTEQF VGV_S3 10.0 endwhile214
    JR_GTEQF VGV_S2 10.0 endwhile214
  or215:
  whilebody214:
    WRITE32 ENDSUB_F_A3_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB217:
    WRITE32 ENDSUB_F_A2_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB218:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB219:
    JR_LTEQF VGV_S3 10.0 and220
    JR_GTF VGV_S2 10.0 whilebody214
  and220:
    JR_GTEQF VGV_S3 10.0 and221
    JR_LTF VGV_S2 10.0 whilebody214
  and221:
  endwhile214:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB223:
    ADDF VGV_C 1.0 VGV_C
    JR endif193
  else193_1:
    DATA32 tmp225
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp225
    JR_NEQ32 0 tmp225 alreadylaunched225
    OBJECT_START TF_VIDVIG_0
  alreadylaunched225:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB226:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB230:
    WRITE32 ENDSUB_F_A2_0:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB231:
  while232:
    JR_LTEQF VGV_S3 10.0 and234
    JR_GTF VGV_S2 10.0 or233
  and234:
    JR_GTEQF VGV_S3 10.0 endwhile232
    JR_GTEQF VGV_S2 10.0 endwhile232
  or233:
  whilebody232:
    WRITE32 ENDSUB_F_A3_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB235:
    WRITE32 ENDSUB_F_A2_0:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB236:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB237:
    JR_LTEQF VGV_S3 10.0 and238
    JR_GTF VGV_S2 10.0 whilebody232
  and238:
    JR_GTEQF VGV_S3 10.0 and239
    JR_LTF VGV_S2 10.0 whilebody232
  and239:
  endwhile232:
    CALL MOTOR.STOP 'bc' 'true'
  else193_2:
  endif193:
  else88_2:
  endif88:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB241:
    JR_GTEQF VGV_V 0.048 else242_1
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif242
  else242_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else242_2:
  endif242:
    JR_NEQF VGV_COLOR2 4.0 else245_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB247:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif245
  else245_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB249:
    CALL MOTOR.RESETCOUNT 'bc'
  while251:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile251
  whilebody251:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB253:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody251
  endwhile251:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds257
	MOVEF_32 100.0 milliseconds257
	DATA32 timer257
	TIMER_WAIT milliseconds257 timer257
	TIMER_READY timer257
    WRITE32 ENDSUB_F_NPL_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB258:
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf259
    DATA8 flag259
    DIVF 360.0 VGV_L tmpf259
    CP_EQF 0.0 VGV_L flag259
    SELECTF flag259 0.0 tmpf259 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
  while262:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile262
  whilebody262:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB264:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody262
  endwhile262:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB267:
    JR_NEQF VGV_C 1.0 else268_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB269:
    JR endif268
  else268_1:
    JR_NEQF VGV_C 0.0 else268_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB270:
  else268_2:
  endif268:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB271:
    WRITE32 ENDSUB_F_A3_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB272:
    WRITE32 ENDSUB_F_A2_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB273:
  while274:
    JR_LTEQF VGV_S3 10.0 and276
    JR_GTF VGV_S2 10.0 or275
  and276:
    JR_GTEQF VGV_S3 10.0 endwhile274
    JR_GTEQF VGV_S2 10.0 endwhile274
  or275:
  whilebody274:
    WRITE32 ENDSUB_F_A3_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB277:
    WRITE32 ENDSUB_F_A2_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB278:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB279:
    JR_LTEQF VGV_S3 10.0 and280
    JR_GTF VGV_S2 10.0 whilebody274
  and280:
    JR_GTEQF VGV_S3 10.0 and281
    JR_LTF VGV_S2 10.0 whilebody274
  and281:
  endwhile274:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer283
	DATA8 nos283
	DATA8 busy283
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer283 nos283
	JR_EQ8 0 nos283 motornotbusy283
  motorwaiting283:
	OUTPUT_TEST layer283 nos283 busy283
	JR_EQ8 busy283 0 motornotbusy283
	SLEEP
	JR motorwaiting283
  motornotbusy283:
    WRITE32 ENDSUB_F_A3_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB285:
  while286:
    JR_LTEQF VGV_S3 10.0 and288
    JR_GTF VGV_S2 10.0 or287
  and288:
    JR_GTEQF VGV_S3 10.0 endwhile286
    JR_GTEQF VGV_S2 10.0 endwhile286
  or287:
  whilebody286:
    WRITE32 ENDSUB_F_A3_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB289:
    WRITE32 ENDSUB_F_A2_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB290:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB291:
    JR_LTEQF VGV_S3 10.0 and292
    JR_GTF VGV_S2 10.0 whilebody286
  and292:
    JR_GTEQF VGV_S3 10.0 and293
    JR_LTF VGV_S2 10.0 whilebody286
  and293:
  endwhile286:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB295:
    CALL MOTOR.RESETCOUNT 'bc'
  while297:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf301
    DATA8 flag301
    DIVF F.1 2.0 tmpf301
    CP_EQF 0.0 2.0 flag301
    SELECTF flag301 0.0 tmpf301 F.0

    JR_GTEQF F.0 350.0 endwhile297
  whilebody297:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB302:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf306
    DATA8 flag306
    DIVF F.1 2.0 tmpf306
    CP_EQF 0.0 2.0 flag306
    SELECTF flag306 0.0 tmpf306 F.0

    JR_LTF F.0 350.0 whilebody297
  endwhile297:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds309
	MOVEF_32 500.0 milliseconds309
	DATA32 timer309
	TIMER_WAIT milliseconds309 timer309
	TIMER_READY timer309
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer311
	DATA8 nos311
	DATA8 busy311
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer311 nos311
	JR_EQ8 0 nos311 motornotbusy311
  motorwaiting311:
	OUTPUT_TEST layer311 nos311 busy311
	JR_EQ8 busy311 0 motornotbusy311
	SLEEP
	JR motorwaiting311
  motornotbusy311:
    DATA32 tmp312
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp312
    JR_NEQ32 0 tmp312 alreadylaunched312
    OBJECT_START TF_VIDVIG_0
  alreadylaunched312:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB313:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB314:
    ADDF VGV_C 1.0 VGV_C
  else245_2:
  endif245:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB316:
    JR_GTF VGV_H 120.0 or318
    JR_EQF VGV_H 0.0 or318
    JR_LTF VGV_H 0.0 else317_1
    JR_GTF VGV_H 20.0 else317_1
  or318:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif317
  else317_1:
    JR_GTEQF VGV_H 120.0 else317_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif317
  else317_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else317_3:
  endif317:
    JR_NEQF VGV_COLOR3 4.0 else322_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB324:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else326_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB327:
    CALL MOTOR.RESETCOUNT 'bc'
  while329:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf333
    DATA8 flag333
    DIVF F.1 2.0 tmpf333
    CP_EQF 0.0 2.0 flag333
    SELECTF flag333 0.0 tmpf333 F.0

    JR_GTEQF F.0 450.0 endwhile329
  whilebody329:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB334:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf338
    DATA8 flag338
    DIVF F.1 2.0 tmpf338
    CP_EQF 0.0 2.0 flag338
    SELECTF flag338 0.0 tmpf338 F.0

    JR_LTF F.0 450.0 whilebody329
  endwhile329:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds341
	MOVEF_32 500.0 milliseconds341
	DATA32 timer341
	TIMER_WAIT milliseconds341 timer341
	TIMER_READY timer341
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB343:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf344
    DATA8 flag344
    DIVF 360.0 VGV_L tmpf344
    CP_EQF 0.0 VGV_L flag344
    SELECTF flag344 0.0 tmpf344 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while347:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile347
  whilebody347:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB349:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody347
  endwhile347:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB352:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB353:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB354:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB356:
    CALL MOTOR.RESETCOUNT 'bc'
  while358:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf362
    DATA8 flag362
    DIVF F.1 2.0 tmpf362
    CP_EQF 0.0 2.0 flag362
    SELECTF flag362 0.0 tmpf362 F.0

    JR_GTEQF F.0 300.0 endwhile358
  whilebody358:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB363:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf367
    DATA8 flag367
    DIVF F.1 2.0 tmpf367
    CP_EQF 0.0 2.0 flag367
    SELECTF flag367 0.0 tmpf367 F.0

    JR_LTF F.0 300.0 whilebody358
  endwhile358:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds370
	MOVEF_32 500.0 milliseconds370
	DATA32 timer370
	TIMER_WAIT milliseconds370 timer370
	TIMER_READY timer370
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB372:
    WRITE32 ENDSUB_F_A3_0:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB373:
    WRITE32 ENDSUB_F_A2_0:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB374:
  while375:
    JR_LTEQF VGV_S3 10.0 and377
    JR_GTF VGV_S2 10.0 or376
  and377:
    JR_GTEQF VGV_S3 10.0 endwhile375
    JR_GTEQF VGV_S2 10.0 endwhile375
  or376:
  whilebody375:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB378:
    JR_LTEQF VGV_S3 10.0 and379
    JR_GTF VGV_S2 10.0 whilebody375
  and379:
    JR_GTEQF VGV_S3 10.0 and380
    JR_LTF VGV_S2 10.0 whilebody375
  and380:
  endwhile375:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer382
	DATA8 nos382
	DATA8 busy382
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer382 nos382
	JR_EQ8 0 nos382 motornotbusy382
  motorwaiting382:
	OUTPUT_TEST layer382 nos382 busy382
	JR_EQ8 busy382 0 motornotbusy382
	SLEEP
	JR motorwaiting382
  motornotbusy382:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer383
	DATA8 nos383
	DATA8 busy383
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer383 nos383
	JR_EQ8 0 nos383 motornotbusy383
  motorwaiting383:
	OUTPUT_TEST layer383 nos383 busy383
	JR_EQ8 busy383 0 motornotbusy383
	SLEEP
	JR motorwaiting383
  motornotbusy383:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer384
	DATA8 nos384
	DATA8 busy384
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer384 nos384
	JR_EQ8 0 nos384 motornotbusy384
  motorwaiting384:
	OUTPUT_TEST layer384 nos384 busy384
	JR_EQ8 busy384 0 motornotbusy384
	SLEEP
	JR motorwaiting384
  motornotbusy384:
    WRITE32 ENDSUB_F_A2_0:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB385:
    WRITE32 ENDSUB_F_A3_0:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB386:
  while387:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile387
  whilebody387:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody387
  endwhile387:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB392:
    WRITE32 ENDSUB_F_A3_0:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB393:
  while394:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile394
  whilebody394:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody394
  endwhile394:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB399:
    WRITE32 ENDSUB_F_A2_0:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB400:
  while401:
    JR_LTEQF VGV_S3 10.0 and403
    JR_GTF VGV_S2 10.0 or402
  and403:
    JR_GTEQF VGV_S3 10.0 endwhile401
    JR_GTEQF VGV_S2 10.0 endwhile401
  or402:
  whilebody401:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB404:
    JR_LTEQF VGV_S3 10.0 and405
    JR_GTF VGV_S2 10.0 whilebody401
  and405:
    JR_GTEQF VGV_S3 10.0 and406
    JR_LTF VGV_S2 10.0 whilebody401
  and406:
  endwhile401:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB408:
    CALL MOTOR.RESETCOUNT 'bc'
  while410:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf414
    DATA8 flag414
    DIVF F.1 2.0 tmpf414
    CP_EQF 0.0 2.0 flag414
    SELECTF flag414 0.0 tmpf414 F.0

    JR_GTEQF F.0 500.0 endwhile410
  whilebody410:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB415:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf419
    DATA8 flag419
    DIVF F.1 2.0 tmpf419
    CP_EQF 0.0 2.0 flag419
    SELECTF flag419 0.0 tmpf419 F.0

    JR_LTF F.0 500.0 whilebody410
  endwhile410:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds422
	MOVEF_32 500.0 milliseconds422
	DATA32 timer422
	TIMER_WAIT milliseconds422 timer422
	TIMER_READY timer422
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB424:
    MOVEF_F 500.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf425
    DATA8 flag425
    DIVF 360.0 VGV_L tmpf425
    CP_EQF 0.0 VGV_L flag425
    SELECTF flag425 0.0 tmpf425 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while428:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile428
  whilebody428:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB430:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody428
  endwhile428:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB433:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB434:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB435:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB437:
    CALL MOTOR.RESETCOUNT 'bc'
  while439:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf443
    DATA8 flag443
    DIVF F.1 2.0 tmpf443
    CP_EQF 0.0 2.0 flag443
    SELECTF flag443 0.0 tmpf443 F.0

    JR_GTEQF F.0 470.0 endwhile439
  whilebody439:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB444:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf448
    DATA8 flag448
    DIVF F.1 2.0 tmpf448
    CP_EQF 0.0 2.0 flag448
    SELECTF flag448 0.0 tmpf448 F.0

    JR_LTF F.0 470.0 whilebody439
  endwhile439:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds451
	MOVEF_32 500.0 milliseconds451
	DATA32 timer451
	TIMER_WAIT milliseconds451 timer451
	TIMER_READY timer451
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB453:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB454:
    WRITE32 ENDSUB_F_PR_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB455:
    CALL MOTOR.RESETCOUNT 'bc'
  while457:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf461
    DATA8 flag461
    DIVF F.1 2.0 tmpf461
    CP_EQF 0.0 2.0 flag461
    SELECTF flag461 0.0 tmpf461 F.0

    JR_GTEQF F.0 270.0 endwhile457
  whilebody457:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB462:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf466
    DATA8 flag466
    DIVF F.1 2.0 tmpf466
    CP_EQF 0.0 2.0 flag466
    SELECTF flag466 0.0 tmpf466 F.0

    JR_LTF F.0 270.0 whilebody457
  endwhile457:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds469
	MOVEF_32 500.0 milliseconds469
	DATA32 timer469
	TIMER_WAIT milliseconds469 timer469
	TIMER_READY timer469
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB471:
    MOVEF_F 1150.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf472
    DATA8 flag472
    DIVF 360.0 VGV_L tmpf472
    CP_EQF 0.0 VGV_L flag472
    SELECTF flag472 0.0 tmpf472 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while475:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile475
  whilebody475:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB477:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody475
  endwhile475:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB480:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB481:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB482:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB484:
    CALL MOTOR.RESETCOUNT 'bc'
  while486:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf490
    DATA8 flag490
    DIVF F.1 2.0 tmpf490
    CP_EQF 0.0 2.0 flag490
    SELECTF flag490 0.0 tmpf490 F.0

    JR_GTEQF F.0 270.0 endwhile486
  whilebody486:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB491:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf495
    DATA8 flag495
    DIVF F.1 2.0 tmpf495
    CP_EQF 0.0 2.0 flag495
    SELECTF flag495 0.0 tmpf495 F.0

    JR_LTF F.0 270.0 whilebody486
  endwhile486:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds498
	MOVEF_32 500.0 milliseconds498
	DATA32 timer498
	TIMER_WAIT milliseconds498 timer498
	TIMER_READY timer498
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB500:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB501:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer502
	DATA8 nos502
	DATA8 busy502
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer502 nos502
	JR_EQ8 0 nos502 motornotbusy502
  motorwaiting502:
	OUTPUT_TEST layer502 nos502 busy502
	JR_EQ8 busy502 0 motornotbusy502
	SLEEP
	JR motorwaiting502
  motornotbusy502:
    PROGRAM_STOP -1
  else326_1:
  endif326:
  else322_1:
  endif322:
    JR_NEQF VGV_COLOR3 5.0 else504_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB505:
    CALL MOTOR.RESETCOUNT 'bc'
  while507:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf511
    DATA8 flag511
    DIVF F.1 2.0 tmpf511
    CP_EQF 0.0 2.0 flag511
    SELECTF flag511 0.0 tmpf511 F.0

    JR_GTEQF F.0 300.0 endwhile507
  whilebody507:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB512:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf516
    DATA8 flag516
    DIVF F.1 2.0 tmpf516
    CP_EQF 0.0 2.0 flag516
    SELECTF flag516 0.0 tmpf516 F.0

    JR_LTF F.0 300.0 whilebody507
  endwhile507:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds519
	MOVEF_32 500.0 milliseconds519
	DATA32 timer519
	TIMER_WAIT milliseconds519 timer519
	TIMER_READY timer519
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB521:
    MOVEF_F 850.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf522
    DATA8 flag522
    DIVF 360.0 VGV_L tmpf522
    CP_EQF 0.0 VGV_L flag522
    SELECTF flag522 0.0 tmpf522 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while525:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile525
  whilebody525:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB527:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody525
  endwhile525:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB530:
    JR_NEQF VGV_C 1.0 else531_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB532:
    JR endif531
  else531_1:
    JR_NEQF VGV_C 0.0 else531_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB533:
    JR endif531
  else531_2:
    JR_NEQF VGV_C 2.0 else531_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB534:
    MOVEF_F 640.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB535:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds537
	MOVEF_32 100.0 milliseconds537
	DATA32 timer537
	TIMER_WAIT milliseconds537 timer537
	TIMER_READY timer537
    WRITE32 ENDSUB_F_PL_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB538:
    CALL MOTOR.RESETCOUNT 'bc'
  while540:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf544
    DATA8 flag544
    DIVF F.1 2.0 tmpf544
    CP_EQF 0.0 2.0 flag544
    SELECTF flag544 0.0 tmpf544 F.0

    JR_GTEQF F.0 270.0 endwhile540
  whilebody540:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB545:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf549
    DATA8 flag549
    DIVF F.1 2.0 tmpf549
    CP_EQF 0.0 2.0 flag549
    SELECTF flag549 0.0 tmpf549 F.0

    JR_LTF F.0 270.0 whilebody540
  endwhile540:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds552
	MOVEF_32 500.0 milliseconds552
	DATA32 timer552
	TIMER_WAIT milliseconds552 timer552
	TIMER_READY timer552
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB554:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB555:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer557
	DATA8 nos557
	DATA8 busy557
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer557 nos557
	JR_EQ8 0 nos557 motornotbusy557
  motorwaiting557:
	OUTPUT_TEST layer557 nos557 busy557
	JR_EQ8 busy557 0 motornotbusy557
	SLEEP
	JR motorwaiting557
  motornotbusy557:
    PROGRAM_STOP -1
  else531_3:
  endif531:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB559:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer561
	DATA8 nos561
	DATA8 busy561
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer561 nos561
	JR_EQ8 0 nos561 motornotbusy561
  motorwaiting561:
	OUTPUT_TEST layer561 nos561 busy561
	JR_EQ8 busy561 0 motornotbusy561
	SLEEP
	JR motorwaiting561
  motornotbusy561:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer563
	DATA8 nos563
	DATA8 busy563
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer563 nos563
	JR_EQ8 0 nos563 motornotbusy563
  motorwaiting563:
	OUTPUT_TEST layer563 nos563 busy563
	JR_EQ8 busy563 0 motornotbusy563
	SLEEP
	JR motorwaiting563
  motornotbusy563:
    WRITE32 ENDSUB_F_A3_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB564:
    WRITE32 ENDSUB_F_A2_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB565:
  while566:
    JR_LTEQF VGV_S2 15.0 endwhile566
  whilebody566:
    WRITE32 ENDSUB_F_A3_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB567:
    WRITE32 ENDSUB_F_A2_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB568:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody566
  endwhile566:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB571:
    WRITE32 ENDSUB_F_A2_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB572:
  while573:
    JR_GTEQF VGV_S2 55.0 endwhile573
  whilebody573:
    WRITE32 ENDSUB_F_A3_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB574:
    WRITE32 ENDSUB_F_A2_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB575:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody573
  endwhile573:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while579:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf583
    DATA8 flag583
    DIVF F.1 2.0 tmpf583
    CP_EQF 0.0 2.0 flag583
    SELECTF flag583 0.0 tmpf583 F.0

    JR_GTEQF F.0 270.0 endwhile579
  whilebody579:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB584:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf588
    DATA8 flag588
    DIVF F.1 2.0 tmpf588
    CP_EQF 0.0 2.0 flag588
    SELECTF flag588 0.0 tmpf588 F.0

    JR_LTF F.0 270.0 whilebody579
  endwhile579:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds591
	MOVEF_32 500.0 milliseconds591
	DATA32 timer591
	TIMER_WAIT milliseconds591 timer591
	TIMER_READY timer591
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp593
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp593
    JR_NEQ32 0 tmp593 alreadylaunched593
    OBJECT_START TF_VIDVIG_0
  alreadylaunched593:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB594:
    WRITE32 ENDSUB_F_A3_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB595:
    WRITE32 ENDSUB_F_A2_0:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB596:
  while597:
    JR_LTEQF VGV_S3 10.0 and599
    JR_GTF VGV_S2 10.0 or598
  and599:
    JR_GTEQF VGV_S3 10.0 endwhile597
    JR_GTEQF VGV_S2 10.0 endwhile597
  or598:
  whilebody597:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB600:
    JR_LTEQF VGV_S3 10.0 and601
    JR_GTF VGV_S2 10.0 whilebody597
  and601:
    JR_GTEQF VGV_S3 10.0 and602
    JR_LTF VGV_S2 10.0 whilebody597
  and602:
  endwhile597:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    WRITE32 ENDSUB_F_A3_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB605:
    WRITE32 ENDSUB_F_A2_0:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB606:
  while607:
    JR_LTEQF VGV_S3 10.0 and609
    JR_GTF VGV_S2 10.0 or608
  and609:
    JR_GTEQF VGV_S3 10.0 endwhile607
    JR_GTEQF VGV_S2 10.0 endwhile607
  or608:
  whilebody607:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB610:
    JR_LTEQF VGV_S3 10.0 and611
    JR_GTF VGV_S2 10.0 whilebody607
  and611:
    JR_GTEQF VGV_S3 10.0 and612
    JR_LTF VGV_S2 10.0 whilebody607
  and612:
  endwhile607:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VGV_C 1.0 VGV_C
  else504_1:
  endif504:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB615:
    JR_GTEQF VGV_H 30.0 else616_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif616
  else616_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else616_2:
  endif616:
    JR_NEQF VGV_COLOR4 4.0 else619_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer620
	DATA8 nos620
	DATA8 busy620
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer620 nos620
	JR_EQ8 0 nos620 motornotbusy620
  motorwaiting620:
	OUTPUT_TEST layer620 nos620 busy620
	JR_EQ8 busy620 0 motornotbusy620
	SLEEP
	JR motorwaiting620
  motornotbusy620:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer621
	DATA8 nos621
	DATA8 busy621
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer621 nos621
	JR_EQ8 0 nos621 motornotbusy621
  motorwaiting621:
	OUTPUT_TEST layer621 nos621 busy621
	JR_EQ8 busy621 0 motornotbusy621
	SLEEP
	JR motorwaiting621
  motornotbusy621:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer622
	DATA8 nos622
	DATA8 busy622
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer622 nos622
	JR_EQ8 0 nos622 motornotbusy622
  motorwaiting622:
	OUTPUT_TEST layer622 nos622 busy622
	JR_EQ8 busy622 0 motornotbusy622
	SLEEP
	JR motorwaiting622
  motornotbusy622:
    WRITE32 ENDSUB_F_A2_0:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB623:
    WRITE32 ENDSUB_F_A3_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB624:
  while625:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile625
  whilebody625:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody625
  endwhile625:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB630:
    WRITE32 ENDSUB_F_A3_0:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB631:
  while632:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile632
  whilebody632:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody632
  endwhile632:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB637:
    WRITE32 ENDSUB_F_A2_0:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB638:
  while639:
    JR_LTEQF VGV_S3 10.0 and641
    JR_GTF VGV_S2 10.0 or640
  and641:
    JR_GTEQF VGV_S3 10.0 endwhile639
    JR_GTEQF VGV_S2 10.0 endwhile639
  or640:
  whilebody639:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB642:
    JR_LTEQF VGV_S3 10.0 and643
    JR_GTF VGV_S2 10.0 whilebody639
  and643:
    JR_GTEQF VGV_S3 10.0 and644
    JR_LTF VGV_S2 10.0 whilebody639
  and644:
  endwhile639:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB646:
    WRITE32 ENDSUB_F_A2_0:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB647:
  while648:
    JR_LTEQF VGV_S3 15.0 and650
    JR_GTF VGV_S2 15.0 or649
  and650:
    JR_GTEQF VGV_S3 15.0 endwhile648
    JR_GTEQF VGV_S2 15.0 endwhile648
  or649:
  whilebody648:
    WRITE32 ENDSUB_F_A3_0:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB651:
    WRITE32 ENDSUB_F_A2_0:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB652:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB653:
    JR_LTEQF VGV_S3 15.0 and654
    JR_GTF VGV_S2 15.0 whilebody648
  and654:
    JR_GTEQF VGV_S3 15.0 and655
    JR_LTF VGV_S2 15.0 whilebody648
  and655:
  endwhile648:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer657
	DATA8 nos657
	DATA8 busy657
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer657 nos657
	JR_EQ8 0 nos657 motornotbusy657
  motorwaiting657:
	OUTPUT_TEST layer657 nos657 busy657
	JR_EQ8 busy657 0 motornotbusy657
	SLEEP
	JR motorwaiting657
  motornotbusy657:
    WRITE32 ENDSUB_F_A3_0:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB658:
    WRITE32 ENDSUB_F_A2_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB659:
  while660:
    JR_LTEQF VGV_S3 15.0 and662
    JR_GTF VGV_S2 15.0 or661
  and662:
    JR_GTEQF VGV_S3 15.0 endwhile660
    JR_GTEQF VGV_S2 15.0 endwhile660
  or661:
  whilebody660:
    WRITE32 ENDSUB_F_A3_0:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB663:
    WRITE32 ENDSUB_F_A2_0:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB664:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB665:
    JR_LTEQF VGV_S3 15.0 and666
    JR_GTF VGV_S2 15.0 whilebody660
  and666:
    JR_GTEQF VGV_S3 15.0 and667
    JR_LTF VGV_S2 15.0 whilebody660
  and667:
  endwhile660:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 1.0 else669_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB670:
    CALL MOTOR.RESETCOUNT 'bc'
  while672:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf676
    DATA8 flag676
    DIVF F.1 2.0 tmpf676
    CP_EQF 0.0 2.0 flag676
    SELECTF flag676 0.0 tmpf676 F.0

    JR_GTEQF F.0 500.0 endwhile672
  whilebody672:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB677:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf681
    DATA8 flag681
    DIVF F.1 2.0 tmpf681
    CP_EQF 0.0 2.0 flag681
    SELECTF flag681 0.0 tmpf681 F.0

    JR_LTF F.0 500.0 whilebody672
  endwhile672:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds684
	MOVEF_32 500.0 milliseconds684
	DATA32 timer684
	TIMER_WAIT milliseconds684 timer684
	TIMER_READY timer684
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB686:
    MOVEF_F 520.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf687
    DATA8 flag687
    DIVF 360.0 VGV_L tmpf687
    CP_EQF 0.0 VGV_L flag687
    SELECTF flag687 0.0 tmpf687 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while690:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile690
  whilebody690:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB692:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody690
  endwhile690:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB695:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB696:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB697:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB699:
    CALL MOTOR.RESETCOUNT 'bc'
  while701:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf705
    DATA8 flag705
    DIVF F.1 2.0 tmpf705
    CP_EQF 0.0 2.0 flag705
    SELECTF flag705 0.0 tmpf705 F.0

    JR_GTEQF F.0 470.0 endwhile701
  whilebody701:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB706:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf710
    DATA8 flag710
    DIVF F.1 2.0 tmpf710
    CP_EQF 0.0 2.0 flag710
    SELECTF flag710 0.0 tmpf710 F.0

    JR_LTF F.0 470.0 whilebody701
  endwhile701:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds713
	MOVEF_32 500.0 milliseconds713
	DATA32 timer713
	TIMER_WAIT milliseconds713 timer713
	TIMER_READY timer713
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB715:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB716:
    WRITE32 ENDSUB_F_PR_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB717:
    CALL MOTOR.RESETCOUNT 'bc'
  while719:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf723
    DATA8 flag723
    DIVF F.1 2.0 tmpf723
    CP_EQF 0.0 2.0 flag723
    SELECTF flag723 0.0 tmpf723 F.0

    JR_GTEQF F.0 270.0 endwhile719
  whilebody719:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB724:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf728
    DATA8 flag728
    DIVF F.1 2.0 tmpf728
    CP_EQF 0.0 2.0 flag728
    SELECTF flag728 0.0 tmpf728 F.0

    JR_LTF F.0 270.0 whilebody719
  endwhile719:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds731
	MOVEF_32 500.0 milliseconds731
	DATA32 timer731
	TIMER_WAIT milliseconds731 timer731
	TIMER_READY timer731
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB733:
    MOVEF_F 1150.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf734
    DATA8 flag734
    DIVF 360.0 VGV_L tmpf734
    CP_EQF 0.0 VGV_L flag734
    SELECTF flag734 0.0 tmpf734 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while737:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile737
  whilebody737:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB739:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody737
  endwhile737:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB742:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB743:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB744:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB746:
    CALL MOTOR.RESETCOUNT 'bc'
  while748:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf752
    DATA8 flag752
    DIVF F.1 2.0 tmpf752
    CP_EQF 0.0 2.0 flag752
    SELECTF flag752 0.0 tmpf752 F.0

    JR_GTEQF F.0 270.0 endwhile748
  whilebody748:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB753:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 2.0 tmpf757
    CP_EQF 0.0 2.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    JR_LTF F.0 270.0 whilebody748
  endwhile748:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds760
	MOVEF_32 500.0 milliseconds760
	DATA32 timer760
	TIMER_WAIT milliseconds760 timer760
	TIMER_READY timer760
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB762:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB763:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer764
	DATA8 nos764
	DATA8 busy764
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer764 nos764
	JR_EQ8 0 nos764 motornotbusy764
  motorwaiting764:
	OUTPUT_TEST layer764 nos764 busy764
	JR_EQ8 busy764 0 motornotbusy764
	SLEEP
	JR motorwaiting764
  motornotbusy764:
    PROGRAM_STOP -1
  else669_1:
  endif669:
  else619_1:
  endif619:
    JR_NEQF VGV_COLOR4 5.0 else766_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB767:
    CALL MOTOR.RESETCOUNT 'bc'
  while769:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf773
    DATA8 flag773
    DIVF F.1 2.0 tmpf773
    CP_EQF 0.0 2.0 flag773
    SELECTF flag773 0.0 tmpf773 F.0

    JR_GTEQF F.0 450.0 endwhile769
  whilebody769:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB774:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf778
    DATA8 flag778
    DIVF F.1 2.0 tmpf778
    CP_EQF 0.0 2.0 flag778
    SELECTF flag778 0.0 tmpf778 F.0

    JR_LTF F.0 450.0 whilebody769
  endwhile769:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds781
	MOVEF_32 500.0 milliseconds781
	DATA32 timer781
	TIMER_WAIT milliseconds781 timer781
	TIMER_READY timer781
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB783:
    MOVEF_F 250.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf784
    DATA8 flag784
    DIVF 360.0 VGV_L tmpf784
    CP_EQF 0.0 VGV_L flag784
    SELECTF flag784 0.0 tmpf784 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while787:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile787
  whilebody787:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB789:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody787
  endwhile787:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB792:
    JR_NEQF VGV_C 1.0 else793_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB794:
    JR endif793
  else793_1:
    JR_NEQF VGV_C 0.0 else793_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB795:
    JR endif793
  else793_2:
    JR_NEQF VGV_C 2.0 else793_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB796:
    MOVEF_F 160.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB797:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB799:
    CALL MOTOR.RESETCOUNT 'bc'
  while801:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf805
    DATA8 flag805
    DIVF F.1 2.0 tmpf805
    CP_EQF 0.0 2.0 flag805
    SELECTF flag805 0.0 tmpf805 F.0

    JR_GTEQF F.0 250.0 endwhile801
  whilebody801:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB806:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf810
    DATA8 flag810
    DIVF F.1 2.0 tmpf810
    CP_EQF 0.0 2.0 flag810
    SELECTF flag810 0.0 tmpf810 F.0

    JR_LTF F.0 250.0 whilebody801
  endwhile801:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds813
	MOVEF_32 500.0 milliseconds813
	DATA32 timer813
	TIMER_WAIT milliseconds813 timer813
	TIMER_READY timer813
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB815:
    CALL MOTOR.RESETCOUNT 'bc'
  while817:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf821
    DATA8 flag821
    DIVF F.1 2.0 tmpf821
    CP_EQF 0.0 2.0 flag821
    SELECTF flag821 0.0 tmpf821 F.0

    JR_GTEQF F.0 100.0 endwhile817
  whilebody817:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB822:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf826
    DATA8 flag826
    DIVF F.1 2.0 tmpf826
    CP_EQF 0.0 2.0 flag826
    SELECTF flag826 0.0 tmpf826 F.0

    JR_LTF F.0 100.0 whilebody817
  endwhile817:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB828:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer830
	DATA8 nos830
	DATA8 busy830
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer830 nos830
	JR_EQ8 0 nos830 motornotbusy830
  motorwaiting830:
	OUTPUT_TEST layer830 nos830 busy830
	JR_EQ8 busy830 0 motornotbusy830
	SLEEP
	JR motorwaiting830
  motornotbusy830:
    PROGRAM_STOP -1
  else793_3:
  endif793:
    MOVEF_F 150.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB832:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB834:
    CALL MOTOR.RESETCOUNT 'bc'
  while836:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf840
    DATA8 flag840
    DIVF F.1 2.0 tmpf840
    CP_EQF 0.0 2.0 flag840
    SELECTF flag840 0.0 tmpf840 F.0

    JR_GTEQF F.0 250.0 endwhile836
  whilebody836:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB841:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf845
    DATA8 flag845
    DIVF F.1 2.0 tmpf845
    CP_EQF 0.0 2.0 flag845
    SELECTF flag845 0.0 tmpf845 F.0

    JR_LTF F.0 250.0 whilebody836
  endwhile836:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds848
	MOVEF_32 500.0 milliseconds848
	DATA32 timer848
	TIMER_WAIT milliseconds848 timer848
	TIMER_READY timer848
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp850
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp850
    JR_NEQ32 0 tmp850 alreadylaunched850
    OBJECT_START TF_VIDVIG_0
  alreadylaunched850:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB851:
    WRITE32 ENDSUB_F_A3_0:CALLSUB852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB852:
    WRITE32 ENDSUB_F_A2_0:CALLSUB853 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB853:
  while854:
    JR_LTEQF VGV_S3 10.0 and856
    JR_GTF VGV_S2 10.0 or855
  and856:
    JR_GTEQF VGV_S3 10.0 endwhile854
    JR_GTEQF VGV_S2 10.0 endwhile854
  or855:
  whilebody854:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB857:
    JR_LTEQF VGV_S3 10.0 and858
    JR_GTF VGV_S2 10.0 whilebody854
  and858:
    JR_GTEQF VGV_S3 10.0 and859
    JR_LTF VGV_S2 10.0 whilebody854
  and859:
  endwhile854:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer861
	DATA8 nos861
	DATA8 busy861
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer861 nos861
	JR_EQ8 0 nos861 motornotbusy861
  motorwaiting861:
	OUTPUT_TEST layer861 nos861 busy861
	JR_EQ8 busy861 0 motornotbusy861
	SLEEP
	JR motorwaiting861
  motornotbusy861:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer862
	DATA8 nos862
	DATA8 busy862
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer862 nos862
	JR_EQ8 0 nos862 motornotbusy862
  motorwaiting862:
	OUTPUT_TEST layer862 nos862 busy862
	JR_EQ8 busy862 0 motornotbusy862
	SLEEP
	JR motorwaiting862
  motornotbusy862:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer863
	DATA8 nos863
	DATA8 busy863
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer863 nos863
	JR_EQ8 0 nos863 motornotbusy863
  motorwaiting863:
	OUTPUT_TEST layer863 nos863 busy863
	JR_EQ8 busy863 0 motornotbusy863
	SLEEP
	JR motorwaiting863
  motornotbusy863:
    WRITE32 ENDSUB_F_A2_0:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB864:
    WRITE32 ENDSUB_F_A3_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB865:
  while866:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile866
  whilebody866:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody866
  endwhile866:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB871:
    WRITE32 ENDSUB_F_A3_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB872:
  while873:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile873
  whilebody873:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody873
  endwhile873:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB878:
    WRITE32 ENDSUB_F_A2_0:CALLSUB879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB879:
  while880:
    JR_LTEQF VGV_S3 10.0 and882
    JR_GTF VGV_S2 10.0 or881
  and882:
    JR_GTEQF VGV_S3 10.0 endwhile880
    JR_GTEQF VGV_S2 10.0 endwhile880
  or881:
  whilebody880:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB883:
    JR_LTEQF VGV_S3 10.0 and884
    JR_GTF VGV_S2 10.0 whilebody880
  and884:
    JR_GTEQF VGV_S3 10.0 and885
    JR_LTF VGV_S2 10.0 whilebody880
  and885:
  endwhile880:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer887
	DATA8 nos887
	DATA8 busy887
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer887 nos887
	JR_EQ8 0 nos887 motornotbusy887
  motorwaiting887:
	OUTPUT_TEST layer887 nos887 busy887
	JR_EQ8 busy887 0 motornotbusy887
	SLEEP
	JR motorwaiting887
  motornotbusy887:
    WRITE32 ENDSUB_F_A3_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB888:
    WRITE32 ENDSUB_F_A2_0:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB889:
  while890:
    JR_LTEQF VGV_S3 10.0 and892
    JR_GTF VGV_S2 10.0 or891
  and892:
    JR_GTEQF VGV_S3 10.0 endwhile890
    JR_GTEQF VGV_S2 10.0 endwhile890
  or891:
  whilebody890:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB893:
    JR_LTEQF VGV_S3 10.0 and894
    JR_GTF VGV_S2 10.0 whilebody890
  and894:
    JR_GTEQF VGV_S3 10.0 and895
    JR_LTF VGV_S2 10.0 whilebody890
  and895:
  endwhile890:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VGV_C 1.0 VGV_C
  else766_1:
  endif766:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB898:
    JR_LTF VGV_H 25.0 or900
    JR_LTEQF VGV_H 280.0 else899_1
  or900:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif899
  else899_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else899_2:
  endif899:
    JR_NEQF VGV_COLOR5 4.0 else903_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer904
	DATA8 nos904
	DATA8 busy904
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer904 nos904
	JR_EQ8 0 nos904 motornotbusy904
  motorwaiting904:
	OUTPUT_TEST layer904 nos904 busy904
	JR_EQ8 busy904 0 motornotbusy904
	SLEEP
	JR motorwaiting904
  motornotbusy904:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB905:
    WRITE32 ENDSUB_F_PR_0:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB906:
    CALL MOTOR.RESETCOUNT 'bc'
  while908:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf912
    DATA8 flag912
    DIVF F.1 2.0 tmpf912
    CP_EQF 0.0 2.0 flag912
    SELECTF flag912 0.0 tmpf912 F.0

    JR_GTEQF F.0 270.0 endwhile908
  whilebody908:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB913:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf917
    DATA8 flag917
    DIVF F.1 2.0 tmpf917
    CP_EQF 0.0 2.0 flag917
    SELECTF flag917 0.0 tmpf917 F.0

    JR_LTF F.0 270.0 whilebody908
  endwhile908:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds920
	MOVEF_32 500.0 milliseconds920
	DATA32 timer920
	TIMER_WAIT milliseconds920 timer920
	TIMER_READY timer920
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB922:
    CALL MOTOR.RESETCOUNT 'bc'
  while924:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf928
    DATA8 flag928
    DIVF F.1 2.0 tmpf928
    CP_EQF 0.0 2.0 flag928
    SELECTF flag928 0.0 tmpf928 F.0

    JR_GTEQF F.0 100.0 endwhile924
  whilebody924:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB929:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf933
    DATA8 flag933
    DIVF F.1 2.0 tmpf933
    CP_EQF 0.0 2.0 flag933
    SELECTF flag933 0.0 tmpf933 F.0

    JR_LTF F.0 100.0 whilebody924
  endwhile924:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1100.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf935
    DATA8 flag935
    DIVF 360.0 VGV_L tmpf935
    CP_EQF 0.0 VGV_L flag935
    SELECTF flag935 0.0 tmpf935 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while938:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile938
  whilebody938:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB940:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody938
  endwhile938:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB943:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB944:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB945:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB947:
    CALL MOTOR.RESETCOUNT 'bc'
  while949:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf953
    DATA8 flag953
    DIVF F.1 2.0 tmpf953
    CP_EQF 0.0 2.0 flag953
    SELECTF flag953 0.0 tmpf953 F.0

    JR_GTEQF F.0 270.0 endwhile949
  whilebody949:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB954:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf958
    DATA8 flag958
    DIVF F.1 2.0 tmpf958
    CP_EQF 0.0 2.0 flag958
    SELECTF flag958 0.0 tmpf958 F.0

    JR_LTF F.0 270.0 whilebody949
  endwhile949:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds961
	MOVEF_32 500.0 milliseconds961
	DATA32 timer961
	TIMER_WAIT milliseconds961 timer961
	TIMER_READY timer961
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB963:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB964:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer965
	DATA8 nos965
	DATA8 busy965
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer965 nos965
	JR_EQ8 0 nos965 motornotbusy965
  motorwaiting965:
	OUTPUT_TEST layer965 nos965 busy965
	JR_EQ8 busy965 0 motornotbusy965
	SLEEP
	JR motorwaiting965
  motornotbusy965:
    PROGRAM_STOP -1
  else903_1:
  endif903:
    JR_NEQF VGV_COLOR5 5.0 else967_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB968:
    CALL MOTOR.RESETCOUNT 'bc'
  while970:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf974
    DATA8 flag974
    DIVF F.1 2.0 tmpf974
    CP_EQF 0.0 2.0 flag974
    SELECTF flag974 0.0 tmpf974 F.0

    JR_GTEQF F.0 500.0 endwhile970
  whilebody970:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB975:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf979
    DATA8 flag979
    DIVF F.1 2.0 tmpf979
    CP_EQF 0.0 2.0 flag979
    SELECTF flag979 0.0 tmpf979 F.0

    JR_LTF F.0 500.0 whilebody970
  endwhile970:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds982
	MOVEF_32 500.0 milliseconds982
	DATA32 timer982
	TIMER_WAIT milliseconds982 timer982
	TIMER_READY timer982
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB984:
    MOVEF_F 520.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf985
    DATA8 flag985
    DIVF 360.0 VGV_L tmpf985
    CP_EQF 0.0 VGV_L flag985
    SELECTF flag985 0.0 tmpf985 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while988:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile988
  whilebody988:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB990:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody988
  endwhile988:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB993:
    JR_NEQF VGV_C 1.0 else994_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB995:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB996:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB998:
    CALL MOTOR.RESETCOUNT 'bc'
  while1000:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1004
    DATA8 flag1004
    DIVF F.1 2.0 tmpf1004
    CP_EQF 0.0 2.0 flag1004
    SELECTF flag1004 0.0 tmpf1004 F.0

    JR_GTEQF F.0 470.0 endwhile1000
  whilebody1000:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1005:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1009
    DATA8 flag1009
    DIVF F.1 2.0 tmpf1009
    CP_EQF 0.0 2.0 flag1009
    SELECTF flag1009 0.0 tmpf1009 F.0

    JR_LTF F.0 470.0 whilebody1000
  endwhile1000:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1012
	MOVEF_32 500.0 milliseconds1012
	DATA32 timer1012
	TIMER_WAIT milliseconds1012 timer1012
	TIMER_READY timer1012
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1014:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1015:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1016 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1016:
    CALL MOTOR.RESETCOUNT 'bc'
  while1018:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1022
    DATA8 flag1022
    DIVF F.1 2.0 tmpf1022
    CP_EQF 0.0 2.0 flag1022
    SELECTF flag1022 0.0 tmpf1022 F.0

    JR_GTEQF F.0 270.0 endwhile1018
  whilebody1018:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1023:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1027
    DATA8 flag1027
    DIVF F.1 2.0 tmpf1027
    CP_EQF 0.0 2.0 flag1027
    SELECTF flag1027 0.0 tmpf1027 F.0

    JR_LTF F.0 270.0 whilebody1018
  endwhile1018:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1030
	MOVEF_32 500.0 milliseconds1030
	DATA32 timer1030
	TIMER_WAIT milliseconds1030 timer1030
	TIMER_READY timer1030
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1032
	DATA8 no1032
	DATA8 mode81032
	
	MOVEF_8 2.0 no1032
	SUB8 no1032 1 no1032
	DIV8 no1032 4 layer1032
	MATH MOD8 no1032 4 no1032

	MOVEF_8 0.0 mode81032
	
	INPUT_DEVICE READY_RAW layer1032 no1032 0 mode81032 0
    DATA8 layer1033
	DATA8 no1033
	DATA8 mode81033
	
	MOVEF_8 3.0 no1033
	SUB8 no1033 1 no1033
	DIV8 no1033 4 layer1033
	MATH MOD8 no1033 4 no1033

	MOVEF_8 0.0 mode81033
	
	INPUT_DEVICE READY_RAW layer1033 no1033 0 mode81033 0
  while1034:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1036
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1035
  and1036:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1039
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1035
  and1039:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1034
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1034
  or1035:
  whilebody1034:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1045
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1034
  and1045:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1048
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1034
  and1048:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1051
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1034
  and1051:
  endwhile1034:
  while1054:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1054
  whilebody1054:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1054
  endwhile1054:
    CALL MOTOR.STOP 'B' 'True'
  while1059:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1059
  whilebody1059:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1059
  endwhile1059:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1064
	DATA8 nos1064
	DATA8 busy1064
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1064 nos1064
	JR_EQ8 0 nos1064 motornotbusy1064
  motorwaiting1064:
	OUTPUT_TEST layer1064 nos1064 busy1064
	JR_EQ8 busy1064 0 motornotbusy1064
	SLEEP
	JR motorwaiting1064
  motornotbusy1064:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1066
	DATA8 nos1066
	DATA8 busy1066
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1066 nos1066
	JR_EQ8 0 nos1066 motornotbusy1066
  motorwaiting1066:
	OUTPUT_TEST layer1066 nos1066 busy1066
	JR_EQ8 busy1066 0 motornotbusy1066
	SLEEP
	JR motorwaiting1066
  motornotbusy1066:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1068:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1069:
  while1070:
    JR_LTEQF VGV_S3 10.0 endwhile1070
  whilebody1070:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1071:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1072:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1070
  endwhile1070:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1074:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1075:
  while1076:
    JR_GTEQF VGV_S3 55.0 endwhile1076
  whilebody1076:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1077:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1078:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1076
  endwhile1076:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1100.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1081
    DATA8 flag1081
    DIVF 360.0 VGV_L tmpf1081
    CP_EQF 0.0 VGV_L flag1081
    SELECTF flag1081 0.0 tmpf1081 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1084:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1084
  whilebody1084:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1086:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1084
  endwhile1084:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1089:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1090:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1091 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1091:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1093 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1093:
    CALL MOTOR.RESETCOUNT 'bc'
  while1095:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1099
    DATA8 flag1099
    DIVF F.1 2.0 tmpf1099
    CP_EQF 0.0 2.0 flag1099
    SELECTF flag1099 0.0 tmpf1099 F.0

    JR_GTEQF F.0 270.0 endwhile1095
  whilebody1095:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1100:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1104
    DATA8 flag1104
    DIVF F.1 2.0 tmpf1104
    CP_EQF 0.0 2.0 flag1104
    SELECTF flag1104 0.0 tmpf1104 F.0

    JR_LTF F.0 270.0 whilebody1095
  endwhile1095:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1107
	MOVEF_32 500.0 milliseconds1107
	DATA32 timer1107
	TIMER_WAIT milliseconds1107 timer1107
	TIMER_READY timer1107
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1109:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1110:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1111
	DATA8 nos1111
	DATA8 busy1111
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1111 nos1111
	JR_EQ8 0 nos1111 motornotbusy1111
  motorwaiting1111:
	OUTPUT_TEST layer1111 nos1111 busy1111
	JR_EQ8 busy1111 0 motornotbusy1111
	SLEEP
	JR motorwaiting1111
  motornotbusy1111:
    PROGRAM_STOP -1
    JR endif994
  else994_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1113:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1114:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1116:
    CALL MOTOR.RESETCOUNT 'bc'
  while1118:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1122
    DATA8 flag1122
    DIVF F.1 2.0 tmpf1122
    CP_EQF 0.0 2.0 flag1122
    SELECTF flag1122 0.0 tmpf1122 F.0

    JR_GTEQF F.0 470.0 endwhile1118
  whilebody1118:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1123:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1127
    DATA8 flag1127
    DIVF F.1 2.0 tmpf1127
    CP_EQF 0.0 2.0 flag1127
    SELECTF flag1127 0.0 tmpf1127 F.0

    JR_LTF F.0 470.0 whilebody1118
  endwhile1118:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1130
	MOVEF_32 500.0 milliseconds1130
	DATA32 timer1130
	TIMER_WAIT milliseconds1130 timer1130
	TIMER_READY timer1130
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1132:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1133:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1134
	DATA8 nos1134
	DATA8 busy1134
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1134 nos1134
	JR_EQ8 0 nos1134 motornotbusy1134
  motorwaiting1134:
	OUTPUT_TEST layer1134 nos1134 busy1134
	JR_EQ8 busy1134 0 motornotbusy1134
	SLEEP
	JR motorwaiting1134
  motornotbusy1134:
    PROGRAM_STOP -1
  else994_2:
  endif994:
  else967_1:
  endif967:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1137
	DATA8 nos1137
	DATA8 busy1137
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1137 nos1137
	JR_EQ8 0 nos1137 motornotbusy1137
  motorwaiting1137:
	OUTPUT_TEST layer1137 nos1137 busy1137
	JR_EQ8 busy1137 0 motornotbusy1137
	SLEEP
	JR motorwaiting1137
  motornotbusy1137:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1138
	DATA8 nos1138
	DATA8 busy1138
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1138 nos1138
	JR_EQ8 0 nos1138 motornotbusy1138
  motorwaiting1138:
	OUTPUT_TEST layer1138 nos1138 busy1138
	JR_EQ8 busy1138 0 motornotbusy1138
	SLEEP
	JR motorwaiting1138
  motornotbusy1138:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1140
	DATA8 nos1140
	DATA8 busy1140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1140 nos1140
	JR_EQ8 0 nos1140 motornotbusy1140
  motorwaiting1140:
	OUTPUT_TEST layer1140 nos1140 busy1140
	JR_EQ8 busy1140 0 motornotbusy1140
	SLEEP
	JR motorwaiting1140
  motornotbusy1140:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1141
	DATA8 nos1141
	DATA8 busy1141
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1141 nos1141
	JR_EQ8 0 nos1141 motornotbusy1141
  motorwaiting1141:
	OUTPUT_TEST layer1141 nos1141 busy1141
	JR_EQ8 busy1141 0 motornotbusy1141
	SLEEP
	JR motorwaiting1141
  motornotbusy1141:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 195.936 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1143
    DATA8 flag1143
    DIVF 360.0 VGV_L tmpf1143
    CP_EQF 0.0 VGV_L flag1143
    SELECTF flag1143 0.0 tmpf1143 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1146:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1146
  whilebody1146:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1148:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1146
  endwhile1146:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1151:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1153
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1153
    JR_NEQ32 0 tmp1153 alreadylaunched1153
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1153:
ENDTHREAD:
    RETURN
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1154
    DATA8 flag1154
    DIVF 360.0 VGV_L tmpf1154
    CP_EQF 0.0 VGV_L flag1154
    SELECTF flag1154 0.0 tmpf1154 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1157:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1161
    DATA8 flag1161
    DIVF F.1 2.0 tmpf1161
    CP_EQF 0.0 2.0 flag1161
    SELECTF flag1161 0.0 tmpf1161 F.0

    JR_GTEQF F.0 VGV_X endwhile1157
  whilebody1157:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1162:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1163:
    JR_GTEQF VGV_SPEED 80.0 else1164_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1164_1:
  endif1164:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1166:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1170
    DATA8 flag1170
    DIVF F.1 2.0 tmpf1170
    CP_EQF 0.0 2.0 flag1170
    SELECTF flag1170 0.0 tmpf1170 F.0

    JR_LTF F.0 VGV_X whilebody1157
  endwhile1157:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1172:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1173:
  while1174:
    JR_LTEQF VGV_S3 15.0 and1176
    JR_GTF VGV_S2 15.0 or1175
  and1176:
    JR_GTEQF VGV_S3 15.0 endwhile1174
    JR_GTEQF VGV_S2 15.0 endwhile1174
  or1175:
  whilebody1174:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1177:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1178:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1179:
    JR_LTEQF VGV_S3 15.0 and1180
    JR_GTF VGV_S2 15.0 whilebody1174
  and1180:
    JR_GTEQF VGV_S3 15.0 and1181
    JR_LTF VGV_S2 15.0 whilebody1174
  and1181:
  endwhile1174:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1183
	DATA8 nos1183
	DATA8 busy1183
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1183 nos1183
	JR_EQ8 0 nos1183 motornotbusy1183
  motorwaiting1183:
	OUTPUT_TEST layer1183 nos1183 busy1183
	JR_EQ8 busy1183 0 motornotbusy1183
	SLEEP
	JR motorwaiting1183
  motornotbusy1183:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1185
	DATA8 nos1185
	DATA8 busy1185
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1185 nos1185
	JR_EQ8 0 nos1185 motornotbusy1185
  motorwaiting1185:
	OUTPUT_TEST layer1185 nos1185 busy1185
	JR_EQ8 busy1185 0 motornotbusy1185
	SLEEP
	JR motorwaiting1185
  motornotbusy1185:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1186:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1187:
  while1188:
    JR_LTEQF VGV_S2 15.0 endwhile1188
  whilebody1188:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1189:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1190:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1188
  endwhile1188:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1193:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1194:
  while1195:
    JR_GTEQF VGV_S2 55.0 endwhile1195
  whilebody1195:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1196:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1197:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1195
  endwhile1195:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1200
	DATA8 nos1200
	DATA8 busy1200
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1200 nos1200
	JR_EQ8 0 nos1200 motornotbusy1200
  motorwaiting1200:
	OUTPUT_TEST layer1200 nos1200 busy1200
	JR_EQ8 busy1200 0 motornotbusy1200
	SLEEP
	JR motorwaiting1200
  motornotbusy1200:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1202
	DATA8 nos1202
	DATA8 busy1202
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1202 nos1202
	JR_EQ8 0 nos1202 motornotbusy1202
  motorwaiting1202:
	OUTPUT_TEST layer1202 nos1202 busy1202
	JR_EQ8 busy1202 0 motornotbusy1202
	SLEEP
	JR motorwaiting1202
  motornotbusy1202:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1203:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1204:
  while1205:
    JR_LTEQF VGV_S3 15.0 endwhile1205
  whilebody1205:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1207:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1205
  endwhile1205:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1210:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1211:
  while1212:
    JR_GTEQF VGV_S3 60.0 endwhile1212
  whilebody1212:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1213:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1214:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1212
  endwhile1212:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1217:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1218:
  while1219:
    JR_LTEQF VGV_S2 9.0 and1221
    JR_GTF VGV_S3 9.0 or1220
  and1221:
    JR_GTEQF VGV_S2 9.0 and1222
    JR_GTF VGV_S3 9.0 or1220
  and1222:
    JR_LTEQF VGV_S2 9.0 endwhile1219
    JR_GTEQF VGV_S3 9.0 endwhile1219
  or1220:
  whilebody1219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1223:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1224:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1226
    JR_GTF VGV_S3 9.0 whilebody1219
  and1226:
    JR_GTEQF VGV_S2 9.0 and1227
    JR_GTF VGV_S3 9.0 whilebody1219
  and1227:
    JR_LTEQF VGV_S2 9.0 and1228
    JR_LTF VGV_S3 9.0 whilebody1219
  and1228:
  endwhile1219:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer1229
	DATA8 nos1229
	DATA8 busy1229
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1229 nos1229
	JR_EQ8 0 nos1229 motornotbusy1229
  motorwaiting1229:
	OUTPUT_TEST layer1229 nos1229 busy1229
	JR_EQ8 busy1229 0 motornotbusy1229
	SLEEP
	JR motorwaiting1229
  motornotbusy1229:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1231
	DATA8 nos1231
	DATA8 busy1231
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1231 nos1231
	JR_EQ8 0 nos1231 motornotbusy1231
  motorwaiting1231:
	OUTPUT_TEST layer1231 nos1231 busy1231
	JR_EQ8 busy1231 0 motornotbusy1231
	SLEEP
	JR motorwaiting1231
  motornotbusy1231:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1233:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1234:
  while1235:
    JR_LTEQF VGV_S2 10.0 endwhile1235
  whilebody1235:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1236:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1237:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1235
  endwhile1235:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1239:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1240:
  while1241:
    JR_GTEQF VGV_S2 60.0 endwhile1241
  whilebody1241:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1242:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1243:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1241
  endwhile1241:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1246:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1247
	DATA8 nos1247
	DATA8 busy1247
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1247 nos1247
	JR_EQ8 0 nos1247 motornotbusy1247
  motorwaiting1247:
	OUTPUT_TEST layer1247 nos1247 busy1247
	JR_EQ8 busy1247 0 motornotbusy1247
	SLEEP
	JR motorwaiting1247
  motornotbusy1247:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1249
	DATA8 nos1249
	DATA8 busy1249
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1249 nos1249
	JR_EQ8 0 nos1249 motornotbusy1249
  motorwaiting1249:
	OUTPUT_TEST layer1249 nos1249 busy1249
	JR_EQ8 busy1249 0 motornotbusy1249
	SLEEP
	JR motorwaiting1249
  motornotbusy1249:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1251:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1252:
  while1253:
    JR_LTEQF VGV_S3 10.0 endwhile1253
  whilebody1253:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1254:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1255:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1253
  endwhile1253:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1257:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1258:
  while1259:
    JR_GTEQF VGV_S3 55.0 endwhile1259
  whilebody1259:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1260:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1261:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1259
  endwhile1259:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1264
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1264
    JR_NEQ32 0 tmp1264 alreadylaunched1264
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1264:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1265:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1266:
  while1267:
    JR_LTEQF VGV_S3 10.0 and1269
    JR_GTF VGV_S2 10.0 or1268
  and1269:
    JR_GTEQF VGV_S3 10.0 and1270
    JR_GTF VGV_S2 10.0 or1268
  and1270:
    JR_LTEQF VGV_S3 10.0 endwhile1267
    JR_GTEQF VGV_S2 10.0 endwhile1267
  or1268:
  whilebody1267:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1271:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1272:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1273:
    JR_LTEQF VGV_S3 10.0 and1274
    JR_GTF VGV_S2 10.0 whilebody1267
  and1274:
    JR_GTEQF VGV_S3 10.0 and1275
    JR_GTF VGV_S2 10.0 whilebody1267
  and1275:
    JR_LTEQF VGV_S3 10.0 and1276
    JR_LTF VGV_S2 10.0 whilebody1267
  and1276:
  endwhile1267:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1278
	DATA8 nos1278
	DATA8 busy1278
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1278 nos1278
	JR_EQ8 0 nos1278 motornotbusy1278
  motorwaiting1278:
	OUTPUT_TEST layer1278 nos1278 busy1278
	JR_EQ8 busy1278 0 motornotbusy1278
	SLEEP
	JR motorwaiting1278
  motornotbusy1278:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1279
	DATA8 nos1279
	DATA8 busy1279
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1279 nos1279
	JR_EQ8 0 nos1279 motornotbusy1279
  motorwaiting1279:
	OUTPUT_TEST layer1279 nos1279 busy1279
	JR_EQ8 busy1279 0 motornotbusy1279
	SLEEP
	JR motorwaiting1279
  motornotbusy1279:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1282:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1283:
  while1284:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1284
  whilebody1284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1286:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1287:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1288:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1284
  endwhile1284:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1292
	MOVEF_32 500.0 milliseconds1292
	DATA32 timer1292
	TIMER_WAIT milliseconds1292 timer1292
	TIMER_READY timer1292
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1294
	DATA8 nos1294
	DATA8 busy1294
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1294 nos1294
	JR_EQ8 0 nos1294 motornotbusy1294
  motorwaiting1294:
	OUTPUT_TEST layer1294 nos1294 busy1294
	JR_EQ8 busy1294 0 motornotbusy1294
	SLEEP
	JR motorwaiting1294
  motornotbusy1294:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -80.0
    DATA32 milliseconds1296
	MOVEF_32 2000.0 milliseconds1296
	DATA32 timer1296
	TIMER_WAIT milliseconds1296 timer1296
	TIMER_READY timer1296
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1298
	DATA8 nos1298
	DATA8 busy1298
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1298 nos1298
	JR_EQ8 0 nos1298 motornotbusy1298
  motorwaiting1298:
	OUTPUT_TEST layer1298 nos1298 busy1298
	JR_EQ8 busy1298 0 motornotbusy1298
	SLEEP
	JR motorwaiting1298
  motornotbusy1298:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1299
	DATA8 nos1299
	DATA8 busy1299
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1299 nos1299
	JR_EQ8 0 nos1299 motornotbusy1299
  motorwaiting1299:
	OUTPUT_TEST layer1299 nos1299 busy1299
	JR_EQ8 busy1299 0 motornotbusy1299
	SLEEP
	JR motorwaiting1299
  motornotbusy1299:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1300
	DATA8 nos1300
	DATA8 busy1300
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1300 nos1300
	JR_EQ8 0 nos1300 motornotbusy1300
  motorwaiting1300:
	OUTPUT_TEST layer1300 nos1300 busy1300
	JR_EQ8 busy1300 0 motornotbusy1300
	SLEEP
	JR motorwaiting1300
  motornotbusy1300:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1301:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1302
	DATA8 nos1302
	DATA8 busy1302
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1302 nos1302
	JR_EQ8 0 nos1302 motornotbusy1302
  motorwaiting1302:
	OUTPUT_TEST layer1302 nos1302 busy1302
	JR_EQ8 busy1302 0 motornotbusy1302
	SLEEP
	JR motorwaiting1302
  motornotbusy1302:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1303
	DATA8 nos1303
	DATA8 busy1303
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1303 nos1303
	JR_EQ8 0 nos1303 motornotbusy1303
  motorwaiting1303:
	OUTPUT_TEST layer1303 nos1303 busy1303
	JR_EQ8 busy1303 0 motornotbusy1303
	SLEEP
	JR motorwaiting1303
  motornotbusy1303:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1305:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1306:
  while1307:
    JR_LTEQF VGV_S2 15.0 endwhile1307
  whilebody1307:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1308:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1309:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1307
  endwhile1307:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1312:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1313:
  while1314:
    JR_GTEQF VGV_S2 55.0 endwhile1314
  whilebody1314:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1315:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1316:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1314
  endwhile1314:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1319:
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1320:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1321:
  while1322:
    JR_LTEQF VGV_S3 15.0 and1324
    JR_GTF VGV_S2 15.0 or1323
  and1324:
    JR_GTEQF VGV_S3 15.0 endwhile1322
    JR_GTEQF VGV_S2 15.0 endwhile1322
  or1323:
  whilebody1322:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1325:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1326:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1327:
    JR_LTEQF VGV_S3 15.0 and1328
    JR_GTF VGV_S2 15.0 whilebody1322
  and1328:
    JR_GTEQF VGV_S3 15.0 and1329
    JR_LTF VGV_S2 15.0 whilebody1322
  and1329:
  endwhile1322:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1331:
    CALL MOTOR.RESETCOUNT 'bc'
  while1333:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1337
    DATA8 flag1337
    DIVF F.1 2.0 tmpf1337
    CP_EQF 0.0 2.0 flag1337
    SELECTF flag1337 0.0 tmpf1337 F.0

    JR_GTEQF F.0 200.0 endwhile1333
  whilebody1333:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1338:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1342
    DATA8 flag1342
    DIVF F.1 2.0 tmpf1342
    CP_EQF 0.0 2.0 flag1342
    SELECTF flag1342 0.0 tmpf1342 F.0

    JR_LTF F.0 200.0 whilebody1333
  endwhile1333:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1344:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1345:
    MOVEF_F 1.0 VGV_I
  for1346:
    JR_GTF VGV_I 1.0 endfor1346
  forbody1346:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1347:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1348:
  while1349:
    JR_LTEQF VGV_S3 15.0 and1351
    JR_GTF VGV_S2 15.0 or1350
  and1351:
    JR_GTEQF VGV_S3 15.0 endwhile1349
    JR_GTEQF VGV_S2 15.0 endwhile1349
  or1350:
  whilebody1349:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1352:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1353:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1354:
    JR_LTEQF VGV_S3 15.0 and1355
    JR_GTF VGV_S2 15.0 whilebody1349
  and1355:
    JR_GTEQF VGV_S3 15.0 and1356
    JR_LTF VGV_S2 15.0 whilebody1349
  and1356:
  endwhile1349:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1358
	DATA8 nos1358
	DATA8 busy1358
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1358 nos1358
	JR_EQ8 0 nos1358 motornotbusy1358
  motorwaiting1358:
	OUTPUT_TEST layer1358 nos1358 busy1358
	JR_EQ8 busy1358 0 motornotbusy1358
	SLEEP
	JR motorwaiting1358
  motornotbusy1358:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1346
  endfor1346:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1361:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1362:
    MOVEF_F 80.0 VGV_J
  while1363:
    JR_LTEQF VGV_S3 15.0 endwhile1363
  whilebody1363:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1364:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1365:
    JR_LTEQF VGV_J 30.0 else1366_1
    SUBF VGV_J 0.1 VGV_J
  else1366_1:
  endif1366:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody1363
  endwhile1363:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1370:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1371:
    MOVEF_F 80.0 VGV_J
  while1372:
    JR_GTEQF VGV_S3 25.0 endwhile1372
  whilebody1372:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1373:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1374:
    JR_LTEQF VGV_J 30.0 else1375_1
    SUBF VGV_J 0.1 VGV_J
  else1375_1:
  endif1375:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 25.0 whilebody1372
  endwhile1372:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1380:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1384
    DATA8 flag1384
    DIVF F.1 2.0 tmpf1384
    CP_EQF 0.0 2.0 flag1384
    SELECTF flag1384 0.0 tmpf1384 F.0

    JR_GTEQF F.0 50.0 endwhile1380
  whilebody1380:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1385:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1386:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1387:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1388:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1390
    DATA8 flag1390
    DIVF F.1 2.0 tmpf1390
    CP_EQF 0.0 2.0 flag1390
    SELECTF flag1390 0.0 tmpf1390 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1402
    DATA8 flag1402
    DIVF F.1 2.0 tmpf1402
    CP_EQF 0.0 2.0 flag1402
    SELECTF flag1402 0.0 tmpf1402 F.0

    JR_LTF F.0 50.0 whilebody1380
  endwhile1380:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1404
	DATA8 nos1404
	DATA8 busy1404
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1404 nos1404
	JR_EQ8 0 nos1404 motornotbusy1404
  motorwaiting1404:
	OUTPUT_TEST layer1404 nos1404 busy1404
	JR_EQ8 busy1404 0 motornotbusy1404
	SLEEP
	JR motorwaiting1404
  motornotbusy1404:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1406
	MOVEF_32 500.0 milliseconds1406
	DATA32 timer1406
	TIMER_WAIT milliseconds1406 timer1406
	TIMER_READY timer1406
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 50.0 'true'

	DATA8 layer1408
	DATA8 nos1408
	DATA8 busy1408
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1408 nos1408
	JR_EQ8 0 nos1408 motornotbusy1408
  motorwaiting1408:
	OUTPUT_TEST layer1408 nos1408 busy1408
	JR_EQ8 busy1408 0 motornotbusy1408
	SLEEP
	JR motorwaiting1408
  motornotbusy1408:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 320.0 'true'

	DATA8 layer1409
	DATA8 nos1409
	DATA8 busy1409
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1409 nos1409
	JR_EQ8 0 nos1409 motornotbusy1409
  motorwaiting1409:
	OUTPUT_TEST layer1409 nos1409 busy1409
	JR_EQ8 busy1409 0 motornotbusy1409
	SLEEP
	JR motorwaiting1409
  motornotbusy1409:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1410:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1411:
  while1412:
    JR_LTEQF VGV_S3 10.0 and1414
    JR_GTF VGV_S2 10.0 or1413
  and1414:
    JR_GTEQF VGV_S3 10.0 and1415
    JR_GTF VGV_S2 10.0 or1413
  and1415:
    JR_LTEQF VGV_S3 6.0 endwhile1412
    JR_GTEQF VGV_S2 6.0 endwhile1412
  or1413:
  whilebody1412:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1416:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1417:
    CALL MOTOR.STARTPOWER 'bc' 20.0
    JR_LTEQF VGV_S3 10.0 and1419
    JR_GTF VGV_S2 10.0 whilebody1412
  and1419:
    JR_GTEQF VGV_S3 10.0 and1420
    JR_GTF VGV_S2 10.0 whilebody1412
  and1420:
    JR_LTEQF VGV_S3 6.0 and1421
    JR_LTF VGV_S2 6.0 whilebody1412
  and1421:
  endwhile1412:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1423
	DATA8 nos1423
	DATA8 busy1423
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1423 nos1423
	JR_EQ8 0 nos1423 motornotbusy1423
  motorwaiting1423:
	OUTPUT_TEST layer1423 nos1423 busy1423
	JR_EQ8 busy1423 0 motornotbusy1423
	SLEEP
	JR motorwaiting1423
  motornotbusy1423:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1425:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1426:
  while1427:
    JR_LTEQF VGV_S3 10.0 endwhile1427
  whilebody1427:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1428:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1429:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1427
  endwhile1427:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1432:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1433:
  while1434:
    JR_GTEQF VGV_S3 60.0 endwhile1434
  whilebody1434:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1435:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1436:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1434
  endwhile1434:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1439
	MOVEF_32 100.0 milliseconds1439
	DATA32 timer1439
	TIMER_WAIT milliseconds1439 timer1439
	TIMER_READY timer1439
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1440:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1441:
  while1442:
    JR_LTEQF VGV_S3 15.0 and1444
    JR_GTF VGV_S2 15.0 or1443
  and1444:
    JR_GTEQF VGV_S3 15.0 endwhile1442
    JR_GTEQF VGV_S2 15.0 endwhile1442
  or1443:
  whilebody1442:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1445:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1446:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1447:
    JR_LTEQF VGV_S3 15.0 and1448
    JR_GTF VGV_S2 15.0 whilebody1442
  and1448:
    JR_GTEQF VGV_S3 15.0 and1449
    JR_LTF VGV_S2 15.0 whilebody1442
  and1449:
  endwhile1442:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_PR_0:CALLSUB1451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1451:
    CALL MOTOR.RESETCOUNT 'bc'
  while1453:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1457
    DATA8 flag1457
    DIVF F.1 2.0 tmpf1457
    CP_EQF 0.0 2.0 flag1457
    SELECTF flag1457 0.0 tmpf1457 F.0

    JR_GTEQF F.0 200.0 endwhile1453
  whilebody1453:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1458:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1462
    DATA8 flag1462
    DIVF F.1 2.0 tmpf1462
    CP_EQF 0.0 2.0 flag1462
    SELECTF flag1462 0.0 tmpf1462 F.0

    JR_LTF F.0 200.0 whilebody1453
  endwhile1453:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1464:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1465:
    MOVEF_F 1.0 VGV_I
  for1466:
    JR_GTF VGV_I 2.0 endfor1466
  forbody1466:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1467
	DATA8 nos1467
	DATA8 busy1467
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1467 nos1467
	JR_EQ8 0 nos1467 motornotbusy1467
  motorwaiting1467:
	OUTPUT_TEST layer1467 nos1467 busy1467
	JR_EQ8 busy1467 0 motornotbusy1467
	SLEEP
	JR motorwaiting1467
  motornotbusy1467:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1468:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1469:
  while1470:
    JR_LTEQF VGV_S3 15.0 and1472
    JR_GTF VGV_S2 15.0 or1471
  and1472:
    JR_GTEQF VGV_S3 15.0 endwhile1470
    JR_GTEQF VGV_S2 15.0 endwhile1470
  or1471:
  whilebody1470:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1473:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1474:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1475:
    JR_LTEQF VGV_S3 15.0 and1476
    JR_GTF VGV_S2 15.0 whilebody1470
  and1476:
    JR_GTEQF VGV_S3 15.0 and1477
    JR_LTF VGV_S2 15.0 whilebody1470
  and1477:
  endwhile1470:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1466
  endfor1466:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1480
	DATA8 nos1480
	DATA8 busy1480
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1480 nos1480
	JR_EQ8 0 nos1480 motornotbusy1480
  motorwaiting1480:
	OUTPUT_TEST layer1480 nos1480 busy1480
	JR_EQ8 busy1480 0 motornotbusy1480
	SLEEP
	JR motorwaiting1480
  motornotbusy1480:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1482:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1483:
    MOVEF_F 80.0 VGV_J
  while1484:
    JR_LTEQF VGV_S3 10.0 endwhile1484
  whilebody1484:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1485:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1486:
    JR_LTEQF VGV_J 30.0 else1487_1
    SUBF VGV_J 0.1 VGV_J
  else1487_1:
  endif1487:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1484
  endwhile1484:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1491:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1492:
    MOVEF_F 80.0 VGV_J
  while1493:
    JR_GTEQF VGV_S3 15.0 endwhile1493
  whilebody1493:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1494:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1495:
    JR_LTEQF VGV_J 30.0 else1496_1
    SUBF VGV_J 0.1 VGV_J
  else1496_1:
  endif1496:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 15.0 whilebody1493
  endwhile1493:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1501:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1505
    DATA8 flag1505
    DIVF F.1 2.0 tmpf1505
    CP_EQF 0.0 2.0 flag1505
    SELECTF flag1505 0.0 tmpf1505 F.0

    JR_GTEQF F.0 50.0 endwhile1501
  whilebody1501:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1506:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1507:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1508:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1509:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1511
    DATA8 flag1511
    DIVF F.1 2.0 tmpf1511
    CP_EQF 0.0 2.0 flag1511
    SELECTF flag1511 0.0 tmpf1511 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1523
    DATA8 flag1523
    DIVF F.1 2.0 tmpf1523
    CP_EQF 0.0 2.0 flag1523
    SELECTF flag1523 0.0 tmpf1523 F.0

    JR_LTF F.0 50.0 whilebody1501
  endwhile1501:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 70.0 'true'

	DATA8 layer1525
	DATA8 nos1525
	DATA8 busy1525
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1525 nos1525
	JR_EQ8 0 nos1525 motornotbusy1525
  motorwaiting1525:
	OUTPUT_TEST layer1525 nos1525 busy1525
	JR_EQ8 busy1525 0 motornotbusy1525
	SLEEP
	JR motorwaiting1525
  motornotbusy1525:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1527
	MOVEF_32 500.0 milliseconds1527
	DATA32 timer1527
	TIMER_WAIT milliseconds1527 timer1527
	TIMER_READY timer1527
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1530:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1534
    DATA8 flag1534
    DIVF F.1 2.0 tmpf1534
    CP_EQF 0.0 2.0 flag1534
    SELECTF flag1534 0.0 tmpf1534 F.0

    JR_LTEQF F.0 -200.0 endwhile1530
  whilebody1530:
    CALL MOTOR.STARTPOWER 'bc' -20.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1539
    DATA8 flag1539
    DIVF F.1 2.0 tmpf1539
    CP_EQF 0.0 2.0 flag1539
    SELECTF flag1539 0.0 tmpf1539 F.0

    JR_GTF F.0 -200.0 whilebody1530
  endwhile1530:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1541
	DATA8 nos1541
	DATA8 busy1541
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1541 nos1541
	JR_EQ8 0 nos1541 motornotbusy1541
  motorwaiting1541:
	OUTPUT_TEST layer1541 nos1541 busy1541
	JR_EQ8 busy1541 0 motornotbusy1541
	SLEEP
	JR motorwaiting1541
  motornotbusy1541:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1543:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1544:
  while1545:
    JR_LTEQF VGV_S3 10.0 and1547
    JR_GTF VGV_S2 10.0 or1546
  and1547:
    JR_LTEQF VGV_S3 10.0 and1548
    JR_LTF VGV_S2 10.0 or1546
  and1548:
    JR_GTEQF VGV_S3 10.0 endwhile1545
    JR_LTEQF VGV_S2 10.0 endwhile1545
  or1546:
  whilebody1545:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1549:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1550:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1552
    JR_GTF VGV_S2 10.0 whilebody1545
  and1552:
    JR_LTEQF VGV_S3 10.0 and1553
    JR_LTF VGV_S2 10.0 whilebody1545
  and1553:
    JR_GTEQF VGV_S3 10.0 and1554
    JR_GTF VGV_S2 10.0 whilebody1545
  and1554:
  endwhile1545:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1556
	DATA8 nos1556
	DATA8 busy1556
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1556 nos1556
	JR_EQ8 0 nos1556 motornotbusy1556
  motorwaiting1556:
	OUTPUT_TEST layer1556 nos1556 busy1556
	JR_EQ8 busy1556 0 motornotbusy1556
	SLEEP
	JR motorwaiting1556
  motornotbusy1556:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1557:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1558:
  while1559:
    JR_LTEQF VGV_S3 10.0 endwhile1559
  whilebody1559:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1560:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1561:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1559
  endwhile1559:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1563:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1564:
  while1565:
    JR_GTEQF VGV_S3 15.0 endwhile1565
  whilebody1565:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1566:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1567:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1565
  endwhile1565:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1570:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1571:
  while1572:
    JR_LTEQF VGV_S3 15.0 and1574
    JR_GTF VGV_S2 15.0 or1573
  and1574:
    JR_GTEQF VGV_S3 15.0 endwhile1572
    JR_GTEQF VGV_S2 15.0 endwhile1572
  or1573:
  whilebody1572:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1575:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1576:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1577:
    JR_LTEQF VGV_S3 15.0 and1578
    JR_GTF VGV_S2 15.0 whilebody1572
  and1578:
    JR_GTEQF VGV_S3 15.0 and1579
    JR_LTF VGV_S2 15.0 whilebody1572
  and1579:
  endwhile1572:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1581
	DATA8 nos1581
	DATA8 busy1581
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1581 nos1581
	JR_EQ8 0 nos1581 motornotbusy1581
  motorwaiting1581:
	OUTPUT_TEST layer1581 nos1581 busy1581
	JR_EQ8 busy1581 0 motornotbusy1581
	SLEEP
	JR motorwaiting1581
  motornotbusy1581:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1582:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1583:
  while1584:
    JR_LTEQF VGV_S3 15.0 endwhile1584
  whilebody1584:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1585:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1586:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1584
  endwhile1584:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1589:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1590:
  while1591:
    JR_GTEQF VGV_S3 15.0 endwhile1591
  whilebody1591:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1592:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1593:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1591
  endwhile1591:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1597:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile1597
  whilebody1597:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1599:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody1597
  endwhile1597:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1602:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1603:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1604:
    JR_GTF VGV_I 3.0 endfor1604
  forbody1604:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1605:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1606:
  while1607:
    JR_LTEQF VGV_S3 15.0 and1609
    JR_GTF VGV_S2 15.0 or1608
  and1609:
    JR_GTEQF VGV_S3 15.0 endwhile1607
    JR_GTEQF VGV_S2 15.0 endwhile1607
  or1608:
  whilebody1607:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1610:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1611:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1612:
    JR_LTEQF VGV_S3 15.0 and1613
    JR_GTF VGV_S2 15.0 whilebody1607
  and1613:
    JR_GTEQF VGV_S3 15.0 and1614
    JR_LTF VGV_S2 15.0 whilebody1607
  and1614:
  endwhile1607:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1616
	DATA8 nos1616
	DATA8 busy1616
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1616 nos1616
	JR_EQ8 0 nos1616 motornotbusy1616
  motorwaiting1616:
	OUTPUT_TEST layer1616 nos1616 busy1616
	JR_EQ8 busy1616 0 motornotbusy1616
	SLEEP
	JR motorwaiting1616
  motornotbusy1616:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1604
  endfor1604:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1619
	DATA8 nos1619
	DATA8 busy1619
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1619 nos1619
	JR_EQ8 0 nos1619 motornotbusy1619
  motorwaiting1619:
	OUTPUT_TEST layer1619 nos1619 busy1619
	JR_EQ8 busy1619 0 motornotbusy1619
	SLEEP
	JR motorwaiting1619
  motornotbusy1619:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1620
	DATA8 nos1620
	DATA8 busy1620
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1620 nos1620
	JR_EQ8 0 nos1620 motornotbusy1620
  motorwaiting1620:
	OUTPUT_TEST layer1620 nos1620 busy1620
	JR_EQ8 busy1620 0 motornotbusy1620
	SLEEP
	JR motorwaiting1620
  motornotbusy1620:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1622
	MOVEF_32 500.0 milliseconds1622
	DATA32 timer1622
	TIMER_WAIT milliseconds1622 timer1622
	TIMER_READY timer1622
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 80.0 'true'

	DATA8 layer1624
	DATA8 nos1624
	DATA8 busy1624
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1624 nos1624
	JR_EQ8 0 nos1624 motornotbusy1624
  motorwaiting1624:
	OUTPUT_TEST layer1624 nos1624 busy1624
	JR_EQ8 busy1624 0 motornotbusy1624
	SLEEP
	JR motorwaiting1624
  motornotbusy1624:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 380.0 'true'

	DATA8 layer1625
	DATA8 nos1625
	DATA8 busy1625
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1625 nos1625
	JR_EQ8 0 nos1625 motornotbusy1625
  motorwaiting1625:
	OUTPUT_TEST layer1625 nos1625 busy1625
	JR_EQ8 busy1625 0 motornotbusy1625
	SLEEP
	JR motorwaiting1625
  motornotbusy1625:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer1626
	DATA8 nos1626
	DATA8 busy1626
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1626 nos1626
	JR_EQ8 0 nos1626 motornotbusy1626
  motorwaiting1626:
	OUTPUT_TEST layer1626 nos1626 busy1626
	JR_EQ8 busy1626 0 motornotbusy1626
	SLEEP
	JR motorwaiting1626
  motornotbusy1626:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1627
	DATA8 nos1627
	DATA8 busy1627
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1627 nos1627
	JR_EQ8 0 nos1627 motornotbusy1627
  motorwaiting1627:
	OUTPUT_TEST layer1627 nos1627 busy1627
	JR_EQ8 busy1627 0 motornotbusy1627
	SLEEP
	JR motorwaiting1627
  motornotbusy1627:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1628
	DATA8 nos1628
	DATA8 busy1628
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1628 nos1628
	JR_EQ8 0 nos1628 motornotbusy1628
  motorwaiting1628:
	OUTPUT_TEST layer1628 nos1628 busy1628
	JR_EQ8 busy1628 0 motornotbusy1628
	SLEEP
	JR motorwaiting1628
  motornotbusy1628:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1629:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1630:
  while1631:
    JR_LTEQF VGV_S3 10.0 and1633
    JR_GTF VGV_S2 10.0 or1632
  and1633:
    JR_GTEQF VGV_S3 10.0 and1634
    JR_GTF VGV_S2 10.0 or1632
  and1634:
    JR_LTEQF VGV_S3 10.0 endwhile1631
    JR_GTEQF VGV_S2 10.0 endwhile1631
  or1632:
  whilebody1631:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1635:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1636:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1638
    JR_GTF VGV_S2 10.0 whilebody1631
  and1638:
    JR_GTEQF VGV_S3 10.0 and1639
    JR_GTF VGV_S2 10.0 whilebody1631
  and1639:
    JR_LTEQF VGV_S3 10.0 and1640
    JR_LTF VGV_S2 10.0 whilebody1631
  and1640:
  endwhile1631:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1642
	DATA8 nos1642
	DATA8 busy1642
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1642 nos1642
	JR_EQ8 0 nos1642 motornotbusy1642
  motorwaiting1642:
	OUTPUT_TEST layer1642 nos1642 busy1642
	JR_EQ8 busy1642 0 motornotbusy1642
	SLEEP
	JR motorwaiting1642
  motornotbusy1642:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1644
	DATA8 nos1644
	DATA8 busy1644
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1644 nos1644
	JR_EQ8 0 nos1644 motornotbusy1644
  motorwaiting1644:
	OUTPUT_TEST layer1644 nos1644 busy1644
	JR_EQ8 busy1644 0 motornotbusy1644
	SLEEP
	JR motorwaiting1644
  motornotbusy1644:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1645:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1646:
  while1647:
    JR_LTEQF VGV_S3 15.0 endwhile1647
  whilebody1647:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1648:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1649:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1647
  endwhile1647:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1652:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1653:
  while1654:
    JR_GTEQF VGV_S3 60.0 endwhile1654
  whilebody1654:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1655:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1656:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1654
  endwhile1654:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1659:
    JR_GTF VGV_I 1.0 endfor1659
  forbody1659:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1660:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1661:
  while1662:
    JR_LTEQF VGV_S3 10.0 and1664
    JR_GTF VGV_S2 10.0 or1663
  and1664:
    JR_GTEQF VGV_S3 10.0 endwhile1662
    JR_GTEQF VGV_S2 10.0 endwhile1662
  or1663:
  whilebody1662:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1665:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1666:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1667:
    JR_LTEQF VGV_S3 10.0 and1668
    JR_GTF VGV_S2 10.0 whilebody1662
  and1668:
    JR_GTEQF VGV_S3 10.0 and1669
    JR_LTF VGV_S2 10.0 whilebody1662
  and1669:
  endwhile1662:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1671
	DATA8 nos1671
	DATA8 busy1671
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1671 nos1671
	JR_EQ8 0 nos1671 motornotbusy1671
  motorwaiting1671:
	OUTPUT_TEST layer1671 nos1671 busy1671
	JR_EQ8 busy1671 0 motornotbusy1671
	SLEEP
	JR motorwaiting1671
  motornotbusy1671:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1659
  endfor1659:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1674:
    CALL MOTOR.RESETCOUNT 'bc'
  while1676:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1680
    DATA8 flag1680
    DIVF F.1 2.0 tmpf1680
    CP_EQF 0.0 2.0 flag1680
    SELECTF flag1680 0.0 tmpf1680 F.0

    JR_GTEQF F.0 220.0 endwhile1676
  whilebody1676:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1681:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1685
    DATA8 flag1685
    DIVF F.1 2.0 tmpf1685
    CP_EQF 0.0 2.0 flag1685
    SELECTF flag1685 0.0 tmpf1685 F.0

    JR_LTF F.0 220.0 whilebody1676
  endwhile1676:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1687
	MOVEF_32 100.0 milliseconds1687
	DATA32 timer1687
	TIMER_WAIT milliseconds1687 timer1687
	TIMER_READY timer1687
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1689
	MOVEF_32 500.0 milliseconds1689
	DATA32 timer1689
	TIMER_WAIT milliseconds1689 timer1689
	TIMER_READY timer1689
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1691:
    MOVEF_F 1300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1692
    DATA8 flag1692
    DIVF 360.0 VGV_L tmpf1692
    CP_EQF 0.0 VGV_L flag1692
    SELECTF flag1692 0.0 tmpf1692 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1695:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1695
  whilebody1695:
    JR_GTEQF VGV_SPEED 80.0 else1697_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1697_1:
  endif1697:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1699:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1695
  endwhile1695:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1702:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1703:
    MOVEF_F 1400.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1704:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1706:
    CALL MOTOR.RESETCOUNT 'bc'
  while1708:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1712
    DATA8 flag1712
    DIVF F.1 2.0 tmpf1712
    CP_EQF 0.0 2.0 flag1712
    SELECTF flag1712 0.0 tmpf1712 F.0

    JR_GTEQF F.0 200.0 endwhile1708
  whilebody1708:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1713:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1714:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1715:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1719
    DATA8 flag1719
    DIVF F.1 2.0 tmpf1719
    CP_EQF 0.0 2.0 flag1719
    SELECTF flag1719 0.0 tmpf1719 F.0

    JR_LTF F.0 200.0 whilebody1708
  endwhile1708:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1722
	MOVEF_32 500.0 milliseconds1722
	DATA32 timer1722
	TIMER_WAIT milliseconds1722 timer1722
	TIMER_READY timer1722
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer1724
	DATA8 nos1724
	DATA8 busy1724
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1724 nos1724
	JR_EQ8 0 nos1724 motornotbusy1724
  motorwaiting1724:
	OUTPUT_TEST layer1724 nos1724 busy1724
	JR_EQ8 busy1724 0 motornotbusy1724
	SLEEP
	JR motorwaiting1724
  motornotbusy1724:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1725:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1726:
    DATA32 tmp1727
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1727
    JR_NEQ32 0 tmp1727 alreadylaunched1727
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1727:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1728:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1729:
  while1730:
    JR_LTEQF VGV_S3 15.0 and1732
    JR_GTF VGV_S2 15.0 or1731
  and1732:
    JR_GTEQF VGV_S3 15.0 endwhile1730
    JR_GTEQF VGV_S2 15.0 endwhile1730
  or1731:
  whilebody1730:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1733:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1734:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1735:
    JR_LTEQF VGV_S3 15.0 and1736
    JR_GTF VGV_S2 15.0 whilebody1730
  and1736:
    JR_GTEQF VGV_S3 15.0 and1737
    JR_LTF VGV_S2 15.0 whilebody1730
  and1737:
  endwhile1730:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1739
	DATA8 nos1739
	DATA8 busy1739
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1739 nos1739
	JR_EQ8 0 nos1739 motornotbusy1739
  motorwaiting1739:
	OUTPUT_TEST layer1739 nos1739 busy1739
	JR_EQ8 busy1739 0 motornotbusy1739
	SLEEP
	JR motorwaiting1739
  motornotbusy1739:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1740:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1741:
  while1742:
    JR_LTEQF VGV_S3 15.0 and1744
    JR_GTF VGV_S2 15.0 or1743
  and1744:
    JR_GTEQF VGV_S3 15.0 endwhile1742
    JR_GTEQF VGV_S2 15.0 endwhile1742
  or1743:
  whilebody1742:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1745:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1746:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1747:
    JR_LTEQF VGV_S3 15.0 and1748
    JR_GTF VGV_S2 15.0 whilebody1742
  and1748:
    JR_GTEQF VGV_S3 15.0 and1749
    JR_LTF VGV_S2 15.0 whilebody1742
  and1749:
  endwhile1742:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1751
	DATA8 nos1751
	DATA8 busy1751
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1751 nos1751
	JR_EQ8 0 nos1751 motornotbusy1751
  motorwaiting1751:
	OUTPUT_TEST layer1751 nos1751 busy1751
	JR_EQ8 busy1751 0 motornotbusy1751
	SLEEP
	JR motorwaiting1751
  motornotbusy1751:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer1752
	DATA8 nos1752
	DATA8 busy1752
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1752 nos1752
	JR_EQ8 0 nos1752 motornotbusy1752
  motorwaiting1752:
	OUTPUT_TEST layer1752 nos1752 busy1752
	JR_EQ8 busy1752 0 motornotbusy1752
	SLEEP
	JR motorwaiting1752
  motornotbusy1752:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1754 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1754:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1755:
  while1756:
    JR_LTEQF VGV_S2 10.0 endwhile1756
  whilebody1756:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1757:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1758:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1756
  endwhile1756:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1761:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1762:
  while1763:
    JR_GTEQF VGV_S2 60.0 endwhile1763
  whilebody1763:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1764:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1765:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1763
  endwhile1763:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1769:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1773
    DATA8 flag1773
    DIVF F.1 2.0 tmpf1773
    CP_EQF 0.0 2.0 flag1773
    SELECTF flag1773 0.0 tmpf1773 F.0

    JR_GTEQF F.0 300.0 endwhile1769
  whilebody1769:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1774:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1775:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1776:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1780
    DATA8 flag1780
    DIVF F.1 2.0 tmpf1780
    CP_EQF 0.0 2.0 flag1780
    SELECTF flag1780 0.0 tmpf1780 F.0

    JR_LTF F.0 300.0 whilebody1769
  endwhile1769:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1782:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1783:
  while1784:
    JR_LTEQF VGV_S3 10.0 and1786
    JR_GTF VGV_S2 10.0 or1785
  and1786:
    JR_GTEQF VGV_S3 10.0 endwhile1784
    JR_GTEQF VGV_S2 10.0 endwhile1784
  or1785:
  whilebody1784:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1787:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1788:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1789:
    JR_LTEQF VGV_S3 10.0 and1790
    JR_GTF VGV_S2 10.0 whilebody1784
  and1790:
    JR_GTEQF VGV_S3 10.0 and1791
    JR_LTF VGV_S2 10.0 whilebody1784
  and1791:
  endwhile1784:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1793
	DATA8 no1793
	DATA8 mode81793
	
	MOVEF_8 1.0 no1793
	SUB8 no1793 1 no1793
	DIV8 no1793 4 layer1793
	MATH MOD8 no1793 4 no1793

	MOVEF_8 2.0 mode81793
	
	INPUT_DEVICE READY_RAW layer1793 no1793 0 mode81793 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1800
    DATA8 flag1800
    DIVF VGV_SRED 255.0 tmpf1800
    CP_EQF 0.0 255.0 flag1800
    SELECTF flag1800 0.0 tmpf1800 VGV_SRED

    DATAF tmpf1801
    DATA8 flag1801
    DIVF VGV_SGREEN 255.0 tmpf1801
    CP_EQF 0.0 255.0 flag1801
    SELECTF flag1801 0.0 tmpf1801 VGV_SGREEN

    DATAF tmpf1802
    DATA8 flag1802
    DIVF VGV_SBLUE 255.0 tmpf1802
    CP_EQF 0.0 255.0 flag1802
    SELECTF flag1802 0.0 tmpf1802 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1803_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1803_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1803
  else1803_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1803_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1803_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1803
  else1803_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1803_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1803_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1803_3:
  endif1803:
    JR_GTEQF VGV_SRED VGV_SGREEN else1804_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1804_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1804
  else1804_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1804_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1804_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1804
  else1804_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1804_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1804_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1804_3:
  endif1804:
    JR_NEQF VGV_MAX VGV_MIN else1805_1
    MOVEF_F 0.0 VGV_H
    JR endif1805
  else1805_1:
    JR_NEQF VGV_SRED VGV_MAX else1806_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1807_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1811
    DATA8 flag1811
    DIVF F.0 F.1 tmpf1811
    CP_EQF 0.0 F.1 flag1811
    SELECTF flag1811 0.0 tmpf1811 VGV_H

    JR endif1807
  else1807_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1815
    DATA8 flag1815
    DIVF F.1 F.2 tmpf1815
    CP_EQF 0.0 F.2 flag1815
    SELECTF flag1815 0.0 tmpf1815 F.0

    ADDF F.0 360.0 VGV_H
  else1807_2:
  endif1807:
    JR endif1806
  else1806_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1817_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1821
    DATA8 flag1821
    DIVF F.1 F.2 tmpf1821
    CP_EQF 0.0 F.2 flag1821
    SELECTF flag1821 0.0 tmpf1821 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1817
  else1817_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1826
    DATA8 flag1826
    DIVF F.1 F.2 tmpf1826
    CP_EQF 0.0 F.2 flag1826
    SELECTF flag1826 0.0 tmpf1826 F.0

    ADDF F.0 240.0 VGV_H
  else1817_2:
  endif1817:
  else1806_2:
  endif1806:
  else1805_2:
  endif1805:
    JR_NEQF VGV_MAX 0.0 else1828_1
    MOVEF_F 0.0 VGV_S
    JR endif1828
  else1828_1:
    DATAF tmpf1829
    DATA8 flag1829
    DIVF VGV_MIN VGV_MAX tmpf1829
    CP_EQF 0.0 VGV_MAX flag1829
    SELECTF flag1829 0.0 tmpf1829 F.0

    SUBF 1.0 F.0 VGV_S
  else1828_2:
  endif1828:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1838
	DATA8 no1838
	DATA8 mode81838
	
	MOVEF_8 1.0 no1838
	SUB8 no1838 1 no1838
	DIV8 no1838 4 layer1838
	MATH MOD8 no1838 4 no1838

	MOVEF_8 2.0 mode81838
	
	INPUT_DEVICE READY_RAW layer1838 no1838 0 mode81838 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1839:
    JR_GTF VGV_P 100.0 endfor1839
  forbody1839:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1840:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1839
  endfor1839:
    DATAF tmpf1845
    DATA8 flag1845
    DIVF VGV_X 100.0 tmpf1845
    CP_EQF 0.0 100.0 flag1845
    SELECTF flag1845 0.0 tmpf1845 VGV_H

    DATAF tmpf1846
    DATA8 flag1846
    DIVF VGV_Z 100.0 tmpf1846
    CP_EQF 0.0 100.0 flag1846
    SELECTF flag1846 0.0 tmpf1846 VGV_S

    DATAF tmpf1847
    DATA8 flag1847
    DIVF VGV_D 100.0 tmpf1847
    CP_EQF 0.0 100.0 flag1847
    SELECTF flag1847 0.0 tmpf1847 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1855
	DATA8 no1855
	DATA8 mode81855
	
	MOVEF_8 1.0 no1855
	SUB8 no1855 1 no1855
	DIV8 no1855 4 layer1855
	MATH MOD8 no1855 4 no1855

	MOVEF_8 2.0 mode81855
	
	INPUT_DEVICE READY_RAW layer1855 no1855 0 mode81855 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1862
    DATA8 flag1862
    DIVF VGV_SRED 255.0 tmpf1862
    CP_EQF 0.0 255.0 flag1862
    SELECTF flag1862 0.0 tmpf1862 VGV_SRED

    DATAF tmpf1863
    DATA8 flag1863
    DIVF VGV_SGREEN 255.0 tmpf1863
    CP_EQF 0.0 255.0 flag1863
    SELECTF flag1863 0.0 tmpf1863 VGV_SGREEN

    DATAF tmpf1864
    DATA8 flag1864
    DIVF VGV_SBLUE 255.0 tmpf1864
    CP_EQF 0.0 255.0 flag1864
    SELECTF flag1864 0.0 tmpf1864 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1865_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1865_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1865
  else1865_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1865_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1865_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1865
  else1865_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1865_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1865_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1865_3:
  endif1865:
    JR_GTEQF VGV_SRED VGV_SGREEN else1866_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1866_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1866
  else1866_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1866_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1866_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1866
  else1866_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1866_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1866_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1866_3:
  endif1866:
    JR_NEQF VGV_MAX VGV_MIN else1867_1
    MOVEF_F 0.0 VGV_H
    JR endif1867
  else1867_1:
    JR_NEQF VGV_SRED VGV_MAX else1868_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1869_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1873
    DATA8 flag1873
    DIVF F.0 F.1 tmpf1873
    CP_EQF 0.0 F.1 flag1873
    SELECTF flag1873 0.0 tmpf1873 VGV_H

    JR endif1869
  else1869_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1877
    DATA8 flag1877
    DIVF F.1 F.2 tmpf1877
    CP_EQF 0.0 F.2 flag1877
    SELECTF flag1877 0.0 tmpf1877 F.0

    ADDF F.0 360.0 VGV_H
  else1869_2:
  endif1869:
    JR endif1868
  else1868_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1879_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1883
    DATA8 flag1883
    DIVF F.1 F.2 tmpf1883
    CP_EQF 0.0 F.2 flag1883
    SELECTF flag1883 0.0 tmpf1883 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1879
  else1879_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1888
    DATA8 flag1888
    DIVF F.1 F.2 tmpf1888
    CP_EQF 0.0 F.2 flag1888
    SELECTF flag1888 0.0 tmpf1888 F.0

    ADDF F.0 240.0 VGV_H
  else1879_2:
  endif1879:
  else1868_2:
  endif1868:
  else1867_2:
  endif1867:
    JR_NEQF VGV_MAX 0.0 else1890_1
    MOVEF_F 0.0 VGV_S
    JR endif1890
  else1890_1:
    DATAF tmpf1891
    DATA8 flag1891
    DIVF VGV_MIN VGV_MAX tmpf1891
    CP_EQF 0.0 VGV_MAX flag1891
    SELECTF flag1891 0.0 tmpf1891 F.0

    SUBF 1.0 F.0 VGV_S
  else1890_2:
  endif1890:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1895
    JR_LTF VGV_H 360.0 or1894
  and1895:
    JR_LTF VGV_H 0.0 else1893_1
    JR_GTF VGV_H 20.0 else1893_1
    JR_LTEQF VGV_S 0.3 else1893_1
    JR_GTF VGV_S 1.0 else1893_1
    JR_LTEQF VGV_V 0.025 else1893_1
    JR_GTEQF VGV_V 0.1 else1893_1
  or1894:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1893
  else1893_1:
    JR_LTF VGV_H 20.0 else1893_2
    JR_GTEQF VGV_H 60.0 else1893_2
    JR_LTF VGV_S 0.4 else1893_2
    JR_LTEQF VGV_V 0.03 else1893_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1893
  else1893_2:
    MOVEF_F 6.0 VGV_COLOR
  else1893_3:
  endif1893:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1896
	DATA8 no1896
	DATA8 mode81896
	
	MOVEF_8 1.0 no1896
	SUB8 no1896 1 no1896
	DIV8 no1896 4 layer1896
	MATH MOD8 no1896 4 no1896

	MOVEF_8 2.0 mode81896
	
	INPUT_DEVICE READY_RAW layer1896 no1896 0 mode81896 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1903
    DATA8 flag1903
    DIVF VGV_SRED 255.0 tmpf1903
    CP_EQF 0.0 255.0 flag1903
    SELECTF flag1903 0.0 tmpf1903 VGV_SRED

    DATAF tmpf1904
    DATA8 flag1904
    DIVF VGV_SGREEN 255.0 tmpf1904
    CP_EQF 0.0 255.0 flag1904
    SELECTF flag1904 0.0 tmpf1904 VGV_SGREEN

    DATAF tmpf1905
    DATA8 flag1905
    DIVF VGV_SBLUE 255.0 tmpf1905
    CP_EQF 0.0 255.0 flag1905
    SELECTF flag1905 0.0 tmpf1905 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1906_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1906_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1906
  else1906_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1906_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1906_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1906
  else1906_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1906_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1906_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1906_3:
  endif1906:
    JR_GTEQF VGV_SRED VGV_SGREEN else1907_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1907_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1907
  else1907_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1907_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1907_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1907
  else1907_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1907_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1907_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1907_3:
  endif1907:
    JR_NEQF VGV_MAX VGV_MIN else1908_1
    MOVEF_F 0.0 VGV_H
    JR endif1908
  else1908_1:
    JR_NEQF VGV_SRED VGV_MAX else1909_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1910_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1914
    DATA8 flag1914
    DIVF F.0 F.1 tmpf1914
    CP_EQF 0.0 F.1 flag1914
    SELECTF flag1914 0.0 tmpf1914 VGV_H

    JR endif1910
  else1910_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1918
    DATA8 flag1918
    DIVF F.1 F.2 tmpf1918
    CP_EQF 0.0 F.2 flag1918
    SELECTF flag1918 0.0 tmpf1918 F.0

    ADDF F.0 360.0 VGV_H
  else1910_2:
  endif1910:
    JR endif1909
  else1909_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1920_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1924
    DATA8 flag1924
    DIVF F.1 F.2 tmpf1924
    CP_EQF 0.0 F.2 flag1924
    SELECTF flag1924 0.0 tmpf1924 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1920
  else1920_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1929
    DATA8 flag1929
    DIVF F.1 F.2 tmpf1929
    CP_EQF 0.0 F.2 flag1929
    SELECTF flag1929 0.0 tmpf1929 F.0

    ADDF F.0 240.0 VGV_H
  else1920_2:
  endif1920:
  else1909_2:
  endif1909:
  else1908_2:
  endif1908:
    JR_NEQF VGV_MAX 0.0 else1931_1
    MOVEF_F 0.0 VGV_S
    JR endif1931
  else1931_1:
    DATAF tmpf1932
    DATA8 flag1932
    DIVF VGV_MIN VGV_MAX tmpf1932
    CP_EQF 0.0 VGV_MAX flag1932
    SELECTF flag1932 0.0 tmpf1932 F.0

    SUBF 1.0 F.0 VGV_S
  else1931_2:
  endif1931:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1936
    JR_LTF VGV_H 360.0 or1935
  and1936:
    JR_LTF VGV_H 0.0 else1934_1
    JR_GTF VGV_H 30.0 else1934_1
    JR_LTEQF VGV_S 0.3 else1934_1
    JR_GTF VGV_S 1.0 else1934_1
    JR_LTF VGV_V 0.0 else1934_1
    JR_GTEQF VGV_V 0.02 else1934_1
  or1935:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1934
  else1934_1:
    JR_LTF VGV_H 0.0 else1934_2
    JR_GTEQF VGV_H 60.0 else1934_2
    JR_LTF VGV_S 0.4 else1934_2
    JR_GTF VGV_S 1.0 else1934_2
    JR_LTEQF VGV_V 0.003 else1934_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1934
  else1934_2:
    MOVEF_F 6.0 VGV_COLOR
  else1934_3:
  endif1934:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1941
    DATA8 flag1941
    DIVF F.0 F.1 tmpf1941
    CP_EQF 0.0 F.1 flag1941
    SELECTF flag1941 0.0 tmpf1941 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1946
    DATA8 flag1946
    DIVF F.0 F.1 tmpf1946
    CP_EQF 0.0 F.1 flag1946
    SELECTF flag1946 0.0 tmpf1946 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1947:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1948:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1962
	MOVEF_32 100.0 milliseconds1962
	DATA32 timer1962
	TIMER_WAIT milliseconds1962 timer1962
	TIMER_READY timer1962
  while1963:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile1963
  whilebody1963:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody1963
  endwhile1963:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1969
	MOVEF_32 350.0 milliseconds1969
	DATA32 timer1969
	TIMER_WAIT milliseconds1969 timer1969
	TIMER_READY timer1969
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    DATA8 layer1971
	DATA8 no1971
	DATA8 mode81971
	
	MOVEF_8 2.0 no1971
	SUB8 no1971 1 no1971
	DIV8 no1971 4 layer1971
	MATH MOD8 no1971 4 no1971

	MOVEF_8 0.0 mode81971
	
	INPUT_DEVICE READY_RAW layer1971 no1971 0 mode81971 0
    DATA8 layer1972
	DATA8 no1972
	DATA8 mode81972
	
	MOVEF_8 3.0 no1972
	SUB8 no1972 1 no1972
	DIV8 no1972 4 layer1972
	MATH MOD8 no1972 4 no1972

	MOVEF_8 0.0 mode81972
	
	INPUT_DEVICE READY_RAW layer1972 no1972 0 mode81972 0
  while1973:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 7.0 and1975
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 or1974
  and1975:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 7.0 and1978
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 or1974
  and1978:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 7.0 endwhile1973
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 7.0 endwhile1973
  or1974:
  whilebody1973:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 7.0 and1984
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody1973
  and1984:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 7.0 and1987
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody1973
  and1987:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 7.0 and1990
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 7.0 whilebody1973
  and1990:
  endwhile1973:
  while1993:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1993
  whilebody1993:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1993
  endwhile1993:
    CALL MOTOR.STOP 'B' 'True'
  while1998:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1998
  whilebody1998:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1998
  endwhile1998:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2003
	DATA8 no2003
	DATA8 mode82003
	
	MOVEF_8 2.0 no2003
	SUB8 no2003 1 no2003
	DIV8 no2003 4 layer2003
	MATH MOD8 no2003 4 no2003

	MOVEF_8 0.0 mode82003
	
	INPUT_DEVICE READY_RAW layer2003 no2003 0 mode82003 0
    DATA8 layer2004
	DATA8 no2004
	DATA8 mode82004
	
	MOVEF_8 3.0 no2004
	SUB8 no2004 1 no2004
	DIV8 no2004 4 layer2004
	MATH MOD8 no2004 4 no2004

	MOVEF_8 0.0 mode82004
	
	INPUT_DEVICE READY_RAW layer2004 no2004 0 mode82004 0
  while2005:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2005
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2005
  whilebody2005:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2009
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2005
  and2009:
  endwhile2005:
    CALL MOTOR.STOP 'BC' 'True'
  while2013:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2013
  whilebody2013:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2013
  endwhile2013:
    CALL MOTOR.STOP 'B' 'True'
  while2018:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2018
  whilebody2018:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2018
  endwhile2018:
    CALL MOTOR.STOP 'C' 'True'
  while2023:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2023
  whilebody2023:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2023
  endwhile2023:
    CALL MOTOR.STOP 'B' 'True'
  while2028:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2028
  whilebody2028:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2028
  endwhile2028:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall EV3FILE.OPENWRITE       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_WRITE fullname handle16

	MOVE16_F handle16 handle
}
subcall EV3FILE.WRITELINE     // FSV
{
	IN_F handle
	IN_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE WRITE_TEXT handle16 6 text
invalidhandle:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
