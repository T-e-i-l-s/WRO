DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_COLOR2
DATAF VGV_J
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2062
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2062:
    JR_NEQ32 SUBPROGRAM 1 dispatch2063
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2063:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.22 VGV_K1
    MOVEF_F 4.0 VGV_K2
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 30.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB60:
    WRITE32 ENDSUB_F_A2_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB61:
  while62:
    JR_LTEQF VGV_S3 10.0 and64
    JR_GTF VGV_S2 10.0 or63
  and64:
    JR_GTEQF VGV_S3 10.0 endwhile62
    JR_GTEQF VGV_S2 10.0 endwhile62
  or63:
  whilebody62:
    WRITE32 ENDSUB_F_A3_0:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB65:
    WRITE32 ENDSUB_F_A2_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB66:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB67:
    JR_LTEQF VGV_S3 10.0 and68
    JR_GTF VGV_S2 10.0 whilebody62
  and68:
    JR_GTEQF VGV_S3 10.0 and69
    JR_LTF VGV_S2 10.0 whilebody62
  and69:
  endwhile62:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB71:
    JR_GTF VGV_H 100.0 or73
    JR_LTF VGV_H 0.0 else72_1
    JR_GTF VGV_H 32.0 else72_1
  or73:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif72
  else72_1:
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else72_2:
  endif72:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    JR_NEQF VGV_COLOR 4.0 else77_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB78:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer81
	DATA8 nos81
	DATA8 busy81
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer81 nos81
	JR_EQ8 0 nos81 motornotbusy81
  motorwaiting81:
	OUTPUT_TEST layer81 nos81 busy81
	JR_EQ8 busy81 0 motornotbusy81
	SLEEP
	JR motorwaiting81
  motornotbusy81:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while85:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 625.0 endwhile85
  whilebody85:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB87:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 625.0 whilebody85
  endwhile85:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB90:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer91
	DATA8 nos91
	DATA8 busy91
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer91 nos91
	JR_EQ8 0 nos91 motornotbusy91
  motorwaiting91:
	OUTPUT_TEST layer91 nos91 busy91
	JR_EQ8 busy91 0 motornotbusy91
	SLEEP
	JR motorwaiting91
  motornotbusy91:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer93
	DATA8 nos93
	DATA8 busy93
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer93 nos93
	JR_EQ8 0 nos93 motornotbusy93
  motorwaiting93:
	OUTPUT_TEST layer93 nos93 busy93
	JR_EQ8 busy93 0 motornotbusy93
	SLEEP
	JR motorwaiting93
  motornotbusy93:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while96:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf100
    DATA8 flag100
    DIVF F.1 2.0 tmpf100
    CP_EQF 0.0 2.0 flag100
    SELECTF flag100 0.0 tmpf100 F.0

    JR_GTEQF F.0 100.0 endwhile96
  whilebody96:
    WRITE32 ENDSUB_F_A3_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB101:
    WRITE32 ENDSUB_F_A2_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB102:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB103:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf107
    DATA8 flag107
    DIVF F.1 2.0 tmpf107
    CP_EQF 0.0 2.0 flag107
    SELECTF flag107 0.0 tmpf107 F.0

    JR_LTF F.0 100.0 whilebody96
  endwhile96:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB109:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else111_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB112:
    ADDF VGV_C 1.0 VGV_C
    JR endif111
  else111_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer115
	DATA8 nos115
	DATA8 busy115
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer115 nos115
	JR_EQ8 0 nos115 motornotbusy115
  motorwaiting115:
	OUTPUT_TEST layer115 nos115 busy115
	JR_EQ8 busy115 0 motornotbusy115
	SLEEP
	JR motorwaiting115
  motornotbusy115:
  while116:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and118
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or117
  and118:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and121
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or117
  and121:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile116
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile116
  or117:
  whilebody116:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and130
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody116
  and130:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and133
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody116
  and133:
  endwhile116:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB136:
    WRITE32 ENDSUB_F_A2_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB137:
  while138:
    JR_LTEQF VGV_S3 10.0 and140
    JR_GTF VGV_S2 10.0 or139
  and140:
    JR_GTEQF VGV_S3 10.0 endwhile138
    JR_GTEQF VGV_S2 10.0 endwhile138
  or139:
  whilebody138:
    WRITE32 ENDSUB_F_A3_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB141:
    WRITE32 ENDSUB_F_A2_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB142:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB143:
    JR_LTEQF VGV_S3 10.0 and144
    JR_GTF VGV_S2 10.0 whilebody138
  and144:
    JR_GTEQF VGV_S3 10.0 and145
    JR_LTF VGV_S2 10.0 whilebody138
  and145:
  endwhile138:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
  else111_2:
  endif111:
    JR endif77
  else77_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
  while160:
    JR_LTEQF VGV_S3 10.0 and162
    JR_GTF VGV_S2 10.0 or161
  and162:
    JR_GTEQF VGV_S3 10.0 endwhile160
    JR_GTEQF VGV_S2 10.0 endwhile160
  or161:
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB163:
    WRITE32 ENDSUB_F_A2_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB164:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB165:
    JR_LTEQF VGV_S3 10.0 and166
    JR_GTF VGV_S2 10.0 whilebody160
  and166:
    JR_GTEQF VGV_S3 10.0 and167
    JR_LTF VGV_S2 10.0 whilebody160
  and167:
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer170
	DATA8 nos170
	DATA8 busy170
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer170 nos170
	JR_EQ8 0 nos170 motornotbusy170
  motorwaiting170:
	OUTPUT_TEST layer170 nos170 busy170
	JR_EQ8 busy170 0 motornotbusy170
	SLEEP
	JR motorwaiting170
  motornotbusy170:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds173
	MOVEF_32 500.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB175:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while177:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 560.0 endwhile177
  whilebody177:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB179:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 560.0 whilebody177
  endwhile177:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else182_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB183:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB186:
    WRITE32 ENDSUB_F_A2_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB187:
  while188:
    JR_LTEQF VGV_S3 15.0 endwhile188
  whilebody188:
    WRITE32 ENDSUB_F_A3_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB189:
    WRITE32 ENDSUB_F_A2_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB190:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody188
  endwhile188:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB193:
    WRITE32 ENDSUB_F_A2_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB194:
  while195:
    JR_GTEQF VGV_S3 35.0 endwhile195
  whilebody195:
    WRITE32 ENDSUB_F_A3_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB196:
    WRITE32 ENDSUB_F_A2_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB197:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody195
  endwhile195:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB201:
    WRITE32 ENDSUB_F_A2_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB202:
  while203:
    JR_LTEQF VGV_S3 10.0 and205
    JR_GTF VGV_S2 10.0 or204
  and205:
    JR_GTEQF VGV_S3 10.0 endwhile203
    JR_GTEQF VGV_S2 10.0 endwhile203
  or204:
  whilebody203:
    WRITE32 ENDSUB_F_A3_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB207:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB208:
    JR_LTEQF VGV_S3 10.0 and209
    JR_GTF VGV_S2 10.0 whilebody203
  and209:
    JR_GTEQF VGV_S3 10.0 and210
    JR_LTF VGV_S2 10.0 whilebody203
  and210:
  endwhile203:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB212:
    ADDF VGV_C 1.0 VGV_C
    JR endif182
  else182_1:
    DATA32 tmp214
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp214
    JR_NEQ32 0 tmp214 alreadylaunched214
    OBJECT_START TF_VIDVIG_0
  alreadylaunched214:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB215:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer216
	DATA8 nos216
	DATA8 busy216
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer216 nos216
	JR_EQ8 0 nos216 motornotbusy216
  motorwaiting216:
	OUTPUT_TEST layer216 nos216 busy216
	JR_EQ8 busy216 0 motornotbusy216
	SLEEP
	JR motorwaiting216
  motornotbusy216:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB219:
    WRITE32 ENDSUB_F_A2_0:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB220:
  while221:
    JR_LTEQF VGV_S3 10.0 and223
    JR_GTF VGV_S2 10.0 or222
  and223:
    JR_GTEQF VGV_S3 10.0 endwhile221
    JR_GTEQF VGV_S2 10.0 endwhile221
  or222:
  whilebody221:
    WRITE32 ENDSUB_F_A3_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB224:
    WRITE32 ENDSUB_F_A2_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB225:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB226:
    JR_LTEQF VGV_S3 10.0 and227
    JR_GTF VGV_S2 10.0 whilebody221
  and227:
    JR_GTEQF VGV_S3 10.0 and228
    JR_LTF VGV_S2 10.0 whilebody221
  and228:
  endwhile221:
    CALL MOTOR.STOP 'bc' 'true'
  else182_2:
  endif182:
  else77_2:
  endif77:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB230:
    JR_LTF VGV_H 33.0 or232
    JR_LTEQF VGV_H 100.0 else231_1
  or232:
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif231
  else231_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else231_2:
  endif231:
    JR_NEQF VGV_COLOR2 4.0 else235_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB237:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif235
  else235_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB239:
    CALL MOTOR.RESETCOUNT 'bc'
  while241:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 210.0 endwhile241
  whilebody241:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB243:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 210.0 whilebody241
  endwhile241:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds248
	MOVEF_32 100.0 milliseconds248
	DATA32 timer248
	TIMER_WAIT milliseconds248 timer248
	TIMER_READY timer248
    WRITE32 ENDSUB_F_NPL_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB249:
    MOVEF_F 1230.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf250
    DATA8 flag250
    DIVF 360.0 VGV_L tmpf250
    CP_EQF 0.0 VGV_L flag250
    SELECTF flag250 0.0 tmpf250 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while254:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf258
    DATA8 flag258
    DIVF F.1 2.0 tmpf258
    CP_EQF 0.0 2.0 flag258
    SELECTF flag258 0.0 tmpf258 F.0

    JR_GTEQF F.0 VGV_X endwhile254
  whilebody254:
    WRITE32 ENDSUB_F_A3_0:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB259:
    WRITE32 ENDSUB_F_A2_0:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB260:
    JR_GTEQF VGV_SPEED 60.0 else261_1
    ADDF VGV_SPEED 0.5 VGV_SPEED
  else261_1:
  endif261:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB263:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf267
    DATA8 flag267
    DIVF F.1 2.0 tmpf267
    CP_EQF 0.0 2.0 flag267
    SELECTF flag267 0.0 tmpf267 F.0

    JR_LTF F.0 VGV_X whilebody254
  endwhile254:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB269:
    JR_NEQF VGV_C 1.0 else270_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB271:
    JR endif270
  else270_1:
    JR_NEQF VGV_C 0.0 else270_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB272:
  else270_2:
  endif270:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB273:
    WRITE32 ENDSUB_F_A3_0:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB274:
    WRITE32 ENDSUB_F_A2_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB275:
  while276:
    JR_LTEQF VGV_S3 10.0 and278
    JR_GTF VGV_S2 10.0 or277
  and278:
    JR_GTEQF VGV_S3 10.0 endwhile276
    JR_GTEQF VGV_S2 10.0 endwhile276
  or277:
  whilebody276:
    WRITE32 ENDSUB_F_A3_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB279:
    WRITE32 ENDSUB_F_A2_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB280:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB281:
    JR_LTEQF VGV_S3 10.0 and282
    JR_GTF VGV_S2 10.0 whilebody276
  and282:
    JR_GTEQF VGV_S3 10.0 and283
    JR_LTF VGV_S2 10.0 whilebody276
  and283:
  endwhile276:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer285
	DATA8 nos285
	DATA8 busy285
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer285 nos285
	JR_EQ8 0 nos285 motornotbusy285
  motorwaiting285:
	OUTPUT_TEST layer285 nos285 busy285
	JR_EQ8 busy285 0 motornotbusy285
	SLEEP
	JR motorwaiting285
  motornotbusy285:
    WRITE32 ENDSUB_F_A3_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB286:
    WRITE32 ENDSUB_F_A2_0:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB287:
  while288:
    JR_LTEQF VGV_S3 10.0 and290
    JR_GTF VGV_S2 10.0 or289
  and290:
    JR_GTEQF VGV_S3 10.0 endwhile288
    JR_GTEQF VGV_S2 10.0 endwhile288
  or289:
  whilebody288:
    WRITE32 ENDSUB_F_A3_0:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB291:
    WRITE32 ENDSUB_F_A2_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB292:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB293:
    JR_LTEQF VGV_S3 10.0 and294
    JR_GTF VGV_S2 10.0 whilebody288
  and294:
    JR_GTEQF VGV_S3 10.0 and295
    JR_LTF VGV_S2 10.0 whilebody288
  and295:
  endwhile288:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB297:
    CALL MOTOR.RESETCOUNT 'bc'
  while299:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf303
    DATA8 flag303
    DIVF F.1 2.0 tmpf303
    CP_EQF 0.0 2.0 flag303
    SELECTF flag303 0.0 tmpf303 F.0

    JR_GTEQF F.0 160.0 endwhile299
  whilebody299:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB304:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf308
    DATA8 flag308
    DIVF F.1 2.0 tmpf308
    CP_EQF 0.0 2.0 flag308
    SELECTF flag308 0.0 tmpf308 F.0

    JR_LTF F.0 160.0 whilebody299
  endwhile299:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds312
	MOVEF_32 500.0 milliseconds312
	DATA32 timer312
	TIMER_WAIT milliseconds312 timer312
	TIMER_READY timer312
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer314
	DATA8 nos314
	DATA8 busy314
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer314 nos314
	JR_EQ8 0 nos314 motornotbusy314
  motorwaiting314:
	OUTPUT_TEST layer314 nos314 busy314
	JR_EQ8 busy314 0 motornotbusy314
	SLEEP
	JR motorwaiting314
  motornotbusy314:
    DATA32 tmp315
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp315
    JR_NEQ32 0 tmp315 alreadylaunched315
    OBJECT_START TF_VIDVIG_0
  alreadylaunched315:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB316:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB317:
    ADDF VGV_C 1.0 VGV_C
  else235_2:
  endif235:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB319:
    JR_GTF VGV_H 120.0 or321
    JR_LTF VGV_H 0.0 else320_1
    JR_GTF VGV_H 30.0 else320_1
  or321:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif320
  else320_1:
    JR_GTEQF VGV_H 120.0 else320_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif320
  else320_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else320_3:
  endif320:
    JR_NEQF VGV_COLOR3 4.0 else325_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer326
	DATA8 nos326
	DATA8 busy326
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer326 nos326
	JR_EQ8 0 nos326 motornotbusy326
  motorwaiting326:
	OUTPUT_TEST layer326 nos326 busy326
	JR_EQ8 busy326 0 motornotbusy326
	SLEEP
	JR motorwaiting326
  motornotbusy326:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB327:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else329_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB330:
    CALL MOTOR.RESETCOUNT 'bc'
  while332:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf336
    DATA8 flag336
    DIVF F.1 2.0 tmpf336
    CP_EQF 0.0 2.0 flag336
    SELECTF flag336 0.0 tmpf336 F.0

    JR_GTEQF F.0 210.0 endwhile332
  whilebody332:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB337:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf341
    DATA8 flag341
    DIVF F.1 2.0 tmpf341
    CP_EQF 0.0 2.0 flag341
    SELECTF flag341 0.0 tmpf341 F.0

    JR_LTF F.0 210.0 whilebody332
  endwhile332:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer343
	DATA8 nos343
	DATA8 busy343
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer343 nos343
	JR_EQ8 0 nos343 motornotbusy343
  motorwaiting343:
	OUTPUT_TEST layer343 nos343 busy343
	JR_EQ8 busy343 0 motornotbusy343
	SLEEP
	JR motorwaiting343
  motornotbusy343:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds345
	MOVEF_32 500.0 milliseconds345
	DATA32 timer345
	TIMER_WAIT milliseconds345 timer345
	TIMER_READY timer345
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB347:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf348
    DATA8 flag348
    DIVF 360.0 VGV_L tmpf348
    CP_EQF 0.0 VGV_L flag348
    SELECTF flag348 0.0 tmpf348 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while351:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf355
    DATA8 flag355
    DIVF F.1 2.0 tmpf355
    CP_EQF 0.0 2.0 flag355
    SELECTF flag355 0.0 tmpf355 F.0

    JR_GTEQF F.0 VGV_X endwhile351
  whilebody351:
    WRITE32 ENDSUB_F_A3_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB356:
    WRITE32 ENDSUB_F_A2_0:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB357:
    JR_GTEQF VGV_SPEED 80.0 else358_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else358_1:
  endif358:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB360:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf364
    DATA8 flag364
    DIVF F.1 2.0 tmpf364
    CP_EQF 0.0 2.0 flag364
    SELECTF flag364 0.0 tmpf364 F.0

    JR_LTF F.0 VGV_X whilebody351
  endwhile351:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB366:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB367:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB368:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB370:
    CALL MOTOR.RESETCOUNT 'bc'
  while372:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf376
    DATA8 flag376
    DIVF F.1 2.0 tmpf376
    CP_EQF 0.0 2.0 flag376
    SELECTF flag376 0.0 tmpf376 F.0

    JR_GTEQF F.0 210.0 endwhile372
  whilebody372:
    MOVEF_F 40.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB377:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf381
    DATA8 flag381
    DIVF F.1 2.0 tmpf381
    CP_EQF 0.0 2.0 flag381
    SELECTF flag381 0.0 tmpf381 F.0

    JR_LTF F.0 210.0 whilebody372
  endwhile372:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer383
	DATA8 nos383
	DATA8 busy383
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer383 nos383
	JR_EQ8 0 nos383 motornotbusy383
  motorwaiting383:
	OUTPUT_TEST layer383 nos383 busy383
	JR_EQ8 busy383 0 motornotbusy383
	SLEEP
	JR motorwaiting383
  motornotbusy383:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds385
	MOVEF_32 500.0 milliseconds385
	DATA32 timer385
	TIMER_WAIT milliseconds385 timer385
	TIMER_READY timer385
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB387:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB388:
    WRITE32 ENDSUB_F_PR_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB389:
    CALL MOTOR.RESETCOUNT 'bc'
  while391:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf395
    DATA8 flag395
    DIVF F.1 2.0 tmpf395
    CP_EQF 0.0 2.0 flag395
    SELECTF flag395 0.0 tmpf395 F.0

    JR_GTEQF F.0 400.0 endwhile391
  whilebody391:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB396:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf400
    DATA8 flag400
    DIVF F.1 2.0 tmpf400
    CP_EQF 0.0 2.0 flag400
    SELECTF flag400 0.0 tmpf400 F.0

    JR_LTF F.0 400.0 whilebody391
  endwhile391:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds403
	MOVEF_32 500.0 milliseconds403
	DATA32 timer403
	TIMER_WAIT milliseconds403 timer403
	TIMER_READY timer403
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB405:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf406
    DATA8 flag406
    DIVF 360.0 VGV_L tmpf406
    CP_EQF 0.0 VGV_L flag406
    SELECTF flag406 0.0 tmpf406 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while409:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf413
    DATA8 flag413
    DIVF F.1 2.0 tmpf413
    CP_EQF 0.0 2.0 flag413
    SELECTF flag413 0.0 tmpf413 F.0

    JR_GTEQF F.0 VGV_X endwhile409
  whilebody409:
    WRITE32 ENDSUB_F_A3_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB414:
    WRITE32 ENDSUB_F_A2_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB415:
    JR_GTEQF VGV_SPEED 80.0 else416_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else416_1:
  endif416:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB418:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf422
    DATA8 flag422
    DIVF F.1 2.0 tmpf422
    CP_EQF 0.0 2.0 flag422
    SELECTF flag422 0.0 tmpf422 F.0

    JR_LTF F.0 VGV_X whilebody409
  endwhile409:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB424:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB425:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB426:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB428:
    CALL MOTOR.RESETCOUNT 'bc'
  while430:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf434
    DATA8 flag434
    DIVF F.1 2.0 tmpf434
    CP_EQF 0.0 2.0 flag434
    SELECTF flag434 0.0 tmpf434 F.0

    JR_GTEQF F.0 160.0 endwhile430
  whilebody430:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB435:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf439
    DATA8 flag439
    DIVF F.1 2.0 tmpf439
    CP_EQF 0.0 2.0 flag439
    SELECTF flag439 0.0 tmpf439 F.0

    JR_LTF F.0 160.0 whilebody430
  endwhile430:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer441
	DATA8 nos441
	DATA8 busy441
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer441 nos441
	JR_EQ8 0 nos441 motornotbusy441
  motorwaiting441:
	OUTPUT_TEST layer441 nos441 busy441
	JR_EQ8 busy441 0 motornotbusy441
	SLEEP
	JR motorwaiting441
  motornotbusy441:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds443
	MOVEF_32 500.0 milliseconds443
	DATA32 timer443
	TIMER_WAIT milliseconds443 timer443
	TIMER_READY timer443
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB445:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB446:
    WRITE32 ENDSUB_F_PR_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB447:
    CALL MOTOR.RESETCOUNT 'bc'
  while449:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf453
    DATA8 flag453
    DIVF F.1 2.0 tmpf453
    CP_EQF 0.0 2.0 flag453
    SELECTF flag453 0.0 tmpf453 F.0

    JR_GTEQF F.0 80.0 endwhile449
  whilebody449:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB454:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf458
    DATA8 flag458
    DIVF F.1 2.0 tmpf458
    CP_EQF 0.0 2.0 flag458
    SELECTF flag458 0.0 tmpf458 F.0

    JR_LTF F.0 80.0 whilebody449
  endwhile449:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer460
	DATA8 nos460
	DATA8 busy460
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer460 nos460
	JR_EQ8 0 nos460 motornotbusy460
  motorwaiting460:
	OUTPUT_TEST layer460 nos460 busy460
	JR_EQ8 busy460 0 motornotbusy460
	SLEEP
	JR motorwaiting460
  motornotbusy460:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds462
	MOVEF_32 500.0 milliseconds462
	DATA32 timer462
	TIMER_WAIT milliseconds462 timer462
	TIMER_READY timer462
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB464:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf465
    DATA8 flag465
    DIVF 360.0 VGV_L tmpf465
    CP_EQF 0.0 VGV_L flag465
    SELECTF flag465 0.0 tmpf465 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while468:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf472
    DATA8 flag472
    DIVF F.1 2.0 tmpf472
    CP_EQF 0.0 2.0 flag472
    SELECTF flag472 0.0 tmpf472 F.0

    JR_GTEQF F.0 VGV_X endwhile468
  whilebody468:
    WRITE32 ENDSUB_F_A3_0:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB473:
    WRITE32 ENDSUB_F_A2_0:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB474:
    JR_GTEQF VGV_SPEED 80.0 else475_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else475_1:
  endif475:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB477:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf481
    DATA8 flag481
    DIVF F.1 2.0 tmpf481
    CP_EQF 0.0 2.0 flag481
    SELECTF flag481 0.0 tmpf481 F.0

    JR_LTF F.0 VGV_X whilebody468
  endwhile468:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB483:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB484:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB485:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB487:
    CALL MOTOR.RESETCOUNT 'bc'
  while489:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf493
    DATA8 flag493
    DIVF F.1 2.0 tmpf493
    CP_EQF 0.0 2.0 flag493
    SELECTF flag493 0.0 tmpf493 F.0

    JR_GTEQF F.0 50.0 endwhile489
  whilebody489:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB494:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf498
    DATA8 flag498
    DIVF F.1 2.0 tmpf498
    CP_EQF 0.0 2.0 flag498
    SELECTF flag498 0.0 tmpf498 F.0

    JR_LTF F.0 50.0 whilebody489
  endwhile489:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer500
	DATA8 nos500
	DATA8 busy500
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer500 nos500
	JR_EQ8 0 nos500 motornotbusy500
  motorwaiting500:
	OUTPUT_TEST layer500 nos500 busy500
	JR_EQ8 busy500 0 motornotbusy500
	SLEEP
	JR motorwaiting500
  motornotbusy500:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds502
	MOVEF_32 500.0 milliseconds502
	DATA32 timer502
	TIMER_WAIT milliseconds502 timer502
	TIMER_READY timer502
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB504:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB505:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB506:
  else329_1:
  endif329:
  else325_1:
  endif325:
    JR_NEQF VGV_COLOR3 5.0 else507_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB508:
    CALL MOTOR.RESETCOUNT 'bc'
  while510:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf514
    DATA8 flag514
    DIVF F.1 2.0 tmpf514
    CP_EQF 0.0 2.0 flag514
    SELECTF flag514 0.0 tmpf514 F.0

    JR_GTEQF F.0 180.0 endwhile510
  whilebody510:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB515:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf519
    DATA8 flag519
    DIVF F.1 2.0 tmpf519
    CP_EQF 0.0 2.0 flag519
    SELECTF flag519 0.0 tmpf519 F.0

    JR_LTF F.0 180.0 whilebody510
  endwhile510:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer521
	DATA8 nos521
	DATA8 busy521
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer521 nos521
	JR_EQ8 0 nos521 motornotbusy521
  motorwaiting521:
	OUTPUT_TEST layer521 nos521 busy521
	JR_EQ8 busy521 0 motornotbusy521
	SLEEP
	JR motorwaiting521
  motornotbusy521:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds523
	MOVEF_32 500.0 milliseconds523
	DATA32 timer523
	TIMER_WAIT milliseconds523 timer523
	TIMER_READY timer523
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB525:
    MOVEF_F 300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf526
    DATA8 flag526
    DIVF 360.0 VGV_L tmpf526
    CP_EQF 0.0 VGV_L flag526
    SELECTF flag526 0.0 tmpf526 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while529:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf533
    DATA8 flag533
    DIVF F.1 2.0 tmpf533
    CP_EQF 0.0 2.0 flag533
    SELECTF flag533 0.0 tmpf533 F.0

    JR_GTEQF F.0 VGV_X endwhile529
  whilebody529:
    WRITE32 ENDSUB_F_A3_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB534:
    WRITE32 ENDSUB_F_A2_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB535:
    JR_GTEQF VGV_SPEED 80.0 else536_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else536_1:
  endif536:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB538:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf542
    DATA8 flag542
    DIVF F.1 2.0 tmpf542
    CP_EQF 0.0 2.0 flag542
    SELECTF flag542 0.0 tmpf542 F.0

    JR_LTF F.0 VGV_X whilebody529
  endwhile529:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB544:
    JR_NEQF VGV_C 1.0 else545_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB546:
    JR endif545
  else545_1:
    JR_NEQF VGV_C 0.0 else545_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB547:
    JR endif545
  else545_2:
    JR_NEQF VGV_C 2.0 else545_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB548:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB549:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds551
	MOVEF_32 100.0 milliseconds551
	DATA32 timer551
	TIMER_WAIT milliseconds551 timer551
	TIMER_READY timer551
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer552
	DATA8 nos552
	DATA8 busy552
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer552 nos552
	JR_EQ8 0 nos552 motornotbusy552
  motorwaiting552:
	OUTPUT_TEST layer552 nos552 busy552
	JR_EQ8 busy552 0 motornotbusy552
	SLEEP
	JR motorwaiting552
  motornotbusy552:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer554
	DATA8 nos554
	DATA8 busy554
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer554 nos554
	JR_EQ8 0 nos554 motornotbusy554
  motorwaiting554:
	OUTPUT_TEST layer554 nos554 busy554
	JR_EQ8 busy554 0 motornotbusy554
	SLEEP
	JR motorwaiting554
  motornotbusy554:
    WRITE32 ENDSUB_F_A3_0:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB555:
    WRITE32 ENDSUB_F_A2_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB556:
  while557:
    JR_LTEQF VGV_S2 15.0 endwhile557
  whilebody557:
    WRITE32 ENDSUB_F_A3_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB558:
    WRITE32 ENDSUB_F_A2_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB559:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody557
  endwhile557:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB562:
    WRITE32 ENDSUB_F_A2_0:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB563:
  while564:
    JR_GTEQF VGV_S2 55.0 endwhile564
  whilebody564:
    WRITE32 ENDSUB_F_A3_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB565:
    WRITE32 ENDSUB_F_A2_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB566:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody564
  endwhile564:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while570:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf574
    DATA8 flag574
    DIVF F.1 2.0 tmpf574
    CP_EQF 0.0 2.0 flag574
    SELECTF flag574 0.0 tmpf574 F.0

    JR_GTEQF F.0 300.0 endwhile570
  whilebody570:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB575:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf579
    DATA8 flag579
    DIVF F.1 2.0 tmpf579
    CP_EQF 0.0 2.0 flag579
    SELECTF flag579 0.0 tmpf579 F.0

    JR_LTF F.0 300.0 whilebody570
  endwhile570:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds582
	MOVEF_32 500.0 milliseconds582
	DATA32 timer582
	TIMER_WAIT milliseconds582 timer582
	TIMER_READY timer582
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB584:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB585:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB587:
  else545_3:
  endif545:
    MOVEF_F 620.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB588:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer590
	DATA8 nos590
	DATA8 busy590
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer590 nos590
	JR_EQ8 0 nos590 motornotbusy590
  motorwaiting590:
	OUTPUT_TEST layer590 nos590 busy590
	JR_EQ8 busy590 0 motornotbusy590
	SLEEP
	JR motorwaiting590
  motornotbusy590:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer592
	DATA8 nos592
	DATA8 busy592
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer592 nos592
	JR_EQ8 0 nos592 motornotbusy592
  motorwaiting592:
	OUTPUT_TEST layer592 nos592 busy592
	JR_EQ8 busy592 0 motornotbusy592
	SLEEP
	JR motorwaiting592
  motornotbusy592:
    WRITE32 ENDSUB_F_A3_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB593:
    WRITE32 ENDSUB_F_A2_0:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB594:
  while595:
    JR_LTEQF VGV_S2 15.0 endwhile595
  whilebody595:
    WRITE32 ENDSUB_F_A3_0:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB596:
    WRITE32 ENDSUB_F_A2_0:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB597:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_GTF VGV_S2 15.0 whilebody595
  endwhile595:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB600:
    WRITE32 ENDSUB_F_A2_0:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB601:
  while602:
    JR_GTEQF VGV_S2 55.0 endwhile602
  whilebody602:
    WRITE32 ENDSUB_F_A3_0:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB603:
    WRITE32 ENDSUB_F_A2_0:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB604:
    CALL MOTOR.STARTSYNC 'bc' -15.0 15.0
    JR_LTF VGV_S2 55.0 whilebody602
  endwhile602:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while608:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf612
    DATA8 flag612
    DIVF F.1 2.0 tmpf612
    CP_EQF 0.0 2.0 flag612
    SELECTF flag612 0.0 tmpf612 F.0

    JR_GTEQF F.0 10.0 endwhile608
  whilebody608:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB613:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf617
    DATA8 flag617
    DIVF F.1 2.0 tmpf617
    CP_EQF 0.0 2.0 flag617
    SELECTF flag617 0.0 tmpf617 F.0

    JR_LTF F.0 10.0 whilebody608
  endwhile608:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer618
	DATA8 nos618
	DATA8 busy618
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer618 nos618
	JR_EQ8 0 nos618 motornotbusy618
  motorwaiting618:
	OUTPUT_TEST layer618 nos618 busy618
	JR_EQ8 busy618 0 motornotbusy618
	SLEEP
	JR motorwaiting618
  motornotbusy618:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds621
	MOVEF_32 500.0 milliseconds621
	DATA32 timer621
	TIMER_WAIT milliseconds621 timer621
	TIMER_READY timer621
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB623:
    DATA32 tmp624
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp624
    JR_NEQ32 0 tmp624 alreadylaunched624
    OBJECT_START TF_VIDVIG_0
  alreadylaunched624:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB625:
    ADDF VGV_C 1.0 VGV_C
  else507_1:
  endif507:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB627:
    JR_GTEQF VGV_H 25.0 else628_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif628
  else628_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else628_2:
  endif628:
    JR_NEQF VGV_COLOR4 4.0 else631_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer632
	DATA8 nos632
	DATA8 busy632
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer632 nos632
	JR_EQ8 0 nos632 motornotbusy632
  motorwaiting632:
	OUTPUT_TEST layer632 nos632 busy632
	JR_EQ8 busy632 0 motornotbusy632
	SLEEP
	JR motorwaiting632
  motornotbusy632:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB633:
    JR_NEQF VGV_C 1.0 else634_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB635:
    CALL MOTOR.RESETCOUNT 'bc'
  while637:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf641
    DATA8 flag641
    DIVF F.1 2.0 tmpf641
    CP_EQF 0.0 2.0 flag641
    SELECTF flag641 0.0 tmpf641 F.0

    JR_GTEQF F.0 210.0 endwhile637
  whilebody637:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB642:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf646
    DATA8 flag646
    DIVF F.1 2.0 tmpf646
    CP_EQF 0.0 2.0 flag646
    SELECTF flag646 0.0 tmpf646 F.0

    JR_LTF F.0 210.0 whilebody637
  endwhile637:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer648
	DATA8 nos648
	DATA8 busy648
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer648 nos648
	JR_EQ8 0 nos648 motornotbusy648
  motorwaiting648:
	OUTPUT_TEST layer648 nos648 busy648
	JR_EQ8 busy648 0 motornotbusy648
	SLEEP
	JR motorwaiting648
  motornotbusy648:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds650
	MOVEF_32 500.0 milliseconds650
	DATA32 timer650
	TIMER_WAIT milliseconds650 timer650
	TIMER_READY timer650
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB652:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf653
    DATA8 flag653
    DIVF 360.0 VGV_L tmpf653
    CP_EQF 0.0 VGV_L flag653
    SELECTF flag653 0.0 tmpf653 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while656:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf660
    DATA8 flag660
    DIVF F.1 2.0 tmpf660
    CP_EQF 0.0 2.0 flag660
    SELECTF flag660 0.0 tmpf660 F.0

    JR_GTEQF F.0 VGV_X endwhile656
  whilebody656:
    WRITE32 ENDSUB_F_A3_0:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB661:
    WRITE32 ENDSUB_F_A2_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB662:
    JR_GTEQF VGV_SPEED 80.0 else663_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else663_1:
  endif663:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB665:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf669
    DATA8 flag669
    DIVF F.1 2.0 tmpf669
    CP_EQF 0.0 2.0 flag669
    SELECTF flag669 0.0 tmpf669 F.0

    JR_LTF F.0 VGV_X whilebody656
  endwhile656:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB671:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB672:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB673:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer675
	DATA8 nos675
	DATA8 busy675
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer675 nos675
	JR_EQ8 0 nos675 motornotbusy675
  motorwaiting675:
	OUTPUT_TEST layer675 nos675 busy675
	JR_EQ8 busy675 0 motornotbusy675
	SLEEP
	JR motorwaiting675
  motornotbusy675:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB676:
    WRITE32 ENDSUB_F_PR_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB677:
    CALL MOTOR.RESETCOUNT 'bc'
  while679:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf683
    DATA8 flag683
    DIVF F.1 2.0 tmpf683
    CP_EQF 0.0 2.0 flag683
    SELECTF flag683 0.0 tmpf683 F.0

    JR_GTEQF F.0 110.0 endwhile679
  whilebody679:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB684:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf688
    DATA8 flag688
    DIVF F.1 2.0 tmpf688
    CP_EQF 0.0 2.0 flag688
    SELECTF flag688 0.0 tmpf688 F.0

    JR_LTF F.0 110.0 whilebody679
  endwhile679:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 240.0 'true'

	DATA8 layer690
	DATA8 nos690
	DATA8 busy690
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer690 nos690
	JR_EQ8 0 nos690 motornotbusy690
  motorwaiting690:
	OUTPUT_TEST layer690 nos690 busy690
	JR_EQ8 busy690 0 motornotbusy690
	SLEEP
	JR motorwaiting690
  motornotbusy690:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds692
	MOVEF_32 500.0 milliseconds692
	DATA32 timer692
	TIMER_WAIT milliseconds692 timer692
	TIMER_READY timer692
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB694:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB695:
    WRITE32 ENDSUB_F_PR_0:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB696:
    CALL MOTOR.RESETCOUNT 'bc'
  while698:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf702
    DATA8 flag702
    DIVF F.1 2.0 tmpf702
    CP_EQF 0.0 2.0 flag702
    SELECTF flag702 0.0 tmpf702 F.0

    JR_GTEQF F.0 80.0 endwhile698
  whilebody698:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB703:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf707
    DATA8 flag707
    DIVF F.1 2.0 tmpf707
    CP_EQF 0.0 2.0 flag707
    SELECTF flag707 0.0 tmpf707 F.0

    JR_LTF F.0 80.0 whilebody698
  endwhile698:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer709
	DATA8 nos709
	DATA8 busy709
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer709 nos709
	JR_EQ8 0 nos709 motornotbusy709
  motorwaiting709:
	OUTPUT_TEST layer709 nos709 busy709
	JR_EQ8 busy709 0 motornotbusy709
	SLEEP
	JR motorwaiting709
  motornotbusy709:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds711
	MOVEF_32 500.0 milliseconds711
	DATA32 timer711
	TIMER_WAIT milliseconds711 timer711
	TIMER_READY timer711
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB713:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf714
    DATA8 flag714
    DIVF 360.0 VGV_L tmpf714
    CP_EQF 0.0 VGV_L flag714
    SELECTF flag714 0.0 tmpf714 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while717:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf721
    DATA8 flag721
    DIVF F.1 2.0 tmpf721
    CP_EQF 0.0 2.0 flag721
    SELECTF flag721 0.0 tmpf721 F.0

    JR_GTEQF F.0 VGV_X endwhile717
  whilebody717:
    WRITE32 ENDSUB_F_A3_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB722:
    WRITE32 ENDSUB_F_A2_0:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB723:
    JR_GTEQF VGV_SPEED 80.0 else724_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else724_1:
  endif724:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB726:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf730
    DATA8 flag730
    DIVF F.1 2.0 tmpf730
    CP_EQF 0.0 2.0 flag730
    SELECTF flag730 0.0 tmpf730 F.0

    JR_LTF F.0 VGV_X whilebody717
  endwhile717:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB732:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB733:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB734:
    WRITE32 ENDSUB_F_PR_0:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB735:
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while737:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf741
    DATA8 flag741
    DIVF F.1 2.0 tmpf741
    CP_EQF 0.0 2.0 flag741
    SELECTF flag741 0.0 tmpf741 F.0

    JR_GTEQF F.0 110.0 endwhile737
  whilebody737:
    WRITE32 ENDSUB_F_A3_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB742:
    WRITE32 ENDSUB_F_A2_0:CALLSUB743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB743:
    JR_GTEQF VGV_SPEED 80.0 else744_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else744_1:
  endif744:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB746:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf750
    DATA8 flag750
    DIVF F.1 2.0 tmpf750
    CP_EQF 0.0 2.0 flag750
    SELECTF flag750 0.0 tmpf750 F.0

    JR_LTF F.0 110.0 whilebody737
  endwhile737:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer752
	DATA8 nos752
	DATA8 busy752
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer752 nos752
	JR_EQ8 0 nos752 motornotbusy752
  motorwaiting752:
	OUTPUT_TEST layer752 nos752 busy752
	JR_EQ8 busy752 0 motornotbusy752
	SLEEP
	JR motorwaiting752
  motornotbusy752:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds754
	MOVEF_32 500.0 milliseconds754
	DATA32 timer754
	TIMER_WAIT milliseconds754 timer754
	TIMER_READY timer754
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB756:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB757:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB758:
  else634_1:
  endif634:
  else631_1:
  endif631:
    JR_NEQF VGV_COLOR4 5.0 else759_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB760:
    CALL MOTOR.RESETCOUNT 'bc'
  while762:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf766
    DATA8 flag766
    DIVF F.1 2.0 tmpf766
    CP_EQF 0.0 2.0 flag766
    SELECTF flag766 0.0 tmpf766 F.0

    JR_GTEQF F.0 260.0 endwhile762
  whilebody762:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB767:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf771
    DATA8 flag771
    DIVF F.1 2.0 tmpf771
    CP_EQF 0.0 2.0 flag771
    SELECTF flag771 0.0 tmpf771 F.0

    JR_LTF F.0 260.0 whilebody762
  endwhile762:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer773
	DATA8 nos773
	DATA8 busy773
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer773 nos773
	JR_EQ8 0 nos773 motornotbusy773
  motorwaiting773:
	OUTPUT_TEST layer773 nos773 busy773
	JR_EQ8 busy773 0 motornotbusy773
	SLEEP
	JR motorwaiting773
  motornotbusy773:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds775
	MOVEF_32 500.0 milliseconds775
	DATA32 timer775
	TIMER_WAIT milliseconds775 timer775
	TIMER_READY timer775
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB777:
    MOVEF_F 400.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf778
    DATA8 flag778
    DIVF 360.0 VGV_L tmpf778
    CP_EQF 0.0 VGV_L flag778
    SELECTF flag778 0.0 tmpf778 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while781:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf785
    DATA8 flag785
    DIVF F.1 2.0 tmpf785
    CP_EQF 0.0 2.0 flag785
    SELECTF flag785 0.0 tmpf785 F.0

    JR_GTEQF F.0 VGV_X endwhile781
  whilebody781:
    WRITE32 ENDSUB_F_A3_0:CALLSUB786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB786:
    WRITE32 ENDSUB_F_A2_0:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB787:
    JR_GTEQF VGV_SPEED 80.0 else788_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else788_1:
  endif788:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB790:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf794
    DATA8 flag794
    DIVF F.1 2.0 tmpf794
    CP_EQF 0.0 2.0 flag794
    SELECTF flag794 0.0 tmpf794 F.0

    JR_LTF F.0 VGV_X whilebody781
  endwhile781:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB796:
    JR_NEQF VGV_C 1.0 else797_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB798:
    JR endif797
  else797_1:
    JR_NEQF VGV_C 0.0 else797_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB799:
    JR endif797
  else797_2:
    JR_NEQF VGV_C 2.0 else797_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB800:
    MOVEF_F 140.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB801:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB803:
    CALL MOTOR.RESETCOUNT 'bc'
  while805:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf809
    DATA8 flag809
    DIVF F.1 2.0 tmpf809
    CP_EQF 0.0 2.0 flag809
    SELECTF flag809 0.0 tmpf809 F.0

    JR_GTEQF F.0 450.0 endwhile805
  whilebody805:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB810:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf814
    DATA8 flag814
    DIVF F.1 2.0 tmpf814
    CP_EQF 0.0 2.0 flag814
    SELECTF flag814 0.0 tmpf814 F.0

    JR_LTF F.0 450.0 whilebody805
  endwhile805:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer816
	DATA8 nos816
	DATA8 busy816
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer816 nos816
	JR_EQ8 0 nos816 motornotbusy816
  motorwaiting816:
	OUTPUT_TEST layer816 nos816 busy816
	JR_EQ8 busy816 0 motornotbusy816
	SLEEP
	JR motorwaiting816
  motornotbusy816:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds818
	MOVEF_32 500.0 milliseconds818
	DATA32 timer818
	TIMER_WAIT milliseconds818 timer818
	TIMER_READY timer818
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB820:
    CALL MOTOR.RESETCOUNT 'bc'
  while822:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf826
    DATA8 flag826
    DIVF F.1 2.0 tmpf826
    CP_EQF 0.0 2.0 flag826
    SELECTF flag826 0.0 tmpf826 F.0

    JR_GTEQF F.0 100.0 endwhile822
  whilebody822:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB827:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf831
    DATA8 flag831
    DIVF F.1 2.0 tmpf831
    CP_EQF 0.0 2.0 flag831
    SELECTF flag831 0.0 tmpf831 F.0

    JR_LTF F.0 100.0 whilebody822
  endwhile822:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB833:
    ADDF VGV_C 1.0 VGV_C
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB835:
  else797_3:
  endif797:
    MOVEF_F 0.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB836:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB838:
    CALL MOTOR.RESETCOUNT 'bc'
  while840:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf844
    DATA8 flag844
    DIVF F.1 2.0 tmpf844
    CP_EQF 0.0 2.0 flag844
    SELECTF flag844 0.0 tmpf844 F.0

    JR_GTEQF F.0 250.0 endwhile840
  whilebody840:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB845 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB845:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf849
    DATA8 flag849
    DIVF F.1 2.0 tmpf849
    CP_EQF 0.0 2.0 flag849
    SELECTF flag849 0.0 tmpf849 F.0

    JR_LTF F.0 250.0 whilebody840
  endwhile840:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds852
	MOVEF_32 500.0 milliseconds852
	DATA32 timer852
	TIMER_WAIT milliseconds852 timer852
	TIMER_READY timer852
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp854
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp854
    JR_NEQ32 0 tmp854 alreadylaunched854
    OBJECT_START TF_VIDVIG_0
  alreadylaunched854:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB855:
    WRITE32 ENDSUB_F_SB2_0:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB2_0
CALLSUB856:
    ADDF VGV_C 1.0 VGV_C
  else759_1:
  endif759:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB858:
    JR_LTF VGV_H 30.0 or860
    JR_LTEQF VGV_H 100.0 else859_1
  or860:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif859
  else859_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else859_2:
  endif859:
    JR_NEQF VGV_COLOR5 4.0 else863_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer864
	DATA8 nos864
	DATA8 busy864
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer864 nos864
	JR_EQ8 0 nos864 motornotbusy864
  motorwaiting864:
	OUTPUT_TEST layer864 nos864 busy864
	JR_EQ8 busy864 0 motornotbusy864
	SLEEP
	JR motorwaiting864
  motornotbusy864:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB865:
    WRITE32 ENDSUB_F_PR_0:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB866:
    CALL MOTOR.RESETCOUNT 'bc'
  while868:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf872
    DATA8 flag872
    DIVF F.1 2.0 tmpf872
    CP_EQF 0.0 2.0 flag872
    SELECTF flag872 0.0 tmpf872 F.0

    JR_GTEQF F.0 270.0 endwhile868
  whilebody868:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB873:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf877
    DATA8 flag877
    DIVF F.1 2.0 tmpf877
    CP_EQF 0.0 2.0 flag877
    SELECTF flag877 0.0 tmpf877 F.0

    JR_LTF F.0 270.0 whilebody868
  endwhile868:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds880
	MOVEF_32 500.0 milliseconds880
	DATA32 timer880
	TIMER_WAIT milliseconds880 timer880
	TIMER_READY timer880
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB882:
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB883:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf884
    DATA8 flag884
    DIVF 360.0 VGV_L tmpf884
    CP_EQF 0.0 VGV_L flag884
    SELECTF flag884 0.0 tmpf884 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while887:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf891
    DATA8 flag891
    DIVF F.1 2.0 tmpf891
    CP_EQF 0.0 2.0 flag891
    SELECTF flag891 0.0 tmpf891 F.0

    JR_GTEQF F.0 VGV_X endwhile887
  whilebody887:
    WRITE32 ENDSUB_F_A3_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB892:
    WRITE32 ENDSUB_F_A2_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB893:
    JR_GTEQF VGV_SPEED 80.0 else894_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else894_1:
  endif894:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB896:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf900
    DATA8 flag900
    DIVF F.1 2.0 tmpf900
    CP_EQF 0.0 2.0 flag900
    SELECTF flag900 0.0 tmpf900 F.0

    JR_LTF F.0 VGV_X whilebody887
  endwhile887:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB902:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB903:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB904:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 65.0 'true'

	DATA8 layer906
	DATA8 nos906
	DATA8 busy906
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer906 nos906
	JR_EQ8 0 nos906 motornotbusy906
  motorwaiting906:
	OUTPUT_TEST layer906 nos906 busy906
	JR_EQ8 busy906 0 motornotbusy906
	SLEEP
	JR motorwaiting906
  motornotbusy906:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer908
	DATA8 nos908
	DATA8 busy908
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer908 nos908
	JR_EQ8 0 nos908 motornotbusy908
  motorwaiting908:
	OUTPUT_TEST layer908 nos908 busy908
	JR_EQ8 busy908 0 motornotbusy908
	SLEEP
	JR motorwaiting908
  motornotbusy908:
    WRITE32 ENDSUB_F_A3_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB909:
    WRITE32 ENDSUB_F_A2_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB910:
  while911:
    JR_LTEQF VGV_S3 15.0 endwhile911
  whilebody911:
    WRITE32 ENDSUB_F_A3_0:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB912:
    WRITE32 ENDSUB_F_A2_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB913:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody911
  endwhile911:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB916:
    WRITE32 ENDSUB_F_A2_0:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB917:
  while918:
    JR_GTEQF VGV_S3 60.0 endwhile918
  whilebody918:
    WRITE32 ENDSUB_F_A3_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB919:
    WRITE32 ENDSUB_F_A2_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB920:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody918
  endwhile918:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while924:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf928
    DATA8 flag928
    DIVF F.1 2.0 tmpf928
    CP_EQF 0.0 2.0 flag928
    SELECTF flag928 0.0 tmpf928 F.0

    JR_GTEQF F.0 80.0 endwhile924
  whilebody924:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB929:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf933
    DATA8 flag933
    DIVF F.1 2.0 tmpf933
    CP_EQF 0.0 2.0 flag933
    SELECTF flag933 0.0 tmpf933 F.0

    JR_LTF F.0 80.0 whilebody924
  endwhile924:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 120.0 'true'

	DATA8 layer934
	DATA8 nos934
	DATA8 busy934
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer934 nos934
	JR_EQ8 0 nos934 motornotbusy934
  motorwaiting934:
	OUTPUT_TEST layer934 nos934 busy934
	JR_EQ8 busy934 0 motornotbusy934
	SLEEP
	JR motorwaiting934
  motornotbusy934:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds937
	MOVEF_32 500.0 milliseconds937
	DATA32 timer937
	TIMER_WAIT milliseconds937 timer937
	TIMER_READY timer937
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB939:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB940:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB941:
  else863_1:
  endif863:
    JR_NEQF VGV_COLOR5 5.0 else942_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB943:
    CALL MOTOR.RESETCOUNT 'bc'
  while945:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf949
    DATA8 flag949
    DIVF F.1 2.0 tmpf949
    CP_EQF 0.0 2.0 flag949
    SELECTF flag949 0.0 tmpf949 F.0

    JR_GTEQF F.0 210.0 endwhile945
  whilebody945:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB950:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf954
    DATA8 flag954
    DIVF F.1 2.0 tmpf954
    CP_EQF 0.0 2.0 flag954
    SELECTF flag954 0.0 tmpf954 F.0

    JR_LTF F.0 210.0 whilebody945
  endwhile945:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer956
	DATA8 nos956
	DATA8 busy956
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer956 nos956
	JR_EQ8 0 nos956 motornotbusy956
  motorwaiting956:
	OUTPUT_TEST layer956 nos956 busy956
	JR_EQ8 busy956 0 motornotbusy956
	SLEEP
	JR motorwaiting956
  motornotbusy956:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds958
	MOVEF_32 500.0 milliseconds958
	DATA32 timer958
	TIMER_WAIT milliseconds958 timer958
	TIMER_READY timer958
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB960:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf961
    DATA8 flag961
    DIVF 360.0 VGV_L tmpf961
    CP_EQF 0.0 VGV_L flag961
    SELECTF flag961 0.0 tmpf961 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while964:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf968
    DATA8 flag968
    DIVF F.1 2.0 tmpf968
    CP_EQF 0.0 2.0 flag968
    SELECTF flag968 0.0 tmpf968 F.0

    JR_GTEQF F.0 VGV_X endwhile964
  whilebody964:
    WRITE32 ENDSUB_F_A3_0:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB969:
    WRITE32 ENDSUB_F_A2_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB970:
    JR_GTEQF VGV_SPEED 80.0 else971_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else971_1:
  endif971:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB973:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf977
    DATA8 flag977
    DIVF F.1 2.0 tmpf977
    CP_EQF 0.0 2.0 flag977
    SELECTF flag977 0.0 tmpf977 F.0

    JR_LTF F.0 VGV_X whilebody964
  endwhile964:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB979:
    JR_NEQF VGV_C 1.0 else980_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB981:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB982:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB984:
    CALL MOTOR.RESETCOUNT 'bc'
  while986:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf990
    DATA8 flag990
    DIVF F.1 2.0 tmpf990
    CP_EQF 0.0 2.0 flag990
    SELECTF flag990 0.0 tmpf990 F.0

    JR_GTEQF F.0 160.0 endwhile986
  whilebody986:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB991:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf995
    DATA8 flag995
    DIVF F.1 2.0 tmpf995
    CP_EQF 0.0 2.0 flag995
    SELECTF flag995 0.0 tmpf995 F.0

    JR_LTF F.0 160.0 whilebody986
  endwhile986:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds998
	MOVEF_32 500.0 milliseconds998
	DATA32 timer998
	TIMER_WAIT milliseconds998 timer998
	TIMER_READY timer998
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1000:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1001:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1002:
    CALL MOTOR.RESETCOUNT 'bc'
  while1004:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1008
    DATA8 flag1008
    DIVF F.1 2.0 tmpf1008
    CP_EQF 0.0 2.0 flag1008
    SELECTF flag1008 0.0 tmpf1008 F.0

    JR_GTEQF F.0 80.0 endwhile1004
  whilebody1004:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1009:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1013
    DATA8 flag1013
    DIVF F.1 2.0 tmpf1013
    CP_EQF 0.0 2.0 flag1013
    SELECTF flag1013 0.0 tmpf1013 F.0

    JR_LTF F.0 80.0 whilebody1004
  endwhile1004:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1015
	DATA8 nos1015
	DATA8 busy1015
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1015 nos1015
	JR_EQ8 0 nos1015 motornotbusy1015
  motorwaiting1015:
	OUTPUT_TEST layer1015 nos1015 busy1015
	JR_EQ8 busy1015 0 motornotbusy1015
	SLEEP
	JR motorwaiting1015
  motornotbusy1015:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1017
	MOVEF_32 500.0 milliseconds1017
	DATA32 timer1017
	TIMER_WAIT milliseconds1017 timer1017
	TIMER_READY timer1017
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1019
	DATA8 no1019
	DATA8 mode81019
	
	MOVEF_8 2.0 no1019
	SUB8 no1019 1 no1019
	DIV8 no1019 4 layer1019
	MATH MOD8 no1019 4 no1019

	MOVEF_8 0.0 mode81019
	
	INPUT_DEVICE READY_RAW layer1019 no1019 0 mode81019 0
    DATA8 layer1020
	DATA8 no1020
	DATA8 mode81020
	
	MOVEF_8 3.0 no1020
	SUB8 no1020 1 no1020
	DIV8 no1020 4 layer1020
	MATH MOD8 no1020 4 no1020

	MOVEF_8 0.0 mode81020
	
	INPUT_DEVICE READY_RAW layer1020 no1020 0 mode81020 0
  while1021:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1023
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1022
  and1023:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1026
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1022
  and1026:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1021
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1021
  or1022:
  whilebody1021:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1032
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1021
  and1032:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1035
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1021
  and1035:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1038
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1021
  and1038:
  endwhile1021:
  while1041:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1041
  whilebody1041:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1041
  endwhile1041:
    CALL MOTOR.STOP 'B' 'True'
  while1046:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1046
  whilebody1046:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1046
  endwhile1046:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1051
	DATA8 nos1051
	DATA8 busy1051
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1051 nos1051
	JR_EQ8 0 nos1051 motornotbusy1051
  motorwaiting1051:
	OUTPUT_TEST layer1051 nos1051 busy1051
	JR_EQ8 busy1051 0 motornotbusy1051
	SLEEP
	JR motorwaiting1051
  motornotbusy1051:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1053
	DATA8 nos1053
	DATA8 busy1053
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1053 nos1053
	JR_EQ8 0 nos1053 motornotbusy1053
  motorwaiting1053:
	OUTPUT_TEST layer1053 nos1053 busy1053
	JR_EQ8 busy1053 0 motornotbusy1053
	SLEEP
	JR motorwaiting1053
  motornotbusy1053:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1055:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1056:
  while1057:
    JR_LTEQF VGV_S3 10.0 endwhile1057
  whilebody1057:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1058:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1059:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1057
  endwhile1057:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1061:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1062:
  while1063:
    JR_GTEQF VGV_S3 55.0 endwhile1063
  whilebody1063:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1064:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1065:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1063
  endwhile1063:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1068
    DATA8 flag1068
    DIVF 360.0 VGV_L tmpf1068
    CP_EQF 0.0 VGV_L flag1068
    SELECTF flag1068 0.0 tmpf1068 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1071:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1075
    DATA8 flag1075
    DIVF F.1 2.0 tmpf1075
    CP_EQF 0.0 2.0 flag1075
    SELECTF flag1075 0.0 tmpf1075 F.0

    JR_GTEQF F.0 VGV_X endwhile1071
  whilebody1071:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1076:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1077:
    JR_GTEQF VGV_SPEED 80.0 else1078_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1078_1:
  endif1078:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1080:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1084
    DATA8 flag1084
    DIVF F.1 2.0 tmpf1084
    CP_EQF 0.0 2.0 flag1084
    SELECTF flag1084 0.0 tmpf1084 F.0

    JR_LTF F.0 VGV_X whilebody1071
  endwhile1071:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1086:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1087:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1088:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1090:
    CALL MOTOR.RESETCOUNT 'bc'
  while1092:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1096
    DATA8 flag1096
    DIVF F.1 2.0 tmpf1096
    CP_EQF 0.0 2.0 flag1096
    SELECTF flag1096 0.0 tmpf1096 F.0

    JR_GTEQF F.0 80.0 endwhile1092
  whilebody1092:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1097:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1101
    DATA8 flag1101
    DIVF F.1 2.0 tmpf1101
    CP_EQF 0.0 2.0 flag1101
    SELECTF flag1101 0.0 tmpf1101 F.0

    JR_LTF F.0 80.0 whilebody1092
  endwhile1092:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1103
	DATA8 nos1103
	DATA8 busy1103
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1103 nos1103
	JR_EQ8 0 nos1103 motornotbusy1103
  motorwaiting1103:
	OUTPUT_TEST layer1103 nos1103 busy1103
	JR_EQ8 busy1103 0 motornotbusy1103
	SLEEP
	JR motorwaiting1103
  motornotbusy1103:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1105
	MOVEF_32 500.0 milliseconds1105
	DATA32 timer1105
	TIMER_WAIT milliseconds1105 timer1105
	TIMER_READY timer1105
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1107:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1108:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1109:
    JR endif980
  else980_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1110:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1111:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1113:
    CALL MOTOR.RESETCOUNT 'bc'
  while1115:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1119
    DATA8 flag1119
    DIVF F.1 2.0 tmpf1119
    CP_EQF 0.0 2.0 flag1119
    SELECTF flag1119 0.0 tmpf1119 F.0

    JR_GTEQF F.0 160.0 endwhile1115
  whilebody1115:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1120:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1124
    DATA8 flag1124
    DIVF F.1 2.0 tmpf1124
    CP_EQF 0.0 2.0 flag1124
    SELECTF flag1124 0.0 tmpf1124 F.0

    JR_LTF F.0 160.0 whilebody1115
  endwhile1115:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1126
	DATA8 nos1126
	DATA8 busy1126
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1126 nos1126
	JR_EQ8 0 nos1126 motornotbusy1126
  motorwaiting1126:
	OUTPUT_TEST layer1126 nos1126 busy1126
	JR_EQ8 busy1126 0 motornotbusy1126
	SLEEP
	JR motorwaiting1126
  motornotbusy1126:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1128
	MOVEF_32 500.0 milliseconds1128
	DATA32 timer1128
	TIMER_WAIT milliseconds1128 timer1128
	TIMER_READY timer1128
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1130:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1131:
    WRITE32 ENDSUB_F_FINISH_0:CALLSUB1132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_0
CALLSUB1132:
  else980_2:
  endif980:
  else942_1:
  endif942:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1134
	DATA8 nos1134
	DATA8 busy1134
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1134 nos1134
	JR_EQ8 0 nos1134 motornotbusy1134
  motorwaiting1134:
	OUTPUT_TEST layer1134 nos1134 busy1134
	JR_EQ8 busy1134 0 motornotbusy1134
	SLEEP
	JR motorwaiting1134
  motornotbusy1134:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1135
	DATA8 nos1135
	DATA8 busy1135
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1135 nos1135
	JR_EQ8 0 nos1135 motornotbusy1135
  motorwaiting1135:
	OUTPUT_TEST layer1135 nos1135 busy1135
	JR_EQ8 busy1135 0 motornotbusy1135
	SLEEP
	JR motorwaiting1135
  motornotbusy1135:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1137
	DATA8 nos1137
	DATA8 busy1137
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1137 nos1137
	JR_EQ8 0 nos1137 motornotbusy1137
  motorwaiting1137:
	OUTPUT_TEST layer1137 nos1137 busy1137
	JR_EQ8 busy1137 0 motornotbusy1137
	SLEEP
	JR motorwaiting1137
  motornotbusy1137:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1138
	DATA8 nos1138
	DATA8 busy1138
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1138 nos1138
	JR_EQ8 0 nos1138 motornotbusy1138
  motorwaiting1138:
	OUTPUT_TEST layer1138 nos1138 busy1138
	JR_EQ8 busy1138 0 motornotbusy1138
	SLEEP
	JR motorwaiting1138
  motornotbusy1138:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1140
    DATA8 flag1140
    DIVF 360.0 VGV_L tmpf1140
    CP_EQF 0.0 VGV_L flag1140
    SELECTF flag1140 0.0 tmpf1140 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1143:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1147
    DATA8 flag1147
    DIVF F.1 2.0 tmpf1147
    CP_EQF 0.0 2.0 flag1147
    SELECTF flag1147 0.0 tmpf1147 F.0

    JR_GTEQF F.0 VGV_X endwhile1143
  whilebody1143:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1148:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1149:
    JR_GTEQF VGV_SPEED 80.0 else1150_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1150_1:
  endif1150:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1152:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1156
    DATA8 flag1156
    DIVF F.1 2.0 tmpf1156
    CP_EQF 0.0 2.0 flag1156
    SELECTF flag1156 0.0 tmpf1156 F.0

    JR_LTF F.0 VGV_X whilebody1143
  endwhile1143:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1158:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1160
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1160
    JR_NEQ32 0 tmp1160 alreadylaunched1160
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1160:
ENDTHREAD:
    RETURN
SUB_F_FINISH_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 146.0 'true'

	DATA8 layer1161
	DATA8 nos1161
	DATA8 busy1161
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1161 nos1161
	JR_EQ8 0 nos1161 motornotbusy1161
  motorwaiting1161:
	OUTPUT_TEST layer1161 nos1161 busy1161
	JR_EQ8 busy1161 0 motornotbusy1161
	SLEEP
	JR motorwaiting1161
  motornotbusy1161:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 146.0 'true'

	DATA8 layer1162
	DATA8 nos1162
	DATA8 busy1162
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1162 nos1162
	JR_EQ8 0 nos1162 motornotbusy1162
  motorwaiting1162:
	OUTPUT_TEST layer1162 nos1162 busy1162
	JR_EQ8 busy1162 0 motornotbusy1162
	SLEEP
	JR motorwaiting1162
  motornotbusy1162:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1163
	DATA8 nos1163
	DATA8 busy1163
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1163 nos1163
	JR_EQ8 0 nos1163 motornotbusy1163
  motorwaiting1163:
	OUTPUT_TEST layer1163 nos1163 busy1163
	JR_EQ8 busy1163 0 motornotbusy1163
	SLEEP
	JR motorwaiting1163
  motornotbusy1163:
    PROGRAM_STOP -1
RETSUB_F_FINISH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_0:
SUB_F_SB2_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1165:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1166:
  while1167:
    JR_LTEQF VGV_S3 10.0 and1169
    JR_GTF VGV_S2 10.0 or1168
  and1169:
    JR_GTEQF VGV_S3 10.0 endwhile1167
    JR_GTEQF VGV_S2 10.0 endwhile1167
  or1168:
  whilebody1167:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1170:
    JR_LTEQF VGV_S3 10.0 and1171
    JR_GTF VGV_S2 10.0 whilebody1167
  and1171:
    JR_GTEQF VGV_S3 10.0 and1172
    JR_LTF VGV_S2 10.0 whilebody1167
  and1172:
  endwhile1167:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1174
	DATA8 nos1174
	DATA8 busy1174
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1174 nos1174
	JR_EQ8 0 nos1174 motornotbusy1174
  motorwaiting1174:
	OUTPUT_TEST layer1174 nos1174 busy1174
	JR_EQ8 busy1174 0 motornotbusy1174
	SLEEP
	JR motorwaiting1174
  motornotbusy1174:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1175
	DATA8 nos1175
	DATA8 busy1175
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1175 nos1175
	JR_EQ8 0 nos1175 motornotbusy1175
  motorwaiting1175:
	OUTPUT_TEST layer1175 nos1175 busy1175
	JR_EQ8 busy1175 0 motornotbusy1175
	SLEEP
	JR motorwaiting1175
  motornotbusy1175:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 300.0 'true'

	DATA8 layer1176
	DATA8 nos1176
	DATA8 busy1176
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1176 nos1176
	JR_EQ8 0 nos1176 motornotbusy1176
  motorwaiting1176:
	OUTPUT_TEST layer1176 nos1176 busy1176
	JR_EQ8 busy1176 0 motornotbusy1176
	SLEEP
	JR motorwaiting1176
  motornotbusy1176:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1177:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1178:
  while1179:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1179
  whilebody1179:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1179
  endwhile1179:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1184:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1185:
  while1186:
    JR_GTEQF VGV_S3 55.0 endwhile1186
  whilebody1186:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1187:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1188:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 55.0 whilebody1186
  endwhile1186:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1191
	DATA8 nos1191
	DATA8 busy1191
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1191 nos1191
	JR_EQ8 0 nos1191 motornotbusy1191
  motorwaiting1191:
	OUTPUT_TEST layer1191 nos1191 busy1191
	JR_EQ8 busy1191 0 motornotbusy1191
	SLEEP
	JR motorwaiting1191
  motornotbusy1191:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 20.0 'true'

	DATA8 layer1192
	DATA8 nos1192
	DATA8 busy1192
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1192 nos1192
	JR_EQ8 0 nos1192 motornotbusy1192
  motorwaiting1192:
	OUTPUT_TEST layer1192 nos1192 busy1192
	JR_EQ8 busy1192 0 motornotbusy1192
	SLEEP
	JR motorwaiting1192
  motornotbusy1192:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1193:
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 15.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1194
    DATA8 flag1194
    DIVF 360.0 VGV_L tmpf1194
    CP_EQF 0.0 VGV_L flag1194
    SELECTF flag1194 0.0 tmpf1194 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1197:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1201
    DATA8 flag1201
    DIVF F.1 2.0 tmpf1201
    CP_EQF 0.0 2.0 flag1201
    SELECTF flag1201 0.0 tmpf1201 F.0

    JR_GTEQF F.0 VGV_X endwhile1197
  whilebody1197:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1202:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1203:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1204:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1208
    DATA8 flag1208
    DIVF F.1 2.0 tmpf1208
    CP_EQF 0.0 2.0 flag1208
    SELECTF flag1208 0.0 tmpf1208 F.0

    JR_LTF F.0 VGV_X whilebody1197
  endwhile1197:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1210:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1211:
  while1212:
    JR_LTEQF VGV_S3 15.0 and1214
    JR_GTF VGV_S2 15.0 or1213
  and1214:
    JR_GTEQF VGV_S3 15.0 endwhile1212
    JR_GTEQF VGV_S2 15.0 endwhile1212
  or1213:
  whilebody1212:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1215:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1216:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1217:
    JR_LTEQF VGV_S3 15.0 and1218
    JR_GTF VGV_S2 15.0 whilebody1212
  and1218:
    JR_GTEQF VGV_S3 15.0 and1219
    JR_LTF VGV_S2 15.0 whilebody1212
  and1219:
  endwhile1212:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1221
	DATA8 nos1221
	DATA8 busy1221
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1221 nos1221
	JR_EQ8 0 nos1221 motornotbusy1221
  motorwaiting1221:
	OUTPUT_TEST layer1221 nos1221 busy1221
	JR_EQ8 busy1221 0 motornotbusy1221
	SLEEP
	JR motorwaiting1221
  motornotbusy1221:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1222:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1223:
  while1224:
    JR_GTEQF VGV_S2 60.0 endwhile1224
  whilebody1224:
    CALL MOTOR.STARTSYNC 'bc' -40.0 40.0
    JR_LTF VGV_S2 60.0 whilebody1224
  endwhile1224:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1227:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1228:
  while1229:
    JR_LTEQF VGV_S3 10.0 and1231
    JR_GTF VGV_S2 10.0 or1230
  and1231:
    JR_GTEQF VGV_S3 10.0 endwhile1229
    JR_GTEQF VGV_S2 10.0 endwhile1229
  or1230:
  whilebody1229:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1232:
    JR_LTEQF VGV_S3 10.0 and1233
    JR_GTF VGV_S2 10.0 whilebody1229
  and1233:
    JR_GTEQF VGV_S3 10.0 and1234
    JR_LTF VGV_S2 10.0 whilebody1229
  and1234:
  endwhile1229:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB2_0:
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1236
    DATA8 flag1236
    DIVF 360.0 VGV_L tmpf1236
    CP_EQF 0.0 VGV_L flag1236
    SELECTF flag1236 0.0 tmpf1236 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 20.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1239:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1243
    DATA8 flag1243
    DIVF F.1 2.0 tmpf1243
    CP_EQF 0.0 2.0 flag1243
    SELECTF flag1243 0.0 tmpf1243 F.0

    JR_GTEQF F.0 VGV_X endwhile1239
  whilebody1239:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1244:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1245:
    JR_GTEQF VGV_SPEED 80.0 else1246_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1246_1:
  endif1246:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1248:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1252
    DATA8 flag1252
    DIVF F.1 2.0 tmpf1252
    CP_EQF 0.0 2.0 flag1252
    SELECTF flag1252 0.0 tmpf1252 F.0

    JR_LTF F.0 VGV_X whilebody1239
  endwhile1239:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.3 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1254:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1255:
  while1256:
    JR_LTEQF VGV_S3 15.0 and1258
    JR_GTF VGV_S2 15.0 or1257
  and1258:
    JR_GTEQF VGV_S3 15.0 endwhile1256
    JR_GTEQF VGV_S2 15.0 endwhile1256
  or1257:
  whilebody1256:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1259:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1260:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1261:
    JR_LTEQF VGV_S3 15.0 and1262
    JR_GTF VGV_S2 15.0 whilebody1256
  and1262:
    JR_GTEQF VGV_S3 15.0 and1263
    JR_LTF VGV_S2 15.0 whilebody1256
  and1263:
  endwhile1256:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer1265
	DATA8 nos1265
	DATA8 busy1265
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1265 nos1265
	JR_EQ8 0 nos1265 motornotbusy1265
  motorwaiting1265:
	OUTPUT_TEST layer1265 nos1265 busy1265
	JR_EQ8 busy1265 0 motornotbusy1265
	SLEEP
	JR motorwaiting1265
  motornotbusy1265:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 50.0 'true'

	DATA8 layer1267
	DATA8 nos1267
	DATA8 busy1267
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1267 nos1267
	JR_EQ8 0 nos1267 motornotbusy1267
  motorwaiting1267:
	OUTPUT_TEST layer1267 nos1267 busy1267
	JR_EQ8 busy1267 0 motornotbusy1267
	SLEEP
	JR motorwaiting1267
  motornotbusy1267:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1268:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1269:
  while1270:
    JR_LTEQF VGV_S2 15.0 endwhile1270
  whilebody1270:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1271:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1272:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody1270
  endwhile1270:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1275:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1276:
  while1277:
    JR_GTEQF VGV_S2 55.0 endwhile1277
  whilebody1277:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1278:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1279:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody1277
  endwhile1277:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer1282
	DATA8 nos1282
	DATA8 busy1282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1282 nos1282
	JR_EQ8 0 nos1282 motornotbusy1282
  motorwaiting1282:
	OUTPUT_TEST layer1282 nos1282 busy1282
	JR_EQ8 busy1282 0 motornotbusy1282
	SLEEP
	JR motorwaiting1282
  motornotbusy1282:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1284
	DATA8 nos1284
	DATA8 busy1284
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1284 nos1284
	JR_EQ8 0 nos1284 motornotbusy1284
  motorwaiting1284:
	OUTPUT_TEST layer1284 nos1284 busy1284
	JR_EQ8 busy1284 0 motornotbusy1284
	SLEEP
	JR motorwaiting1284
  motornotbusy1284:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1285:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1286:
  while1287:
    JR_LTEQF VGV_S3 15.0 endwhile1287
  whilebody1287:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1288:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1289:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1287
  endwhile1287:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1292:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1293:
  while1294:
    JR_GTEQF VGV_S3 60.0 endwhile1294
  whilebody1294:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1295:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1296:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1294
  endwhile1294:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1299:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1300:
  while1301:
    JR_LTEQF VGV_S2 9.0 and1303
    JR_GTF VGV_S3 9.0 or1302
  and1303:
    JR_GTEQF VGV_S2 9.0 and1304
    JR_GTF VGV_S3 9.0 or1302
  and1304:
    JR_LTEQF VGV_S2 9.0 endwhile1301
    JR_GTEQF VGV_S3 9.0 endwhile1301
  or1302:
  whilebody1301:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1305:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1306:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1308
    JR_GTF VGV_S3 9.0 whilebody1301
  and1308:
    JR_GTEQF VGV_S2 9.0 and1309
    JR_GTF VGV_S3 9.0 whilebody1301
  and1309:
    JR_LTEQF VGV_S2 9.0 and1310
    JR_LTF VGV_S3 9.0 whilebody1301
  and1310:
  endwhile1301:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 53.0 'true'

	DATA8 layer1311
	DATA8 nos1311
	DATA8 busy1311
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1311 nos1311
	JR_EQ8 0 nos1311 motornotbusy1311
  motorwaiting1311:
	OUTPUT_TEST layer1311 nos1311 busy1311
	JR_EQ8 busy1311 0 motornotbusy1311
	SLEEP
	JR motorwaiting1311
  motornotbusy1311:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1313
	DATA8 nos1313
	DATA8 busy1313
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1313 nos1313
	JR_EQ8 0 nos1313 motornotbusy1313
  motorwaiting1313:
	OUTPUT_TEST layer1313 nos1313 busy1313
	JR_EQ8 busy1313 0 motornotbusy1313
	SLEEP
	JR motorwaiting1313
  motornotbusy1313:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1315:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1316:
  while1317:
    JR_LTEQF VGV_S2 10.0 endwhile1317
  whilebody1317:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1318:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1319:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1317
  endwhile1317:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1321:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1322:
  while1323:
    JR_GTEQF VGV_S2 60.0 endwhile1323
  whilebody1323:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1324:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1325:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1323
  endwhile1323:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1328:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 25.0 'true'

	DATA8 layer1329
	DATA8 nos1329
	DATA8 busy1329
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1329 nos1329
	JR_EQ8 0 nos1329 motornotbusy1329
  motorwaiting1329:
	OUTPUT_TEST layer1329 nos1329 busy1329
	JR_EQ8 busy1329 0 motornotbusy1329
	SLEEP
	JR motorwaiting1329
  motornotbusy1329:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1331
	DATA8 nos1331
	DATA8 busy1331
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1331 nos1331
	JR_EQ8 0 nos1331 motornotbusy1331
  motorwaiting1331:
	OUTPUT_TEST layer1331 nos1331 busy1331
	JR_EQ8 busy1331 0 motornotbusy1331
	SLEEP
	JR motorwaiting1331
  motornotbusy1331:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1333:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1334:
  while1335:
    JR_LTEQF VGV_S3 8.0 endwhile1335
  whilebody1335:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1336:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1337:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1335
  endwhile1335:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1339:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1340:
  while1341:
    JR_GTEQF VGV_S3 55.0 endwhile1341
  whilebody1341:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1342:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1343:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1341
  endwhile1341:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1346
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1346
    JR_NEQ32 0 tmp1346 alreadylaunched1346
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1346:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1347:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1348:
  while1349:
    JR_LTEQF VGV_S3 15.0 and1351
    JR_GTF VGV_S2 15.0 or1350
  and1351:
    JR_GTEQF VGV_S3 15.0 and1352
    JR_GTF VGV_S2 15.0 or1350
  and1352:
    JR_LTEQF VGV_S3 15.0 endwhile1349
    JR_GTEQF VGV_S2 15.0 endwhile1349
  or1350:
  whilebody1349:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1353:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1354:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1355:
    JR_LTEQF VGV_S3 15.0 and1356
    JR_GTF VGV_S2 15.0 whilebody1349
  and1356:
    JR_GTEQF VGV_S3 15.0 and1357
    JR_GTF VGV_S2 15.0 whilebody1349
  and1357:
    JR_LTEQF VGV_S3 15.0 and1358
    JR_LTF VGV_S2 15.0 whilebody1349
  and1358:
  endwhile1349:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1360
	DATA8 nos1360
	DATA8 busy1360
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1360 nos1360
	JR_EQ8 0 nos1360 motornotbusy1360
  motorwaiting1360:
	OUTPUT_TEST layer1360 nos1360 busy1360
	JR_EQ8 busy1360 0 motornotbusy1360
	SLEEP
	JR motorwaiting1360
  motornotbusy1360:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1361
	DATA8 nos1361
	DATA8 busy1361
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1361 nos1361
	JR_EQ8 0 nos1361 motornotbusy1361
  motorwaiting1361:
	OUTPUT_TEST layer1361 nos1361 busy1361
	JR_EQ8 busy1361 0 motornotbusy1361
	SLEEP
	JR motorwaiting1361
  motornotbusy1361:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1364:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1365:
  while1366:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1366
  whilebody1366:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1368:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1369:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1370:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1366
  endwhile1366:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1374
	MOVEF_32 500.0 milliseconds1374
	DATA32 timer1374
	TIMER_WAIT milliseconds1374 timer1374
	TIMER_READY timer1374
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1376
	DATA8 nos1376
	DATA8 busy1376
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1376 nos1376
	JR_EQ8 0 nos1376 motornotbusy1376
  motorwaiting1376:
	OUTPUT_TEST layer1376 nos1376 busy1376
	JR_EQ8 busy1376 0 motornotbusy1376
	SLEEP
	JR motorwaiting1376
  motornotbusy1376:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -100.0
    DATA32 milliseconds1378
	MOVEF_32 1400.0 milliseconds1378
	DATA32 timer1378
	TIMER_WAIT milliseconds1378 timer1378
	TIMER_READY timer1378
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1380
	DATA8 nos1380
	DATA8 busy1380
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1380 nos1380
	JR_EQ8 0 nos1380 motornotbusy1380
  motorwaiting1380:
	OUTPUT_TEST layer1380 nos1380 busy1380
	JR_EQ8 busy1380 0 motornotbusy1380
	SLEEP
	JR motorwaiting1380
  motornotbusy1380:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1381
	DATA8 nos1381
	DATA8 busy1381
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1381 nos1381
	JR_EQ8 0 nos1381 motornotbusy1381
  motorwaiting1381:
	OUTPUT_TEST layer1381 nos1381 busy1381
	JR_EQ8 busy1381 0 motornotbusy1381
	SLEEP
	JR motorwaiting1381
  motornotbusy1381:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1382
	DATA8 nos1382
	DATA8 busy1382
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1382 nos1382
	JR_EQ8 0 nos1382 motornotbusy1382
  motorwaiting1382:
	OUTPUT_TEST layer1382 nos1382 busy1382
	JR_EQ8 busy1382 0 motornotbusy1382
	SLEEP
	JR motorwaiting1382
  motornotbusy1382:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1383:
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 45.0 'true'

	DATA8 layer1384
	DATA8 nos1384
	DATA8 busy1384
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1384 nos1384
	JR_EQ8 0 nos1384 motornotbusy1384
  motorwaiting1384:
	OUTPUT_TEST layer1384 nos1384 busy1384
	JR_EQ8 busy1384 0 motornotbusy1384
	SLEEP
	JR motorwaiting1384
  motornotbusy1384:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1385
	DATA8 nos1385
	DATA8 busy1385
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1385 nos1385
	JR_EQ8 0 nos1385 motornotbusy1385
  motorwaiting1385:
	OUTPUT_TEST layer1385 nos1385 busy1385
	JR_EQ8 busy1385 0 motornotbusy1385
	SLEEP
	JR motorwaiting1385
  motornotbusy1385:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1387:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1388:
  while1389:
    JR_LTEQF VGV_S2 15.0 endwhile1389
  whilebody1389:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1390:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1391:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1389
  endwhile1389:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1394:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1395:
  while1396:
    JR_GTEQF VGV_S2 50.0 endwhile1396
  whilebody1396:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1397:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1398:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 50.0 whilebody1396
  endwhile1396:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.5 VGV_K3
    MOVEF_F 4.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1401:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1402:
  while1403:
    JR_LTEQF VGV_S3 15.0 and1405
    JR_GTF VGV_S2 15.0 or1404
  and1405:
    JR_GTEQF VGV_S3 15.0 endwhile1403
    JR_GTEQF VGV_S2 15.0 endwhile1403
  or1404:
  whilebody1403:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1406:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1407:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1408:
    JR_LTEQF VGV_S3 15.0 and1409
    JR_GTF VGV_S2 15.0 whilebody1403
  and1409:
    JR_GTEQF VGV_S3 15.0 and1410
    JR_LTF VGV_S2 15.0 whilebody1403
  and1410:
  endwhile1403:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K3
    MOVEF_F 8.0 VGV_K2
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1412:
    CALL MOTOR.RESETCOUNT 'bc'
  while1414:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1418
    DATA8 flag1418
    DIVF F.1 2.0 tmpf1418
    CP_EQF 0.0 2.0 flag1418
    SELECTF flag1418 0.0 tmpf1418 F.0

    JR_GTEQF F.0 200.0 endwhile1414
  whilebody1414:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1419:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1423
    DATA8 flag1423
    DIVF F.1 2.0 tmpf1423
    CP_EQF 0.0 2.0 flag1423
    SELECTF flag1423 0.0 tmpf1423 F.0

    JR_LTF F.0 200.0 whilebody1414
  endwhile1414:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1425:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1426:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1427:
    JR_GTF VGV_I 1.0 endfor1427
  forbody1427:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1428:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1429:
  while1430:
    JR_LTEQF VGV_S3 15.0 and1432
    JR_GTF VGV_S2 15.0 or1431
  and1432:
    JR_GTEQF VGV_S3 15.0 endwhile1430
    JR_GTEQF VGV_S2 15.0 endwhile1430
  or1431:
  whilebody1430:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1433:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1434:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1435:
    JR_LTEQF VGV_S3 15.0 and1436
    JR_GTF VGV_S2 15.0 whilebody1430
  and1436:
    JR_GTEQF VGV_S3 15.0 and1437
    JR_LTF VGV_S2 15.0 whilebody1430
  and1437:
  endwhile1430:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1439
	DATA8 nos1439
	DATA8 busy1439
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1439 nos1439
	JR_EQ8 0 nos1439 motornotbusy1439
  motorwaiting1439:
	OUTPUT_TEST layer1439 nos1439 busy1439
	JR_EQ8 busy1439 0 motornotbusy1439
	SLEEP
	JR motorwaiting1439
  motornotbusy1439:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1427
  endfor1427:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 15.0 'true'

	DATA8 layer1442
	DATA8 nos1442
	DATA8 busy1442
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1442 nos1442
	JR_EQ8 0 nos1442 motornotbusy1442
  motorwaiting1442:
	OUTPUT_TEST layer1442 nos1442 busy1442
	JR_EQ8 busy1442 0 motornotbusy1442
	SLEEP
	JR motorwaiting1442
  motornotbusy1442:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 185.0 'true'

	DATA8 layer1443
	DATA8 nos1443
	DATA8 busy1443
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1443 nos1443
	JR_EQ8 0 nos1443 motornotbusy1443
  motorwaiting1443:
	OUTPUT_TEST layer1443 nos1443 busy1443
	JR_EQ8 busy1443 0 motornotbusy1443
	SLEEP
	JR motorwaiting1443
  motornotbusy1443:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1444
	DATA8 nos1444
	DATA8 busy1444
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1444 nos1444
	JR_EQ8 0 nos1444 motornotbusy1444
  motorwaiting1444:
	OUTPUT_TEST layer1444 nos1444 busy1444
	JR_EQ8 busy1444 0 motornotbusy1444
	SLEEP
	JR motorwaiting1444
  motornotbusy1444:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1446
	MOVEF_32 500.0 milliseconds1446
	DATA32 timer1446
	TIMER_WAIT milliseconds1446 timer1446
	TIMER_READY timer1446
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 110.0 'true'

	DATA8 layer1448
	DATA8 nos1448
	DATA8 busy1448
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1448 nos1448
	JR_EQ8 0 nos1448 motornotbusy1448
  motorwaiting1448:
	OUTPUT_TEST layer1448 nos1448 busy1448
	JR_EQ8 busy1448 0 motornotbusy1448
	SLEEP
	JR motorwaiting1448
  motornotbusy1448:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 415.0 'true'

	DATA8 layer1449
	DATA8 nos1449
	DATA8 busy1449
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1449 nos1449
	JR_EQ8 0 nos1449 motornotbusy1449
  motorwaiting1449:
	OUTPUT_TEST layer1449 nos1449 busy1449
	JR_EQ8 busy1449 0 motornotbusy1449
	SLEEP
	JR motorwaiting1449
  motornotbusy1449:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1450:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1451:
  while1452:
    JR_LTEQF VGV_S3 10.0 and1454
    JR_GTF VGV_S2 10.0 or1453
  and1454:
    JR_GTEQF VGV_S3 10.0 and1455
    JR_GTF VGV_S2 10.0 or1453
  and1455:
    JR_LTEQF VGV_S3 6.0 endwhile1452
    JR_GTEQF VGV_S2 6.0 endwhile1452
  or1453:
  whilebody1452:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1456:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1457:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1459
    JR_GTF VGV_S2 10.0 whilebody1452
  and1459:
    JR_GTEQF VGV_S3 10.0 and1460
    JR_GTF VGV_S2 10.0 whilebody1452
  and1460:
    JR_LTEQF VGV_S3 6.0 and1461
    JR_LTF VGV_S2 6.0 whilebody1452
  and1461:
  endwhile1452:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1463
	DATA8 nos1463
	DATA8 busy1463
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1463 nos1463
	JR_EQ8 0 nos1463 motornotbusy1463
  motorwaiting1463:
	OUTPUT_TEST layer1463 nos1463 busy1463
	JR_EQ8 busy1463 0 motornotbusy1463
	SLEEP
	JR motorwaiting1463
  motornotbusy1463:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1465:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1466:
  while1467:
    JR_LTEQF VGV_S3 10.0 endwhile1467
  whilebody1467:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1468:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1469:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1467
  endwhile1467:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1472:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1473:
  while1474:
    JR_GTEQF VGV_S3 60.0 endwhile1474
  whilebody1474:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1475:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1476:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1474
  endwhile1474:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1479
	MOVEF_32 100.0 milliseconds1479
	DATA32 timer1479
	TIMER_WAIT milliseconds1479 timer1479
	TIMER_READY timer1479
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1480:
    CALL MOTOR.RESETCOUNT 'bc'
  while1482:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1486
    DATA8 flag1486
    DIVF F.1 2.0 tmpf1486
    CP_EQF 0.0 2.0 flag1486
    SELECTF flag1486 0.0 tmpf1486 F.0

    JR_GTEQF F.0 200.0 endwhile1482
  whilebody1482:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1487:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1491
    DATA8 flag1491
    DIVF F.1 2.0 tmpf1491
    CP_EQF 0.0 2.0 flag1491
    SELECTF flag1491 0.0 tmpf1491 F.0

    JR_LTF F.0 200.0 whilebody1482
  endwhile1482:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1493:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1494:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1495:
    JR_GTF VGV_I 2.0 endfor1495
  forbody1495:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1496:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1497:
  while1498:
    JR_LTEQF VGV_S3 15.0 and1500
    JR_GTF VGV_S2 15.0 or1499
  and1500:
    JR_GTEQF VGV_S3 15.0 endwhile1498
    JR_GTEQF VGV_S2 15.0 endwhile1498
  or1499:
  whilebody1498:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1501:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1502:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1503:
    JR_LTEQF VGV_S3 15.0 and1504
    JR_GTF VGV_S2 15.0 whilebody1498
  and1504:
    JR_GTEQF VGV_S3 15.0 and1505
    JR_LTF VGV_S2 15.0 whilebody1498
  and1505:
  endwhile1498:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1507
	DATA8 nos1507
	DATA8 busy1507
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1507 nos1507
	JR_EQ8 0 nos1507 motornotbusy1507
  motorwaiting1507:
	OUTPUT_TEST layer1507 nos1507 busy1507
	JR_EQ8 busy1507 0 motornotbusy1507
	SLEEP
	JR motorwaiting1507
  motornotbusy1507:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1495
  endfor1495:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 15.0 'true'

	DATA8 layer1510
	DATA8 nos1510
	DATA8 busy1510
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1510 nos1510
	JR_EQ8 0 nos1510 motornotbusy1510
  motorwaiting1510:
	OUTPUT_TEST layer1510 nos1510 busy1510
	JR_EQ8 busy1510 0 motornotbusy1510
	SLEEP
	JR motorwaiting1510
  motornotbusy1510:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1512:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1513:
    MOVEF_F 80.0 VGV_J
  while1514:
    JR_LTEQF VGV_S3 10.0 endwhile1514
  whilebody1514:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1515:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1516:
    JR_LTEQF VGV_J 30.0 else1517_1
    SUBF VGV_J 0.1 VGV_J
  else1517_1:
  endif1517:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1514
  endwhile1514:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1521:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1522:
    MOVEF_F 80.0 VGV_J
  while1523:
    JR_GTEQF VGV_S3 15.0 endwhile1523
  whilebody1523:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1524:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1525:
    JR_LTEQF VGV_J 30.0 else1526_1
    SUBF VGV_J 0.1 VGV_J
  else1526_1:
  endif1526:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1523
  endwhile1523:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1531:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1535
    DATA8 flag1535
    DIVF F.1 2.0 tmpf1535
    CP_EQF 0.0 2.0 flag1535
    SELECTF flag1535 0.0 tmpf1535 F.0

    JR_GTEQF F.0 50.0 endwhile1531
  whilebody1531:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1536:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1537:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1538:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1539:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1541
    DATA8 flag1541
    DIVF F.1 2.0 tmpf1541
    CP_EQF 0.0 2.0 flag1541
    SELECTF flag1541 0.0 tmpf1541 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1553
    DATA8 flag1553
    DIVF F.1 2.0 tmpf1553
    CP_EQF 0.0 2.0 flag1553
    SELECTF flag1553 0.0 tmpf1553 F.0

    JR_LTF F.0 50.0 whilebody1531
  endwhile1531:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 18.0 18.0 95.0 'true'

	DATA8 layer1555
	DATA8 nos1555
	DATA8 busy1555
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1555 nos1555
	JR_EQ8 0 nos1555 motornotbusy1555
  motorwaiting1555:
	OUTPUT_TEST layer1555 nos1555 busy1555
	JR_EQ8 busy1555 0 motornotbusy1555
	SLEEP
	JR motorwaiting1555
  motornotbusy1555:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1557
	MOVEF_32 500.0 milliseconds1557
	DATA32 timer1557
	TIMER_WAIT milliseconds1557 timer1557
	TIMER_READY timer1557
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1560:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1564
    DATA8 flag1564
    DIVF F.1 2.0 tmpf1564
    CP_EQF 0.0 2.0 flag1564
    SELECTF flag1564 0.0 tmpf1564 F.0

    JR_LTEQF F.0 -240.0 endwhile1560
  whilebody1560:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1569
    DATA8 flag1569
    DIVF F.1 2.0 tmpf1569
    CP_EQF 0.0 2.0 flag1569
    SELECTF flag1569 0.0 tmpf1569 F.0

    JR_GTF F.0 -240.0 whilebody1560
  endwhile1560:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1571
	DATA8 nos1571
	DATA8 busy1571
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1571 nos1571
	JR_EQ8 0 nos1571 motornotbusy1571
  motorwaiting1571:
	OUTPUT_TEST layer1571 nos1571 busy1571
	JR_EQ8 busy1571 0 motornotbusy1571
	SLEEP
	JR motorwaiting1571
  motornotbusy1571:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1573:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1574:
  while1575:
    JR_LTEQF VGV_S3 10.0 and1577
    JR_GTF VGV_S2 10.0 or1576
  and1577:
    JR_LTEQF VGV_S3 10.0 and1578
    JR_LTF VGV_S2 10.0 or1576
  and1578:
    JR_GTEQF VGV_S3 10.0 endwhile1575
    JR_LTEQF VGV_S2 10.0 endwhile1575
  or1576:
  whilebody1575:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1579:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1580:
    CALL MOTOR.STARTSYNC 'bc' 30.0 30.0
    JR_LTEQF VGV_S3 10.0 and1582
    JR_GTF VGV_S2 10.0 whilebody1575
  and1582:
    JR_LTEQF VGV_S3 10.0 and1583
    JR_LTF VGV_S2 10.0 whilebody1575
  and1583:
    JR_GTEQF VGV_S3 10.0 and1584
    JR_GTF VGV_S2 10.0 whilebody1575
  and1584:
  endwhile1575:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1586
	DATA8 nos1586
	DATA8 busy1586
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1586 nos1586
	JR_EQ8 0 nos1586 motornotbusy1586
  motorwaiting1586:
	OUTPUT_TEST layer1586 nos1586 busy1586
	JR_EQ8 busy1586 0 motornotbusy1586
	SLEEP
	JR motorwaiting1586
  motornotbusy1586:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1587:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1588:
  while1589:
    JR_LTEQF VGV_S3 10.0 endwhile1589
  whilebody1589:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1590:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1591:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1589
  endwhile1589:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1593:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1594:
  while1595:
    JR_GTEQF VGV_S3 15.0 endwhile1595
  whilebody1595:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1596:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1597:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1595
  endwhile1595:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1600
	DATA8 nos1600
	DATA8 busy1600
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1600 nos1600
	JR_EQ8 0 nos1600 motornotbusy1600
  motorwaiting1600:
	OUTPUT_TEST layer1600 nos1600 busy1600
	JR_EQ8 busy1600 0 motornotbusy1600
	SLEEP
	JR motorwaiting1600
  motornotbusy1600:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1601:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1602:
  while1603:
    JR_LTEQF VGV_S3 15.0 endwhile1603
  whilebody1603:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1604:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1605:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1603
  endwhile1603:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1608:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1609:
  while1610:
    JR_GTEQF VGV_S3 15.0 endwhile1610
  whilebody1610:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1611:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1612:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1610
  endwhile1610:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1616:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 270.0 endwhile1616
  whilebody1616:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1618:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 270.0 whilebody1616
  endwhile1616:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1621:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1622:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1623:
    JR_GTF VGV_I 3.0 endfor1623
  forbody1623:
    MOVEF_F 0.4 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1624:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1625:
  while1626:
    JR_LTEQF VGV_S3 15.0 and1628
    JR_GTF VGV_S2 15.0 or1627
  and1628:
    JR_GTEQF VGV_S3 15.0 endwhile1626
    JR_GTEQF VGV_S2 15.0 endwhile1626
  or1627:
  whilebody1626:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1629:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1630:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1631:
    JR_LTEQF VGV_S3 15.0 and1632
    JR_GTF VGV_S2 15.0 whilebody1626
  and1632:
    JR_GTEQF VGV_S3 15.0 and1633
    JR_LTF VGV_S2 15.0 whilebody1626
  and1633:
  endwhile1626:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1635
	DATA8 nos1635
	DATA8 busy1635
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1635 nos1635
	JR_EQ8 0 nos1635 motornotbusy1635
  motorwaiting1635:
	OUTPUT_TEST layer1635 nos1635 busy1635
	JR_EQ8 busy1635 0 motornotbusy1635
	SLEEP
	JR motorwaiting1635
  motornotbusy1635:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1623
  endfor1623:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 200.0 'true'

	DATA8 layer1638
	DATA8 nos1638
	DATA8 busy1638
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1638 nos1638
	JR_EQ8 0 nos1638 motornotbusy1638
  motorwaiting1638:
	OUTPUT_TEST layer1638 nos1638 busy1638
	JR_EQ8 busy1638 0 motornotbusy1638
	SLEEP
	JR motorwaiting1638
  motornotbusy1638:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1639
	DATA8 nos1639
	DATA8 busy1639
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1639 nos1639
	JR_EQ8 0 nos1639 motornotbusy1639
  motorwaiting1639:
	OUTPUT_TEST layer1639 nos1639 busy1639
	JR_EQ8 busy1639 0 motornotbusy1639
	SLEEP
	JR motorwaiting1639
  motornotbusy1639:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1641
	MOVEF_32 500.0 milliseconds1641
	DATA32 timer1641
	TIMER_WAIT milliseconds1641 timer1641
	TIMER_READY timer1641
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 100.0 'true'

	DATA8 layer1643
	DATA8 nos1643
	DATA8 busy1643
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1643 nos1643
	JR_EQ8 0 nos1643 motornotbusy1643
  motorwaiting1643:
	OUTPUT_TEST layer1643 nos1643 busy1643
	JR_EQ8 busy1643 0 motornotbusy1643
	SLEEP
	JR motorwaiting1643
  motornotbusy1643:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 375.0 'true'

	DATA8 layer1644
	DATA8 nos1644
	DATA8 busy1644
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1644 nos1644
	JR_EQ8 0 nos1644 motornotbusy1644
  motorwaiting1644:
	OUTPUT_TEST layer1644 nos1644 busy1644
	JR_EQ8 busy1644 0 motornotbusy1644
	SLEEP
	JR motorwaiting1644
  motornotbusy1644:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 199.0 'true'

	DATA8 layer1645
	DATA8 nos1645
	DATA8 busy1645
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1645 nos1645
	JR_EQ8 0 nos1645 motornotbusy1645
  motorwaiting1645:
	OUTPUT_TEST layer1645 nos1645 busy1645
	JR_EQ8 busy1645 0 motornotbusy1645
	SLEEP
	JR motorwaiting1645
  motornotbusy1645:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1646
	DATA8 nos1646
	DATA8 busy1646
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1646 nos1646
	JR_EQ8 0 nos1646 motornotbusy1646
  motorwaiting1646:
	OUTPUT_TEST layer1646 nos1646 busy1646
	JR_EQ8 busy1646 0 motornotbusy1646
	SLEEP
	JR motorwaiting1646
  motornotbusy1646:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1647
	DATA8 nos1647
	DATA8 busy1647
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1647 nos1647
	JR_EQ8 0 nos1647 motornotbusy1647
  motorwaiting1647:
	OUTPUT_TEST layer1647 nos1647 busy1647
	JR_EQ8 busy1647 0 motornotbusy1647
	SLEEP
	JR motorwaiting1647
  motornotbusy1647:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1648:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1649:
  while1650:
    JR_LTEQF VGV_S3 10.0 and1652
    JR_GTF VGV_S2 10.0 or1651
  and1652:
    JR_GTEQF VGV_S3 10.0 and1653
    JR_GTF VGV_S2 10.0 or1651
  and1653:
    JR_LTEQF VGV_S3 10.0 endwhile1650
    JR_GTEQF VGV_S2 10.0 endwhile1650
  or1651:
  whilebody1650:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1654:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1655:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1657
    JR_GTF VGV_S2 10.0 whilebody1650
  and1657:
    JR_GTEQF VGV_S3 10.0 and1658
    JR_GTF VGV_S2 10.0 whilebody1650
  and1658:
    JR_LTEQF VGV_S3 10.0 and1659
    JR_LTF VGV_S2 10.0 whilebody1650
  and1659:
  endwhile1650:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1661
	DATA8 nos1661
	DATA8 busy1661
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1661 nos1661
	JR_EQ8 0 nos1661 motornotbusy1661
  motorwaiting1661:
	OUTPUT_TEST layer1661 nos1661 busy1661
	JR_EQ8 busy1661 0 motornotbusy1661
	SLEEP
	JR motorwaiting1661
  motornotbusy1661:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1663
	DATA8 nos1663
	DATA8 busy1663
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1663 nos1663
	JR_EQ8 0 nos1663 motornotbusy1663
  motorwaiting1663:
	OUTPUT_TEST layer1663 nos1663 busy1663
	JR_EQ8 busy1663 0 motornotbusy1663
	SLEEP
	JR motorwaiting1663
  motornotbusy1663:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1664:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1665:
  while1666:
    JR_LTEQF VGV_S3 15.0 endwhile1666
  whilebody1666:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1667:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1668:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1666
  endwhile1666:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1671:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1672:
  while1673:
    JR_GTEQF VGV_S3 60.0 endwhile1673
  whilebody1673:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1674:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1675:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1673
  endwhile1673:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1678:
    JR_GTF VGV_I 1.0 endfor1678
  forbody1678:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1679:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1680:
  while1681:
    JR_LTEQF VGV_S3 10.0 and1683
    JR_GTF VGV_S2 10.0 or1682
  and1683:
    JR_GTEQF VGV_S3 10.0 endwhile1681
    JR_GTEQF VGV_S2 10.0 endwhile1681
  or1682:
  whilebody1681:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1684:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1685:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1686:
    JR_LTEQF VGV_S3 10.0 and1687
    JR_GTF VGV_S2 10.0 whilebody1681
  and1687:
    JR_GTEQF VGV_S3 10.0 and1688
    JR_LTF VGV_S2 10.0 whilebody1681
  and1688:
  endwhile1681:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1690
	DATA8 nos1690
	DATA8 busy1690
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1690 nos1690
	JR_EQ8 0 nos1690 motornotbusy1690
  motorwaiting1690:
	OUTPUT_TEST layer1690 nos1690 busy1690
	JR_EQ8 busy1690 0 motornotbusy1690
	SLEEP
	JR motorwaiting1690
  motornotbusy1690:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1678
  endfor1678:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1693:
    CALL MOTOR.RESETCOUNT 'bc'
  while1695:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1699
    DATA8 flag1699
    DIVF F.1 2.0 tmpf1699
    CP_EQF 0.0 2.0 flag1699
    SELECTF flag1699 0.0 tmpf1699 F.0

    JR_GTEQF F.0 30.0 endwhile1695
  whilebody1695:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1700:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1704
    DATA8 flag1704
    DIVF F.1 2.0 tmpf1704
    CP_EQF 0.0 2.0 flag1704
    SELECTF flag1704 0.0 tmpf1704 F.0

    JR_LTF F.0 30.0 whilebody1695
  endwhile1695:
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 210.0 'true'

	DATA8 layer1705
	DATA8 nos1705
	DATA8 busy1705
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1705 nos1705
	JR_EQ8 0 nos1705 motornotbusy1705
  motorwaiting1705:
	OUTPUT_TEST layer1705 nos1705 busy1705
	JR_EQ8 busy1705 0 motornotbusy1705
	SLEEP
	JR motorwaiting1705
  motornotbusy1705:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1707
	MOVEF_32 100.0 milliseconds1707
	DATA32 timer1707
	TIMER_WAIT milliseconds1707 timer1707
	TIMER_READY timer1707
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1709
	MOVEF_32 500.0 milliseconds1709
	DATA32 timer1709
	TIMER_WAIT milliseconds1709 timer1709
	TIMER_READY timer1709
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1711:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1712:
  while1713:
    JR_LTEQF VGV_S2 9.0 and1715
    JR_GTF VGV_S3 9.0 or1714
  and1715:
    JR_GTEQF VGV_S2 9.0 and1716
    JR_GTF VGV_S3 9.0 or1714
  and1716:
    JR_LTEQF VGV_S2 9.0 endwhile1713
    JR_GTEQF VGV_S3 9.0 endwhile1713
  or1714:
  whilebody1713:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1717:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1718:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1720
    JR_GTF VGV_S3 9.0 whilebody1713
  and1720:
    JR_GTEQF VGV_S2 9.0 and1721
    JR_GTF VGV_S3 9.0 whilebody1713
  and1721:
    JR_LTEQF VGV_S2 9.0 and1722
    JR_LTF VGV_S3 9.0 whilebody1713
  and1722:
  endwhile1713:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1723
	DATA8 nos1723
	DATA8 busy1723
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1723 nos1723
	JR_EQ8 0 nos1723 motornotbusy1723
  motorwaiting1723:
	OUTPUT_TEST layer1723 nos1723 busy1723
	JR_EQ8 busy1723 0 motornotbusy1723
	SLEEP
	JR motorwaiting1723
  motornotbusy1723:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1725
	DATA8 nos1725
	DATA8 busy1725
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1725 nos1725
	JR_EQ8 0 nos1725 motornotbusy1725
  motorwaiting1725:
	OUTPUT_TEST layer1725 nos1725 busy1725
	JR_EQ8 busy1725 0 motornotbusy1725
	SLEEP
	JR motorwaiting1725
  motornotbusy1725:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1727:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1728:
  while1729:
    JR_LTEQF VGV_S2 10.0 endwhile1729
  whilebody1729:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1730:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1731:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1729
  endwhile1729:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1733:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1734:
  while1735:
    JR_GTEQF VGV_S2 60.0 endwhile1735
  whilebody1735:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1736:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1737:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1735
  endwhile1735:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 850.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1740
    DATA8 flag1740
    DIVF 360.0 VGV_L tmpf1740
    CP_EQF 0.0 VGV_L flag1740
    SELECTF flag1740 0.0 tmpf1740 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1743:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1743
  whilebody1743:
    JR_GTEQF VGV_SPEED 60.0 else1745_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1745_1:
  endif1745:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1747:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1743
  endwhile1743:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1750:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1751:
    MOVEF_F 1300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1752:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1754
	DATA8 nos1754
	DATA8 busy1754
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1754 nos1754
	JR_EQ8 0 nos1754 motornotbusy1754
  motorwaiting1754:
	OUTPUT_TEST layer1754 nos1754 busy1754
	JR_EQ8 busy1754 0 motornotbusy1754
	SLEEP
	JR motorwaiting1754
  motornotbusy1754:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1755:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1756:
  while1757:
    JR_LTEQF VGV_S3 10.0 and1759
    JR_GTF VGV_S2 10.0 or1758
  and1759:
    JR_GTEQF VGV_S3 10.0 endwhile1757
    JR_GTEQF VGV_S2 10.0 endwhile1757
  or1758:
  whilebody1757:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1760:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1761:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1762:
    JR_LTEQF VGV_S3 10.0 and1763
    JR_GTF VGV_S2 10.0 whilebody1757
  and1763:
    JR_GTEQF VGV_S3 10.0 and1764
    JR_LTF VGV_S2 10.0 whilebody1757
  and1764:
  endwhile1757:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1766:
    CALL MOTOR.RESETCOUNT 'bc'
  while1768:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1772
    DATA8 flag1772
    DIVF F.1 2.0 tmpf1772
    CP_EQF 0.0 2.0 flag1772
    SELECTF flag1772 0.0 tmpf1772 F.0

    JR_GTEQF F.0 10.0 endwhile1768
  whilebody1768:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1773:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1774:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1775:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1779
    DATA8 flag1779
    DIVF F.1 2.0 tmpf1779
    CP_EQF 0.0 2.0 flag1779
    SELECTF flag1779 0.0 tmpf1779 F.0

    JR_LTF F.0 10.0 whilebody1768
  endwhile1768:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 30.0 190.0 'true'

	DATA8 layer1781
	DATA8 nos1781
	DATA8 busy1781
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1781 nos1781
	JR_EQ8 0 nos1781 motornotbusy1781
  motorwaiting1781:
	OUTPUT_TEST layer1781 nos1781 busy1781
	JR_EQ8 busy1781 0 motornotbusy1781
	SLEEP
	JR motorwaiting1781
  motornotbusy1781:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1783
	MOVEF_32 500.0 milliseconds1783
	DATA32 timer1783
	TIMER_WAIT milliseconds1783 timer1783
	TIMER_READY timer1783
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1785:
    DATA32 tmp1786
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1786
    JR_NEQ32 0 tmp1786 alreadylaunched1786
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1786:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1787:
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    DATA32 milliseconds1788
	MOVEF_32 400.0 milliseconds1788
	DATA32 timer1788
	TIMER_WAIT milliseconds1788 timer1788
	TIMER_READY timer1788
    CALL MOTOR.SCHEDULESYNC 'bc' -25.0 -15.0 150.0 'true'

	DATA8 layer1789
	DATA8 nos1789
	DATA8 busy1789
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1789 nos1789
	JR_EQ8 0 nos1789 motornotbusy1789
  motorwaiting1789:
	OUTPUT_TEST layer1789 nos1789 busy1789
	JR_EQ8 busy1789 0 motornotbusy1789
	SLEEP
	JR motorwaiting1789
  motornotbusy1789:
    DATA32 milliseconds1790
	MOVEF_32 400.0 milliseconds1790
	DATA32 timer1790
	TIMER_WAIT milliseconds1790 timer1790
	TIMER_READY timer1790
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 200.0 'true'

	DATA8 layer1791
	DATA8 nos1791
	DATA8 busy1791
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1791 nos1791
	JR_EQ8 0 nos1791 motornotbusy1791
  motorwaiting1791:
	OUTPUT_TEST layer1791 nos1791 busy1791
	JR_EQ8 busy1791 0 motornotbusy1791
	SLEEP
	JR motorwaiting1791
  motornotbusy1791:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1793:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1794:
  while1795:
    JR_LTEQF VGV_S2 12.0 endwhile1795
  whilebody1795:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1796:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1797:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 12.0 whilebody1795
  endwhile1795:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1800:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1801:
  while1802:
    JR_GTEQF VGV_S2 60.0 endwhile1802
  whilebody1802:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1803:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1804:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1802
  endwhile1802:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1808:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1812
    DATA8 flag1812
    DIVF F.1 2.0 tmpf1812
    CP_EQF 0.0 2.0 flag1812
    SELECTF flag1812 0.0 tmpf1812 F.0

    JR_GTEQF F.0 300.0 endwhile1808
  whilebody1808:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1813:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1814:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1815:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1819
    DATA8 flag1819
    DIVF F.1 2.0 tmpf1819
    CP_EQF 0.0 2.0 flag1819
    SELECTF flag1819 0.0 tmpf1819 F.0

    JR_LTF F.0 300.0 whilebody1808
  endwhile1808:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.15 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1821:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1822:
  while1823:
    JR_LTEQF VGV_S3 15.0 and1825
    JR_GTF VGV_S2 15.0 or1824
  and1825:
    JR_GTEQF VGV_S3 10.0 endwhile1823
    JR_GTEQF VGV_S2 15.0 endwhile1823
  or1824:
  whilebody1823:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1826:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1827:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1828:
    JR_LTEQF VGV_S3 15.0 and1829
    JR_GTF VGV_S2 15.0 whilebody1823
  and1829:
    JR_GTEQF VGV_S3 10.0 and1830
    JR_LTF VGV_S2 15.0 whilebody1823
  and1830:
  endwhile1823:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1832
	DATA8 no1832
	DATA8 mode81832
	
	MOVEF_8 1.0 no1832
	SUB8 no1832 1 no1832
	DIV8 no1832 4 layer1832
	MATH MOD8 no1832 4 no1832

	MOVEF_8 2.0 mode81832
	
	INPUT_DEVICE READY_RAW layer1832 no1832 0 mode81832 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1839
    DATA8 flag1839
    DIVF VGV_SRED 255.0 tmpf1839
    CP_EQF 0.0 255.0 flag1839
    SELECTF flag1839 0.0 tmpf1839 VGV_SRED

    DATAF tmpf1840
    DATA8 flag1840
    DIVF VGV_SGREEN 255.0 tmpf1840
    CP_EQF 0.0 255.0 flag1840
    SELECTF flag1840 0.0 tmpf1840 VGV_SGREEN

    DATAF tmpf1841
    DATA8 flag1841
    DIVF VGV_SBLUE 255.0 tmpf1841
    CP_EQF 0.0 255.0 flag1841
    SELECTF flag1841 0.0 tmpf1841 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1842_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1842_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1842
  else1842_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1842_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1842_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1842
  else1842_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1842_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1842_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1842_3:
  endif1842:
    JR_GTEQF VGV_SRED VGV_SGREEN else1843_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1843_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1843
  else1843_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1843_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1843_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1843
  else1843_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1843_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1843_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1843_3:
  endif1843:
    JR_NEQF VGV_MAX VGV_MIN else1844_1
    MOVEF_F 0.0 VGV_H
    JR endif1844
  else1844_1:
    JR_NEQF VGV_SRED VGV_MAX else1845_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1846_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1850
    DATA8 flag1850
    DIVF F.0 F.1 tmpf1850
    CP_EQF 0.0 F.1 flag1850
    SELECTF flag1850 0.0 tmpf1850 VGV_H

    JR endif1846
  else1846_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1854
    DATA8 flag1854
    DIVF F.1 F.2 tmpf1854
    CP_EQF 0.0 F.2 flag1854
    SELECTF flag1854 0.0 tmpf1854 F.0

    ADDF F.0 360.0 VGV_H
  else1846_2:
  endif1846:
    JR endif1845
  else1845_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1856_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1860
    DATA8 flag1860
    DIVF F.1 F.2 tmpf1860
    CP_EQF 0.0 F.2 flag1860
    SELECTF flag1860 0.0 tmpf1860 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1856
  else1856_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1865
    DATA8 flag1865
    DIVF F.1 F.2 tmpf1865
    CP_EQF 0.0 F.2 flag1865
    SELECTF flag1865 0.0 tmpf1865 F.0

    ADDF F.0 240.0 VGV_H
  else1856_2:
  endif1856:
  else1845_2:
  endif1845:
  else1844_2:
  endif1844:
    JR_NEQF VGV_MAX 0.0 else1867_1
    MOVEF_F 0.0 VGV_S
    JR endif1867
  else1867_1:
    DATAF tmpf1868
    DATA8 flag1868
    DIVF VGV_MIN VGV_MAX tmpf1868
    CP_EQF 0.0 VGV_MAX flag1868
    SELECTF flag1868 0.0 tmpf1868 F.0

    SUBF 1.0 F.0 VGV_S
  else1867_2:
  endif1867:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1877
	DATA8 no1877
	DATA8 mode81877
	
	MOVEF_8 1.0 no1877
	SUB8 no1877 1 no1877
	DIV8 no1877 4 layer1877
	MATH MOD8 no1877 4 no1877

	MOVEF_8 2.0 mode81877
	
	INPUT_DEVICE READY_RAW layer1877 no1877 0 mode81877 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1878:
    JR_GTF VGV_P 100.0 endfor1878
  forbody1878:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1879:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1878
  endfor1878:
    DATAF tmpf1884
    DATA8 flag1884
    DIVF VGV_X 100.0 tmpf1884
    CP_EQF 0.0 100.0 flag1884
    SELECTF flag1884 0.0 tmpf1884 VGV_H

    DATAF tmpf1885
    DATA8 flag1885
    DIVF VGV_Z 100.0 tmpf1885
    CP_EQF 0.0 100.0 flag1885
    SELECTF flag1885 0.0 tmpf1885 VGV_S

    DATAF tmpf1886
    DATA8 flag1886
    DIVF VGV_D 100.0 tmpf1886
    CP_EQF 0.0 100.0 flag1886
    SELECTF flag1886 0.0 tmpf1886 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1894
	DATA8 no1894
	DATA8 mode81894
	
	MOVEF_8 1.0 no1894
	SUB8 no1894 1 no1894
	DIV8 no1894 4 layer1894
	MATH MOD8 no1894 4 no1894

	MOVEF_8 2.0 mode81894
	
	INPUT_DEVICE READY_RAW layer1894 no1894 0 mode81894 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1901
    DATA8 flag1901
    DIVF VGV_SRED 255.0 tmpf1901
    CP_EQF 0.0 255.0 flag1901
    SELECTF flag1901 0.0 tmpf1901 VGV_SRED

    DATAF tmpf1902
    DATA8 flag1902
    DIVF VGV_SGREEN 255.0 tmpf1902
    CP_EQF 0.0 255.0 flag1902
    SELECTF flag1902 0.0 tmpf1902 VGV_SGREEN

    DATAF tmpf1903
    DATA8 flag1903
    DIVF VGV_SBLUE 255.0 tmpf1903
    CP_EQF 0.0 255.0 flag1903
    SELECTF flag1903 0.0 tmpf1903 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1904_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1904_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1904
  else1904_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1904_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1904_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1904
  else1904_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1904_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1904_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1904_3:
  endif1904:
    JR_GTEQF VGV_SRED VGV_SGREEN else1905_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1905_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1905
  else1905_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1905_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1905_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1905
  else1905_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1905_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1905_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1905_3:
  endif1905:
    JR_NEQF VGV_MAX VGV_MIN else1906_1
    MOVEF_F 0.0 VGV_H
    JR endif1906
  else1906_1:
    JR_NEQF VGV_SRED VGV_MAX else1907_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1908_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1912
    DATA8 flag1912
    DIVF F.0 F.1 tmpf1912
    CP_EQF 0.0 F.1 flag1912
    SELECTF flag1912 0.0 tmpf1912 VGV_H

    JR endif1908
  else1908_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1916
    DATA8 flag1916
    DIVF F.1 F.2 tmpf1916
    CP_EQF 0.0 F.2 flag1916
    SELECTF flag1916 0.0 tmpf1916 F.0

    ADDF F.0 360.0 VGV_H
  else1908_2:
  endif1908:
    JR endif1907
  else1907_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1918_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1922
    DATA8 flag1922
    DIVF F.1 F.2 tmpf1922
    CP_EQF 0.0 F.2 flag1922
    SELECTF flag1922 0.0 tmpf1922 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1918
  else1918_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1927
    DATA8 flag1927
    DIVF F.1 F.2 tmpf1927
    CP_EQF 0.0 F.2 flag1927
    SELECTF flag1927 0.0 tmpf1927 F.0

    ADDF F.0 240.0 VGV_H
  else1918_2:
  endif1918:
  else1907_2:
  endif1907:
  else1906_2:
  endif1906:
    JR_NEQF VGV_MAX 0.0 else1929_1
    MOVEF_F 0.0 VGV_S
    JR endif1929
  else1929_1:
    DATAF tmpf1930
    DATA8 flag1930
    DIVF VGV_MIN VGV_MAX tmpf1930
    CP_EQF 0.0 VGV_MAX flag1930
    SELECTF flag1930 0.0 tmpf1930 F.0

    SUBF 1.0 F.0 VGV_S
  else1929_2:
  endif1929:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1934
    JR_LTF VGV_H 360.0 or1933
  and1934:
    JR_LTF VGV_H 0.0 else1932_1
    JR_GTF VGV_H 20.0 else1932_1
    JR_LTEQF VGV_S 0.3 else1932_1
    JR_GTF VGV_S 1.0 else1932_1
    JR_LTEQF VGV_V 0.025 else1932_1
    JR_GTEQF VGV_V 0.1 else1932_1
  or1933:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1932
  else1932_1:
    JR_LTF VGV_H 20.0 else1932_2
    JR_GTEQF VGV_H 60.0 else1932_2
    JR_LTF VGV_S 0.4 else1932_2
    JR_LTEQF VGV_V 0.03 else1932_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1932
  else1932_2:
    MOVEF_F 6.0 VGV_COLOR
  else1932_3:
  endif1932:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1935
	DATA8 no1935
	DATA8 mode81935
	
	MOVEF_8 1.0 no1935
	SUB8 no1935 1 no1935
	DIV8 no1935 4 layer1935
	MATH MOD8 no1935 4 no1935

	MOVEF_8 2.0 mode81935
	
	INPUT_DEVICE READY_RAW layer1935 no1935 0 mode81935 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1942
    DATA8 flag1942
    DIVF VGV_SRED 255.0 tmpf1942
    CP_EQF 0.0 255.0 flag1942
    SELECTF flag1942 0.0 tmpf1942 VGV_SRED

    DATAF tmpf1943
    DATA8 flag1943
    DIVF VGV_SGREEN 255.0 tmpf1943
    CP_EQF 0.0 255.0 flag1943
    SELECTF flag1943 0.0 tmpf1943 VGV_SGREEN

    DATAF tmpf1944
    DATA8 flag1944
    DIVF VGV_SBLUE 255.0 tmpf1944
    CP_EQF 0.0 255.0 flag1944
    SELECTF flag1944 0.0 tmpf1944 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1945_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1945_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1945
  else1945_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1945_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1945_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1945
  else1945_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1945_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1945_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1945_3:
  endif1945:
    JR_GTEQF VGV_SRED VGV_SGREEN else1946_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1946_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1946
  else1946_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1946_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1946_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1946
  else1946_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1946_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1946_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1946_3:
  endif1946:
    JR_NEQF VGV_MAX VGV_MIN else1947_1
    MOVEF_F 0.0 VGV_H
    JR endif1947
  else1947_1:
    JR_NEQF VGV_SRED VGV_MAX else1948_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1949_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1953
    DATA8 flag1953
    DIVF F.0 F.1 tmpf1953
    CP_EQF 0.0 F.1 flag1953
    SELECTF flag1953 0.0 tmpf1953 VGV_H

    JR endif1949
  else1949_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1957
    DATA8 flag1957
    DIVF F.1 F.2 tmpf1957
    CP_EQF 0.0 F.2 flag1957
    SELECTF flag1957 0.0 tmpf1957 F.0

    ADDF F.0 360.0 VGV_H
  else1949_2:
  endif1949:
    JR endif1948
  else1948_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1959_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1963
    DATA8 flag1963
    DIVF F.1 F.2 tmpf1963
    CP_EQF 0.0 F.2 flag1963
    SELECTF flag1963 0.0 tmpf1963 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1959
  else1959_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1968
    DATA8 flag1968
    DIVF F.1 F.2 tmpf1968
    CP_EQF 0.0 F.2 flag1968
    SELECTF flag1968 0.0 tmpf1968 F.0

    ADDF F.0 240.0 VGV_H
  else1959_2:
  endif1959:
  else1948_2:
  endif1948:
  else1947_2:
  endif1947:
    JR_NEQF VGV_MAX 0.0 else1970_1
    MOVEF_F 0.0 VGV_S
    JR endif1970
  else1970_1:
    DATAF tmpf1971
    DATA8 flag1971
    DIVF VGV_MIN VGV_MAX tmpf1971
    CP_EQF 0.0 VGV_MAX flag1971
    SELECTF flag1971 0.0 tmpf1971 F.0

    SUBF 1.0 F.0 VGV_S
  else1970_2:
  endif1970:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1975
    JR_LTF VGV_H 360.0 or1974
  and1975:
    JR_LTF VGV_H 0.0 else1973_1
    JR_GTF VGV_H 30.0 else1973_1
    JR_LTEQF VGV_S 0.3 else1973_1
    JR_GTF VGV_S 1.0 else1973_1
    JR_LTF VGV_V 0.0 else1973_1
    JR_GTEQF VGV_V 0.02 else1973_1
  or1974:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1973
  else1973_1:
    JR_LTF VGV_H 0.0 else1973_2
    JR_GTEQF VGV_H 60.0 else1973_2
    JR_LTF VGV_S 0.4 else1973_2
    JR_GTF VGV_S 1.0 else1973_2
    JR_LTEQF VGV_V 0.003 else1973_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1973
  else1973_2:
    MOVEF_F 6.0 VGV_COLOR
  else1973_3:
  endif1973:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1980
    DATA8 flag1980
    DIVF F.0 F.1 tmpf1980
    CP_EQF 0.0 F.1 flag1980
    SELECTF flag1980 0.0 tmpf1980 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1985
    DATA8 flag1985
    DIVF F.0 F.1 tmpf1985
    CP_EQF 0.0 F.1 flag1985
    SELECTF flag1985 0.0 tmpf1985 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1986:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1987:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K3 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds2001
	MOVEF_32 100.0 milliseconds2001
	DATA32 timer2001
	TIMER_WAIT milliseconds2001 timer2001
	TIMER_READY timer2001
  while2002:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile2002
  whilebody2002:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody2002
  endwhile2002:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds2008
	MOVEF_32 250.0 milliseconds2008
	DATA32 timer2008
	TIMER_WAIT milliseconds2008 timer2008
	TIMER_READY timer2008
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2010:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2011:
  while2012:
    JR_LTEQF VGV_S2 9.0 and2014
    JR_GTF VGV_S3 9.0 or2013
  and2014:
    JR_GTEQF VGV_S2 9.0 and2015
    JR_GTF VGV_S3 9.0 or2013
  and2015:
    JR_LTEQF VGV_S2 9.0 endwhile2012
    JR_GTEQF VGV_S3 9.0 endwhile2012
  or2013:
  whilebody2012:
    WRITE32 ENDSUB_F_A2_0:CALLSUB2016 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB2016:
    WRITE32 ENDSUB_F_A3_0:CALLSUB2017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB2017:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and2019
    JR_GTF VGV_S3 9.0 whilebody2012
  and2019:
    JR_GTEQF VGV_S2 9.0 and2020
    JR_GTF VGV_S3 9.0 whilebody2012
  and2020:
    JR_LTEQF VGV_S2 9.0 and2021
    JR_LTF VGV_S3 9.0 whilebody2012
  and2021:
  endwhile2012:
  while2022:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile2022
  whilebody2022:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody2022
  endwhile2022:
    CALL MOTOR.STOP 'B' 'True'
  while2027:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2027
  whilebody2027:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2027
  endwhile2027:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2032
	DATA8 no2032
	DATA8 mode82032
	
	MOVEF_8 2.0 no2032
	SUB8 no2032 1 no2032
	DIV8 no2032 4 layer2032
	MATH MOD8 no2032 4 no2032

	MOVEF_8 0.0 mode82032
	
	INPUT_DEVICE READY_RAW layer2032 no2032 0 mode82032 0
    DATA8 layer2033
	DATA8 no2033
	DATA8 mode82033
	
	MOVEF_8 3.0 no2033
	SUB8 no2033 1 no2033
	DIV8 no2033 4 layer2033
	MATH MOD8 no2033 4 no2033

	MOVEF_8 0.0 mode82033
	
	INPUT_DEVICE READY_RAW layer2033 no2033 0 mode82033 0
  while2034:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2034
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2034
  whilebody2034:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2038
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2034
  and2038:
  endwhile2034:
    CALL MOTOR.STOP 'BC' 'True'
  while2042:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2042
  whilebody2042:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2042
  endwhile2042:
    CALL MOTOR.STOP 'B' 'True'
  while2047:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2047
  whilebody2047:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2047
  endwhile2047:
    CALL MOTOR.STOP 'C' 'True'
  while2052:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2052
  whilebody2052:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2052
  endwhile2052:
    CALL MOTOR.STOP 'B' 'True'
  while2057:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2057
  whilebody2057:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2057
  endwhile2057:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
