G_m = 0 ' global variable init 
R_m = 0 ' global variable init 
Y_m = 0 ' global variable init 
W_m = 0 ' global variable init 
COLOR_m = 0 ' global variable init 
X_m = 0 ' global variable init 
MAX2_m = 0 ' global variable init 
MAX3_m = 0 ' global variable init 
MIN2_m = 0 ' global variable init 
MIN3_m = 0 ' global variable init 
K1_m = 0 ' global variable init 
K2_m = 0 ' global variable init 
SPEED_m = 0 ' global variable init 
SPEEDL_m = 0 ' global variable init 
SPEEDR_m = 0 ' global variable init 
EOLD_m = 0 ' global variable init 
N_m = 0 ' global variable init 
P_m = 0 ' global variable init 
I_m = 0 ' global variable init 
I2CPORT_m = 0 ' global variable init 
I2CSLVADDR_m = 0 ' global variable init 
S3_m = 0 ' global variable init 
S2_m = 0 ' global variable init 
E_m = 0 ' global variable init 
U_m = 0 ' global variable init 
F_m = 0 ' global variable init 
J_m = 0 ' global variable init 
G_m = 0
R_m = 0
Y_m = 0
W_m = 0
COLOR_m = 0
X_m = 0
Motor.Invert ( "b" )
MAX2_m = 0
MAX3_m = 0
MIN2_m = 0
MIN3_m = 0
Sensor.SetMode ( 1 , 2 )
Sensor.SetMode ( 2 , 0 )
Sensor.SetMode ( 3 , 0 )
K1_m = 0.2
K2_m = 8
SPEED_m = 0
SPEEDL_m = 0
SPEEDR_m = 0
EOLD_m = 0
N_m = 0
P_m = 0
I_m = 0
I2CPORT_m = 1
I2CSLVADDR_m = 1
Sub A3
S3_m = 100 * ( Sensor.ReadPercent ( 3 ) - MIN3_m ) / ( MAX3_m - MIN3_m )
EndSub
Sub A2
S2_m = 100 * ( Sensor.ReadPercent ( 2 ) - MIN2_m ) / ( MAX2_m - MIN2_m )
EndSub
Sub POLIN2D
A3 ()
A2 ()
E_m = S2_m - S3_m
U_m = K1_m * E_m + K2_m * ( E_m - EOLD_m )
EOLD_m = E_m
SPEEDL_m = SPEED_m + U_m
SPEEDR_m = SPEED_m - U_m
Motor.StartPower ( "B" , SPEEDL_m )
Motor.StartPower ( "C" , SPEEDR_m )
EndSub
Sub ZAMOROZ
Buttons.Flush ()
Motor.Stop ( "BC" , "true" )
Buttons.Wait ()
EndSub
Sub ZADVIG
Motor.Start ( "a" , 20 )
Program.Delay ( 100 )
While Motor.GetSpeed ( "a" ) > 7
Motor.Start ( "a" , 20 )
EndWhile
Motor.Stop ( "a" , "true" )
EndSub
Sub VIDVIG
Motor.Start ( "a" , - 20 )
Program.Delay ( 100 )
While Motor.GetSpeed ( "a" ) < - 7
Motor.Start ( "a" , - 20 )
EndWhile
Motor.Stop ( "a" , "true" )
EndSub
F_m = EV3File.OpenRead ( "WRO2021/colib.dat" )
MIN2_m = EV3File.ConvertToNumber ( EV3File.ReadLine ( F_m ) )
MIN3_m = EV3File.ConvertToNumber ( EV3File.ReadLine ( F_m ) )
MAX2_m = EV3File.ConvertToNumber ( EV3File.ReadLine ( F_m ) )
MAX3_m = EV3File.ConvertToNumber ( EV3File.ReadLine ( F_m ) )
EV3File.Close ( F_m )
LCD.Clear ()
LCD.Text ( 1 , 10 , 10 , 1 , MIN2_m )
LCD.Text ( 1 , 20 , 20 , 1 , MIN3_m )
LCD.Text ( 1 , 30 , 30 , 1 , MAX2_m )
LCD.Text ( 1 , 40 , 40 , 1 , MAX3_m )
Motor.MoveSync ( "bc" , 30 , 0 , 130 , "true" )
Motor.MoveSync ( "bc" , 0 , 30 , 130 , "true" )
Motor.ResetCount ( "bc" )
Motor.Start ( "bc" , 40 )
While ( Motor.GetCount ( "b" ) + Motor.GetCount ( "c" ) ) / 2 < 500
If Sensor.ReadPercent ( 2 ) > MAX2_m Then
MAX2_m = Sensor.ReadPercent ( 2 )
EndIf
If Sensor.ReadPercent ( 2 ) < MIN2_m Then
MIN2_m = Sensor.ReadPercent ( 2 )
EndIf
If Sensor.ReadPercent ( 3 ) > MAX3_m Then
MAX3_m = Sensor.ReadPercent ( 3 )
EndIf
If Sensor.ReadPercent ( 3 ) < MIN3_m Then
MIN3_m = Sensor.ReadPercent ( 3 )
EndIf
EndWhile
A2 ()
A3 ()
ZAMOROZ ()
While S3_m > 15 And S2_m > 15 Or S3_m < 15 And S2_m < 15
A3 ()
A2 ()
SPEED_m = 20
POLIN2D ()
EndWhile
Motor.Stop ( "bc" , "true" )
Motor.MoveSync ( "bc" , 30 , 30 , 50 , "true" )
A3 ()
A2 ()
While S3_m > 15
A3 ()
A2 ()
Motor.StartSync ( "bc" , 30 , - 30 )
EndWhile
Motor.Stop ( "bc" , "true" )
A3 ()
A2 ()
While S3_m < 15
A3 ()
A2 ()
Motor.StartSync ( "bc" , 30 , - 30 )
EndWhile
Motor.Stop ( "bc" , "true" )
Motor.ResetCount ( "bc" )
While Motor.GetCount ( "b" ) < 200
SPEED_m = 20
POLIN2D ()
EndWhile
Motor.Stop ( "bc" , "true" )
A3 ()
A2 ()
For I_m = 1 To 1
A3 ()
A2 ()
While S3_m > 15 And S2_m > 15 Or S3_m < 15 And S2_m < 15
A3 ()
A2 ()
SPEED_m = 20
POLIN2D ()
EndWhile
Motor.Stop ( "bc" , "true" )
Motor.MoveSync ( "bc" , 30 , 30 , 50 , "true" )
EndFor
Motor.Stop ( "bc" , "true" )
A3 ()
A2 ()
J_m = 80
While S3_m > 15
A3 ()
A2 ()
If J_m > 30 Then
J_m = J_m - 0.1
EndIf
Motor.StartSync ( "bc" , 20 , - 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
A3 ()
A2 ()
J_m = 80
While S3_m < 25
A3 ()
A2 ()
If J_m > 30 Then
J_m = J_m - 0.1
EndIf
Motor.StartSync ( "bc" , 20 , - 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
Motor.ResetCount ( "bc" )
While ( Motor.GetCount ( "b" ) + Motor.GetCount ( "c" ) ) / 2 < 50
A3 ()
A2 ()
SPEED_m = 30
A3 ()
A2 ()
E_m = S3_m - ( ( MIN3_m + MAX3_m ) / 2 )
U_m = K1_m * E_m + K2_m * ( E_m - EOLD_m )
EOLD_m = E_m
SPEEDL_m = SPEED_m + U_m
SPEEDR_m = SPEED_m - U_m
Motor.StartPower ( "B" , SPEEDL_m )
EndWhile
Motor.Stop ( "bc" , "true" )
Motor.MoveSync ( "bc" , 30 , 30 , 50 , "true" )
Motor.Start ( "d" , 50 )
Program.Delay ( 500 )
Motor.Stop ( "bc" , "true" )
Motor.MoveSync ( "bc" , - 30 , - 30 , 50 , "true" )
Motor.MoveSync ( "bc" , 20 , 0 , 350 , "true" )
A2 ()
A3 ()
While S3_m > 10 And S2_m > 10 Or S3_m < 10 And S2_m > 10 Or S3_m > 6 And S2_m < 6
A2 ()
A3 ()
Motor.StartPower ( "bc" , 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
Motor.MoveSync ( "bc" , 30 , 30 , 70 , "true" )
Motor.Stop ( "bc" , "true" )
A3 ()
A2 ()
While S3_m > 10
A3 ()
A2 ()
Motor.StartSync ( "bc" , 20 , - 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
A3 ()
A2 ()
While S3_m < 15
A3 ()
A2 ()
Motor.StartSync ( "bc" , 20 , - 20 )
EndWhile
Motor.Stop ( "bc" , "true" )
Program.Delay ( 100 )
