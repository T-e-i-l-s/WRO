DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VGV_G
DATAF VGV_R
DATAF VGV_Y
DATAF VGV_W
DATAF VGV_COLOR
DATAF VGV_X
DATAF VGV_C
DATAF VGV_S
DATAF VGV_MAX2
DATAF VGV_MAX3
DATAF VGV_MIN2
DATAF VGV_MIN3
DATAF VGV_K1
DATAF VGV_K2
DATAF VGV_K3
DATAF VGV_S3
DATAF VGV_S2
DATAF VGV_SPEED
DATAF VGV_SPEEDL
DATAF VGV_SPEEDR
DATAF VGV_EOLD
DATAF VGV_N
DATAF VGV_P
DATAF VGV_I
DATAF VGV_I2CPORT
DATAF VGV_I2CSLVADDR
DATAF VGV_F
ARRAY16 VGV_SENDARRAY 2
ARRAY16 VGV_RECVARRAY 2
DATAF VGV_SNUM
DATAF VGV_SRED
DATAF VGV_SGREEN
DATAF VGV_SBLUE
DATAF VGV_MAX
DATAF VGV_MIN
DATAF VGV_H
DATAF VGV_V
DATAF VGV_E
DATAF VGV_U
DATAF VGV_D
DATAF VGV_Z
DATAF VGV_COLOR1
DATAF VGV_L
DATAF VGV_J
DATAF VGV_COLOR2
DATAF VGV_COLOR3
DATAF VGV_COLOR4
DATAF VGV_COLOR5
DATA32 RUNCOUNTER_F_VIDVIG_0
DATA32 RUNCOUNTER_F_ZADVIG_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYCREATE_FLOAT VGV_SENDARRAY
    CALL ARRAYCREATE_FLOAT VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    MOVE32_32 0 RUNCOUNTER_F_VIDVIG_0
    MOVE32_32 0 RUNCOUNTER_F_ZADVIG_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_VIDVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_VIDVIG_0 0
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 -1 RUNCOUNTER_F_VIDVIG_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ZADVIG_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ZADVIG_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 -1 RUNCOUNTER_F_ZADVIG_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_VIDVIG_0
subcall PROGRAM_F_ZADVIG_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2047
    WRITE32 ENDSUB_F_VIDVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIDVIG_0
  dispatch2047:
    JR_NEQ32 SUBPROGRAM 1 dispatch2048
    WRITE32 ENDSUB_F_ZADVIG_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
  dispatch2048:
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    MOVEF_F 0.0 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 0.0 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_I2CPORT
    MOVEF_F 0.0 VGV_I2CSLVADDR
    MOVEF_F 0.0 VGV_F
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_SENDARRAY
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_RECVARRAY
    MOVEF_F 0.0 VGV_SNUM
    MOVEF_F 0.0 VGV_SRED
    MOVEF_F 0.0 VGV_SGREEN
    MOVEF_F 0.0 VGV_SBLUE
    MOVEF_F 0.0 VGV_MAX
    MOVEF_F 0.0 VGV_MIN
    MOVEF_F 0.0 VGV_H
    MOVEF_F 0.0 VGV_V
    MOVEF_F 0.0 VGV_E
    MOVEF_F 0.0 VGV_U
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_COLOR1
    MOVEF_F 0.0 VGV_L
    MOVEF_F 0.0 VGV_J
    MOVEF_F 0.0 VGV_COLOR2
    MOVEF_F 0.0 VGV_COLOR3
    MOVEF_F 0.0 VGV_COLOR4
    MOVEF_F 0.0 VGV_COLOR5
    CALL MOTOR.INVERT 'b'
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_S
    MOVEF_F 0.0 VGV_MAX2
    MOVEF_F 0.0 VGV_MAX3
    MOVEF_F 0.0 VGV_MIN2
    MOVEF_F 0.0 VGV_MIN3
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K3
    MOVEF_F 0.0 VGV_S3
    MOVEF_F 0.0 VGV_S2
    MOVEF_F 0.0 VGV_SPEED
    MOVEF_F 0.0 VGV_SPEEDL
    MOVEF_F 0.0 VGV_SPEEDR
    MOVEF_F 0.0 VGV_EOLD
    MOVEF_F 0.0 VGV_N
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_I
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL MOTOR.STOP 'bc' 'true'
    CALL EV3FILE.OPENREAD 'a123/colib.dat' VGV_F
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MIN3
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX2
    CALL EV3FILE.READLINE VGV_F S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VGV_MAX3
    CALL EV3FILE.CLOSE VGV_F
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds27
	MOVEF_32 100.0 milliseconds27
	DATA32 timer27
	TIMER_WAIT milliseconds27 timer27
	TIMER_READY timer27
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    WRITE32 ENDSUB_F_HSV_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB28:
    JR_LTEQF VGV_H 110.0 else29_1
    MOVEF_F 5.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif29
  else29_1:
    JR_LTEQF VGV_H 45.0 else29_2
    JR_GTEQF VGV_H 120.0 else29_2
    MOVEF_F 4.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif29
  else29_2:
    MOVEF_F 6.0 VGV_COLOR
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else29_3:
  endif29:
    DATA32 tmp33
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp33
    JR_NEQ32 0 tmp33 alreadylaunched33
    OBJECT_START TF_VIDVIG_0
  alreadylaunched33:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 130.0 'true'

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 30.0 130.0 'true'

	DATA8 layer35
	DATA8 nos35
	DATA8 busy35
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer35 nos35
	JR_EQ8 0 nos35 motornotbusy35
  motorwaiting35:
	OUTPUT_TEST layer35 nos35 busy35
	JR_EQ8 busy35 0 motornotbusy35
	SLEEP
	JR motorwaiting35
  motornotbusy35:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while38:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf42
    DATA8 flag42
    DIVF F.1 2.0 tmpf42
    CP_EQF 0.0 2.0 flag42
    SELECTF flag42 0.0 tmpf42 F.0

    JR_GTEQF F.0 100.0 endwhile38
  whilebody38:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VGV_MAX2 else43_1
    CALL SENSOR.READPERCENT 2.0 VGV_MAX2
  else43_1:
  endif43:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VGV_MIN2 else46_1
    CALL SENSOR.READPERCENT 2.0 VGV_MIN2
  else46_1:
  endif46:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VGV_MAX3 else49_1
    CALL SENSOR.READPERCENT 3.0 VGV_MAX3
  else49_1:
  endif49:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VGV_MIN3 else52_1
    CALL SENSOR.READPERCENT 3.0 VGV_MIN3
  else52_1:
  endif52:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf58
    DATA8 flag58
    DIVF F.1 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 F.0

    JR_LTF F.0 100.0 whilebody38
  endwhile38:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB60:
    CALL EV3FILE.OPENWRITE 'a123/colib.dat' VGV_F
    STRINGS VALUE_FORMATTED VGV_MIN2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MIN3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX2 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    STRINGS VALUE_FORMATTED VGV_MAX3 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VGV_F S.0
    CALL EV3FILE.CLOSE VGV_F
    WRITE32 ENDSUB_F_A3_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB71:
    WRITE32 ENDSUB_F_A2_0:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB72:
  while73:
    JR_LTEQF VGV_S3 10.0 and75
    JR_GTF VGV_S2 10.0 or74
  and75:
    JR_GTEQF VGV_S3 10.0 endwhile73
    JR_GTEQF VGV_S2 10.0 endwhile73
  or74:
  whilebody73:
    WRITE32 ENDSUB_F_A3_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB76:
    WRITE32 ENDSUB_F_A2_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB77:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB78:
    JR_LTEQF VGV_S3 10.0 and79
    JR_GTF VGV_S2 10.0 whilebody73
  and79:
    JR_GTEQF VGV_S3 10.0 and80
    JR_LTF VGV_S2 10.0 whilebody73
  and80:
  endwhile73:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB82:
    JR_GTF VGV_H 120.0 or84
    JR_EQF VGV_H 0.0 or84
    JR_LTF VGV_H 0.0 else83_1
    JR_GTF VGV_H 20.0 else83_1
  or84:
    MOVEF_F 5.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif83
  else83_1:
    JR_GTEQF VGV_H 120.0 else83_2
    MOVEF_F 4.0 VGV_COLOR1
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif83
  else83_2:
    MOVEF_F 5.0 VGV_COLOR1
  else83_3:
  endif83:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer87
	DATA8 nos87
	DATA8 busy87
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer87 nos87
	JR_EQ8 0 nos87 motornotbusy87
  motorwaiting87:
	OUTPUT_TEST layer87 nos87 busy87
	JR_EQ8 busy87 0 motornotbusy87
	SLEEP
	JR motorwaiting87
  motornotbusy87:
    JR_NEQF VGV_COLOR 4.0 else88_1
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB89:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer90
	DATA8 nos90
	DATA8 busy90
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer90 nos90
	JR_EQ8 0 nos90 motornotbusy90
  motorwaiting90:
	OUTPUT_TEST layer90 nos90 busy90
	JR_EQ8 busy90 0 motornotbusy90
	SLEEP
	JR motorwaiting90
  motornotbusy90:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while96:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 500.0 endwhile96
  whilebody96:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB98:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 500.0 whilebody96
  endwhile96:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_SB1_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB101:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer102
	DATA8 nos102
	DATA8 busy102
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer102 nos102
	JR_EQ8 0 nos102 motornotbusy102
  motorwaiting102:
	OUTPUT_TEST layer102 nos102 busy102
	JR_EQ8 busy102 0 motornotbusy102
	SLEEP
	JR motorwaiting102
  motornotbusy102:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer104
	DATA8 nos104
	DATA8 busy104
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer104 nos104
	JR_EQ8 0 nos104 motornotbusy104
  motorwaiting104:
	OUTPUT_TEST layer104 nos104 busy104
	JR_EQ8 busy104 0 motornotbusy104
	SLEEP
	JR motorwaiting104
  motornotbusy104:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while107:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf111
    DATA8 flag111
    DIVF F.1 2.0 tmpf111
    CP_EQF 0.0 2.0 flag111
    SELECTF flag111 0.0 tmpf111 F.0

    JR_GTEQF F.0 100.0 endwhile107
  whilebody107:
    WRITE32 ENDSUB_F_A3_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB112:
    WRITE32 ENDSUB_F_A2_0:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB113:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB114:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf118
    DATA8 flag118
    DIVF F.1 2.0 tmpf118
    CP_EQF 0.0 2.0 flag118
    SELECTF flag118 0.0 tmpf118 F.0

    JR_LTF F.0 100.0 whilebody107
  endwhile107:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB120:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else122_1
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB123:
    ADDF VGV_C 1.0 VGV_C
    JR endif122
  else122_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer125
	DATA8 nos125
	DATA8 busy125
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer125 nos125
	JR_EQ8 0 nos125 motornotbusy125
  motorwaiting125:
	OUTPUT_TEST layer125 nos125 busy125
	JR_EQ8 busy125 0 motornotbusy125
	SLEEP
	JR motorwaiting125
  motornotbusy125:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer126
	DATA8 nos126
	DATA8 busy126
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer126 nos126
	JR_EQ8 0 nos126 motornotbusy126
  motorwaiting126:
	OUTPUT_TEST layer126 nos126 busy126
	JR_EQ8 busy126 0 motornotbusy126
	SLEEP
	JR motorwaiting126
  motornotbusy126:
  while127:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and129
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or128
  and129:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and132
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or128
  and132:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile127
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile127
  or128:
  whilebody127:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and138
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody127
  and138:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and141
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody127
  and141:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and144
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody127
  and144:
  endwhile127:
    WRITE32 ENDSUB_F_A3_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB147:
    WRITE32 ENDSUB_F_A2_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB148:
  while149:
    JR_LTEQF VGV_S3 10.0 and151
    JR_GTF VGV_S2 10.0 or150
  and151:
    JR_GTEQF VGV_S3 10.0 endwhile149
    JR_GTEQF VGV_S2 10.0 endwhile149
  or150:
  whilebody149:
    WRITE32 ENDSUB_F_A3_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB152:
    WRITE32 ENDSUB_F_A2_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB153:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB154:
    JR_LTEQF VGV_S3 10.0 and155
    JR_GTF VGV_S2 10.0 whilebody149
  and155:
    JR_GTEQF VGV_S3 10.0 and156
    JR_LTF VGV_S2 10.0 whilebody149
  and156:
  endwhile149:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    WRITE32 ENDSUB_F_A3_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB158:
    WRITE32 ENDSUB_F_A2_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB159:
  while160:
    JR_LTEQF VGV_S3 10.0 and162
    JR_GTF VGV_S2 10.0 or161
  and162:
    JR_GTEQF VGV_S3 10.0 endwhile160
    JR_GTEQF VGV_S2 10.0 endwhile160
  or161:
  whilebody160:
    WRITE32 ENDSUB_F_A3_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB163:
    WRITE32 ENDSUB_F_A2_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB164:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB165:
    JR_LTEQF VGV_S3 10.0 and166
    JR_GTF VGV_S2 10.0 whilebody160
  and166:
    JR_GTEQF VGV_S3 10.0 and167
    JR_LTF VGV_S2 10.0 whilebody160
  and167:
  endwhile160:
    CALL MOTOR.STOP 'bc' 'true'
  else122_2:
  endif122:
    JR endif88
  else88_1:
    WRITE32 ENDSUB_F_A3_0:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB169:
    WRITE32 ENDSUB_F_A2_0:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB170:
  while171:
    JR_LTEQF VGV_S3 10.0 and173
    JR_GTF VGV_S2 10.0 or172
  and173:
    JR_GTEQF VGV_S3 10.0 endwhile171
    JR_GTEQF VGV_S2 10.0 endwhile171
  or172:
  whilebody171:
    WRITE32 ENDSUB_F_A3_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB174:
    WRITE32 ENDSUB_F_A2_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB175:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB176:
    JR_LTEQF VGV_S3 10.0 and177
    JR_GTF VGV_S2 10.0 whilebody171
  and177:
    JR_GTEQF VGV_S3 10.0 and178
    JR_LTF VGV_S2 10.0 whilebody171
  and178:
  endwhile171:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer181
	DATA8 nos181
	DATA8 busy181
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer181 nos181
	JR_EQ8 0 nos181 motornotbusy181
  motorwaiting181:
	OUTPUT_TEST layer181 nos181 busy181
	JR_EQ8 busy181 0 motornotbusy181
	SLEEP
	JR motorwaiting181
  motornotbusy181:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds184
	MOVEF_32 500.0 milliseconds184
	DATA32 timer184
	TIMER_WAIT milliseconds184 timer184
	TIMER_READY timer184
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_ZADVIG_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZADVIG_0
CALLSUB186:
    MOVEF_F 60.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while188:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 550.0 endwhile188
  whilebody188:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB190:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 550.0 whilebody188
  endwhile188:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_COLOR1 5.0 else193_1
    WRITE32 ENDSUB_F_SB1_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB194:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer195
	DATA8 nos195
	DATA8 busy195
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer195 nos195
	JR_EQ8 0 nos195 motornotbusy195
  motorwaiting195:
	OUTPUT_TEST layer195 nos195 busy195
	JR_EQ8 busy195 0 motornotbusy195
	SLEEP
	JR motorwaiting195
  motornotbusy195:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB197:
    WRITE32 ENDSUB_F_A2_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB198:
  while199:
    JR_LTEQF VGV_S3 15.0 endwhile199
  whilebody199:
    WRITE32 ENDSUB_F_A3_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB200:
    WRITE32 ENDSUB_F_A2_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB201:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody199
  endwhile199:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB204:
    WRITE32 ENDSUB_F_A2_0:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB205:
  while206:
    JR_GTEQF VGV_S3 35.0 endwhile206
  whilebody206:
    WRITE32 ENDSUB_F_A3_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB207:
    WRITE32 ENDSUB_F_A2_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB208:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 35.0 whilebody206
  endwhile206:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB212:
    WRITE32 ENDSUB_F_A2_0:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB213:
  while214:
    JR_LTEQF VGV_S3 10.0 and216
    JR_GTF VGV_S2 10.0 or215
  and216:
    JR_GTEQF VGV_S3 10.0 endwhile214
    JR_GTEQF VGV_S2 10.0 endwhile214
  or215:
  whilebody214:
    WRITE32 ENDSUB_F_A3_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB217:
    WRITE32 ENDSUB_F_A2_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB218:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB219:
    JR_LTEQF VGV_S3 10.0 and220
    JR_GTF VGV_S2 10.0 whilebody214
  and220:
    JR_GTEQF VGV_S3 10.0 and221
    JR_LTF VGV_S2 10.0 whilebody214
  and221:
  endwhile214:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_RED_1_0:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RED_1_0
CALLSUB223:
    ADDF VGV_C 1.0 VGV_C
    JR endif193
  else193_1:
    DATA32 tmp225
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp225
    JR_NEQ32 0 tmp225 alreadylaunched225
    OBJECT_START TF_VIDVIG_0
  alreadylaunched225:
    WRITE32 ENDSUB_F_SB1_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SB1_0
CALLSUB226:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 180.0 'true'

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB230:
    WRITE32 ENDSUB_F_A2_0:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB231:
  while232:
    JR_LTEQF VGV_S3 10.0 and234
    JR_GTF VGV_S2 10.0 or233
  and234:
    JR_GTEQF VGV_S3 10.0 endwhile232
    JR_GTEQF VGV_S2 10.0 endwhile232
  or233:
  whilebody232:
    WRITE32 ENDSUB_F_A3_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB235:
    WRITE32 ENDSUB_F_A2_0:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB236:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB237:
    JR_LTEQF VGV_S3 10.0 and238
    JR_GTF VGV_S2 10.0 whilebody232
  and238:
    JR_GTEQF VGV_S3 10.0 and239
    JR_LTF VGV_S2 10.0 whilebody232
  and239:
  endwhile232:
    CALL MOTOR.STOP 'bc' 'true'
  else193_2:
  endif193:
  else88_2:
  endif88:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB241:
    JR_GTEQF VGV_V 0.048 else242_1
    MOVEF_F 5.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif242
  else242_1:
    MOVEF_F 4.0 VGV_COLOR2
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else242_2:
  endif242:
    JR_NEQF VGV_COLOR2 4.0 else245_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB247:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif245
  else245_1:
    WRITE32 ENDSUB_F_PR_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB249:
    CALL MOTOR.RESETCOUNT 'bc'
  while251:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile251
  whilebody251:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB253:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody251
  endwhile251:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds257
	MOVEF_32 100.0 milliseconds257
	DATA32 timer257
	TIMER_WAIT milliseconds257 timer257
	TIMER_READY timer257
    WRITE32 ENDSUB_F_NPL_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB258:
    MOVEF_F 1070.0 VGV_S
    MOVEF_F 251.2 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf259
    DATA8 flag259
    DIVF 360.0 VGV_L tmpf259
    CP_EQF 0.0 VGV_L flag259
    SELECTF flag259 0.0 tmpf259 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 30.0 VGV_SPEED
  while262:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile262
  whilebody262:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB264:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody262
  endwhile262:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB267:
    JR_NEQF VGV_C 1.0 else268_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB269:
    JR endif268
  else268_1:
    JR_NEQF VGV_C 0.0 else268_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB270:
  else268_2:
  endif268:
    MOVEF_F 900.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB271:
    WRITE32 ENDSUB_F_A3_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB272:
    WRITE32 ENDSUB_F_A2_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB273:
  while274:
    JR_LTEQF VGV_S3 10.0 and276
    JR_GTF VGV_S2 10.0 or275
  and276:
    JR_GTEQF VGV_S3 10.0 endwhile274
    JR_GTEQF VGV_S2 10.0 endwhile274
  or275:
  whilebody274:
    WRITE32 ENDSUB_F_A3_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB277:
    WRITE32 ENDSUB_F_A2_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB278:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB279:
    JR_LTEQF VGV_S3 10.0 and280
    JR_GTF VGV_S2 10.0 whilebody274
  and280:
    JR_GTEQF VGV_S3 10.0 and281
    JR_LTF VGV_S2 10.0 whilebody274
  and281:
  endwhile274:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer283
	DATA8 nos283
	DATA8 busy283
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer283 nos283
	JR_EQ8 0 nos283 motornotbusy283
  motorwaiting283:
	OUTPUT_TEST layer283 nos283 busy283
	JR_EQ8 busy283 0 motornotbusy283
	SLEEP
	JR motorwaiting283
  motornotbusy283:
    WRITE32 ENDSUB_F_A3_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB284:
    WRITE32 ENDSUB_F_A2_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB285:
  while286:
    JR_LTEQF VGV_S3 10.0 and288
    JR_GTF VGV_S2 10.0 or287
  and288:
    JR_GTEQF VGV_S3 10.0 endwhile286
    JR_GTEQF VGV_S2 10.0 endwhile286
  or287:
  whilebody286:
    WRITE32 ENDSUB_F_A3_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB289:
    WRITE32 ENDSUB_F_A2_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB290:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB291:
    JR_LTEQF VGV_S3 10.0 and292
    JR_GTF VGV_S2 10.0 whilebody286
  and292:
    JR_GTEQF VGV_S3 10.0 and293
    JR_LTF VGV_S2 10.0 whilebody286
  and293:
  endwhile286:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB295:
    CALL MOTOR.RESETCOUNT 'bc'
  while297:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf301
    DATA8 flag301
    DIVF F.1 2.0 tmpf301
    CP_EQF 0.0 2.0 flag301
    SELECTF flag301 0.0 tmpf301 F.0

    JR_GTEQF F.0 350.0 endwhile297
  whilebody297:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB302:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf306
    DATA8 flag306
    DIVF F.1 2.0 tmpf306
    CP_EQF 0.0 2.0 flag306
    SELECTF flag306 0.0 tmpf306 F.0

    JR_LTF F.0 350.0 whilebody297
  endwhile297:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds310
	MOVEF_32 500.0 milliseconds310
	DATA32 timer310
	TIMER_WAIT milliseconds310 timer310
	TIMER_READY timer310
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer312
	DATA8 nos312
	DATA8 busy312
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer312 nos312
	JR_EQ8 0 nos312 motornotbusy312
  motorwaiting312:
	OUTPUT_TEST layer312 nos312 busy312
	JR_EQ8 busy312 0 motornotbusy312
	SLEEP
	JR motorwaiting312
  motornotbusy312:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer313
	DATA8 nos313
	DATA8 busy313
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer313 nos313
	JR_EQ8 0 nos313 motornotbusy313
  motorwaiting313:
	OUTPUT_TEST layer313 nos313 busy313
	JR_EQ8 busy313 0 motornotbusy313
	SLEEP
	JR motorwaiting313
  motornotbusy313:
    DATA32 tmp314
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp314
    JR_NEQ32 0 tmp314 alreadylaunched314
    OBJECT_START TF_VIDVIG_0
  alreadylaunched314:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB315:
    MOVEF_F 250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB316:
    ADDF VGV_C 1.0 VGV_C
  else245_2:
  endif245:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB318:
    JR_GTF VGV_H 120.0 or320
    JR_EQF VGV_H 0.0 or320
    JR_LTF VGV_H 0.0 else319_1
    JR_GTF VGV_H 20.0 else319_1
  or320:
    MOVEF_F 5.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif319
  else319_1:
    JR_GTEQF VGV_H 120.0 else319_2
    MOVEF_F 4.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif319
  else319_2:
    MOVEF_F 6.0 VGV_COLOR3
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else319_3:
  endif319:
    JR_NEQF VGV_COLOR3 4.0 else324_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    MOVEF_F 360.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB326:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 0.0 else328_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB329:
    CALL MOTOR.RESETCOUNT 'bc'
  while331:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf335
    DATA8 flag335
    DIVF F.1 2.0 tmpf335
    CP_EQF 0.0 2.0 flag335
    SELECTF flag335 0.0 tmpf335 F.0

    JR_GTEQF F.0 450.0 endwhile331
  whilebody331:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB336:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf340
    DATA8 flag340
    DIVF F.1 2.0 tmpf340
    CP_EQF 0.0 2.0 flag340
    SELECTF flag340 0.0 tmpf340 F.0

    JR_LTF F.0 450.0 whilebody331
  endwhile331:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds343
	MOVEF_32 500.0 milliseconds343
	DATA32 timer343
	TIMER_WAIT milliseconds343 timer343
	TIMER_READY timer343
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB345:
    MOVEF_F 200.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf346
    DATA8 flag346
    DIVF 360.0 VGV_L tmpf346
    CP_EQF 0.0 VGV_L flag346
    SELECTF flag346 0.0 tmpf346 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while349:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile349
  whilebody349:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB351:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody349
  endwhile349:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB354:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB355:
    MOVEF_F 200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB356:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB358:
    CALL MOTOR.RESETCOUNT 'bc'
  while360:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf364
    DATA8 flag364
    DIVF F.1 2.0 tmpf364
    CP_EQF 0.0 2.0 flag364
    SELECTF flag364 0.0 tmpf364 F.0

    JR_GTEQF F.0 300.0 endwhile360
  whilebody360:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB365:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf369
    DATA8 flag369
    DIVF F.1 2.0 tmpf369
    CP_EQF 0.0 2.0 flag369
    SELECTF flag369 0.0 tmpf369 F.0

    JR_LTF F.0 300.0 whilebody360
  endwhile360:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer371
	DATA8 nos371
	DATA8 busy371
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer371 nos371
	JR_EQ8 0 nos371 motornotbusy371
  motorwaiting371:
	OUTPUT_TEST layer371 nos371 busy371
	JR_EQ8 busy371 0 motornotbusy371
	SLEEP
	JR motorwaiting371
  motornotbusy371:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds373
	MOVEF_32 500.0 milliseconds373
	DATA32 timer373
	TIMER_WAIT milliseconds373 timer373
	TIMER_READY timer373
    CALL MOTOR.SCHEDULESYNC 'BC' -30.0 30.0 25.0 'true'

	DATA8 layer374
	DATA8 nos374
	DATA8 busy374
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer374 nos374
	JR_EQ8 0 nos374 motornotbusy374
  motorwaiting374:
	OUTPUT_TEST layer374 nos374 busy374
	JR_EQ8 busy374 0 motornotbusy374
	SLEEP
	JR motorwaiting374
  motornotbusy374:
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB376:
    WRITE32 ENDSUB_F_A3_0:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB377:
    WRITE32 ENDSUB_F_A2_0:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB378:
  while379:
    JR_LTEQF VGV_S3 10.0 and381
    JR_GTF VGV_S2 10.0 or380
  and381:
    JR_GTEQF VGV_S3 10.0 endwhile379
    JR_GTEQF VGV_S2 10.0 endwhile379
  or380:
  whilebody379:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB382:
    JR_LTEQF VGV_S3 10.0 and383
    JR_GTF VGV_S2 10.0 whilebody379
  and383:
    JR_GTEQF VGV_S3 10.0 and384
    JR_LTF VGV_S2 10.0 whilebody379
  and384:
  endwhile379:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer386
	DATA8 nos386
	DATA8 busy386
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer386 nos386
	JR_EQ8 0 nos386 motornotbusy386
  motorwaiting386:
	OUTPUT_TEST layer386 nos386 busy386
	JR_EQ8 busy386 0 motornotbusy386
	SLEEP
	JR motorwaiting386
  motornotbusy386:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer387
	DATA8 nos387
	DATA8 busy387
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer387 nos387
	JR_EQ8 0 nos387 motornotbusy387
  motorwaiting387:
	OUTPUT_TEST layer387 nos387 busy387
	JR_EQ8 busy387 0 motornotbusy387
	SLEEP
	JR motorwaiting387
  motornotbusy387:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer388
	DATA8 nos388
	DATA8 busy388
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer388 nos388
	JR_EQ8 0 nos388 motornotbusy388
  motorwaiting388:
	OUTPUT_TEST layer388 nos388 busy388
	JR_EQ8 busy388 0 motornotbusy388
	SLEEP
	JR motorwaiting388
  motornotbusy388:
    WRITE32 ENDSUB_F_A2_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB389:
    WRITE32 ENDSUB_F_A3_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB390:
  while391:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 8.0 endwhile391
  whilebody391:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody391
  endwhile391:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB396:
    WRITE32 ENDSUB_F_A3_0:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB397:
  while398:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile398
  whilebody398:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody398
  endwhile398:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB403:
    WRITE32 ENDSUB_F_A2_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB404:
  while405:
    JR_LTEQF VGV_S3 10.0 and407
    JR_GTF VGV_S2 10.0 or406
  and407:
    JR_GTEQF VGV_S3 10.0 endwhile405
    JR_GTEQF VGV_S2 10.0 endwhile405
  or406:
  whilebody405:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB408:
    JR_LTEQF VGV_S3 10.0 and409
    JR_GTF VGV_S2 10.0 whilebody405
  and409:
    JR_GTEQF VGV_S3 10.0 and410
    JR_LTF VGV_S2 10.0 whilebody405
  and410:
  endwhile405:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB412:
    WRITE32 ENDSUB_F_PR_0:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB413:
    CALL MOTOR.RESETCOUNT 'bc'
  while415:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf419
    DATA8 flag419
    DIVF F.1 2.0 tmpf419
    CP_EQF 0.0 2.0 flag419
    SELECTF flag419 0.0 tmpf419 F.0

    JR_GTEQF F.0 500.0 endwhile415
  whilebody415:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB420:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf424
    DATA8 flag424
    DIVF F.1 2.0 tmpf424
    CP_EQF 0.0 2.0 flag424
    SELECTF flag424 0.0 tmpf424 F.0

    JR_LTF F.0 500.0 whilebody415
  endwhile415:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds427
	MOVEF_32 500.0 milliseconds427
	DATA32 timer427
	TIMER_WAIT milliseconds427 timer427
	TIMER_READY timer427
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB429:
    MOVEF_F 500.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf430
    DATA8 flag430
    DIVF 360.0 VGV_L tmpf430
    CP_EQF 0.0 VGV_L flag430
    SELECTF flag430 0.0 tmpf430 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while433:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile433
  whilebody433:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB435:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody433
  endwhile433:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB438:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB439:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB440:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB442:
    CALL MOTOR.RESETCOUNT 'bc'
  while444:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf448
    DATA8 flag448
    DIVF F.1 2.0 tmpf448
    CP_EQF 0.0 2.0 flag448
    SELECTF flag448 0.0 tmpf448 F.0

    JR_GTEQF F.0 470.0 endwhile444
  whilebody444:
    MOVEF_F 60.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB449:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf453
    DATA8 flag453
    DIVF F.1 2.0 tmpf453
    CP_EQF 0.0 2.0 flag453
    SELECTF flag453 0.0 tmpf453 F.0

    JR_LTF F.0 470.0 whilebody444
  endwhile444:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer455
	DATA8 nos455
	DATA8 busy455
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer455 nos455
	JR_EQ8 0 nos455 motornotbusy455
  motorwaiting455:
	OUTPUT_TEST layer455 nos455 busy455
	JR_EQ8 busy455 0 motornotbusy455
	SLEEP
	JR motorwaiting455
  motornotbusy455:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds457
	MOVEF_32 500.0 milliseconds457
	DATA32 timer457
	TIMER_WAIT milliseconds457 timer457
	TIMER_READY timer457
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer459
	DATA8 nos459
	DATA8 busy459
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer459 nos459
	JR_EQ8 0 nos459 motornotbusy459
  motorwaiting459:
	OUTPUT_TEST layer459 nos459 busy459
	JR_EQ8 busy459 0 motornotbusy459
	SLEEP
	JR motorwaiting459
  motornotbusy459:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB460:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB461:
    WRITE32 ENDSUB_F_PR_0:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB462:
    CALL MOTOR.RESETCOUNT 'bc'
  while464:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf468
    DATA8 flag468
    DIVF F.1 2.0 tmpf468
    CP_EQF 0.0 2.0 flag468
    SELECTF flag468 0.0 tmpf468 F.0

    JR_GTEQF F.0 270.0 endwhile464
  whilebody464:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB469:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf473
    DATA8 flag473
    DIVF F.1 2.0 tmpf473
    CP_EQF 0.0 2.0 flag473
    SELECTF flag473 0.0 tmpf473 F.0

    JR_LTF F.0 270.0 whilebody464
  endwhile464:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds476
	MOVEF_32 500.0 milliseconds476
	DATA32 timer476
	TIMER_WAIT milliseconds476 timer476
	TIMER_READY timer476
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB478:
    MOVEF_F 1050.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf479
    DATA8 flag479
    DIVF 360.0 VGV_L tmpf479
    CP_EQF 0.0 VGV_L flag479
    SELECTF flag479 0.0 tmpf479 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while482:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile482
  whilebody482:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB484:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody482
  endwhile482:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB487:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB488:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB489:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB491:
    CALL MOTOR.RESETCOUNT 'bc'
  while493:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf497
    DATA8 flag497
    DIVF F.1 2.0 tmpf497
    CP_EQF 0.0 2.0 flag497
    SELECTF flag497 0.0 tmpf497 F.0

    JR_GTEQF F.0 270.0 endwhile493
  whilebody493:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB498:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf502
    DATA8 flag502
    DIVF F.1 2.0 tmpf502
    CP_EQF 0.0 2.0 flag502
    SELECTF flag502 0.0 tmpf502 F.0

    JR_LTF F.0 270.0 whilebody493
  endwhile493:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer504
	DATA8 nos504
	DATA8 busy504
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer504 nos504
	JR_EQ8 0 nos504 motornotbusy504
  motorwaiting504:
	OUTPUT_TEST layer504 nos504 busy504
	JR_EQ8 busy504 0 motornotbusy504
	SLEEP
	JR motorwaiting504
  motornotbusy504:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds506
	MOVEF_32 500.0 milliseconds506
	DATA32 timer506
	TIMER_WAIT milliseconds506 timer506
	TIMER_READY timer506
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer508
	DATA8 nos508
	DATA8 busy508
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer508 nos508
	JR_EQ8 0 nos508 motornotbusy508
  motorwaiting508:
	OUTPUT_TEST layer508 nos508 busy508
	JR_EQ8 busy508 0 motornotbusy508
	SLEEP
	JR motorwaiting508
  motornotbusy508:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB509:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB510:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer511
	DATA8 nos511
	DATA8 busy511
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer511 nos511
	JR_EQ8 0 nos511 motornotbusy511
  motorwaiting511:
	OUTPUT_TEST layer511 nos511 busy511
	JR_EQ8 busy511 0 motornotbusy511
	SLEEP
	JR motorwaiting511
  motornotbusy511:
    PROGRAM_STOP -1
  else328_1:
  endif328:
  else324_1:
  endif324:
    JR_NEQF VGV_COLOR3 5.0 else513_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB514:
    CALL MOTOR.RESETCOUNT 'bc'
  while516:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf520
    DATA8 flag520
    DIVF F.1 2.0 tmpf520
    CP_EQF 0.0 2.0 flag520
    SELECTF flag520 0.0 tmpf520 F.0

    JR_GTEQF F.0 300.0 endwhile516
  whilebody516:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB521:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf525
    DATA8 flag525
    DIVF F.1 2.0 tmpf525
    CP_EQF 0.0 2.0 flag525
    SELECTF flag525 0.0 tmpf525 F.0

    JR_LTF F.0 300.0 whilebody516
  endwhile516:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds528
	MOVEF_32 500.0 milliseconds528
	DATA32 timer528
	TIMER_WAIT milliseconds528 timer528
	TIMER_READY timer528
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB530:
    MOVEF_F 475.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf531
    DATA8 flag531
    DIVF 360.0 VGV_L tmpf531
    CP_EQF 0.0 VGV_L flag531
    SELECTF flag531 0.0 tmpf531 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while534:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile534
  whilebody534:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB536:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody534
  endwhile534:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB539:
    JR_NEQF VGV_C 1.0 else540_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB541:
    JR endif540
  else540_1:
    JR_NEQF VGV_C 0.0 else540_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB542:
    JR endif540
  else540_2:
    JR_NEQF VGV_C 2.0 else540_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB543:
    MOVEF_F 640.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB544:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds546
	MOVEF_32 100.0 milliseconds546
	DATA32 timer546
	TIMER_WAIT milliseconds546 timer546
	TIMER_READY timer546
    WRITE32 ENDSUB_F_PL_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB547:
    CALL MOTOR.RESETCOUNT 'bc'
  while549:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf553
    DATA8 flag553
    DIVF F.1 2.0 tmpf553
    CP_EQF 0.0 2.0 flag553
    SELECTF flag553 0.0 tmpf553 F.0

    JR_GTEQF F.0 270.0 endwhile549
  whilebody549:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB554:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf558
    DATA8 flag558
    DIVF F.1 2.0 tmpf558
    CP_EQF 0.0 2.0 flag558
    SELECTF flag558 0.0 tmpf558 F.0

    JR_LTF F.0 270.0 whilebody549
  endwhile549:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer560
	DATA8 nos560
	DATA8 busy560
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer560 nos560
	JR_EQ8 0 nos560 motornotbusy560
  motorwaiting560:
	OUTPUT_TEST layer560 nos560 busy560
	JR_EQ8 busy560 0 motornotbusy560
	SLEEP
	JR motorwaiting560
  motornotbusy560:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds562
	MOVEF_32 500.0 milliseconds562
	DATA32 timer562
	TIMER_WAIT milliseconds562 timer562
	TIMER_READY timer562
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer564
	DATA8 nos564
	DATA8 busy564
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer564 nos564
	JR_EQ8 0 nos564 motornotbusy564
  motorwaiting564:
	OUTPUT_TEST layer564 nos564 busy564
	JR_EQ8 busy564 0 motornotbusy564
	SLEEP
	JR motorwaiting564
  motornotbusy564:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB565:
    MOVEF_F 800.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB566:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer568
	DATA8 nos568
	DATA8 busy568
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer568 nos568
	JR_EQ8 0 nos568 motornotbusy568
  motorwaiting568:
	OUTPUT_TEST layer568 nos568 busy568
	JR_EQ8 busy568 0 motornotbusy568
	SLEEP
	JR motorwaiting568
  motornotbusy568:
    PROGRAM_STOP -1
  else540_3:
  endif540:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB570:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer572
	DATA8 nos572
	DATA8 busy572
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer572 nos572
	JR_EQ8 0 nos572 motornotbusy572
  motorwaiting572:
	OUTPUT_TEST layer572 nos572 busy572
	JR_EQ8 busy572 0 motornotbusy572
	SLEEP
	JR motorwaiting572
  motornotbusy572:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer574
	DATA8 nos574
	DATA8 busy574
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer574 nos574
	JR_EQ8 0 nos574 motornotbusy574
  motorwaiting574:
	OUTPUT_TEST layer574 nos574 busy574
	JR_EQ8 busy574 0 motornotbusy574
	SLEEP
	JR motorwaiting574
  motornotbusy574:
    WRITE32 ENDSUB_F_A3_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB575:
    WRITE32 ENDSUB_F_A2_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB576:
  while577:
    JR_LTEQF VGV_S2 15.0 endwhile577
  whilebody577:
    WRITE32 ENDSUB_F_A3_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB578:
    WRITE32 ENDSUB_F_A2_0:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB579:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 15.0 whilebody577
  endwhile577:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB582:
    WRITE32 ENDSUB_F_A2_0:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB583:
  while584:
    JR_GTEQF VGV_S2 55.0 endwhile584
  whilebody584:
    WRITE32 ENDSUB_F_A3_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB585:
    WRITE32 ENDSUB_F_A2_0:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB586:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 55.0 whilebody584
  endwhile584:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while590:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf594
    DATA8 flag594
    DIVF F.1 2.0 tmpf594
    CP_EQF 0.0 2.0 flag594
    SELECTF flag594 0.0 tmpf594 F.0

    JR_GTEQF F.0 200.0 endwhile590
  whilebody590:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB595:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf599
    DATA8 flag599
    DIVF F.1 2.0 tmpf599
    CP_EQF 0.0 2.0 flag599
    SELECTF flag599 0.0 tmpf599 F.0

    JR_LTF F.0 200.0 whilebody590
  endwhile590:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer601
	DATA8 nos601
	DATA8 busy601
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer601 nos601
	JR_EQ8 0 nos601 motornotbusy601
  motorwaiting601:
	OUTPUT_TEST layer601 nos601 busy601
	JR_EQ8 busy601 0 motornotbusy601
	SLEEP
	JR motorwaiting601
  motornotbusy601:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds603
	MOVEF_32 500.0 milliseconds603
	DATA32 timer603
	TIMER_WAIT milliseconds603 timer603
	TIMER_READY timer603
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer605
	DATA8 nos605
	DATA8 busy605
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer605 nos605
	JR_EQ8 0 nos605 motornotbusy605
  motorwaiting605:
	OUTPUT_TEST layer605 nos605 busy605
	JR_EQ8 busy605 0 motornotbusy605
	SLEEP
	JR motorwaiting605
  motornotbusy605:
    DATA32 tmp606
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp606
    JR_NEQ32 0 tmp606 alreadylaunched606
    OBJECT_START TF_VIDVIG_0
  alreadylaunched606:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB607:
    MOVEF_F 350.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB608:
    ADDF VGV_C 1.0 VGV_C
  else513_1:
  endif513:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB610:
    JR_GTEQF VGV_H 30.0 else611_1
    MOVEF_F 5.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif611
  else611_1:
    MOVEF_F 4.0 VGV_COLOR4
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else611_2:
  endif611:
    JR_NEQF VGV_COLOR4 4.0 else614_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer615
	DATA8 nos615
	DATA8 busy615
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer615 nos615
	JR_EQ8 0 nos615 motornotbusy615
  motorwaiting615:
	OUTPUT_TEST layer615 nos615 busy615
	JR_EQ8 busy615 0 motornotbusy615
	SLEEP
	JR motorwaiting615
  motornotbusy615:
    WRITE32 ENDSUB_F_A3_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB616:
    WRITE32 ENDSUB_F_A2_0:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB617:
  while618:
    JR_LTEQF VGV_S3 10.0 and620
    JR_GTF VGV_S2 10.0 or619
  and620:
    JR_GTEQF VGV_S3 10.0 endwhile618
    JR_GTEQF VGV_S2 10.0 endwhile618
  or619:
  whilebody618:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB621:
    JR_LTEQF VGV_S3 10.0 and622
    JR_GTF VGV_S2 10.0 whilebody618
  and622:
    JR_GTEQF VGV_S3 10.0 and623
    JR_LTF VGV_S2 10.0 whilebody618
  and623:
  endwhile618:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer625
	DATA8 nos625
	DATA8 busy625
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer625 nos625
	JR_EQ8 0 nos625 motornotbusy625
  motorwaiting625:
	OUTPUT_TEST layer625 nos625 busy625
	JR_EQ8 busy625 0 motornotbusy625
	SLEEP
	JR motorwaiting625
  motornotbusy625:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer626
	DATA8 nos626
	DATA8 busy626
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer626 nos626
	JR_EQ8 0 nos626 motornotbusy626
  motorwaiting626:
	OUTPUT_TEST layer626 nos626 busy626
	JR_EQ8 busy626 0 motornotbusy626
	SLEEP
	JR motorwaiting626
  motornotbusy626:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer627
	DATA8 nos627
	DATA8 busy627
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer627 nos627
	JR_EQ8 0 nos627 motornotbusy627
  motorwaiting627:
	OUTPUT_TEST layer627 nos627 busy627
	JR_EQ8 busy627 0 motornotbusy627
	SLEEP
	JR motorwaiting627
  motornotbusy627:
    WRITE32 ENDSUB_F_A2_0:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB628:
    WRITE32 ENDSUB_F_A3_0:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB629:
  while630:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile630
  whilebody630:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody630
  endwhile630:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB635:
    WRITE32 ENDSUB_F_A3_0:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB636:
  while637:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile637
  whilebody637:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody637
  endwhile637:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB642:
    WRITE32 ENDSUB_F_A2_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB643:
  while644:
    JR_LTEQF VGV_S3 10.0 and646
    JR_GTF VGV_S2 10.0 or645
  and646:
    JR_GTEQF VGV_S3 10.0 endwhile644
    JR_GTEQF VGV_S2 10.0 endwhile644
  or645:
  whilebody644:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB647:
    JR_LTEQF VGV_S3 10.0 and648
    JR_GTF VGV_S2 10.0 whilebody644
  and648:
    JR_GTEQF VGV_S3 10.0 and649
    JR_LTF VGV_S2 10.0 whilebody644
  and649:
  endwhile644:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer651
	DATA8 nos651
	DATA8 busy651
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer651 nos651
	JR_EQ8 0 nos651 motornotbusy651
  motorwaiting651:
	OUTPUT_TEST layer651 nos651 busy651
	JR_EQ8 busy651 0 motornotbusy651
	SLEEP
	JR motorwaiting651
  motornotbusy651:
    WRITE32 ENDSUB_F_A3_0:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB652:
    WRITE32 ENDSUB_F_A2_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB653:
  while654:
    JR_LTEQF VGV_S3 10.0 and656
    JR_GTF VGV_S2 10.0 or655
  and656:
    JR_GTEQF VGV_S3 10.0 endwhile654
    JR_GTEQF VGV_S2 10.0 endwhile654
  or655:
  whilebody654:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB657:
    JR_LTEQF VGV_S3 10.0 and658
    JR_GTF VGV_S2 10.0 whilebody654
  and658:
    JR_GTEQF VGV_S3 10.0 and659
    JR_LTF VGV_S2 10.0 whilebody654
  and659:
  endwhile654:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VGV_C 1.0 else661_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB662:
    CALL MOTOR.RESETCOUNT 'bc'
  while664:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf668
    DATA8 flag668
    DIVF F.1 2.0 tmpf668
    CP_EQF 0.0 2.0 flag668
    SELECTF flag668 0.0 tmpf668 F.0

    JR_GTEQF F.0 500.0 endwhile664
  whilebody664:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB669:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf673
    DATA8 flag673
    DIVF F.1 2.0 tmpf673
    CP_EQF 0.0 2.0 flag673
    SELECTF flag673 0.0 tmpf673 F.0

    JR_LTF F.0 500.0 whilebody664
  endwhile664:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds676
	MOVEF_32 500.0 milliseconds676
	DATA32 timer676
	TIMER_WAIT milliseconds676 timer676
	TIMER_READY timer676
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB678:
    MOVEF_F 520.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf679
    DATA8 flag679
    DIVF 360.0 VGV_L tmpf679
    CP_EQF 0.0 VGV_L flag679
    SELECTF flag679 0.0 tmpf679 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while682:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile682
  whilebody682:
    JR_GTEQF VGV_SPEED 80.0 else684_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else684_1:
  endif684:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB686:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody682
  endwhile682:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB689:
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB690:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB691:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB693:
    CALL MOTOR.RESETCOUNT 'bc'
  while695:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf699
    DATA8 flag699
    DIVF F.1 2.0 tmpf699
    CP_EQF 0.0 2.0 flag699
    SELECTF flag699 0.0 tmpf699 F.0

    JR_GTEQF F.0 400.0 endwhile695
  whilebody695:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB700:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf704
    DATA8 flag704
    DIVF F.1 2.0 tmpf704
    CP_EQF 0.0 2.0 flag704
    SELECTF flag704 0.0 tmpf704 F.0

    JR_LTF F.0 400.0 whilebody695
  endwhile695:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer706
	DATA8 nos706
	DATA8 busy706
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer706 nos706
	JR_EQ8 0 nos706 motornotbusy706
  motorwaiting706:
	OUTPUT_TEST layer706 nos706 busy706
	JR_EQ8 busy706 0 motornotbusy706
	SLEEP
	JR motorwaiting706
  motornotbusy706:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds708
	MOVEF_32 500.0 milliseconds708
	DATA32 timer708
	TIMER_WAIT milliseconds708 timer708
	TIMER_READY timer708
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer710
	DATA8 nos710
	DATA8 busy710
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer710 nos710
	JR_EQ8 0 nos710 motornotbusy710
  motorwaiting710:
	OUTPUT_TEST layer710 nos710 busy710
	JR_EQ8 busy710 0 motornotbusy710
	SLEEP
	JR motorwaiting710
  motornotbusy710:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB711:
    MOVEF_F 500.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB712:
    WRITE32 ENDSUB_F_PR_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB713:
    CALL MOTOR.RESETCOUNT 'bc'
  while715:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf719
    DATA8 flag719
    DIVF F.1 2.0 tmpf719
    CP_EQF 0.0 2.0 flag719
    SELECTF flag719 0.0 tmpf719 F.0

    JR_GTEQF F.0 270.0 endwhile715
  whilebody715:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB720:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf724
    DATA8 flag724
    DIVF F.1 2.0 tmpf724
    CP_EQF 0.0 2.0 flag724
    SELECTF flag724 0.0 tmpf724 F.0

    JR_LTF F.0 270.0 whilebody715
  endwhile715:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds727
	MOVEF_32 500.0 milliseconds727
	DATA32 timer727
	TIMER_WAIT milliseconds727 timer727
	TIMER_READY timer727
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB729:
    MOVEF_F 1150.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf730
    DATA8 flag730
    DIVF 360.0 VGV_L tmpf730
    CP_EQF 0.0 VGV_L flag730
    SELECTF flag730 0.0 tmpf730 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while733:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile733
  whilebody733:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB735:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody733
  endwhile733:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB738:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB739:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB740:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB742:
    CALL MOTOR.RESETCOUNT 'bc'
  while744:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf748
    DATA8 flag748
    DIVF F.1 2.0 tmpf748
    CP_EQF 0.0 2.0 flag748
    SELECTF flag748 0.0 tmpf748 F.0

    JR_GTEQF F.0 270.0 endwhile744
  whilebody744:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB749:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf753
    DATA8 flag753
    DIVF F.1 2.0 tmpf753
    CP_EQF 0.0 2.0 flag753
    SELECTF flag753 0.0 tmpf753 F.0

    JR_LTF F.0 270.0 whilebody744
  endwhile744:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer755
	DATA8 nos755
	DATA8 busy755
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer755 nos755
	JR_EQ8 0 nos755 motornotbusy755
  motorwaiting755:
	OUTPUT_TEST layer755 nos755 busy755
	JR_EQ8 busy755 0 motornotbusy755
	SLEEP
	JR motorwaiting755
  motornotbusy755:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds757
	MOVEF_32 500.0 milliseconds757
	DATA32 timer757
	TIMER_WAIT milliseconds757 timer757
	TIMER_READY timer757
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer759
	DATA8 nos759
	DATA8 busy759
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer759 nos759
	JR_EQ8 0 nos759 motornotbusy759
  motorwaiting759:
	OUTPUT_TEST layer759 nos759 busy759
	JR_EQ8 busy759 0 motornotbusy759
	SLEEP
	JR motorwaiting759
  motornotbusy759:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB760:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB761:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer762
	DATA8 nos762
	DATA8 busy762
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer762 nos762
	JR_EQ8 0 nos762 motornotbusy762
  motorwaiting762:
	OUTPUT_TEST layer762 nos762 busy762
	JR_EQ8 busy762 0 motornotbusy762
	SLEEP
	JR motorwaiting762
  motornotbusy762:
    PROGRAM_STOP -1
  else661_1:
  endif661:
  else614_1:
  endif614:
    JR_NEQF VGV_COLOR4 5.0 else764_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB765:
    CALL MOTOR.RESETCOUNT 'bc'
  while767:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf771
    DATA8 flag771
    DIVF F.1 2.0 tmpf771
    CP_EQF 0.0 2.0 flag771
    SELECTF flag771 0.0 tmpf771 F.0

    JR_GTEQF F.0 450.0 endwhile767
  whilebody767:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB772:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf776
    DATA8 flag776
    DIVF F.1 2.0 tmpf776
    CP_EQF 0.0 2.0 flag776
    SELECTF flag776 0.0 tmpf776 F.0

    JR_LTF F.0 450.0 whilebody767
  endwhile767:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds779
	MOVEF_32 500.0 milliseconds779
	DATA32 timer779
	TIMER_WAIT milliseconds779 timer779
	TIMER_READY timer779
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB781:
    MOVEF_F 250.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf782
    DATA8 flag782
    DIVF 360.0 VGV_L tmpf782
    CP_EQF 0.0 VGV_L flag782
    SELECTF flag782 0.0 tmpf782 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while785:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile785
  whilebody785:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB787:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody785
  endwhile785:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB790:
    JR_NEQF VGV_C 1.0 else791_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB792:
    JR endif791
  else791_1:
    JR_NEQF VGV_C 0.0 else791_2
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB793:
    JR endif791
  else791_2:
    JR_NEQF VGV_C 2.0 else791_3
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB794:
    MOVEF_F 160.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB795:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB797:
    CALL MOTOR.RESETCOUNT 'bc'
  while799:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf803
    DATA8 flag803
    DIVF F.1 2.0 tmpf803
    CP_EQF 0.0 2.0 flag803
    SELECTF flag803 0.0 tmpf803 F.0

    JR_GTEQF F.0 250.0 endwhile799
  whilebody799:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB804:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf808
    DATA8 flag808
    DIVF F.1 2.0 tmpf808
    CP_EQF 0.0 2.0 flag808
    SELECTF flag808 0.0 tmpf808 F.0

    JR_LTF F.0 250.0 whilebody799
  endwhile799:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer810
	DATA8 nos810
	DATA8 busy810
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer810 nos810
	JR_EQ8 0 nos810 motornotbusy810
  motorwaiting810:
	OUTPUT_TEST layer810 nos810 busy810
	JR_EQ8 busy810 0 motornotbusy810
	SLEEP
	JR motorwaiting810
  motornotbusy810:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds812
	MOVEF_32 500.0 milliseconds812
	DATA32 timer812
	TIMER_WAIT milliseconds812 timer812
	TIMER_READY timer812
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer814
	DATA8 nos814
	DATA8 busy814
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer814 nos814
	JR_EQ8 0 nos814 motornotbusy814
  motorwaiting814:
	OUTPUT_TEST layer814 nos814 busy814
	JR_EQ8 busy814 0 motornotbusy814
	SLEEP
	JR motorwaiting814
  motornotbusy814:
    WRITE32 ENDSUB_F_NPP_0:CALLSUB815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB815:
    CALL MOTOR.RESETCOUNT 'bc'
  while817:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf821
    DATA8 flag821
    DIVF F.1 2.0 tmpf821
    CP_EQF 0.0 2.0 flag821
    SELECTF flag821 0.0 tmpf821 F.0

    JR_GTEQF F.0 100.0 endwhile817
  whilebody817:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB822:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf826
    DATA8 flag826
    DIVF F.1 2.0 tmpf826
    CP_EQF 0.0 2.0 flag826
    SELECTF flag826 0.0 tmpf826 F.0

    JR_LTF F.0 100.0 whilebody817
  endwhile817:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB828:
    ADDF VGV_C 1.0 VGV_C
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer830
	DATA8 nos830
	DATA8 busy830
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer830 nos830
	JR_EQ8 0 nos830 motornotbusy830
  motorwaiting830:
	OUTPUT_TEST layer830 nos830 busy830
	JR_EQ8 busy830 0 motornotbusy830
	SLEEP
	JR motorwaiting830
  motornotbusy830:
    PROGRAM_STOP -1
  else791_3:
  endif791:
    MOVEF_F 150.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB832:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB834:
    CALL MOTOR.RESETCOUNT 'bc'
  while836:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf840
    DATA8 flag840
    DIVF F.1 2.0 tmpf840
    CP_EQF 0.0 2.0 flag840
    SELECTF flag840 0.0 tmpf840 F.0

    JR_GTEQF F.0 250.0 endwhile836
  whilebody836:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB841:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf845
    DATA8 flag845
    DIVF F.1 2.0 tmpf845
    CP_EQF 0.0 2.0 flag845
    SELECTF flag845 0.0 tmpf845 F.0

    JR_LTF F.0 250.0 whilebody836
  endwhile836:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer847
	DATA8 nos847
	DATA8 busy847
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer847 nos847
	JR_EQ8 0 nos847 motornotbusy847
  motorwaiting847:
	OUTPUT_TEST layer847 nos847 busy847
	JR_EQ8 busy847 0 motornotbusy847
	SLEEP
	JR motorwaiting847
  motornotbusy847:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds849
	MOVEF_32 500.0 milliseconds849
	DATA32 timer849
	TIMER_WAIT milliseconds849 timer849
	TIMER_READY timer849
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer851
	DATA8 nos851
	DATA8 busy851
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer851 nos851
	JR_EQ8 0 nos851 motornotbusy851
  motorwaiting851:
	OUTPUT_TEST layer851 nos851 busy851
	JR_EQ8 busy851 0 motornotbusy851
	SLEEP
	JR motorwaiting851
  motornotbusy851:
    DATA32 tmp852
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp852
    JR_NEQ32 0 tmp852 alreadylaunched852
    OBJECT_START TF_VIDVIG_0
  alreadylaunched852:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB853 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB853:
    WRITE32 ENDSUB_F_A3_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB854:
    WRITE32 ENDSUB_F_A2_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB855:
  while856:
    JR_LTEQF VGV_S3 10.0 and858
    JR_GTF VGV_S2 10.0 or857
  and858:
    JR_GTEQF VGV_S3 10.0 endwhile856
    JR_GTEQF VGV_S2 10.0 endwhile856
  or857:
  whilebody856:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB859:
    JR_LTEQF VGV_S3 10.0 and860
    JR_GTF VGV_S2 10.0 whilebody856
  and860:
    JR_GTEQF VGV_S3 10.0 and861
    JR_LTF VGV_S2 10.0 whilebody856
  and861:
  endwhile856:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer863
	DATA8 nos863
	DATA8 busy863
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer863 nos863
	JR_EQ8 0 nos863 motornotbusy863
  motorwaiting863:
	OUTPUT_TEST layer863 nos863 busy863
	JR_EQ8 busy863 0 motornotbusy863
	SLEEP
	JR motorwaiting863
  motornotbusy863:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer864
	DATA8 nos864
	DATA8 busy864
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer864 nos864
	JR_EQ8 0 nos864 motornotbusy864
  motorwaiting864:
	OUTPUT_TEST layer864 nos864 busy864
	JR_EQ8 busy864 0 motornotbusy864
	SLEEP
	JR motorwaiting864
  motornotbusy864:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 150.0 'true'

	DATA8 layer865
	DATA8 nos865
	DATA8 busy865
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer865 nos865
	JR_EQ8 0 nos865 motornotbusy865
  motorwaiting865:
	OUTPUT_TEST layer865 nos865 busy865
	JR_EQ8 busy865 0 motornotbusy865
	SLEEP
	JR motorwaiting865
  motornotbusy865:
    WRITE32 ENDSUB_F_A2_0:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB866:
    WRITE32 ENDSUB_F_A3_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB867:
  while868:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 7.0 endwhile868
  whilebody868:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 7.0 whilebody868
  endwhile868:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB873:
    WRITE32 ENDSUB_F_A3_0:CALLSUB874 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB874:
  while875:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 50.0 endwhile875
  whilebody875:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 50.0 whilebody875
  endwhile875:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB880:
    WRITE32 ENDSUB_F_A2_0:CALLSUB881 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB881:
  while882:
    JR_LTEQF VGV_S3 10.0 and884
    JR_GTF VGV_S2 10.0 or883
  and884:
    JR_GTEQF VGV_S3 10.0 endwhile882
    JR_GTEQF VGV_S2 10.0 endwhile882
  or883:
  whilebody882:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB885:
    JR_LTEQF VGV_S3 10.0 and886
    JR_GTF VGV_S2 10.0 whilebody882
  and886:
    JR_GTEQF VGV_S3 10.0 and887
    JR_LTF VGV_S2 10.0 whilebody882
  and887:
  endwhile882:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer889
	DATA8 nos889
	DATA8 busy889
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer889 nos889
	JR_EQ8 0 nos889 motornotbusy889
  motorwaiting889:
	OUTPUT_TEST layer889 nos889 busy889
	JR_EQ8 busy889 0 motornotbusy889
	SLEEP
	JR motorwaiting889
  motornotbusy889:
    WRITE32 ENDSUB_F_A3_0:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB890:
    WRITE32 ENDSUB_F_A2_0:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB891:
  while892:
    JR_LTEQF VGV_S3 10.0 and894
    JR_GTF VGV_S2 10.0 or893
  and894:
    JR_GTEQF VGV_S3 10.0 endwhile892
    JR_GTEQF VGV_S2 10.0 endwhile892
  or893:
  whilebody892:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB895:
    JR_LTEQF VGV_S3 10.0 and896
    JR_GTF VGV_S2 10.0 whilebody892
  and896:
    JR_GTEQF VGV_S3 10.0 and897
    JR_LTF VGV_S2 10.0 whilebody892
  and897:
  endwhile892:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VGV_C 1.0 VGV_C
  else764_1:
  endif764:
    WRITE32 ENDSUB_F_HSV_100_0:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_100_0
CALLSUB900:
    JR_LTF VGV_H 25.0 or902
    JR_LTEQF VGV_H 280.0 else901_1
  or902:
    MOVEF_F 5.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif901
  else901_1:
    MOVEF_F 4.0 VGV_COLOR5
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else901_2:
  endif901:
    JR_NEQF VGV_COLOR5 4.0 else905_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer906
	DATA8 nos906
	DATA8 busy906
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer906 nos906
	JR_EQ8 0 nos906 motornotbusy906
  motorwaiting906:
	OUTPUT_TEST layer906 nos906 busy906
	JR_EQ8 busy906 0 motornotbusy906
	SLEEP
	JR motorwaiting906
  motornotbusy906:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB907:
    WRITE32 ENDSUB_F_PR_0:CALLSUB908 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB908:
    CALL MOTOR.RESETCOUNT 'bc'
  while910:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf914
    DATA8 flag914
    DIVF F.1 2.0 tmpf914
    CP_EQF 0.0 2.0 flag914
    SELECTF flag914 0.0 tmpf914 F.0

    JR_GTEQF F.0 270.0 endwhile910
  whilebody910:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB915:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf919
    DATA8 flag919
    DIVF F.1 2.0 tmpf919
    CP_EQF 0.0 2.0 flag919
    SELECTF flag919 0.0 tmpf919 F.0

    JR_LTF F.0 270.0 whilebody910
  endwhile910:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds922
	MOVEF_32 500.0 milliseconds922
	DATA32 timer922
	TIMER_WAIT milliseconds922 timer922
	TIMER_READY timer922
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB924:
    CALL MOTOR.RESETCOUNT 'bc'
  while926:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf930
    DATA8 flag930
    DIVF F.1 2.0 tmpf930
    CP_EQF 0.0 2.0 flag930
    SELECTF flag930 0.0 tmpf930 F.0

    JR_GTEQF F.0 100.0 endwhile926
  whilebody926:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB931:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf935
    DATA8 flag935
    DIVF F.1 2.0 tmpf935
    CP_EQF 0.0 2.0 flag935
    SELECTF flag935 0.0 tmpf935 F.0

    JR_LTF F.0 100.0 whilebody926
  endwhile926:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 750.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf937
    DATA8 flag937
    DIVF 360.0 VGV_L tmpf937
    CP_EQF 0.0 VGV_L flag937
    SELECTF flag937 0.0 tmpf937 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while940:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile940
  whilebody940:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB942:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody940
  endwhile940:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB945:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB946:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB947:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB949:
    CALL MOTOR.RESETCOUNT 'bc'
  while951:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf955
    DATA8 flag955
    DIVF F.1 2.0 tmpf955
    CP_EQF 0.0 2.0 flag955
    SELECTF flag955 0.0 tmpf955 F.0

    JR_GTEQF F.0 270.0 endwhile951
  whilebody951:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB956:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf960
    DATA8 flag960
    DIVF F.1 2.0 tmpf960
    CP_EQF 0.0 2.0 flag960
    SELECTF flag960 0.0 tmpf960 F.0

    JR_LTF F.0 270.0 whilebody951
  endwhile951:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer962
	DATA8 nos962
	DATA8 busy962
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer962 nos962
	JR_EQ8 0 nos962 motornotbusy962
  motorwaiting962:
	OUTPUT_TEST layer962 nos962 busy962
	JR_EQ8 busy962 0 motornotbusy962
	SLEEP
	JR motorwaiting962
  motornotbusy962:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds964
	MOVEF_32 500.0 milliseconds964
	DATA32 timer964
	TIMER_WAIT milliseconds964 timer964
	TIMER_READY timer964
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer966
	DATA8 nos966
	DATA8 busy966
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer966 nos966
	JR_EQ8 0 nos966 motornotbusy966
  motorwaiting966:
	OUTPUT_TEST layer966 nos966 busy966
	JR_EQ8 busy966 0 motornotbusy966
	SLEEP
	JR motorwaiting966
  motornotbusy966:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB967:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB968:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer969
	DATA8 nos969
	DATA8 busy969
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer969 nos969
	JR_EQ8 0 nos969 motornotbusy969
  motorwaiting969:
	OUTPUT_TEST layer969 nos969 busy969
	JR_EQ8 busy969 0 motornotbusy969
	SLEEP
	JR motorwaiting969
  motornotbusy969:
    PROGRAM_STOP -1
  else905_1:
  endif905:
    JR_NEQF VGV_COLOR5 5.0 else971_1
    WRITE32 ENDSUB_F_PR_0:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB972:
    CALL MOTOR.RESETCOUNT 'bc'
  while974:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf978
    DATA8 flag978
    DIVF F.1 2.0 tmpf978
    CP_EQF 0.0 2.0 flag978
    SELECTF flag978 0.0 tmpf978 F.0

    JR_GTEQF F.0 500.0 endwhile974
  whilebody974:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB979:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf983
    DATA8 flag983
    DIVF F.1 2.0 tmpf983
    CP_EQF 0.0 2.0 flag983
    SELECTF flag983 0.0 tmpf983 F.0

    JR_LTF F.0 500.0 whilebody974
  endwhile974:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds986
	MOVEF_32 500.0 milliseconds986
	DATA32 timer986
	TIMER_WAIT milliseconds986 timer986
	TIMER_READY timer986
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPP_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPP_0
CALLSUB988:
    MOVEF_F 420.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf989
    DATA8 flag989
    DIVF 360.0 VGV_L tmpf989
    CP_EQF 0.0 VGV_L flag989
    SELECTF flag989 0.0 tmpf989 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while992:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile992
  whilebody992:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB994:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody992
  endwhile992:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB997:
    JR_NEQF VGV_C 1.0 else998_1
    WRITE32 ENDSUB_F_BELLAM2_0:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM2_0
CALLSUB999:
    MOVEF_F 300.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1000:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1002:
    CALL MOTOR.RESETCOUNT 'bc'
  while1004:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1008
    DATA8 flag1008
    DIVF F.1 2.0 tmpf1008
    CP_EQF 0.0 2.0 flag1008
    SELECTF flag1008 0.0 tmpf1008 F.0

    JR_GTEQF F.0 470.0 endwhile1004
  whilebody1004:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1009:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1013
    DATA8 flag1013
    DIVF F.1 2.0 tmpf1013
    CP_EQF 0.0 2.0 flag1013
    SELECTF flag1013 0.0 tmpf1013 F.0

    JR_LTF F.0 470.0 whilebody1004
  endwhile1004:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer1015
	DATA8 nos1015
	DATA8 busy1015
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1015 nos1015
	JR_EQ8 0 nos1015 motornotbusy1015
  motorwaiting1015:
	OUTPUT_TEST layer1015 nos1015 busy1015
	JR_EQ8 busy1015 0 motornotbusy1015
	SLEEP
	JR motorwaiting1015
  motornotbusy1015:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1017
	MOVEF_32 500.0 milliseconds1017
	DATA32 timer1017
	TIMER_WAIT milliseconds1017 timer1017
	TIMER_READY timer1017
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer1019
	DATA8 nos1019
	DATA8 busy1019
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1019 nos1019
	JR_EQ8 0 nos1019 motornotbusy1019
  motorwaiting1019:
	OUTPUT_TEST layer1019 nos1019 busy1019
	JR_EQ8 busy1019 0 motornotbusy1019
	SLEEP
	JR motorwaiting1019
  motornotbusy1019:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1020:
    MOVEF_F 520.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1021 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1021:
    WRITE32 ENDSUB_F_PR_0:CALLSUB1022 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1022:
    CALL MOTOR.RESETCOUNT 'bc'
  while1024:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1028
    DATA8 flag1028
    DIVF F.1 2.0 tmpf1028
    CP_EQF 0.0 2.0 flag1028
    SELECTF flag1028 0.0 tmpf1028 F.0

    JR_GTEQF F.0 270.0 endwhile1024
  whilebody1024:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1029:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1033
    DATA8 flag1033
    DIVF F.1 2.0 tmpf1033
    CP_EQF 0.0 2.0 flag1033
    SELECTF flag1033 0.0 tmpf1033 F.0

    JR_LTF F.0 270.0 whilebody1024
  endwhile1024:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1036
	MOVEF_32 500.0 milliseconds1036
	DATA32 timer1036
	TIMER_WAIT milliseconds1036 timer1036
	TIMER_READY timer1036
    CALL MOTOR.STOP 'd' 'true'
    DATA8 layer1038
	DATA8 no1038
	DATA8 mode81038
	
	MOVEF_8 2.0 no1038
	SUB8 no1038 1 no1038
	DIV8 no1038 4 layer1038
	MATH MOD8 no1038 4 no1038

	MOVEF_8 0.0 mode81038
	
	INPUT_DEVICE READY_RAW layer1038 no1038 0 mode81038 0
    DATA8 layer1039
	DATA8 no1039
	DATA8 mode81039
	
	MOVEF_8 3.0 no1039
	SUB8 no1039 1 no1039
	DIV8 no1039 4 layer1039
	MATH MOD8 no1039 4 no1039

	MOVEF_8 0.0 mode81039
	
	INPUT_DEVICE READY_RAW layer1039 no1039 0 mode81039 0
  while1040:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1042
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1041
  and1042:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1045
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 or1041
  and1045:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 endwhile1040
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 8.0 endwhile1040
  or1041:
  whilebody1040:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1051
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1040
  and1051:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 8.0 and1054
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 8.0 whilebody1040
  and1054:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 8.0 and1057
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 8.0 whilebody1040
  and1057:
  endwhile1040:
  while1060:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1060
  whilebody1060:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1060
  endwhile1060:
    CALL MOTOR.STOP 'B' 'True'
  while1065:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1065
  whilebody1065:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1065
  endwhile1065:
    CALL MOTOR.STOP 'C' 'True'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1070
	DATA8 nos1070
	DATA8 busy1070
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1070 nos1070
	JR_EQ8 0 nos1070 motornotbusy1070
  motorwaiting1070:
	OUTPUT_TEST layer1070 nos1070 busy1070
	JR_EQ8 busy1070 0 motornotbusy1070
	SLEEP
	JR motorwaiting1070
  motornotbusy1070:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer1072
	DATA8 nos1072
	DATA8 busy1072
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1072 nos1072
	JR_EQ8 0 nos1072 motornotbusy1072
  motorwaiting1072:
	OUTPUT_TEST layer1072 nos1072 busy1072
	JR_EQ8 busy1072 0 motornotbusy1072
	SLEEP
	JR motorwaiting1072
  motornotbusy1072:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1074:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1075:
  while1076:
    JR_LTEQF VGV_S3 10.0 endwhile1076
  whilebody1076:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1077:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1078:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1076
  endwhile1076:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1080:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1081 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1081:
  while1082:
    JR_GTEQF VGV_S3 55.0 endwhile1082
  whilebody1082:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1083:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1084 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1084:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1082
  endwhile1082:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1100.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1087
    DATA8 flag1087
    DIVF 360.0 VGV_L tmpf1087
    CP_EQF 0.0 VGV_L flag1087
    SELECTF flag1087 0.0 tmpf1087 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1090:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1090
  whilebody1090:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1092:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1090
  endwhile1090:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1095:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1096:
    MOVEF_F 950.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1097:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1099:
    CALL MOTOR.RESETCOUNT 'bc'
  while1101:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1105
    DATA8 flag1105
    DIVF F.1 2.0 tmpf1105
    CP_EQF 0.0 2.0 flag1105
    SELECTF flag1105 0.0 tmpf1105 F.0

    JR_GTEQF F.0 270.0 endwhile1101
  whilebody1101:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1106:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1110
    DATA8 flag1110
    DIVF F.1 2.0 tmpf1110
    CP_EQF 0.0 2.0 flag1110
    SELECTF flag1110 0.0 tmpf1110 F.0

    JR_LTF F.0 270.0 whilebody1101
  endwhile1101:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer1112
	DATA8 nos1112
	DATA8 busy1112
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1112 nos1112
	JR_EQ8 0 nos1112 motornotbusy1112
  motorwaiting1112:
	OUTPUT_TEST layer1112 nos1112 busy1112
	JR_EQ8 busy1112 0 motornotbusy1112
	SLEEP
	JR motorwaiting1112
  motornotbusy1112:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1114
	MOVEF_32 500.0 milliseconds1114
	DATA32 timer1114
	TIMER_WAIT milliseconds1114 timer1114
	TIMER_READY timer1114
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer1116
	DATA8 nos1116
	DATA8 busy1116
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1116 nos1116
	JR_EQ8 0 nos1116 motornotbusy1116
  motorwaiting1116:
	OUTPUT_TEST layer1116 nos1116 busy1116
	JR_EQ8 busy1116 0 motornotbusy1116
	SLEEP
	JR motorwaiting1116
  motornotbusy1116:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1117:
    MOVEF_F 600.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1118:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1119
	DATA8 nos1119
	DATA8 busy1119
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1119 nos1119
	JR_EQ8 0 nos1119 motornotbusy1119
  motorwaiting1119:
	OUTPUT_TEST layer1119 nos1119 busy1119
	JR_EQ8 busy1119 0 motornotbusy1119
	SLEEP
	JR motorwaiting1119
  motornotbusy1119:
    PROGRAM_STOP -1
    JR endif998
  else998_1:
    WRITE32 ENDSUB_F_BELLAM3_0:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM3_0
CALLSUB1121:
    MOVEF_F 330.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1122:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1124:
    CALL MOTOR.RESETCOUNT 'bc'
  while1126:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1130
    DATA8 flag1130
    DIVF F.1 2.0 tmpf1130
    CP_EQF 0.0 2.0 flag1130
    SELECTF flag1130 0.0 tmpf1130 F.0

    JR_GTEQF F.0 470.0 endwhile1126
  whilebody1126:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1131:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1135
    DATA8 flag1135
    DIVF F.1 2.0 tmpf1135
    CP_EQF 0.0 2.0 flag1135
    SELECTF flag1135 0.0 tmpf1135 F.0

    JR_LTF F.0 470.0 whilebody1126
  endwhile1126:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'BC' 30.0 -30.0 25.0 'true'

	DATA8 layer1137
	DATA8 nos1137
	DATA8 busy1137
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer1137 nos1137
	JR_EQ8 0 nos1137 motornotbusy1137
  motorwaiting1137:
	OUTPUT_TEST layer1137 nos1137 busy1137
	JR_EQ8 busy1137 0 motornotbusy1137
	SLEEP
	JR motorwaiting1137
  motornotbusy1137:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1139
	MOVEF_32 500.0 milliseconds1139
	DATA32 timer1139
	TIMER_WAIT milliseconds1139 timer1139
	TIMER_READY timer1139
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer1141
	DATA8 nos1141
	DATA8 busy1141
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1141 nos1141
	JR_EQ8 0 nos1141 motornotbusy1141
  motorwaiting1141:
	OUTPUT_TEST layer1141 nos1141 busy1141
	JR_EQ8 busy1141 0 motornotbusy1141
	SLEEP
	JR motorwaiting1141
  motornotbusy1141:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1142:
    MOVEF_F 1200.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1143:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1144
	DATA8 nos1144
	DATA8 busy1144
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1144 nos1144
	JR_EQ8 0 nos1144 motornotbusy1144
  motorwaiting1144:
	OUTPUT_TEST layer1144 nos1144 busy1144
	JR_EQ8 busy1144 0 motornotbusy1144
	SLEEP
	JR motorwaiting1144
  motornotbusy1144:
    PROGRAM_STOP -1
  else998_2:
  endif998:
  else971_1:
  endif971:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1147
	DATA8 nos1147
	DATA8 busy1147
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1147 nos1147
	JR_EQ8 0 nos1147 motornotbusy1147
  motorwaiting1147:
	OUTPUT_TEST layer1147 nos1147 busy1147
	JR_EQ8 busy1147 0 motornotbusy1147
	SLEEP
	JR motorwaiting1147
  motornotbusy1147:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 180.0 'true'

	DATA8 layer1148
	DATA8 nos1148
	DATA8 busy1148
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1148 nos1148
	JR_EQ8 0 nos1148 motornotbusy1148
  motorwaiting1148:
	OUTPUT_TEST layer1148 nos1148 busy1148
	JR_EQ8 busy1148 0 motornotbusy1148
	SLEEP
	JR motorwaiting1148
  motornotbusy1148:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1150
	DATA8 nos1150
	DATA8 busy1150
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1150 nos1150
	JR_EQ8 0 nos1150 motornotbusy1150
  motorwaiting1150:
	OUTPUT_TEST layer1150 nos1150 busy1150
	JR_EQ8 busy1150 0 motornotbusy1150
	SLEEP
	JR motorwaiting1150
  motornotbusy1150:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1151
	DATA8 nos1151
	DATA8 busy1151
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1151 nos1151
	JR_EQ8 0 nos1151 motornotbusy1151
  motorwaiting1151:
	OUTPUT_TEST layer1151 nos1151 busy1151
	JR_EQ8 busy1151 0 motornotbusy1151
	SLEEP
	JR motorwaiting1151
  motornotbusy1151:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VGV_S
    MOVEF_F 257.48 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1153
    DATA8 flag1153
    DIVF 360.0 VGV_L tmpf1153
    CP_EQF 0.0 VGV_L flag1153
    SELECTF flag1153 0.0 tmpf1153 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
  while1156:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1156
  whilebody1156:
    MOVEF_F 90.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1158:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1156
  endwhile1156:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1161:
    ADDF VGV_C 1.0 VGV_C
    DATA32 tmp1163
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1163
    JR_NEQ32 0 tmp1163 alreadylaunched1163
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1163:
ENDTHREAD:
    RETURN
SUB_F_US_0:
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1164
    DATA8 flag1164
    DIVF 360.0 VGV_L tmpf1164
    CP_EQF 0.0 VGV_L flag1164
    SELECTF flag1164 0.0 tmpf1164 F.0

    MULF F.0 VGV_S VGV_X
    MOVEF_F 30.0 VGV_SPEED
    CALL MOTOR.RESETCOUNT 'bc'
  while1167:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1171
    DATA8 flag1171
    DIVF F.1 2.0 tmpf1171
    CP_EQF 0.0 2.0 flag1171
    SELECTF flag1171 0.0 tmpf1171 F.0

    JR_GTEQF F.0 VGV_X endwhile1167
  whilebody1167:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1172:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1173:
    JR_GTEQF VGV_SPEED 80.0 else1174_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1174_1:
  endif1174:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1176:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1180
    DATA8 flag1180
    DIVF F.1 2.0 tmpf1180
    CP_EQF 0.0 2.0 flag1180
    SELECTF flag1180 0.0 tmpf1180 F.0

    JR_LTF F.0 VGV_X whilebody1167
  endwhile1167:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1182:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1183:
  while1184:
    JR_LTEQF VGV_S3 15.0 and1186
    JR_GTF VGV_S2 15.0 or1185
  and1186:
    JR_GTEQF VGV_S3 15.0 endwhile1184
    JR_GTEQF VGV_S2 15.0 endwhile1184
  or1185:
  whilebody1184:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1187:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1188:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1189:
    JR_LTEQF VGV_S3 15.0 and1190
    JR_GTF VGV_S2 15.0 whilebody1184
  and1190:
    JR_GTEQF VGV_S3 15.0 and1191
    JR_LTF VGV_S2 15.0 whilebody1184
  and1191:
  endwhile1184:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_US_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_US_0:
SUB_F_PL_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer1193
	DATA8 nos1193
	DATA8 busy1193
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1193 nos1193
	JR_EQ8 0 nos1193 motornotbusy1193
  motorwaiting1193:
	OUTPUT_TEST layer1193 nos1193 busy1193
	JR_EQ8 busy1193 0 motornotbusy1193
	SLEEP
	JR motorwaiting1193
  motornotbusy1193:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 50.0 'true'

	DATA8 layer1195
	DATA8 nos1195
	DATA8 busy1195
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1195 nos1195
	JR_EQ8 0 nos1195 motornotbusy1195
  motorwaiting1195:
	OUTPUT_TEST layer1195 nos1195 busy1195
	JR_EQ8 busy1195 0 motornotbusy1195
	SLEEP
	JR motorwaiting1195
  motornotbusy1195:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1196:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1197:
  while1198:
    JR_LTEQF VGV_S2 15.0 endwhile1198
  whilebody1198:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1199:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1200:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1198
  endwhile1198:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1203:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1204:
  while1205:
    JR_GTEQF VGV_S2 55.0 endwhile1205
  whilebody1205:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1206:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1207:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1205
  endwhile1205:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PL_0:
SUB_F_PR_0:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 60.0 'true'

	DATA8 layer1210
	DATA8 nos1210
	DATA8 busy1210
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1210 nos1210
	JR_EQ8 0 nos1210 motornotbusy1210
  motorwaiting1210:
	OUTPUT_TEST layer1210 nos1210 busy1210
	JR_EQ8 busy1210 0 motornotbusy1210
	SLEEP
	JR motorwaiting1210
  motornotbusy1210:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 50.0 'true'

	DATA8 layer1212
	DATA8 nos1212
	DATA8 busy1212
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1212 nos1212
	JR_EQ8 0 nos1212 motornotbusy1212
  motorwaiting1212:
	OUTPUT_TEST layer1212 nos1212 busy1212
	JR_EQ8 busy1212 0 motornotbusy1212
	SLEEP
	JR motorwaiting1212
  motornotbusy1212:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1213:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1214:
  while1215:
    JR_LTEQF VGV_S3 15.0 endwhile1215
  whilebody1215:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1216:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1217:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1215
  endwhile1215:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1220:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1221:
  while1222:
    JR_GTEQF VGV_S3 60.0 endwhile1222
  whilebody1222:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1223:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1224:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 60.0 whilebody1222
  endwhile1222:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_PR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PR_0:
SUB_F_NPL_0:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1227:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1228:
  while1229:
    JR_LTEQF VGV_S2 9.0 and1231
    JR_GTF VGV_S3 9.0 or1230
  and1231:
    JR_GTEQF VGV_S2 9.0 and1232
    JR_GTF VGV_S3 9.0 or1230
  and1232:
    JR_LTEQF VGV_S2 9.0 endwhile1229
    JR_GTEQF VGV_S3 9.0 endwhile1229
  or1230:
  whilebody1229:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1233:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1234:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    JR_LTEQF VGV_S2 9.0 and1236
    JR_GTF VGV_S3 9.0 whilebody1229
  and1236:
    JR_GTEQF VGV_S2 9.0 and1237
    JR_GTF VGV_S3 9.0 whilebody1229
  and1237:
    JR_LTEQF VGV_S2 9.0 and1238
    JR_LTF VGV_S3 9.0 whilebody1229
  and1238:
  endwhile1229:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 60.0 'true'

	DATA8 layer1239
	DATA8 nos1239
	DATA8 busy1239
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1239 nos1239
	JR_EQ8 0 nos1239 motornotbusy1239
  motorwaiting1239:
	OUTPUT_TEST layer1239 nos1239 busy1239
	JR_EQ8 busy1239 0 motornotbusy1239
	SLEEP
	JR motorwaiting1239
  motornotbusy1239:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 90.0 'true'

	DATA8 layer1241
	DATA8 nos1241
	DATA8 busy1241
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1241 nos1241
	JR_EQ8 0 nos1241 motornotbusy1241
  motorwaiting1241:
	OUTPUT_TEST layer1241 nos1241 busy1241
	JR_EQ8 busy1241 0 motornotbusy1241
	SLEEP
	JR motorwaiting1241
  motornotbusy1241:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1243:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1244:
  while1245:
    JR_LTEQF VGV_S2 10.0 endwhile1245
  whilebody1245:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1246:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1247:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1245
  endwhile1245:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1249:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1250:
  while1251:
    JR_GTEQF VGV_S2 60.0 endwhile1251
  whilebody1251:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1252:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1253:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 60.0 whilebody1251
  endwhile1251:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPL_0:
SUB_F_NPP_0:
    WRITE32 ENDSUB_F_VIRAV_NAZ_0:CALLSUB1256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_NAZ_0
CALLSUB1256:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 30.0 'true'

	DATA8 layer1257
	DATA8 nos1257
	DATA8 busy1257
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1257 nos1257
	JR_EQ8 0 nos1257 motornotbusy1257
  motorwaiting1257:
	OUTPUT_TEST layer1257 nos1257 busy1257
	JR_EQ8 busy1257 0 motornotbusy1257
	SLEEP
	JR motorwaiting1257
  motornotbusy1257:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 80.0 'true'

	DATA8 layer1259
	DATA8 nos1259
	DATA8 busy1259
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1259 nos1259
	JR_EQ8 0 nos1259 motornotbusy1259
  motorwaiting1259:
	OUTPUT_TEST layer1259 nos1259 busy1259
	JR_EQ8 busy1259 0 motornotbusy1259
	SLEEP
	JR motorwaiting1259
  motornotbusy1259:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1261:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1262:
  while1263:
    JR_LTEQF VGV_S3 8.0 endwhile1263
  whilebody1263:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1264:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1265:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 8.0 whilebody1263
  endwhile1263:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1267:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1268:
  while1269:
    JR_GTEQF VGV_S3 55.0 endwhile1269
  whilebody1269:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1270:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1271:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 55.0 whilebody1269
  endwhile1269:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_NPP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_NPP_0:
SUB_F_REDL_0:
    DATA32 tmp1274
    CALL GETANDINC32 RUNCOUNTER_F_ZADVIG_0 1  RUNCOUNTER_F_ZADVIG_0 tmp1274
    JR_NEQ32 0 tmp1274 alreadylaunched1274
    OBJECT_START TF_ZADVIG_0
  alreadylaunched1274:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1275:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1276:
  while1277:
    JR_LTEQF VGV_S3 10.0 and1279
    JR_GTF VGV_S2 10.0 or1278
  and1279:
    JR_GTEQF VGV_S3 10.0 and1280
    JR_GTF VGV_S2 10.0 or1278
  and1280:
    JR_LTEQF VGV_S3 10.0 endwhile1277
    JR_GTEQF VGV_S2 10.0 endwhile1277
  or1278:
  whilebody1277:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1281:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1282:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1283:
    JR_LTEQF VGV_S3 10.0 and1284
    JR_GTF VGV_S2 10.0 whilebody1277
  and1284:
    JR_GTEQF VGV_S3 10.0 and1285
    JR_GTF VGV_S2 10.0 whilebody1277
  and1285:
    JR_LTEQF VGV_S3 10.0 and1286
    JR_LTF VGV_S2 10.0 whilebody1277
  and1286:
  endwhile1277:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1288
	DATA8 nos1288
	DATA8 busy1288
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1288 nos1288
	JR_EQ8 0 nos1288 motornotbusy1288
  motorwaiting1288:
	OUTPUT_TEST layer1288 nos1288 busy1288
	JR_EQ8 busy1288 0 motornotbusy1288
	SLEEP
	JR motorwaiting1288
  motornotbusy1288:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1289
	DATA8 nos1289
	DATA8 busy1289
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1289 nos1289
	JR_EQ8 0 nos1289 motornotbusy1289
  motorwaiting1289:
	OUTPUT_TEST layer1289 nos1289 busy1289
	JR_EQ8 busy1289 0 motornotbusy1289
	SLEEP
	JR motorwaiting1289
  motornotbusy1289:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1292:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1293:
  while1294:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile1294
  whilebody1294:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1296:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1297:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1298:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody1294
  endwhile1294:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer1301
	DATA8 nos1301
	DATA8 busy1301
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1301 nos1301
	JR_EQ8 0 nos1301 motornotbusy1301
  motorwaiting1301:
	OUTPUT_TEST layer1301 nos1301 busy1301
	JR_EQ8 busy1301 0 motornotbusy1301
	SLEEP
	JR motorwaiting1301
  motornotbusy1301:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1303
	MOVEF_32 500.0 milliseconds1303
	DATA32 timer1303
	TIMER_WAIT milliseconds1303 timer1303
	TIMER_READY timer1303
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 20.0 25.0 'true'

	DATA8 layer1305
	DATA8 nos1305
	DATA8 busy1305
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1305 nos1305
	JR_EQ8 0 nos1305 motornotbusy1305
  motorwaiting1305:
	OUTPUT_TEST layer1305 nos1305 busy1305
	JR_EQ8 busy1305 0 motornotbusy1305
	SLEEP
	JR motorwaiting1305
  motornotbusy1305:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer1306
	DATA8 nos1306
	DATA8 busy1306
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1306 nos1306
	JR_EQ8 0 nos1306 motornotbusy1306
  motorwaiting1306:
	OUTPUT_TEST layer1306 nos1306 busy1306
	JR_EQ8 busy1306 0 motornotbusy1306
	SLEEP
	JR motorwaiting1306
  motornotbusy1306:
    CALL MOTOR.STARTSYNC 'bc' -20.0 -80.0
    DATA32 milliseconds1308
	MOVEF_32 2000.0 milliseconds1308
	DATA32 timer1308
	TIMER_WAIT milliseconds1308 timer1308
	TIMER_READY timer1308
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 100.0 'true'

	DATA8 layer1310
	DATA8 nos1310
	DATA8 busy1310
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1310 nos1310
	JR_EQ8 0 nos1310 motornotbusy1310
  motorwaiting1310:
	OUTPUT_TEST layer1310 nos1310 busy1310
	JR_EQ8 busy1310 0 motornotbusy1310
	SLEEP
	JR motorwaiting1310
  motornotbusy1310:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1311
	DATA8 nos1311
	DATA8 busy1311
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1311 nos1311
	JR_EQ8 0 nos1311 motornotbusy1311
  motorwaiting1311:
	OUTPUT_TEST layer1311 nos1311 busy1311
	JR_EQ8 busy1311 0 motornotbusy1311
	SLEEP
	JR motorwaiting1311
  motornotbusy1311:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 180.0 'true'

	DATA8 layer1312
	DATA8 nos1312
	DATA8 busy1312
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1312 nos1312
	JR_EQ8 0 nos1312 motornotbusy1312
  motorwaiting1312:
	OUTPUT_TEST layer1312 nos1312 busy1312
	JR_EQ8 busy1312 0 motornotbusy1312
	SLEEP
	JR motorwaiting1312
  motornotbusy1312:
    WRITE32 ENDSUB_F_VIRAV_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_VIRAV_0
CALLSUB1313:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1314
	DATA8 nos1314
	DATA8 busy1314
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1314 nos1314
	JR_EQ8 0 nos1314 motornotbusy1314
  motorwaiting1314:
	OUTPUT_TEST layer1314 nos1314 busy1314
	JR_EQ8 busy1314 0 motornotbusy1314
	SLEEP
	JR motorwaiting1314
  motornotbusy1314:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 100.0 'true'

	DATA8 layer1315
	DATA8 nos1315
	DATA8 busy1315
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1315 nos1315
	JR_EQ8 0 nos1315 motornotbusy1315
  motorwaiting1315:
	OUTPUT_TEST layer1315 nos1315 busy1315
	JR_EQ8 busy1315 0 motornotbusy1315
	SLEEP
	JR motorwaiting1315
  motornotbusy1315:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1317:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1318:
  while1319:
    JR_LTEQF VGV_S2 15.0 endwhile1319
  whilebody1319:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1320:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1321:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VGV_S2 15.0 whilebody1319
  endwhile1319:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1324:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1325:
  while1326:
    JR_GTEQF VGV_S2 55.0 endwhile1326
  whilebody1326:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1327:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1328:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VGV_S2 55.0 whilebody1326
  endwhile1326:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1331:
RETSUB_F_REDL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_REDL_0:
SUB_F_BELLAM_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1332:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1333:
  while1334:
    JR_LTEQF VGV_S3 15.0 and1336
    JR_GTF VGV_S2 15.0 or1335
  and1336:
    JR_GTEQF VGV_S3 15.0 endwhile1334
    JR_GTEQF VGV_S2 15.0 endwhile1334
  or1335:
  whilebody1334:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1337:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1338:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1339:
    JR_LTEQF VGV_S3 15.0 and1340
    JR_GTF VGV_S2 15.0 whilebody1334
  and1340:
    JR_GTEQF VGV_S3 15.0 and1341
    JR_LTF VGV_S2 15.0 whilebody1334
  and1341:
  endwhile1334:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PR_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1343:
    CALL MOTOR.RESETCOUNT 'bc'
  while1345:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1349
    DATA8 flag1349
    DIVF F.1 2.0 tmpf1349
    CP_EQF 0.0 2.0 flag1349
    SELECTF flag1349 0.0 tmpf1349 F.0

    JR_GTEQF F.0 200.0 endwhile1345
  whilebody1345:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1350:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1354
    DATA8 flag1354
    DIVF F.1 2.0 tmpf1354
    CP_EQF 0.0 2.0 flag1354
    SELECTF flag1354 0.0 tmpf1354 F.0

    JR_LTF F.0 200.0 whilebody1345
  endwhile1345:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1356:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1357:
    MOVEF_F 1.0 VGV_I
  for1358:
    JR_GTF VGV_I 1.0 endfor1358
  forbody1358:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1359:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1360:
  while1361:
    JR_LTEQF VGV_S3 15.0 and1363
    JR_GTF VGV_S2 15.0 or1362
  and1363:
    JR_GTEQF VGV_S3 15.0 endwhile1361
    JR_GTEQF VGV_S2 15.0 endwhile1361
  or1362:
  whilebody1361:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1364:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1365:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1366:
    JR_LTEQF VGV_S3 15.0 and1367
    JR_GTF VGV_S2 15.0 whilebody1361
  and1367:
    JR_GTEQF VGV_S3 15.0 and1368
    JR_LTF VGV_S2 15.0 whilebody1361
  and1368:
  endwhile1361:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1370
	DATA8 nos1370
	DATA8 busy1370
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1370 nos1370
	JR_EQ8 0 nos1370 motornotbusy1370
  motorwaiting1370:
	OUTPUT_TEST layer1370 nos1370 busy1370
	JR_EQ8 busy1370 0 motornotbusy1370
	SLEEP
	JR motorwaiting1370
  motornotbusy1370:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1358
  endfor1358:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1373:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1374:
    MOVEF_F 80.0 VGV_J
  while1375:
    JR_LTEQF VGV_S3 15.0 endwhile1375
  whilebody1375:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1376:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1377:
    JR_LTEQF VGV_J 30.0 else1378_1
    SUBF VGV_J 0.1 VGV_J
  else1378_1:
  endif1378:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 15.0 whilebody1375
  endwhile1375:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1382:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1383:
    MOVEF_F 80.0 VGV_J
  while1384:
    JR_GTEQF VGV_S3 25.0 endwhile1384
  whilebody1384:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1385:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1386:
    JR_LTEQF VGV_J 30.0 else1387_1
    SUBF VGV_J 0.1 VGV_J
  else1387_1:
  endif1387:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 25.0 whilebody1384
  endwhile1384:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1392:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1396
    DATA8 flag1396
    DIVF F.1 2.0 tmpf1396
    CP_EQF 0.0 2.0 flag1396
    SELECTF flag1396 0.0 tmpf1396 F.0

    JR_GTEQF F.0 50.0 endwhile1392
  whilebody1392:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1397:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1398:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1399:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1400:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1402
    DATA8 flag1402
    DIVF F.1 2.0 tmpf1402
    CP_EQF 0.0 2.0 flag1402
    SELECTF flag1402 0.0 tmpf1402 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1414
    DATA8 flag1414
    DIVF F.1 2.0 tmpf1414
    CP_EQF 0.0 2.0 flag1414
    SELECTF flag1414 0.0 tmpf1414 F.0

    JR_LTF F.0 50.0 whilebody1392
  endwhile1392:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1416
	DATA8 nos1416
	DATA8 busy1416
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1416 nos1416
	JR_EQ8 0 nos1416 motornotbusy1416
  motorwaiting1416:
	OUTPUT_TEST layer1416 nos1416 busy1416
	JR_EQ8 busy1416 0 motornotbusy1416
	SLEEP
	JR motorwaiting1416
  motornotbusy1416:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds1418
	MOVEF_32 500.0 milliseconds1418
	DATA32 timer1418
	TIMER_WAIT milliseconds1418 timer1418
	TIMER_READY timer1418
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 50.0 'true'

	DATA8 layer1420
	DATA8 nos1420
	DATA8 busy1420
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1420 nos1420
	JR_EQ8 0 nos1420 motornotbusy1420
  motorwaiting1420:
	OUTPUT_TEST layer1420 nos1420 busy1420
	JR_EQ8 busy1420 0 motornotbusy1420
	SLEEP
	JR motorwaiting1420
  motornotbusy1420:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 320.0 'true'

	DATA8 layer1421
	DATA8 nos1421
	DATA8 busy1421
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1421 nos1421
	JR_EQ8 0 nos1421 motornotbusy1421
  motorwaiting1421:
	OUTPUT_TEST layer1421 nos1421 busy1421
	JR_EQ8 busy1421 0 motornotbusy1421
	SLEEP
	JR motorwaiting1421
  motornotbusy1421:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1422:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1423:
  while1424:
    JR_LTEQF VGV_S3 10.0 and1426
    JR_GTF VGV_S2 10.0 or1425
  and1426:
    JR_GTEQF VGV_S3 10.0 and1427
    JR_GTF VGV_S2 10.0 or1425
  and1427:
    JR_LTEQF VGV_S3 6.0 endwhile1424
    JR_GTEQF VGV_S2 6.0 endwhile1424
  or1425:
  whilebody1424:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1428:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1429:
    CALL MOTOR.STARTPOWER 'bc' 20.0
    JR_LTEQF VGV_S3 10.0 and1431
    JR_GTF VGV_S2 10.0 whilebody1424
  and1431:
    JR_GTEQF VGV_S3 10.0 and1432
    JR_GTF VGV_S2 10.0 whilebody1424
  and1432:
    JR_LTEQF VGV_S3 6.0 and1433
    JR_LTF VGV_S2 6.0 whilebody1424
  and1433:
  endwhile1424:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1435
	DATA8 nos1435
	DATA8 busy1435
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1435 nos1435
	JR_EQ8 0 nos1435 motornotbusy1435
  motorwaiting1435:
	OUTPUT_TEST layer1435 nos1435 busy1435
	JR_EQ8 busy1435 0 motornotbusy1435
	SLEEP
	JR motorwaiting1435
  motornotbusy1435:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1437:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1438:
  while1439:
    JR_LTEQF VGV_S3 10.0 endwhile1439
  whilebody1439:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1440:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1441:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1439
  endwhile1439:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1444:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1445:
  while1446:
    JR_GTEQF VGV_S3 60.0 endwhile1446
  whilebody1446:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1447:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1448:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 60.0 whilebody1446
  endwhile1446:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1451
	MOVEF_32 100.0 milliseconds1451
	DATA32 timer1451
	TIMER_WAIT milliseconds1451 timer1451
	TIMER_READY timer1451
RETSUB_F_BELLAM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM_0:
SUB_F_BELLAM2_0:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1452:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1453:
  while1454:
    JR_LTEQF VGV_S3 15.0 and1456
    JR_GTF VGV_S2 15.0 or1455
  and1456:
    JR_GTEQF VGV_S3 15.0 endwhile1454
    JR_GTEQF VGV_S2 15.0 endwhile1454
  or1455:
  whilebody1454:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1457:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1458:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1459:
    JR_LTEQF VGV_S3 15.0 and1460
    JR_GTF VGV_S2 15.0 whilebody1454
  and1460:
    JR_GTEQF VGV_S3 15.0 and1461
    JR_LTF VGV_S2 15.0 whilebody1454
  and1461:
  endwhile1454:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    WRITE32 ENDSUB_F_PR_0:CALLSUB1463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PR_0
CALLSUB1463:
    CALL MOTOR.RESETCOUNT 'bc'
  while1465:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1469
    DATA8 flag1469
    DIVF F.1 2.0 tmpf1469
    CP_EQF 0.0 2.0 flag1469
    SELECTF flag1469 0.0 tmpf1469 F.0

    JR_GTEQF F.0 200.0 endwhile1465
  whilebody1465:
    MOVEF_F 20.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1470:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1474
    DATA8 flag1474
    DIVF F.1 2.0 tmpf1474
    CP_EQF 0.0 2.0 flag1474
    SELECTF flag1474 0.0 tmpf1474 F.0

    JR_LTF F.0 200.0 whilebody1465
  endwhile1465:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1476:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1477:
    MOVEF_F 1.0 VGV_I
  for1478:
    JR_GTF VGV_I 2.0 endfor1478
  forbody1478:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 50.0 'true'

	DATA8 layer1479
	DATA8 nos1479
	DATA8 busy1479
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1479 nos1479
	JR_EQ8 0 nos1479 motornotbusy1479
  motorwaiting1479:
	OUTPUT_TEST layer1479 nos1479 busy1479
	JR_EQ8 busy1479 0 motornotbusy1479
	SLEEP
	JR motorwaiting1479
  motornotbusy1479:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1480:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1481:
  while1482:
    JR_LTEQF VGV_S3 15.0 and1484
    JR_GTF VGV_S2 15.0 or1483
  and1484:
    JR_GTEQF VGV_S3 15.0 endwhile1482
    JR_GTEQF VGV_S2 15.0 endwhile1482
  or1483:
  whilebody1482:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1485:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1486:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1487:
    JR_LTEQF VGV_S3 15.0 and1488
    JR_GTF VGV_S2 15.0 whilebody1482
  and1488:
    JR_GTEQF VGV_S3 15.0 and1489
    JR_LTF VGV_S2 15.0 whilebody1482
  and1489:
  endwhile1482:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 2.0 forbody1478
  endfor1478:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 40.0 'true'

	DATA8 layer1492
	DATA8 nos1492
	DATA8 busy1492
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1492 nos1492
	JR_EQ8 0 nos1492 motornotbusy1492
  motorwaiting1492:
	OUTPUT_TEST layer1492 nos1492 busy1492
	JR_EQ8 busy1492 0 motornotbusy1492
	SLEEP
	JR motorwaiting1492
  motornotbusy1492:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1494:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1495:
    MOVEF_F 80.0 VGV_J
  while1496:
    JR_LTEQF VGV_S3 10.0 endwhile1496
  whilebody1496:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1497:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1498:
    JR_LTEQF VGV_J 30.0 else1499_1
    SUBF VGV_J 0.1 VGV_J
  else1499_1:
  endif1499:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_GTF VGV_S3 10.0 whilebody1496
  endwhile1496:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1503:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1504:
    MOVEF_F 80.0 VGV_J
  while1505:
    JR_GTEQF VGV_S3 15.0 endwhile1505
  whilebody1505:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1506:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1507:
    JR_LTEQF VGV_J 30.0 else1508_1
    SUBF VGV_J 0.1 VGV_J
  else1508_1:
  endif1508:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VGV_S3 15.0 whilebody1505
  endwhile1505:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1513:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1517
    DATA8 flag1517
    DIVF F.1 2.0 tmpf1517
    CP_EQF 0.0 2.0 flag1517
    SELECTF flag1517 0.0 tmpf1517 F.0

    JR_GTEQF F.0 50.0 endwhile1513
  whilebody1513:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1518:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1519:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_A3_0:CALLSUB1520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1520:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1521:
    ADDF VGV_MIN3 VGV_MAX3 F.1
    DATAF tmpf1523
    DATA8 flag1523
    DIVF F.1 2.0 tmpf1523
    CP_EQF 0.0 2.0 flag1523
    SELECTF flag1523 0.0 tmpf1523 F.0

    SUBF VGV_S3 F.0 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1535
    DATA8 flag1535
    DIVF F.1 2.0 tmpf1535
    CP_EQF 0.0 2.0 flag1535
    SELECTF flag1535 0.0 tmpf1535 F.0

    JR_LTF F.0 50.0 whilebody1513
  endwhile1513:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer1537
	DATA8 nos1537
	DATA8 busy1537
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1537 nos1537
	JR_EQ8 0 nos1537 motornotbusy1537
  motorwaiting1537:
	OUTPUT_TEST layer1537 nos1537 busy1537
	JR_EQ8 busy1537 0 motornotbusy1537
	SLEEP
	JR motorwaiting1537
  motornotbusy1537:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 70.0 'true'

	DATA8 layer1538
	DATA8 nos1538
	DATA8 busy1538
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1538 nos1538
	JR_EQ8 0 nos1538 motornotbusy1538
  motorwaiting1538:
	OUTPUT_TEST layer1538 nos1538 busy1538
	JR_EQ8 busy1538 0 motornotbusy1538
	SLEEP
	JR motorwaiting1538
  motornotbusy1538:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1540
	MOVEF_32 500.0 milliseconds1540
	DATA32 timer1540
	TIMER_WAIT milliseconds1540 timer1540
	TIMER_READY timer1540
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1543:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1547
    DATA8 flag1547
    DIVF F.1 2.0 tmpf1547
    CP_EQF 0.0 2.0 flag1547
    SELECTF flag1547 0.0 tmpf1547 F.0

    JR_LTEQF F.0 -200.0 endwhile1543
  whilebody1543:
    CALL MOTOR.STARTPOWER 'bc' -50.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1552
    DATA8 flag1552
    DIVF F.1 2.0 tmpf1552
    CP_EQF 0.0 2.0 flag1552
    SELECTF flag1552 0.0 tmpf1552 F.0

    JR_GTF F.0 -200.0 whilebody1543
  endwhile1543:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1554
	DATA8 nos1554
	DATA8 busy1554
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1554 nos1554
	JR_EQ8 0 nos1554 motornotbusy1554
  motorwaiting1554:
	OUTPUT_TEST layer1554 nos1554 busy1554
	JR_EQ8 busy1554 0 motornotbusy1554
	SLEEP
	JR motorwaiting1554
  motornotbusy1554:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A2_0:CALLSUB1556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1556:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1557:
  while1558:
    JR_LTEQF VGV_S3 10.0 and1560
    JR_GTF VGV_S2 10.0 or1559
  and1560:
    JR_LTEQF VGV_S3 10.0 and1561
    JR_LTF VGV_S2 10.0 or1559
  and1561:
    JR_GTEQF VGV_S3 10.0 endwhile1558
    JR_LTEQF VGV_S2 10.0 endwhile1558
  or1559:
  whilebody1558:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1562:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1563:
    CALL MOTOR.STARTPOWER 'bc' 40.0
    JR_LTEQF VGV_S3 10.0 and1565
    JR_GTF VGV_S2 10.0 whilebody1558
  and1565:
    JR_LTEQF VGV_S3 10.0 and1566
    JR_LTF VGV_S2 10.0 whilebody1558
  and1566:
    JR_GTEQF VGV_S3 10.0 and1567
    JR_GTF VGV_S2 10.0 whilebody1558
  and1567:
  endwhile1558:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1569
	DATA8 nos1569
	DATA8 busy1569
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1569 nos1569
	JR_EQ8 0 nos1569 motornotbusy1569
  motorwaiting1569:
	OUTPUT_TEST layer1569 nos1569 busy1569
	JR_EQ8 busy1569 0 motornotbusy1569
	SLEEP
	JR motorwaiting1569
  motornotbusy1569:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1570:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1571:
  while1572:
    JR_LTEQF VGV_S3 10.0 endwhile1572
  whilebody1572:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1573:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1574:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 10.0 whilebody1572
  endwhile1572:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1576:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1577:
  while1578:
    JR_GTEQF VGV_S3 15.0 endwhile1578
  whilebody1578:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1579:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1580:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1578
  endwhile1578:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM2_0:
SUB_F_BELLAM3_0:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1583:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1584:
  while1585:
    JR_LTEQF VGV_S3 15.0 and1587
    JR_GTF VGV_S2 15.0 or1586
  and1587:
    JR_GTEQF VGV_S3 15.0 endwhile1585
    JR_GTEQF VGV_S2 15.0 endwhile1585
  or1586:
  whilebody1585:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1588:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1589:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1590:
    JR_LTEQF VGV_S3 15.0 and1591
    JR_GTF VGV_S2 15.0 whilebody1585
  and1591:
    JR_GTEQF VGV_S3 15.0 and1592
    JR_LTF VGV_S2 15.0 whilebody1585
  and1592:
  endwhile1585:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1594
	DATA8 nos1594
	DATA8 busy1594
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1594 nos1594
	JR_EQ8 0 nos1594 motornotbusy1594
  motorwaiting1594:
	OUTPUT_TEST layer1594 nos1594 busy1594
	JR_EQ8 busy1594 0 motornotbusy1594
	SLEEP
	JR motorwaiting1594
  motornotbusy1594:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1595:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1596:
  while1597:
    JR_LTEQF VGV_S3 15.0 endwhile1597
  whilebody1597:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1598:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1599:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VGV_S3 15.0 whilebody1597
  endwhile1597:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1602:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1603:
  while1604:
    JR_GTEQF VGV_S3 15.0 endwhile1604
  whilebody1604:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1605:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1606:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VGV_S3 15.0 whilebody1604
  endwhile1604:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1610:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile1610
  whilebody1610:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1612:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody1610
  endwhile1610:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1615:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1616:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    MOVEF_F 1.0 VGV_I
  for1617:
    JR_GTF VGV_I 3.0 endfor1617
  forbody1617:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1618:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1619:
  while1620:
    JR_LTEQF VGV_S3 15.0 and1622
    JR_GTF VGV_S2 15.0 or1621
  and1622:
    JR_GTEQF VGV_S3 15.0 endwhile1620
    JR_GTEQF VGV_S2 15.0 endwhile1620
  or1621:
  whilebody1620:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1623:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1624:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1625:
    JR_LTEQF VGV_S3 15.0 and1626
    JR_GTF VGV_S2 15.0 whilebody1620
  and1626:
    JR_GTEQF VGV_S3 15.0 and1627
    JR_LTF VGV_S2 15.0 whilebody1620
  and1627:
  endwhile1620:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 30.0 'true'

	DATA8 layer1629
	DATA8 nos1629
	DATA8 busy1629
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1629 nos1629
	JR_EQ8 0 nos1629 motornotbusy1629
  motorwaiting1629:
	OUTPUT_TEST layer1629 nos1629 busy1629
	JR_EQ8 busy1629 0 motornotbusy1629
	SLEEP
	JR motorwaiting1629
  motornotbusy1629:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 3.0 forbody1617
  endfor1617:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 180.0 'true'

	DATA8 layer1632
	DATA8 nos1632
	DATA8 busy1632
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1632 nos1632
	JR_EQ8 0 nos1632 motornotbusy1632
  motorwaiting1632:
	OUTPUT_TEST layer1632 nos1632 busy1632
	JR_EQ8 busy1632 0 motornotbusy1632
	SLEEP
	JR motorwaiting1632
  motornotbusy1632:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 130.0 'true'

	DATA8 layer1633
	DATA8 nos1633
	DATA8 busy1633
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1633 nos1633
	JR_EQ8 0 nos1633 motornotbusy1633
  motorwaiting1633:
	OUTPUT_TEST layer1633 nos1633 busy1633
	JR_EQ8 busy1633 0 motornotbusy1633
	SLEEP
	JR motorwaiting1633
  motornotbusy1633:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1635
	MOVEF_32 500.0 milliseconds1635
	DATA32 timer1635
	TIMER_WAIT milliseconds1635 timer1635
	TIMER_READY timer1635
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 80.0 'true'

	DATA8 layer1637
	DATA8 nos1637
	DATA8 busy1637
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1637 nos1637
	JR_EQ8 0 nos1637 motornotbusy1637
  motorwaiting1637:
	OUTPUT_TEST layer1637 nos1637 busy1637
	JR_EQ8 busy1637 0 motornotbusy1637
	SLEEP
	JR motorwaiting1637
  motornotbusy1637:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 380.0 'true'

	DATA8 layer1638
	DATA8 nos1638
	DATA8 busy1638
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1638 nos1638
	JR_EQ8 0 nos1638 motornotbusy1638
  motorwaiting1638:
	OUTPUT_TEST layer1638 nos1638 busy1638
	JR_EQ8 busy1638 0 motornotbusy1638
	SLEEP
	JR motorwaiting1638
  motornotbusy1638:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 20.0 200.0 'true'

	DATA8 layer1639
	DATA8 nos1639
	DATA8 busy1639
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1639 nos1639
	JR_EQ8 0 nos1639 motornotbusy1639
  motorwaiting1639:
	OUTPUT_TEST layer1639 nos1639 busy1639
	JR_EQ8 busy1639 0 motornotbusy1639
	SLEEP
	JR motorwaiting1639
  motornotbusy1639:
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 0.0 300.0 'true'

	DATA8 layer1640
	DATA8 nos1640
	DATA8 busy1640
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1640 nos1640
	JR_EQ8 0 nos1640 motornotbusy1640
  motorwaiting1640:
	OUTPUT_TEST layer1640 nos1640 busy1640
	JR_EQ8 busy1640 0 motornotbusy1640
	SLEEP
	JR motorwaiting1640
  motornotbusy1640:
    CALL MOTOR.SCHEDULESYNC 'bc' 0.0 20.0 300.0 'true'

	DATA8 layer1641
	DATA8 nos1641
	DATA8 busy1641
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1641 nos1641
	JR_EQ8 0 nos1641 motornotbusy1641
  motorwaiting1641:
	OUTPUT_TEST layer1641 nos1641 busy1641
	JR_EQ8 busy1641 0 motornotbusy1641
	SLEEP
	JR motorwaiting1641
  motornotbusy1641:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1642:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1643:
  while1644:
    JR_LTEQF VGV_S3 10.0 and1646
    JR_GTF VGV_S2 10.0 or1645
  and1646:
    JR_GTEQF VGV_S3 10.0 and1647
    JR_GTF VGV_S2 10.0 or1645
  and1647:
    JR_LTEQF VGV_S3 10.0 endwhile1644
    JR_GTEQF VGV_S2 10.0 endwhile1644
  or1645:
  whilebody1644:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1648:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1649:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VGV_S3 10.0 and1651
    JR_GTF VGV_S2 10.0 whilebody1644
  and1651:
    JR_GTEQF VGV_S3 10.0 and1652
    JR_GTF VGV_S2 10.0 whilebody1644
  and1652:
    JR_LTEQF VGV_S3 10.0 and1653
    JR_LTF VGV_S2 10.0 whilebody1644
  and1653:
  endwhile1644:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 15.0 50.0 'true'

	DATA8 layer1655
	DATA8 nos1655
	DATA8 busy1655
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1655 nos1655
	JR_EQ8 0 nos1655 motornotbusy1655
  motorwaiting1655:
	OUTPUT_TEST layer1655 nos1655 busy1655
	JR_EQ8 busy1655 0 motornotbusy1655
	SLEEP
	JR motorwaiting1655
  motornotbusy1655:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 15.0 -15.0 50.0 'true'

	DATA8 layer1657
	DATA8 nos1657
	DATA8 busy1657
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1657 nos1657
	JR_EQ8 0 nos1657 motornotbusy1657
  motorwaiting1657:
	OUTPUT_TEST layer1657 nos1657 busy1657
	JR_EQ8 busy1657 0 motornotbusy1657
	SLEEP
	JR motorwaiting1657
  motornotbusy1657:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1658:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1659:
  while1660:
    JR_LTEQF VGV_S3 15.0 endwhile1660
  whilebody1660:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1661:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1662:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_GTF VGV_S3 15.0 whilebody1660
  endwhile1660:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1665:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1666:
  while1667:
    JR_GTEQF VGV_S3 60.0 endwhile1667
  whilebody1667:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1668:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1669:
    CALL MOTOR.STARTSYNC 'bc' 15.0 -15.0
    JR_LTF VGV_S3 60.0 whilebody1667
  endwhile1667:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VGV_I
  for1672:
    JR_GTF VGV_I 1.0 endfor1672
  forbody1672:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1673:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1674:
  while1675:
    JR_LTEQF VGV_S3 10.0 and1677
    JR_GTF VGV_S2 10.0 or1676
  and1677:
    JR_GTEQF VGV_S3 10.0 endwhile1675
    JR_GTEQF VGV_S2 10.0 endwhile1675
  or1676:
  whilebody1675:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1678:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1679:
    MOVEF_F 60.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1680:
    JR_LTEQF VGV_S3 10.0 and1681
    JR_GTF VGV_S2 10.0 whilebody1675
  and1681:
    JR_GTEQF VGV_S3 10.0 and1682
    JR_LTF VGV_S2 10.0 whilebody1675
  and1682:
  endwhile1675:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1684
	DATA8 nos1684
	DATA8 busy1684
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1684 nos1684
	JR_EQ8 0 nos1684 motornotbusy1684
  motorwaiting1684:
	OUTPUT_TEST layer1684 nos1684 busy1684
	JR_EQ8 busy1684 0 motornotbusy1684
	SLEEP
	JR motorwaiting1684
  motornotbusy1684:
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 1.0 forbody1672
  endfor1672:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_BELLAM3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BELLAM3_0:
SUB_F_RED_1_0:
    WRITE32 ENDSUB_F_PL_0:CALLSUB1687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1687:
    CALL MOTOR.RESETCOUNT 'bc'
  while1689:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1693
    DATA8 flag1693
    DIVF F.1 2.0 tmpf1693
    CP_EQF 0.0 2.0 flag1693
    SELECTF flag1693 0.0 tmpf1693 F.0

    JR_GTEQF F.0 220.0 endwhile1689
  whilebody1689:
    MOVEF_F 30.0 VGV_SPEED
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1694:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1698
    DATA8 flag1698
    DIVF F.1 2.0 tmpf1698
    CP_EQF 0.0 2.0 flag1698
    SELECTF flag1698 0.0 tmpf1698 F.0

    JR_LTF F.0 220.0 whilebody1689
  endwhile1689:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1700
	MOVEF_32 100.0 milliseconds1700
	DATA32 timer1700
	TIMER_WAIT milliseconds1700 timer1700
	TIMER_READY timer1700
    CALL MOTOR.START 'd' 20.0
    DATA32 milliseconds1702
	MOVEF_32 500.0 milliseconds1702
	DATA32 timer1702
	TIMER_WAIT milliseconds1702 timer1702
	TIMER_READY timer1702
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1704:
    MOVEF_F 1300.0 VGV_S
    MOVEF_F 260.62 VGV_L
    MOVEF_F 0.0 VGV_X
    DATAF tmpf1705
    DATA8 flag1705
    DIVF 360.0 VGV_L tmpf1705
    CP_EQF 0.0 VGV_L flag1705
    SELECTF flag1705 0.0 tmpf1705 F.0

    MULF F.0 VGV_S VGV_X
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 20.0 VGV_SPEED
  while1708:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VGV_X endwhile1708
  whilebody1708:
    JR_GTEQF VGV_SPEED 80.0 else1710_1
    ADDF VGV_SPEED 0.1 VGV_SPEED
  else1710_1:
  endif1710:
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1712:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VGV_X whilebody1708
  endwhile1708:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_REDL_0:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_REDL_0
CALLSUB1715:
    WRITE32 ENDSUB_F_BELLAM_0:CALLSUB1716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BELLAM_0
CALLSUB1716:
    MOVEF_F 1400.0 VGV_S
    WRITE32 ENDSUB_F_US_0:CALLSUB1717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_US_0
CALLSUB1717:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_PL_0:CALLSUB1719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PL_0
CALLSUB1719:
    CALL MOTOR.RESETCOUNT 'bc'
  while1721:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1725
    DATA8 flag1725
    DIVF F.1 2.0 tmpf1725
    CP_EQF 0.0 2.0 flag1725
    SELECTF flag1725 0.0 tmpf1725 F.0

    JR_GTEQF F.0 200.0 endwhile1721
  whilebody1721:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1726:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1727:
    MOVEF_F 80.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1728:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1732
    DATA8 flag1732
    DIVF F.1 2.0 tmpf1732
    CP_EQF 0.0 2.0 flag1732
    SELECTF flag1732 0.0 tmpf1732 F.0

    JR_LTF F.0 200.0 whilebody1721
  endwhile1721:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 20.0 -20.0 25.0 'true'

	DATA8 layer1734
	DATA8 nos1734
	DATA8 busy1734
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1734 nos1734
	JR_EQ8 0 nos1734 motornotbusy1734
  motorwaiting1734:
	OUTPUT_TEST layer1734 nos1734 busy1734
	JR_EQ8 busy1734 0 motornotbusy1734
	SLEEP
	JR motorwaiting1734
  motornotbusy1734:
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1736
	MOVEF_32 500.0 milliseconds1736
	DATA32 timer1736
	TIMER_WAIT milliseconds1736 timer1736
	TIMER_READY timer1736
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 -30.0 25.0 'true'

	DATA8 layer1738
	DATA8 nos1738
	DATA8 busy1738
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1738 nos1738
	JR_EQ8 0 nos1738 motornotbusy1738
  motorwaiting1738:
	OUTPUT_TEST layer1738 nos1738 busy1738
	JR_EQ8 busy1738 0 motornotbusy1738
	SLEEP
	JR motorwaiting1738
  motornotbusy1738:
    WRITE32 ENDSUB_F_NPL_0:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_NPL_0
CALLSUB1739:
    WRITE32 ENDSUB_F_ZAMOROZ_0:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAMOROZ_0
CALLSUB1740:
    DATA32 tmp1741
    CALL GETANDINC32 RUNCOUNTER_F_VIDVIG_0 1  RUNCOUNTER_F_VIDVIG_0 tmp1741
    JR_NEQ32 0 tmp1741 alreadylaunched1741
    OBJECT_START TF_VIDVIG_0
  alreadylaunched1741:
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1742:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1743:
  while1744:
    JR_LTEQF VGV_S3 15.0 and1746
    JR_GTF VGV_S2 15.0 or1745
  and1746:
    JR_GTEQF VGV_S3 15.0 endwhile1744
    JR_GTEQF VGV_S2 15.0 endwhile1744
  or1745:
  whilebody1744:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1747:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1748:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1749:
    JR_LTEQF VGV_S3 15.0 and1750
    JR_GTF VGV_S2 15.0 whilebody1744
  and1750:
    JR_GTEQF VGV_S3 15.0 and1751
    JR_LTF VGV_S2 15.0 whilebody1744
  and1751:
  endwhile1744:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1753
	DATA8 nos1753
	DATA8 busy1753
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1753 nos1753
	JR_EQ8 0 nos1753 motornotbusy1753
  motorwaiting1753:
	OUTPUT_TEST layer1753 nos1753 busy1753
	JR_EQ8 busy1753 0 motornotbusy1753
	SLEEP
	JR motorwaiting1753
  motornotbusy1753:
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
    MOVEF_F 0.2 VGV_K1
    MOVEF_F 0.0 VGV_K2
    WRITE32 ENDSUB_F_A3_0:CALLSUB1754 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1754:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1755:
  while1756:
    JR_LTEQF VGV_S3 15.0 and1758
    JR_GTF VGV_S2 15.0 or1757
  and1758:
    JR_GTEQF VGV_S3 15.0 endwhile1756
    JR_GTEQF VGV_S2 15.0 endwhile1756
  or1757:
  whilebody1756:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1759:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1760:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1761:
    JR_LTEQF VGV_S3 15.0 and1762
    JR_GTF VGV_S2 15.0 whilebody1756
  and1762:
    JR_GTEQF VGV_S3 15.0 and1763
    JR_LTF VGV_S2 15.0 whilebody1756
  and1763:
  endwhile1756:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 0.15 VGV_K1
    MOVEF_F 8.0 VGV_K2
RETSUB_F_RED_1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RED_1_0:
SUB_F_SB1_0:
    CALL MOTOR.SCHEDULESYNC 'bc' -20.0 -20.0 150.0 'true'

	DATA8 layer1765
	DATA8 nos1765
	DATA8 busy1765
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1765 nos1765
	JR_EQ8 0 nos1765 motornotbusy1765
  motorwaiting1765:
	OUTPUT_TEST layer1765 nos1765 busy1765
	JR_EQ8 busy1765 0 motornotbusy1765
	SLEEP
	JR motorwaiting1765
  motornotbusy1765:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 300.0 'true'

	DATA8 layer1766
	DATA8 nos1766
	DATA8 busy1766
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1766 nos1766
	JR_EQ8 0 nos1766 motornotbusy1766
  motorwaiting1766:
	OUTPUT_TEST layer1766 nos1766 busy1766
	JR_EQ8 busy1766 0 motornotbusy1766
	SLEEP
	JR motorwaiting1766
  motornotbusy1766:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1768:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1769:
  while1770:
    JR_LTEQF VGV_S2 10.0 endwhile1770
  whilebody1770:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1771:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1772:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_GTF VGV_S2 10.0 whilebody1770
  endwhile1770:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1775:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1776:
  while1777:
    JR_GTEQF VGV_S2 60.0 endwhile1777
  whilebody1777:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1778:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1779:
    CALL MOTOR.STARTSYNC 'bc' -20.0 20.0
    JR_LTF VGV_S2 60.0 whilebody1777
  endwhile1777:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1783:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1787
    DATA8 flag1787
    DIVF F.1 2.0 tmpf1787
    CP_EQF 0.0 2.0 flag1787
    SELECTF flag1787 0.0 tmpf1787 F.0

    JR_GTEQF F.0 300.0 endwhile1783
  whilebody1783:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1788:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1789:
    MOVEF_F 30.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1790:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1794
    DATA8 flag1794
    DIVF F.1 2.0 tmpf1794
    CP_EQF 0.0 2.0 flag1794
    SELECTF flag1794 0.0 tmpf1794 F.0

    JR_LTF F.0 300.0 whilebody1783
  endwhile1783:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_F_A3_0:CALLSUB1796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1796:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1797:
  while1798:
    JR_LTEQF VGV_S3 10.0 and1800
    JR_GTF VGV_S2 10.0 or1799
  and1800:
    JR_GTEQF VGV_S3 10.0 endwhile1798
    JR_GTEQF VGV_S2 10.0 endwhile1798
  or1799:
  whilebody1798:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1801:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1802:
    MOVEF_F 40.0 VGV_SPEED
    WRITE32 ENDSUB_F_POLIN2D_0:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_POLIN2D_0
CALLSUB1803:
    JR_LTEQF VGV_S3 10.0 and1804
    JR_GTF VGV_S2 10.0 whilebody1798
  and1804:
    JR_GTEQF VGV_S3 10.0 and1805
    JR_LTF VGV_S2 10.0 whilebody1798
  and1805:
  endwhile1798:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_F_SB1_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SB1_0:
SUB_F_HSV_0:
    DATA8 layer1807
	DATA8 no1807
	DATA8 mode81807
	
	MOVEF_8 1.0 no1807
	SUB8 no1807 1 no1807
	DIV8 no1807 4 layer1807
	MATH MOD8 no1807 4 no1807

	MOVEF_8 2.0 mode81807
	
	INPUT_DEVICE READY_RAW layer1807 no1807 0 mode81807 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1814
    DATA8 flag1814
    DIVF VGV_SRED 255.0 tmpf1814
    CP_EQF 0.0 255.0 flag1814
    SELECTF flag1814 0.0 tmpf1814 VGV_SRED

    DATAF tmpf1815
    DATA8 flag1815
    DIVF VGV_SGREEN 255.0 tmpf1815
    CP_EQF 0.0 255.0 flag1815
    SELECTF flag1815 0.0 tmpf1815 VGV_SGREEN

    DATAF tmpf1816
    DATA8 flag1816
    DIVF VGV_SBLUE 255.0 tmpf1816
    CP_EQF 0.0 255.0 flag1816
    SELECTF flag1816 0.0 tmpf1816 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1817_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1817_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1817
  else1817_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1817_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1817_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1817
  else1817_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1817_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1817_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1817_3:
  endif1817:
    JR_GTEQF VGV_SRED VGV_SGREEN else1818_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1818_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1818
  else1818_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1818_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1818_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1818
  else1818_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1818_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1818_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1818_3:
  endif1818:
    JR_NEQF VGV_MAX VGV_MIN else1819_1
    MOVEF_F 0.0 VGV_H
    JR endif1819
  else1819_1:
    JR_NEQF VGV_SRED VGV_MAX else1820_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1821_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1825
    DATA8 flag1825
    DIVF F.0 F.1 tmpf1825
    CP_EQF 0.0 F.1 flag1825
    SELECTF flag1825 0.0 tmpf1825 VGV_H

    JR endif1821
  else1821_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1829
    DATA8 flag1829
    DIVF F.1 F.2 tmpf1829
    CP_EQF 0.0 F.2 flag1829
    SELECTF flag1829 0.0 tmpf1829 F.0

    ADDF F.0 360.0 VGV_H
  else1821_2:
  endif1821:
    JR endif1820
  else1820_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1831_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1835
    DATA8 flag1835
    DIVF F.1 F.2 tmpf1835
    CP_EQF 0.0 F.2 flag1835
    SELECTF flag1835 0.0 tmpf1835 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1831
  else1831_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1840
    DATA8 flag1840
    DIVF F.1 F.2 tmpf1840
    CP_EQF 0.0 F.2 flag1840
    SELECTF flag1840 0.0 tmpf1840 F.0

    ADDF F.0 240.0 VGV_H
  else1831_2:
  endif1831:
  else1820_2:
  endif1820:
  else1819_2:
  endif1819:
    JR_NEQF VGV_MAX 0.0 else1842_1
    MOVEF_F 0.0 VGV_S
    JR endif1842
  else1842_1:
    DATAF tmpf1843
    DATA8 flag1843
    DIVF VGV_MIN VGV_MAX tmpf1843
    CP_EQF 0.0 VGV_MAX flag1843
    SELECTF flag1843 0.0 tmpf1843 F.0

    SUBF 1.0 F.0 VGV_S
  else1842_2:
  endif1842:
    MOVEF_F VGV_MAX VGV_V
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_0:
SUB_F_HSV_100_0:
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_Z
    DATA8 layer1852
	DATA8 no1852
	DATA8 mode81852
	
	MOVEF_8 1.0 no1852
	SUB8 no1852 1 no1852
	DIV8 no1852 4 layer1852
	MATH MOD8 no1852 4 no1852

	MOVEF_8 2.0 mode81852
	
	INPUT_DEVICE READY_RAW layer1852 no1852 0 mode81852 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    MOVEF_F 1.0 VGV_P
  for1853:
    JR_GTF VGV_P 100.0 endfor1853
  forbody1853:
    WRITE32 ENDSUB_F_HSV_0:CALLSUB1854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_HSV_0
CALLSUB1854:
    ADDF VGV_X VGV_H VGV_X
    ADDF VGV_Z VGV_S VGV_Z
    ADDF VGV_D VGV_V VGV_D
    ADDF VGV_P 1.0 VGV_P
    JR_LTEQF VGV_P 100.0 forbody1853
  endfor1853:
    DATAF tmpf1859
    DATA8 flag1859
    DIVF VGV_X 100.0 tmpf1859
    CP_EQF 0.0 100.0 flag1859
    SELECTF flag1859 0.0 tmpf1859 VGV_H

    DATAF tmpf1860
    DATA8 flag1860
    DIVF VGV_Z 100.0 tmpf1860
    CP_EQF 0.0 100.0 flag1860
    SELECTF flag1860 0.0 tmpf1860 VGV_S

    DATAF tmpf1861
    DATA8 flag1861
    DIVF VGV_D 100.0 tmpf1861
    CP_EQF 0.0 100.0 flag1861
    SELECTF flag1861 0.0 tmpf1861 VGV_V

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_H '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VGV_S '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VGV_V '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_F_HSV_100_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_100_0:
SUB_F_HSV_B_0:
    DATA8 layer1869
	DATA8 no1869
	DATA8 mode81869
	
	MOVEF_8 1.0 no1869
	SUB8 no1869 1 no1869
	DIV8 no1869 4 layer1869
	MATH MOD8 no1869 4 no1869

	MOVEF_8 2.0 mode81869
	
	INPUT_DEVICE READY_RAW layer1869 no1869 0 mode81869 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1876
    DATA8 flag1876
    DIVF VGV_SRED 255.0 tmpf1876
    CP_EQF 0.0 255.0 flag1876
    SELECTF flag1876 0.0 tmpf1876 VGV_SRED

    DATAF tmpf1877
    DATA8 flag1877
    DIVF VGV_SGREEN 255.0 tmpf1877
    CP_EQF 0.0 255.0 flag1877
    SELECTF flag1877 0.0 tmpf1877 VGV_SGREEN

    DATAF tmpf1878
    DATA8 flag1878
    DIVF VGV_SBLUE 255.0 tmpf1878
    CP_EQF 0.0 255.0 flag1878
    SELECTF flag1878 0.0 tmpf1878 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1879_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1879_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1879
  else1879_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1879_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1879_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1879
  else1879_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1879_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1879_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1879_3:
  endif1879:
    JR_GTEQF VGV_SRED VGV_SGREEN else1880_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1880_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1880
  else1880_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1880_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1880_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1880
  else1880_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1880_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1880_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1880_3:
  endif1880:
    JR_NEQF VGV_MAX VGV_MIN else1881_1
    MOVEF_F 0.0 VGV_H
    JR endif1881
  else1881_1:
    JR_NEQF VGV_SRED VGV_MAX else1882_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1883_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1887
    DATA8 flag1887
    DIVF F.0 F.1 tmpf1887
    CP_EQF 0.0 F.1 flag1887
    SELECTF flag1887 0.0 tmpf1887 VGV_H

    JR endif1883
  else1883_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1891
    DATA8 flag1891
    DIVF F.1 F.2 tmpf1891
    CP_EQF 0.0 F.2 flag1891
    SELECTF flag1891 0.0 tmpf1891 F.0

    ADDF F.0 360.0 VGV_H
  else1883_2:
  endif1883:
    JR endif1882
  else1882_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1893_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1897
    DATA8 flag1897
    DIVF F.1 F.2 tmpf1897
    CP_EQF 0.0 F.2 flag1897
    SELECTF flag1897 0.0 tmpf1897 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1893
  else1893_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1902
    DATA8 flag1902
    DIVF F.1 F.2 tmpf1902
    CP_EQF 0.0 F.2 flag1902
    SELECTF flag1902 0.0 tmpf1902 F.0

    ADDF F.0 240.0 VGV_H
  else1893_2:
  endif1893:
  else1882_2:
  endif1882:
  else1881_2:
  endif1881:
    JR_NEQF VGV_MAX 0.0 else1904_1
    MOVEF_F 0.0 VGV_S
    JR endif1904
  else1904_1:
    DATAF tmpf1905
    DATA8 flag1905
    DIVF VGV_MIN VGV_MAX tmpf1905
    CP_EQF 0.0 VGV_MAX flag1905
    SELECTF flag1905 0.0 tmpf1905 F.0

    SUBF 1.0 F.0 VGV_S
  else1904_2:
  endif1904:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 300.0 and1909
    JR_LTF VGV_H 360.0 or1908
  and1909:
    JR_LTF VGV_H 0.0 else1907_1
    JR_GTF VGV_H 20.0 else1907_1
    JR_LTEQF VGV_S 0.3 else1907_1
    JR_GTF VGV_S 1.0 else1907_1
    JR_LTEQF VGV_V 0.025 else1907_1
    JR_GTEQF VGV_V 0.1 else1907_1
  or1908:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1907
  else1907_1:
    JR_LTF VGV_H 20.0 else1907_2
    JR_GTEQF VGV_H 60.0 else1907_2
    JR_LTF VGV_S 0.4 else1907_2
    JR_LTEQF VGV_V 0.03 else1907_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1907
  else1907_2:
    MOVEF_F 6.0 VGV_COLOR
  else1907_3:
  endif1907:
RETSUB_F_HSV_B_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_B_0:
SUB_F_HSV_D_0:
    DATA8 layer1910
	DATA8 no1910
	DATA8 mode81910
	
	MOVEF_8 1.0 no1910
	SUB8 no1910 1 no1910
	DIV8 no1910 4 layer1910
	MATH MOD8 no1910 4 no1910

	MOVEF_8 2.0 mode81910
	
	INPUT_DEVICE READY_RAW layer1910 no1910 0 mode81910 0
    MOVEF_F 1.0 VGV_I2CPORT
    MOVEF_F 1.0 VGV_I2CSLVADDR
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VGV_SENDARRAY
    CALL SENSOR.COMMUNICATEI2C VGV_I2CPORT VGV_I2CSLVADDR 1.0 4.0 VGV_SENDARRAY VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 0.0 VGV_SNUM VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 1.0 VGV_SRED VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 2.0 VGV_SGREEN VGV_RECVARRAY
    CALL ARRAYGET_FLOAT 3.0 VGV_SBLUE VGV_RECVARRAY
    DATAF tmpf1917
    DATA8 flag1917
    DIVF VGV_SRED 255.0 tmpf1917
    CP_EQF 0.0 255.0 flag1917
    SELECTF flag1917 0.0 tmpf1917 VGV_SRED

    DATAF tmpf1918
    DATA8 flag1918
    DIVF VGV_SGREEN 255.0 tmpf1918
    CP_EQF 0.0 255.0 flag1918
    SELECTF flag1918 0.0 tmpf1918 VGV_SGREEN

    DATAF tmpf1919
    DATA8 flag1919
    DIVF VGV_SBLUE 255.0 tmpf1919
    CP_EQF 0.0 255.0 flag1919
    SELECTF flag1919 0.0 tmpf1919 VGV_SBLUE

    JR_LTEQF VGV_SRED VGV_SGREEN else1920_1
    JR_LTEQF VGV_SRED VGV_SBLUE else1920_1
    MOVEF_F VGV_SRED VGV_MAX
    JR endif1920
  else1920_1:
    JR_LTEQF VGV_SGREEN VGV_SRED else1920_2
    JR_LTEQF VGV_SGREEN VGV_SBLUE else1920_2
    MOVEF_F VGV_SGREEN VGV_MAX
    JR endif1920
  else1920_2:
    JR_LTEQF VGV_SBLUE VGV_SRED else1920_3
    JR_LTEQF VGV_SBLUE VGV_SGREEN else1920_3
    MOVEF_F VGV_SBLUE VGV_MAX
  else1920_3:
  endif1920:
    JR_GTEQF VGV_SRED VGV_SGREEN else1921_1
    JR_GTEQF VGV_SRED VGV_SBLUE else1921_1
    MOVEF_F VGV_SRED VGV_MIN
    JR endif1921
  else1921_1:
    JR_GTEQF VGV_SGREEN VGV_SRED else1921_2
    JR_GTEQF VGV_SGREEN VGV_SBLUE else1921_2
    MOVEF_F VGV_SGREEN VGV_MIN
    JR endif1921
  else1921_2:
    JR_GTEQF VGV_SBLUE VGV_SRED else1921_3
    JR_GTEQF VGV_SBLUE VGV_SGREEN else1921_3
    MOVEF_F VGV_SBLUE VGV_MIN
  else1921_3:
  endif1921:
    JR_NEQF VGV_MAX VGV_MIN else1922_1
    MOVEF_F 0.0 VGV_H
    JR endif1922
  else1922_1:
    JR_NEQF VGV_SRED VGV_MAX else1923_1
    JR_LTF VGV_SGREEN VGV_SBLUE else1924_1
    SUBF VGV_SGREEN VGV_SBLUE F.1
    MULF 60.0 F.1 F.0
    SUBF VGV_MAX VGV_MIN F.1
    DATAF tmpf1928
    DATA8 flag1928
    DIVF F.0 F.1 tmpf1928
    CP_EQF 0.0 F.1 flag1928
    SELECTF flag1928 0.0 tmpf1928 VGV_H

    JR endif1924
  else1924_1:
    SUBF VGV_SGREEN VGV_SBLUE F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1932
    DATA8 flag1932
    DIVF F.1 F.2 tmpf1932
    CP_EQF 0.0 F.2 flag1932
    SELECTF flag1932 0.0 tmpf1932 F.0

    ADDF F.0 360.0 VGV_H
  else1924_2:
  endif1924:
    JR endif1923
  else1923_1:
    JR_NEQF VGV_MAX VGV_SGREEN else1934_1
    SUBF VGV_SBLUE VGV_SRED F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1938
    DATA8 flag1938
    DIVF F.1 F.2 tmpf1938
    CP_EQF 0.0 F.2 flag1938
    SELECTF flag1938 0.0 tmpf1938 F.0

    ADDF F.0 120.0 VGV_H
    JR endif1934
  else1934_1:
    SUBF VGV_SRED VGV_SGREEN F.2
    MULF 60.0 F.2 F.1
    SUBF VGV_MAX VGV_MIN F.2
    DATAF tmpf1943
    DATA8 flag1943
    DIVF F.1 F.2 tmpf1943
    CP_EQF 0.0 F.2 flag1943
    SELECTF flag1943 0.0 tmpf1943 F.0

    ADDF F.0 240.0 VGV_H
  else1934_2:
  endif1934:
  else1923_2:
  endif1923:
  else1922_2:
  endif1922:
    JR_NEQF VGV_MAX 0.0 else1945_1
    MOVEF_F 0.0 VGV_S
    JR endif1945
  else1945_1:
    DATAF tmpf1946
    DATA8 flag1946
    DIVF VGV_MIN VGV_MAX tmpf1946
    CP_EQF 0.0 VGV_MAX flag1946
    SELECTF flag1946 0.0 tmpf1946 F.0

    SUBF 1.0 F.0 VGV_S
  else1945_2:
  endif1945:
    MOVEF_F VGV_MAX VGV_V
    JR_LTEQF VGV_H 200.0 and1950
    JR_LTF VGV_H 360.0 or1949
  and1950:
    JR_LTF VGV_H 0.0 else1948_1
    JR_GTF VGV_H 30.0 else1948_1
    JR_LTEQF VGV_S 0.3 else1948_1
    JR_GTF VGV_S 1.0 else1948_1
    JR_LTF VGV_V 0.0 else1948_1
    JR_GTEQF VGV_V 0.02 else1948_1
  or1949:
    MOVEF_F 5.0 VGV_COLOR
    JR endif1948
  else1948_1:
    JR_LTF VGV_H 0.0 else1948_2
    JR_GTEQF VGV_H 60.0 else1948_2
    JR_LTF VGV_S 0.4 else1948_2
    JR_GTF VGV_S 1.0 else1948_2
    JR_LTEQF VGV_V 0.003 else1948_2
    MOVEF_F 4.0 VGV_COLOR
    JR endif1948
  else1948_2:
    MOVEF_F 6.0 VGV_COLOR
  else1948_3:
  endif1948:
RETSUB_F_HSV_D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_HSV_D_0:
SUB_F_A3_0:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VGV_MIN3 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX3 VGV_MIN3 F.1
    DATAF tmpf1955
    DATA8 flag1955
    DIVF F.0 F.1 tmpf1955
    CP_EQF 0.0 F.1 flag1955
    SELECTF flag1955 0.0 tmpf1955 VGV_S3

RETSUB_F_A3_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A3_0:
SUB_F_A2_0:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VGV_MIN2 F.1
    MULF 100.0 F.1 F.0
    SUBF VGV_MAX2 VGV_MIN2 F.1
    DATAF tmpf1960
    DATA8 flag1960
    DIVF F.0 F.1 tmpf1960
    CP_EQF 0.0 F.1 flag1960
    SELECTF flag1960 0.0 tmpf1960 VGV_S2

RETSUB_F_A2_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_A2_0:
SUB_F_POLIN2D_0:
    WRITE32 ENDSUB_F_A3_0:CALLSUB1961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A3_0
CALLSUB1961:
    WRITE32 ENDSUB_F_A2_0:CALLSUB1962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_A2_0
CALLSUB1962:
    SUBF VGV_S2 VGV_S3 VGV_E
    MULF VGV_K1 VGV_E F.0
    SUBF VGV_E VGV_EOLD F.2
    MULF VGV_K2 F.2 F.1
    ADDF F.0 F.1 VGV_U
    MOVEF_F VGV_E VGV_EOLD
    ADDF VGV_SPEED VGV_U VGV_SPEEDL
    SUBF VGV_SPEED VGV_U VGV_SPEEDR
    CALL MOTOR.STARTPOWER 'B' VGV_SPEEDL
    CALL MOTOR.STARTPOWER 'C' VGV_SPEEDR
RETSUB_F_POLIN2D_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_POLIN2D_0:
SUB_F_ZAMOROZ_0:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_ZAMOROZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAMOROZ_0:
SUB_F_ZADVIG_0:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1976
	MOVEF_32 100.0 milliseconds1976
	DATA32 timer1976
	TIMER_WAIT milliseconds1976 timer1976
	TIMER_READY timer1976
  while1977:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile1977
  whilebody1977:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody1977
  endwhile1977:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_ZADVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZADVIG_0:
SUB_F_VIDVIG_0:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1983
	MOVEF_32 350.0 milliseconds1983
	DATA32 timer1983
	TIMER_WAIT milliseconds1983 timer1983
	TIMER_READY timer1983
    CALL MOTOR.STOP 'a' 'true'
RETSUB_F_VIDVIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIDVIG_0:
SUB_F_VIRAV_NAZ_0:
    DATA8 layer1985
	DATA8 no1985
	DATA8 mode81985
	
	MOVEF_8 2.0 no1985
	SUB8 no1985 1 no1985
	DIV8 no1985 4 layer1985
	MATH MOD8 no1985 4 no1985

	MOVEF_8 0.0 mode81985
	
	INPUT_DEVICE READY_RAW layer1985 no1985 0 mode81985 0
    DATA8 layer1986
	DATA8 no1986
	DATA8 mode81986
	
	MOVEF_8 3.0 no1986
	SUB8 no1986 1 no1986
	DIV8 no1986 4 layer1986
	MATH MOD8 no1986 4 no1986

	MOVEF_8 0.0 mode81986
	
	INPUT_DEVICE READY_RAW layer1986 no1986 0 mode81986 0
  while1987:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and1989
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 or1988
  and1989:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 and1992
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 or1988
  and1992:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile1987
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile1987
  or1988:
  whilebody1987:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and1998
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody1987
  and1998:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 and2001
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody1987
  and2001:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2004
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody1987
  and2004:
  endwhile1987:
  while2007:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile2007
  whilebody2007:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody2007
  endwhile2007:
    CALL MOTOR.STOP 'B' 'True'
  while2012:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile2012
  whilebody2012:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody2012
  endwhile2012:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_NAZ_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_NAZ_0:
SUB_F_VIRAV_0:
    DATA8 layer2017
	DATA8 no2017
	DATA8 mode82017
	
	MOVEF_8 2.0 no2017
	SUB8 no2017 1 no2017
	DIV8 no2017 4 layer2017
	MATH MOD8 no2017 4 no2017

	MOVEF_8 0.0 mode82017
	
	INPUT_DEVICE READY_RAW layer2017 no2017 0 mode82017 0
    DATA8 layer2018
	DATA8 no2018
	DATA8 mode82018
	
	MOVEF_8 3.0 no2018
	SUB8 no2018 1 no2018
	DIV8 no2018 4 layer2018
	MATH MOD8 no2018 4 no2018

	MOVEF_8 0.0 mode82018
	
	INPUT_DEVICE READY_RAW layer2018 no2018 0 mode82018 0
  while2019:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2019
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2019
  whilebody2019:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 and2023
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2019
  and2023:
  endwhile2019:
    CALL MOTOR.STOP 'BC' 'True'
  while2027:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 6.0 endwhile2027
  whilebody2027:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 6.0 whilebody2027
  endwhile2027:
    CALL MOTOR.STOP 'B' 'True'
  while2032:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 6.0 endwhile2032
  whilebody2032:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 6.0 whilebody2032
  endwhile2032:
    CALL MOTOR.STOP 'C' 'True'
  while2037:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 6.0 endwhile2037
  whilebody2037:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 6.0 whilebody2037
  endwhile2037:
    CALL MOTOR.STOP 'B' 'True'
  while2042:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 6.0 endwhile2042
  whilebody2042:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 6.0 whilebody2042
  endwhile2042:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_F_VIRAV_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_VIRAV_0:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.INVERT      // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 nomotorselected

	OUTPUT_POLARITY layer nos -1

	DATA8 inv
	READ8 layer MOTORISINVERTED inv
	OR8 nos inv inv
	WRITE8 inv layer MOTORISINVERTED 
nomotorselected:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall EV3FILE.OPENWRITE       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_WRITE fullname handle16

	MOVE16_F handle16 handle
}
subcall EV3FILE.WRITELINE     // FSV
{
	IN_F handle
	IN_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE WRITE_TEXT handle16 6 text
invalidhandle:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
