DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VG_M
DATAF VR_M
DATAF VY_M
DATAF VW_M
DATAF VCOLOR_M
DATAF VX_M
DATAF VC_M
DATAF VS_M
DATAF VMAX2_M
DATAF VMAX3_M
DATAF VMIN2_M
DATAF VMIN3_M
DATAF VK1_M
DATAF VK2_M
DATAF VK3_M
DATAF VS3_M
DATAF VS2_M
DATAF VSPEED_M
DATAF VSPEEDL_M
DATAF VSPEEDR_M
DATAF VEOLD_M
DATAF VN_M
DATAF VP_M
DATAF VI_M
DATAF VI2CPORT_M
DATAF VI2CSLVADDR_M
DATAF VL_M
DATAF VJ_M
ARRAY16 VSENDARRAY_M 2
ARRAY16 VRECVARRAY_M 2
DATAF VSNUM_M
DATAF VSRED_M
DATAF VSGREEN_M
DATAF VSBLUE_M
DATAF VMAX_M
DATAF VMIN_M
DATAF VH_M
DATAF VV_M
DATAF VD_M
DATAF VZ_M
DATAF VE_M
DATAF VU_M
ARRAY16 VA_M 2
DATAF VF_M
DATAF VCOLOR1_M
DATAF VCOLOR2_M
DATAF VCOLOR3_M
DATAF VCOLOR4_M
DATAF VCOLOR5_M
DATA32 RUNCOUNTER_ZADVIG
DATA32 RUNCOUNTER_VIDVIG

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYCREATE_FLOAT VSENDARRAY_M
    CALL ARRAYCREATE_FLOAT VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYCREATE_FLOAT VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVE32_32 0 RUNCOUNTER_ZADVIG
    MOVE32_32 0 RUNCOUNTER_VIDVIG
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TZADVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_ZADVIG 0
    CALL GETANDINC32 RUNCOUNTER_ZADVIG -1 RUNCOUNTER_ZADVIG tmp
    JR_GT32 tmp 1 launch
}
vmthread TVIDVIG
{
    DATA32 tmp
  launch:
    CALL PROGRAM_VIDVIG 1
    CALL GETANDINC32 RUNCOUNTER_VIDVIG -1 RUNCOUNTER_VIDVIG tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_ZADVIG
subcall PROGRAM_VIDVIG
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch2160
    WRITE32 ENDSUB_ZADVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_ZADVIG
  dispatch2160:
    JR_NEQ32 SUBPROGRAM 1 dispatch2161
    WRITE32 ENDSUB_VIDVIG:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_VIDVIG
  dispatch2161:
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    MOVEF_F 0.0 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.0 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 0.0 VI2CPORT_M
    MOVEF_F 0.0 VI2CSLVADDR_M
    MOVEF_F 0.0 VL_M
    MOVEF_F 0.0 VJ_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VSENDARRAY_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VRECVARRAY_M
    MOVEF_F 0.0 VSNUM_M
    MOVEF_F 0.0 VSRED_M
    MOVEF_F 0.0 VSGREEN_M
    MOVEF_F 0.0 VSBLUE_M
    MOVEF_F 0.0 VMAX_M
    MOVEF_F 0.0 VMIN_M
    MOVEF_F 0.0 VH_M
    MOVEF_F 0.0 VV_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    MOVEF_F 0.0 VE_M
    MOVEF_F 0.0 VU_M
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VA_M
    MOVEF_F 0.0 VF_M
    MOVEF_F 0.0 VCOLOR1_M
    MOVEF_F 0.0 VCOLOR2_M
    MOVEF_F 0.0 VCOLOR3_M
    MOVEF_F 0.0 VCOLOR4_M
    MOVEF_F 0.0 VCOLOR5_M
    MOVEF_F 0.0 VG_M
    MOVEF_F 0.0 VR_M
    MOVEF_F 0.0 VY_M
    MOVEF_F 0.0 VW_M
    MOVEF_F 0.0 VCOLOR_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VC_M
    MOVEF_F 0.0 VS_M
    MOVEF_F 0.0 VMAX2_M
    MOVEF_F 0.0 VMAX3_M
    MOVEF_F 0.0 VMIN2_M
    MOVEF_F 0.0 VMIN3_M
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 2.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    MOVEF_F 0.2 VK1_M
    MOVEF_F 0.0 VK2_M
    MOVEF_F 0.2 VK3_M
    MOVEF_F 0.0 VS3_M
    MOVEF_F 0.0 VS2_M
    MOVEF_F 0.0 VSPEED_M
    MOVEF_F 0.0 VSPEEDL_M
    MOVEF_F 0.0 VSPEEDR_M
    MOVEF_F 0.0 VEOLD_M
    MOVEF_F 0.0 VN_M
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VI_M
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL EV3FILE.OPENREAD 'WRO2021/colib.dat' VF_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMIN3_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX2_M
    CALL EV3FILE.READLINE VF_M S.0
    CALL EV3FILE.CONVERTTONUMBER S.0 VMAX3_M
    CALL EV3FILE.CLOSE VF_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VMIN2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMIN3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 20.0 20.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX2_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 30.0 30.0 1.0 S.0
    STRINGS VALUE_FORMATTED VMAX3_M '%g' 99 S.0
    CALL LCD.TEXT 1.0 40.0 40.0 1.0 S.0
    DATA32 milliseconds1181
	MOVEF_32 100.0 milliseconds1181
	DATA32 timer1181
	TIMER_WAIT milliseconds1181 timer1181
	TIMER_READY timer1181
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    WRITE32 ENDSUB_HSV:CALLSUB1182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1182:
    JR_LTEQF VH_M 120.0 else1183_1
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1183
  else1183_1:
    JR_LTEQF VH_M 20.0 else1183_2
    JR_GTEQF VH_M 120.0 else1183_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1183
  else1183_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
  else1183_3:
  endif1183:
    DATA32 tmp1187
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1187
    JR_NEQ32 0 tmp1187 alreadylaunched1187
    OBJECT_START TVIDVIG
  alreadylaunched1187:
    CALL MOTOR.RESETCOUNT 'bc'
    CALL MOTOR.START 'bcd' 40.0
  while1190:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1194
    DATA8 flag1194
    DIVF F.1 2.0 tmpf1194
    CP_EQF 0.0 2.0 flag1194
    SELECTF flag1194 0.0 tmpf1194 F.0

    JR_GTEQF F.0 500.0 endwhile1190
  whilebody1190:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 VMAX2_M else1195_1
    CALL SENSOR.READPERCENT 2.0 VMAX2_M
  else1195_1:
  endif1195:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 VMIN2_M else1198_1
    CALL SENSOR.READPERCENT 2.0 VMIN2_M
  else1198_1:
  endif1198:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 VMAX3_M else1201_1
    CALL SENSOR.READPERCENT 3.0 VMAX3_M
  else1201_1:
  endif1201:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 VMIN3_M else1204_1
    CALL SENSOR.READPERCENT 3.0 VMIN3_M
  else1204_1:
  endif1204:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1210
    DATA8 flag1210
    DIVF F.1 2.0 tmpf1210
    CP_EQF 0.0 2.0 flag1210
    SELECTF flag1210 0.0 tmpf1210 F.0

    JR_LTF F.0 500.0 whilebody1190
  endwhile1190:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1212:
    WRITE32 ENDSUB_A2:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1213:
  while1214:
    JR_LTEQF VS3_M 10.0 and1216
    JR_GTF VS2_M 10.0 or1215
  and1216:
    JR_GTEQF VS3_M 10.0 endwhile1214
    JR_GTEQF VS2_M 10.0 endwhile1214
  or1215:
  whilebody1214:
    WRITE32 ENDSUB_A3:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1217:
    WRITE32 ENDSUB_A2:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1218:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1219:
    JR_LTEQF VS3_M 10.0 and1220
    JR_GTF VS2_M 10.0 whilebody1214
  and1220:
    JR_GTEQF VS3_M 10.0 and1221
    JR_LTF VS2_M 10.0 whilebody1214
  and1221:
  endwhile1214:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_HSV:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1223:
    JR_GTF VH_M 120.0 or1225
    JR_EQF VH_M 0.0 or1225
    JR_LTF VH_M 0.0 else1224_1
    JR_GTF VH_M 20.0 else1224_1
  or1225:
    MOVEF_F 5.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1224
  else1224_1:
    JR_GTEQF VH_M 120.0 else1224_2
    MOVEF_F 4.0 VCOLOR1_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    JR endif1224
  else1224_2:
    MOVEF_F 5.0 VCOLOR1_M
  else1224_3:
  endif1224:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1228
	DATA8 nos1228
	DATA8 busy1228
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1228 nos1228
	JR_EQ8 0 nos1228 motornotbusy1228
  motorwaiting1228:
	OUTPUT_TEST layer1228 nos1228 busy1228
	JR_EQ8 busy1228 0 motornotbusy1228
	SLEEP
	JR motorwaiting1228
  motornotbusy1228:
    JR_NEQF VCOLOR_M 4.0 else1229_1
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1230:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1231
	DATA8 nos1231
	DATA8 busy1231
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1231 nos1231
	JR_EQ8 0 nos1231 motornotbusy1231
  motorwaiting1231:
	OUTPUT_TEST layer1231 nos1231 busy1231
	JR_EQ8 busy1231 0 motornotbusy1231
	SLEEP
	JR motorwaiting1231
  motornotbusy1231:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1233
	DATA8 nos1233
	DATA8 busy1233
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1233 nos1233
	JR_EQ8 0 nos1233 motornotbusy1233
  motorwaiting1233:
	OUTPUT_TEST layer1233 nos1233 busy1233
	JR_EQ8 busy1233 0 motornotbusy1233
	SLEEP
	JR motorwaiting1233
  motornotbusy1233:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    CALL MOTOR.RESETCOUNT 'bc'
  while1237:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 720.0 endwhile1237
  whilebody1237:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1239:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 720.0 whilebody1237
  endwhile1237:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_SB1:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1242:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer1243
	DATA8 nos1243
	DATA8 busy1243
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1243 nos1243
	JR_EQ8 0 nos1243 motornotbusy1243
  motorwaiting1243:
	OUTPUT_TEST layer1243 nos1243 busy1243
	JR_EQ8 busy1243 0 motornotbusy1243
	SLEEP
	JR motorwaiting1243
  motornotbusy1243:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1245:
    WRITE32 ENDSUB_A2:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1246:
  while1247:
    JR_LTEQF VS2_M 6.0 endwhile1247
  whilebody1247:
    WRITE32 ENDSUB_A3:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1248:
    WRITE32 ENDSUB_A2:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1249:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 6.0 whilebody1247
  endwhile1247:
    WRITE32 ENDSUB_A3:CALLSUB1251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1251:
    WRITE32 ENDSUB_A2:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1252:
  while1253:
    JR_GTEQF VS2_M 15.0 endwhile1253
  whilebody1253:
    WRITE32 ENDSUB_A3:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1254:
    WRITE32 ENDSUB_A2:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1255:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody1253
  endwhile1253:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while1259:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1263
    DATA8 flag1263
    DIVF F.1 2.0 tmpf1263
    CP_EQF 0.0 2.0 flag1263
    SELECTF flag1263 0.0 tmpf1263 F.0

    JR_GTEQF F.0 100.0 endwhile1259
  whilebody1259:
    WRITE32 ENDSUB_A3:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1264:
    WRITE32 ENDSUB_A2:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1265:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1266:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1270
    DATA8 flag1270
    DIVF F.1 2.0 tmpf1270
    CP_EQF 0.0 2.0 flag1270
    SELECTF flag1270 0.0 tmpf1270 F.0

    JR_LTF F.0 100.0 whilebody1259
  endwhile1259:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 650.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1272:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VCOLOR1_M 5.0 else1274_1
    WRITE32 ENDSUB_RED_1:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1275:
    ADDF VC_M 1.0 VC_M
    JR endif1274
  else1274_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1277
	DATA8 nos1277
	DATA8 busy1277
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1277 nos1277
	JR_EQ8 0 nos1277 motornotbusy1277
  motorwaiting1277:
	OUTPUT_TEST layer1277 nos1277 busy1277
	JR_EQ8 busy1277 0 motornotbusy1277
	SLEEP
	JR motorwaiting1277
  motornotbusy1277:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 400.0 'true'

	DATA8 layer1278
	DATA8 nos1278
	DATA8 busy1278
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1278 nos1278
	JR_EQ8 0 nos1278 motornotbusy1278
  motorwaiting1278:
	OUTPUT_TEST layer1278 nos1278 busy1278
	JR_EQ8 busy1278 0 motornotbusy1278
	SLEEP
	JR motorwaiting1278
  motornotbusy1278:
  while1279:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1281
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 or1280
  and1281:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1284
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 or1280
  and1284:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 endwhile1279
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 55.0 endwhile1279
  or1280:
  whilebody1279:
    CALL MOTOR.STARTSYNC 'bc' -10.0 10.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1290
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1279
  and1290:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 55.0 and1293
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody1279
  and1293:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 55.0 and1296
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 55.0 whilebody1279
  and1296:
  endwhile1279:
    WRITE32 ENDSUB_A3:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1299:
    WRITE32 ENDSUB_A2:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1300:
  while1301:
    JR_LTEQF VS3_M 10.0 and1303
    JR_GTF VS2_M 10.0 or1302
  and1303:
    JR_GTEQF VS3_M 10.0 endwhile1301
    JR_GTEQF VS2_M 10.0 endwhile1301
  or1302:
  whilebody1301:
    WRITE32 ENDSUB_A3:CALLSUB1304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1304:
    WRITE32 ENDSUB_A2:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1305:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1306:
    JR_LTEQF VS3_M 10.0 and1307
    JR_GTF VS2_M 10.0 whilebody1301
  and1307:
    JR_GTEQF VS3_M 10.0 and1308
    JR_LTF VS2_M 10.0 whilebody1301
  and1308:
  endwhile1301:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1309
	DATA8 nos1309
	DATA8 busy1309
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1309 nos1309
	JR_EQ8 0 nos1309 motornotbusy1309
  motorwaiting1309:
	OUTPUT_TEST layer1309 nos1309 busy1309
	JR_EQ8 busy1309 0 motornotbusy1309
	SLEEP
	JR motorwaiting1309
  motornotbusy1309:
    WRITE32 ENDSUB_A3:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1310:
    WRITE32 ENDSUB_A2:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1311:
  while1312:
    JR_LTEQF VS3_M 10.0 and1314
    JR_GTF VS2_M 10.0 or1313
  and1314:
    JR_GTEQF VS3_M 10.0 endwhile1312
    JR_GTEQF VS2_M 10.0 endwhile1312
  or1313:
  whilebody1312:
    WRITE32 ENDSUB_A3:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1315:
    WRITE32 ENDSUB_A2:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1316:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1317:
    JR_LTEQF VS3_M 10.0 and1318
    JR_GTF VS2_M 10.0 whilebody1312
  and1318:
    JR_GTEQF VS3_M 10.0 and1319
    JR_LTF VS2_M 10.0 whilebody1312
  and1319:
  endwhile1312:
    CALL MOTOR.STOP 'bc' 'true'
  else1274_2:
  endif1274:
    JR endif1229
  else1229_1:
    DATA32 tmp1321
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp1321
    JR_NEQ32 0 tmp1321 alreadylaunched1321
    OBJECT_START TZADVIG
  alreadylaunched1321:
    WRITE32 ENDSUB_A3:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1322:
    WRITE32 ENDSUB_A2:CALLSUB1323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1323:
  while1324:
    JR_LTEQF VS3_M 10.0 and1326
    JR_GTF VS2_M 10.0 or1325
  and1326:
    JR_GTEQF VS3_M 10.0 endwhile1324
    JR_GTEQF VS2_M 10.0 endwhile1324
  or1325:
  whilebody1324:
    WRITE32 ENDSUB_A3:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1327:
    WRITE32 ENDSUB_A2:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1328:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1329:
    JR_LTEQF VS3_M 10.0 and1330
    JR_GTF VS2_M 10.0 whilebody1324
  and1330:
    JR_GTEQF VS3_M 10.0 and1331
    JR_LTF VS2_M 10.0 whilebody1324
  and1331:
  endwhile1324:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1333
	DATA8 nos1333
	DATA8 busy1333
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1333 nos1333
	JR_EQ8 0 nos1333 motornotbusy1333
  motorwaiting1333:
	OUTPUT_TEST layer1333 nos1333 busy1333
	JR_EQ8 busy1333 0 motornotbusy1333
	SLEEP
	JR motorwaiting1333
  motornotbusy1333:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1334
	DATA8 nos1334
	DATA8 busy1334
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1334 nos1334
	JR_EQ8 0 nos1334 motornotbusy1334
  motorwaiting1334:
	OUTPUT_TEST layer1334 nos1334 busy1334
	JR_EQ8 busy1334 0 motornotbusy1334
	SLEEP
	JR motorwaiting1334
  motornotbusy1334:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1337
	MOVEF_32 500.0 milliseconds1337
	DATA32 timer1337
	TIMER_WAIT milliseconds1337 timer1337
	TIMER_READY timer1337
    CALL MOTOR.STOP 'd' 'true'
    MOVEF_F 90.0 VSPEED_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1340:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 720.0 endwhile1340
  whilebody1340:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1342:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 720.0 whilebody1340
  endwhile1340:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VCOLOR1_M 5.0 else1345_1
    WRITE32 ENDSUB_SB1:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1346:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1347
	DATA8 nos1347
	DATA8 busy1347
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1347 nos1347
	JR_EQ8 0 nos1347 motornotbusy1347
  motorwaiting1347:
	OUTPUT_TEST layer1347 nos1347 busy1347
	JR_EQ8 busy1347 0 motornotbusy1347
	SLEEP
	JR motorwaiting1347
  motornotbusy1347:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer1348
	DATA8 nos1348
	DATA8 busy1348
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1348 nos1348
	JR_EQ8 0 nos1348 motornotbusy1348
  motorwaiting1348:
	OUTPUT_TEST layer1348 nos1348 busy1348
	JR_EQ8 busy1348 0 motornotbusy1348
	SLEEP
	JR motorwaiting1348
  motornotbusy1348:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1350
	MOVEF_32 100.0 milliseconds1350
	DATA32 timer1350
	TIMER_WAIT milliseconds1350 timer1350
	TIMER_READY timer1350
    WRITE32 ENDSUB_A3:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1351:
    WRITE32 ENDSUB_A2:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1352:
  while1353:
    JR_LTEQF VS3_M 6.0 and1355
    JR_GTF VS2_M 6.0 or1354
  and1355:
    JR_GTEQF VS3_M 6.0 endwhile1353
    JR_GTEQF VS2_M 6.0 endwhile1353
  or1354:
  whilebody1353:
    WRITE32 ENDSUB_A3:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1356:
    WRITE32 ENDSUB_A2:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1357:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1358:
    JR_LTEQF VS3_M 6.0 and1359
    JR_GTF VS2_M 6.0 whilebody1353
  and1359:
    JR_GTEQF VS3_M 6.0 and1360
    JR_LTF VS2_M 6.0 whilebody1353
  and1360:
  endwhile1353:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_RED_1:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_RED_1
CALLSUB1362:
    ADDF VC_M 1.0 VC_M
    JR endif1345
  else1345_1:
    DATA32 tmp1364
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1364
    JR_NEQ32 0 tmp1364 alreadylaunched1364
    OBJECT_START TVIDVIG
  alreadylaunched1364:
    WRITE32 ENDSUB_SB1:CALLSUB1365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_SB1
CALLSUB1365:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer1366
	DATA8 nos1366
	DATA8 busy1366
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1366 nos1366
	JR_EQ8 0 nos1366 motornotbusy1366
  motorwaiting1366:
	OUTPUT_TEST layer1366 nos1366 busy1366
	JR_EQ8 busy1366 0 motornotbusy1366
	SLEEP
	JR motorwaiting1366
  motornotbusy1366:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer1367
	DATA8 nos1367
	DATA8 busy1367
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1367 nos1367
	JR_EQ8 0 nos1367 motornotbusy1367
  motorwaiting1367:
	OUTPUT_TEST layer1367 nos1367 busy1367
	JR_EQ8 busy1367 0 motornotbusy1367
	SLEEP
	JR motorwaiting1367
  motornotbusy1367:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1369:
    WRITE32 ENDSUB_A2:CALLSUB1370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1370:
  while1371:
    JR_LTEQF VS3_M 10.0 and1373
    JR_GTF VS2_M 10.0 or1372
  and1373:
    JR_GTEQF VS3_M 10.0 endwhile1371
    JR_GTEQF VS2_M 10.0 endwhile1371
  or1372:
  whilebody1371:
    WRITE32 ENDSUB_A3:CALLSUB1374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1374:
    WRITE32 ENDSUB_A2:CALLSUB1375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1375:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1376:
    JR_LTEQF VS3_M 10.0 and1377
    JR_GTF VS2_M 10.0 whilebody1371
  and1377:
    JR_GTEQF VS3_M 10.0 and1378
    JR_LTF VS2_M 10.0 whilebody1371
  and1378:
  endwhile1371:
    CALL MOTOR.STOP 'bc' 'true'
  else1345_2:
  endif1345:
  else1229_2:
  endif1229:
    WRITE32 ENDSUB_HSV_100:CALLSUB1380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1380:
    JR_GTEQF VV_M 0.019 else1381_1
    MOVEF_F 5.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1381
  else1381_1:
    MOVEF_F 4.0 VCOLOR2_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    CALL MOTOR.STOP 'bc' 'true'
  else1381_2:
  endif1381:
    JR_NEQF VCOLOR2_M 4.0 else1385_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1386
	DATA8 nos1386
	DATA8 busy1386
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1386 nos1386
	JR_EQ8 0 nos1386 motornotbusy1386
  motorwaiting1386:
	OUTPUT_TEST layer1386 nos1386 busy1386
	JR_EQ8 busy1386 0 motornotbusy1386
	SLEEP
	JR motorwaiting1386
  motornotbusy1386:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1387:
    CALL MOTOR.STOP 'bc' 'true'
    JR endif1385
  else1385_1:
    WRITE32 ENDSUB_PR:CALLSUB1389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1389:
    CALL MOTOR.RESETCOUNT 'bc'
  while1391:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 450.0 endwhile1391
  whilebody1391:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1393:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 450.0 whilebody1391
  endwhile1391:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1397
	MOVEF_32 100.0 milliseconds1397
	DATA32 timer1397
	TIMER_WAIT milliseconds1397 timer1397
	TIMER_READY timer1397
    WRITE32 ENDSUB_NPL:CALLSUB1398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1398:
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1399
    DATA8 flag1399
    DIVF 360.0 VL_M tmpf1399
    CP_EQF 0.0 VL_M flag1399
    SELECTF flag1399 0.0 tmpf1399 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
    MOVEF_F 90.0 VSPEED_M
  while1402:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1402
  whilebody1402:
    WRITE32 ENDSUB_POLIN2D:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1404:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1402
  endwhile1402:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1407:
    JR_NEQF VC_M 1.0 else1408_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1409:
    JR endif1408
  else1408_1:
    JR_NEQF VC_M 0.0 else1408_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1410:
  else1408_2:
  endif1408:
    MOVEF_F 900.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1411:
    WRITE32 ENDSUB_A3:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1412:
    WRITE32 ENDSUB_A2:CALLSUB1413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1413:
  while1414:
    JR_LTEQF VS3_M 6.0 and1416
    JR_GTF VS2_M 6.0 or1415
  and1416:
    JR_GTEQF VS3_M 6.0 endwhile1414
    JR_GTEQF VS2_M 6.0 endwhile1414
  or1415:
  whilebody1414:
    WRITE32 ENDSUB_A3:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1417:
    WRITE32 ENDSUB_A2:CALLSUB1418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1418:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1419:
    JR_LTEQF VS3_M 6.0 and1420
    JR_GTF VS2_M 6.0 whilebody1414
  and1420:
    JR_GTEQF VS3_M 6.0 and1421
    JR_LTF VS2_M 6.0 whilebody1414
  and1421:
  endwhile1414:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 50.0 'true'

	DATA8 layer1423
	DATA8 nos1423
	DATA8 busy1423
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1423 nos1423
	JR_EQ8 0 nos1423 motornotbusy1423
  motorwaiting1423:
	OUTPUT_TEST layer1423 nos1423 busy1423
	JR_EQ8 busy1423 0 motornotbusy1423
	SLEEP
	JR motorwaiting1423
  motornotbusy1423:
    WRITE32 ENDSUB_A3:CALLSUB1424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1424:
    WRITE32 ENDSUB_A2:CALLSUB1425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1425:
  while1426:
    JR_LTEQF VS3_M 6.0 and1428
    JR_GTF VS2_M 6.0 or1427
  and1428:
    JR_GTEQF VS3_M 6.0 endwhile1426
    JR_GTEQF VS2_M 6.0 endwhile1426
  or1427:
  whilebody1426:
    WRITE32 ENDSUB_A3:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1429:
    WRITE32 ENDSUB_A2:CALLSUB1430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1430:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1431:
    JR_LTEQF VS3_M 6.0 and1432
    JR_GTF VS2_M 6.0 whilebody1426
  and1432:
    JR_GTEQF VS3_M 6.0 and1433
    JR_LTF VS2_M 6.0 whilebody1426
  and1433:
  endwhile1426:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1435:
    CALL MOTOR.RESETCOUNT 'bc'
  while1437:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1441
    DATA8 flag1441
    DIVF F.1 2.0 tmpf1441
    CP_EQF 0.0 2.0 flag1441
    SELECTF flag1441 0.0 tmpf1441 F.0

    JR_GTEQF F.0 400.0 endwhile1437
  whilebody1437:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1442:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1446
    DATA8 flag1446
    DIVF F.1 2.0 tmpf1446
    CP_EQF 0.0 2.0 flag1446
    SELECTF flag1446 0.0 tmpf1446 F.0

    JR_LTF F.0 400.0 whilebody1437
  endwhile1437:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1449
	MOVEF_32 500.0 milliseconds1449
	DATA32 timer1449
	TIMER_WAIT milliseconds1449 timer1449
	TIMER_READY timer1449
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1451
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1451
    JR_NEQ32 0 tmp1451 alreadylaunched1451
    OBJECT_START TVIDVIG
  alreadylaunched1451:
    WRITE32 ENDSUB_NPL:CALLSUB1452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1452:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1453:
    ADDF VC_M 1.0 VC_M
  else1385_2:
  endif1385:
    WRITE32 ENDSUB_HSV:CALLSUB1455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB1455:
    JR_GTF VH_M 120.0 or1457
    JR_LTF VH_M 300.0 and1458
    JR_LTEQF VH_M 360.0 or1457
  and1458:
    JR_LTF VH_M 0.0 else1456_1
    JR_GTF VH_M 15.0 else1456_1
  or1457:
    MOVEF_F 5.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1456
  else1456_1:
    MOVEF_F 4.0 VCOLOR3_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1456_2:
  endif1456:
    JR_NEQF VCOLOR3_M 4.0 else1461_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1462
	DATA8 nos1462
	DATA8 busy1462
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1462 nos1462
	JR_EQ8 0 nos1462 motornotbusy1462
  motorwaiting1462:
	OUTPUT_TEST layer1462 nos1462 busy1462
	JR_EQ8 busy1462 0 motornotbusy1462
	SLEEP
	JR motorwaiting1462
  motornotbusy1462:
    MOVEF_F 360.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1463:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 0.0 else1465_1
    WRITE32 ENDSUB_PR:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1466:
    CALL MOTOR.RESETCOUNT 'bc'
  while1468:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1472
    DATA8 flag1472
    DIVF F.1 2.0 tmpf1472
    CP_EQF 0.0 2.0 flag1472
    SELECTF flag1472 0.0 tmpf1472 F.0

    JR_GTEQF F.0 450.0 endwhile1468
  whilebody1468:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1473:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1477
    DATA8 flag1477
    DIVF F.1 2.0 tmpf1477
    CP_EQF 0.0 2.0 flag1477
    SELECTF flag1477 0.0 tmpf1477 F.0

    JR_LTF F.0 450.0 whilebody1468
  endwhile1468:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1480
	MOVEF_32 500.0 milliseconds1480
	DATA32 timer1480
	TIMER_WAIT milliseconds1480 timer1480
	TIMER_READY timer1480
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1482:
    MOVEF_F 400.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1483
    DATA8 flag1483
    DIVF 360.0 VL_M tmpf1483
    CP_EQF 0.0 VL_M flag1483
    SELECTF flag1483 0.0 tmpf1483 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1486:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1486
  whilebody1486:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1488:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1486
  endwhile1486:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1491:
    WRITE32 ENDSUB_BELLAM:CALLSUB1492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1492:
    MOVEF_F 200.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1493:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1495:
    CALL MOTOR.RESETCOUNT 'bc'
  while1497:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1501
    DATA8 flag1501
    DIVF F.1 2.0 tmpf1501
    CP_EQF 0.0 2.0 flag1501
    SELECTF flag1501 0.0 tmpf1501 F.0

    JR_GTEQF F.0 400.0 endwhile1497
  whilebody1497:
    MOVEF_F 60.0 VSPEED_M
    MOVEF_F 0.2 VK1_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1502:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1506
    DATA8 flag1506
    DIVF F.1 2.0 tmpf1506
    CP_EQF 0.0 2.0 flag1506
    SELECTF flag1506 0.0 tmpf1506 F.0

    JR_LTF F.0 400.0 whilebody1497
  endwhile1497:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1509
	MOVEF_32 500.0 milliseconds1509
	DATA32 timer1509
	TIMER_WAIT milliseconds1509 timer1509
	TIMER_READY timer1509
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1511:
    WRITE32 ENDSUB_A3:CALLSUB1512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1512:
    WRITE32 ENDSUB_A2:CALLSUB1513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1513:
  while1514:
    JR_LTEQF VS3_M 10.0 and1516
    JR_GTF VS2_M 10.0 or1515
  and1516:
    JR_GTEQF VS3_M 10.0 endwhile1514
    JR_GTEQF VS2_M 10.0 endwhile1514
  or1515:
  whilebody1514:
    WRITE32 ENDSUB_A3:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1517:
    WRITE32 ENDSUB_A2:CALLSUB1518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1518:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1519:
    JR_LTEQF VS3_M 10.0 and1520
    JR_GTF VS2_M 10.0 whilebody1514
  and1520:
    JR_GTEQF VS3_M 10.0 and1521
    JR_LTF VS2_M 10.0 whilebody1514
  and1521:
  endwhile1514:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1523:
    CALL MOTOR.RESETCOUNT 'bc'
  while1525:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1529
    DATA8 flag1529
    DIVF F.1 2.0 tmpf1529
    CP_EQF 0.0 2.0 flag1529
    SELECTF flag1529 0.0 tmpf1529 F.0

    JR_GTEQF F.0 500.0 endwhile1525
  whilebody1525:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1530:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1534
    DATA8 flag1534
    DIVF F.1 2.0 tmpf1534
    CP_EQF 0.0 2.0 flag1534
    SELECTF flag1534 0.0 tmpf1534 F.0

    JR_LTF F.0 500.0 whilebody1525
  endwhile1525:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1537
	MOVEF_32 500.0 milliseconds1537
	DATA32 timer1537
	TIMER_WAIT milliseconds1537 timer1537
	TIMER_READY timer1537
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1539:
    MOVEF_F 500.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1540
    DATA8 flag1540
    DIVF 360.0 VL_M tmpf1540
    CP_EQF 0.0 VL_M flag1540
    SELECTF flag1540 0.0 tmpf1540 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1543:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1543
  whilebody1543:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1545:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1543
  endwhile1543:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1548:
    WRITE32 ENDSUB_BELLAM2:CALLSUB1549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1549:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1550:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1552:
    CALL MOTOR.RESETCOUNT 'bc'
  while1554:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1558
    DATA8 flag1558
    DIVF F.1 2.0 tmpf1558
    CP_EQF 0.0 2.0 flag1558
    SELECTF flag1558 0.0 tmpf1558 F.0

    JR_GTEQF F.0 470.0 endwhile1554
  whilebody1554:
    MOVEF_F 60.0 VSPEED_M
    MOVEF_F 0.2 VK1_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1559:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1563
    DATA8 flag1563
    DIVF F.1 2.0 tmpf1563
    CP_EQF 0.0 2.0 flag1563
    SELECTF flag1563 0.0 tmpf1563 F.0

    JR_LTF F.0 470.0 whilebody1554
  endwhile1554:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1566
	MOVEF_32 500.0 milliseconds1566
	DATA32 timer1566
	TIMER_WAIT milliseconds1566 timer1566
	TIMER_READY timer1566
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1568:
    MOVEF_F 500.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1569:
    WRITE32 ENDSUB_PR:CALLSUB1570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1570:
    CALL MOTOR.RESETCOUNT 'bc'
  while1572:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1576
    DATA8 flag1576
    DIVF F.1 2.0 tmpf1576
    CP_EQF 0.0 2.0 flag1576
    SELECTF flag1576 0.0 tmpf1576 F.0

    JR_GTEQF F.0 270.0 endwhile1572
  whilebody1572:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1577:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1581
    DATA8 flag1581
    DIVF F.1 2.0 tmpf1581
    CP_EQF 0.0 2.0 flag1581
    SELECTF flag1581 0.0 tmpf1581 F.0

    JR_LTF F.0 270.0 whilebody1572
  endwhile1572:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1584
	MOVEF_32 500.0 milliseconds1584
	DATA32 timer1584
	TIMER_WAIT milliseconds1584 timer1584
	TIMER_READY timer1584
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1586:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1587
    DATA8 flag1587
    DIVF 360.0 VL_M tmpf1587
    CP_EQF 0.0 VL_M flag1587
    SELECTF flag1587 0.0 tmpf1587 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1590:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1590
  whilebody1590:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1592:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1590
  endwhile1590:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1595:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1596:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1597:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1599:
    CALL MOTOR.RESETCOUNT 'bc'
  while1601:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1605
    DATA8 flag1605
    DIVF F.1 2.0 tmpf1605
    CP_EQF 0.0 2.0 flag1605
    SELECTF flag1605 0.0 tmpf1605 F.0

    JR_GTEQF F.0 270.0 endwhile1601
  whilebody1601:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1606:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1610
    DATA8 flag1610
    DIVF F.1 2.0 tmpf1610
    CP_EQF 0.0 2.0 flag1610
    SELECTF flag1610 0.0 tmpf1610 F.0

    JR_LTF F.0 270.0 whilebody1601
  endwhile1601:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1613
	MOVEF_32 500.0 milliseconds1613
	DATA32 timer1613
	TIMER_WAIT milliseconds1613 timer1613
	TIMER_READY timer1613
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1615:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1616:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1617
	DATA8 nos1617
	DATA8 busy1617
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1617 nos1617
	JR_EQ8 0 nos1617 motornotbusy1617
  motorwaiting1617:
	OUTPUT_TEST layer1617 nos1617 busy1617
	JR_EQ8 busy1617 0 motornotbusy1617
	SLEEP
	JR motorwaiting1617
  motornotbusy1617:
    PROGRAM_STOP -1
  else1465_1:
  endif1465:
  else1461_1:
  endif1461:
    JR_NEQF VCOLOR3_M 5.0 else1619_1
    WRITE32 ENDSUB_PR:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1620:
    CALL MOTOR.RESETCOUNT 'bc'
  while1622:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1626
    DATA8 flag1626
    DIVF F.1 2.0 tmpf1626
    CP_EQF 0.0 2.0 flag1626
    SELECTF flag1626 0.0 tmpf1626 F.0

    JR_GTEQF F.0 270.0 endwhile1622
  whilebody1622:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1627:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1631
    DATA8 flag1631
    DIVF F.1 2.0 tmpf1631
    CP_EQF 0.0 2.0 flag1631
    SELECTF flag1631 0.0 tmpf1631 F.0

    JR_LTF F.0 270.0 whilebody1622
  endwhile1622:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1634
	MOVEF_32 500.0 milliseconds1634
	DATA32 timer1634
	TIMER_WAIT milliseconds1634 timer1634
	TIMER_READY timer1634
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1636:
    MOVEF_F 850.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1637
    DATA8 flag1637
    DIVF 360.0 VL_M tmpf1637
    CP_EQF 0.0 VL_M flag1637
    SELECTF flag1637 0.0 tmpf1637 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1640:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1640
  whilebody1640:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1642:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1640
  endwhile1640:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1645:
    JR_NEQF VC_M 1.0 else1646_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1647:
    JR endif1646
  else1646_1:
    JR_NEQF VC_M 0.0 else1646_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1648:
    JR endif1646
  else1646_2:
    JR_NEQF VC_M 2.0 else1646_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1649:
    MOVEF_F 640.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1650:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds1652
	MOVEF_32 100.0 milliseconds1652
	DATA32 timer1652
	TIMER_WAIT milliseconds1652 timer1652
	TIMER_READY timer1652
    WRITE32 ENDSUB_PL:CALLSUB1653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1653:
    CALL MOTOR.RESETCOUNT 'bc'
  while1655:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1659
    DATA8 flag1659
    DIVF F.1 2.0 tmpf1659
    CP_EQF 0.0 2.0 flag1659
    SELECTF flag1659 0.0 tmpf1659 F.0

    JR_GTEQF F.0 270.0 endwhile1655
  whilebody1655:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1660:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1664
    DATA8 flag1664
    DIVF F.1 2.0 tmpf1664
    CP_EQF 0.0 2.0 flag1664
    SELECTF flag1664 0.0 tmpf1664 F.0

    JR_LTF F.0 270.0 whilebody1655
  endwhile1655:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1667
	MOVEF_32 500.0 milliseconds1667
	DATA32 timer1667
	TIMER_WAIT milliseconds1667 timer1667
	TIMER_READY timer1667
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1669:
    CALL MOTOR.RESETCOUNT 'bc'
  while1671:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1675
    DATA8 flag1675
    DIVF F.1 2.0 tmpf1675
    CP_EQF 0.0 2.0 flag1675
    SELECTF flag1675 0.0 tmpf1675 F.0

    JR_GTEQF F.0 100.0 endwhile1671
  whilebody1671:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1676:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1680
    DATA8 flag1680
    DIVF F.1 2.0 tmpf1680
    CP_EQF 0.0 2.0 flag1680
    SELECTF flag1680 0.0 tmpf1680 F.0

    JR_LTF F.0 100.0 whilebody1671
  endwhile1671:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 800.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1682:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1684
	DATA8 nos1684
	DATA8 busy1684
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1684 nos1684
	JR_EQ8 0 nos1684 motornotbusy1684
  motorwaiting1684:
	OUTPUT_TEST layer1684 nos1684 busy1684
	JR_EQ8 busy1684 0 motornotbusy1684
	SLEEP
	JR motorwaiting1684
  motornotbusy1684:
    PROGRAM_STOP -1
  else1646_3:
  endif1646:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1686:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1688:
    CALL MOTOR.RESETCOUNT 'bc'
  while1690:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1694
    DATA8 flag1694
    DIVF F.1 2.0 tmpf1694
    CP_EQF 0.0 2.0 flag1694
    SELECTF flag1694 0.0 tmpf1694 F.0

    JR_GTEQF F.0 270.0 endwhile1690
  whilebody1690:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1695:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1699
    DATA8 flag1699
    DIVF F.1 2.0 tmpf1699
    CP_EQF 0.0 2.0 flag1699
    SELECTF flag1699 0.0 tmpf1699 F.0

    JR_LTF F.0 270.0 whilebody1690
  endwhile1690:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1702
	MOVEF_32 500.0 milliseconds1702
	DATA32 timer1702
	TIMER_WAIT milliseconds1702 timer1702
	TIMER_READY timer1702
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1704
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1704
    JR_NEQ32 0 tmp1704 alreadylaunched1704
    OBJECT_START TVIDVIG
  alreadylaunched1704:
    WRITE32 ENDSUB_NPL:CALLSUB1705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1705:
    MOVEF_F 250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1706:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer1707
	DATA8 nos1707
	DATA8 busy1707
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1707 nos1707
	JR_EQ8 0 nos1707 motornotbusy1707
  motorwaiting1707:
	OUTPUT_TEST layer1707 nos1707 busy1707
	JR_EQ8 busy1707 0 motornotbusy1707
	SLEEP
	JR motorwaiting1707
  motornotbusy1707:
    WRITE32 ENDSUB_A3:CALLSUB1708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1708:
    WRITE32 ENDSUB_A2:CALLSUB1709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1709:
  while1710:
    JR_LTEQF VS3_M 10.0 and1712
    JR_GTF VS2_M 10.0 or1711
  and1712:
    JR_GTEQF VS3_M 10.0 endwhile1710
    JR_GTEQF VS2_M 10.0 endwhile1710
  or1711:
  whilebody1710:
    WRITE32 ENDSUB_A3:CALLSUB1713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1713:
    WRITE32 ENDSUB_A2:CALLSUB1714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1714:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1715:
    JR_LTEQF VS3_M 10.0 and1716
    JR_GTF VS2_M 10.0 whilebody1710
  and1716:
    JR_GTEQF VS3_M 10.0 and1717
    JR_LTF VS2_M 10.0 whilebody1710
  and1717:
  endwhile1710:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1619_1:
  endif1619:
    WRITE32 ENDSUB_HSV_100:CALLSUB1720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1720:
    JR_GTEQF VV_M 0.022 else1721_1
    MOVEF_F 5.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1721
  else1721_1:
    MOVEF_F 4.0 VCOLOR4_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1721_2:
  endif1721:
    JR_NEQF VCOLOR4_M 4.0 else1724_1
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1725
	DATA8 nos1725
	DATA8 busy1725
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1725 nos1725
	JR_EQ8 0 nos1725 motornotbusy1725
  motorwaiting1725:
	OUTPUT_TEST layer1725 nos1725 busy1725
	JR_EQ8 busy1725 0 motornotbusy1725
	SLEEP
	JR motorwaiting1725
  motornotbusy1725:
    CALL MOTOR.SCHEDULESYNC 'bc' -60.0 60.0 400.0 'true'

	DATA8 layer1726
	DATA8 nos1726
	DATA8 busy1726
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1726 nos1726
	JR_EQ8 0 nos1726 motornotbusy1726
  motorwaiting1726:
	OUTPUT_TEST layer1726 nos1726 busy1726
	JR_EQ8 busy1726 0 motornotbusy1726
	SLEEP
	JR motorwaiting1726
  motornotbusy1726:
    WRITE32 ENDSUB_A3:CALLSUB1727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1727:
    WRITE32 ENDSUB_A2:CALLSUB1728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1728:
  while1729:
    JR_LTEQF VS3_M 60.0 endwhile1729
  whilebody1729:
    WRITE32 ENDSUB_A3:CALLSUB1730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1730:
    WRITE32 ENDSUB_A2:CALLSUB1731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1731:
    CALL MOTOR.STARTSYNC 'bc' 0.0 20.0
    JR_GTF VS3_M 60.0 whilebody1729
  endwhile1729:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB1734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1734:
    WRITE32 ENDSUB_A2:CALLSUB1735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1735:
  while1736:
    JR_LTEQF VS3_M 6.0 and1738
    JR_GTF VS2_M 6.0 or1737
  and1738:
    JR_GTEQF VS3_M 6.0 endwhile1736
    JR_GTEQF VS2_M 6.0 endwhile1736
  or1737:
  whilebody1736:
    WRITE32 ENDSUB_A3:CALLSUB1739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1739:
    WRITE32 ENDSUB_A2:CALLSUB1740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1740:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1741:
    JR_LTEQF VS3_M 6.0 and1742
    JR_GTF VS2_M 6.0 whilebody1736
  and1742:
    JR_GTEQF VS3_M 6.0 and1743
    JR_LTF VS2_M 6.0 whilebody1736
  and1743:
  endwhile1736:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1745
	DATA8 nos1745
	DATA8 busy1745
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1745 nos1745
	JR_EQ8 0 nos1745 motornotbusy1745
  motorwaiting1745:
	OUTPUT_TEST layer1745 nos1745 busy1745
	JR_EQ8 busy1745 0 motornotbusy1745
	SLEEP
	JR motorwaiting1745
  motornotbusy1745:
    WRITE32 ENDSUB_A3:CALLSUB1746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1746:
    WRITE32 ENDSUB_A2:CALLSUB1747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1747:
  while1748:
    JR_LTEQF VS3_M 6.0 and1750
    JR_GTF VS2_M 6.0 or1749
  and1750:
    JR_GTEQF VS3_M 6.0 endwhile1748
    JR_GTEQF VS2_M 6.0 endwhile1748
  or1749:
  whilebody1748:
    WRITE32 ENDSUB_A3:CALLSUB1751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1751:
    WRITE32 ENDSUB_A2:CALLSUB1752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1752:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1753:
    JR_LTEQF VS3_M 6.0 and1754
    JR_GTF VS2_M 6.0 whilebody1748
  and1754:
    JR_GTEQF VS3_M 6.0 and1755
    JR_LTF VS2_M 6.0 whilebody1748
  and1755:
  endwhile1748:
    CALL MOTOR.STOP 'bc' 'true'
    JR_NEQF VC_M 1.0 else1757_1
    WRITE32 ENDSUB_PR:CALLSUB1758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1758:
    CALL MOTOR.RESETCOUNT 'bc'
  while1760:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1764
    DATA8 flag1764
    DIVF F.1 2.0 tmpf1764
    CP_EQF 0.0 2.0 flag1764
    SELECTF flag1764 0.0 tmpf1764 F.0

    JR_GTEQF F.0 500.0 endwhile1760
  whilebody1760:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1765:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1769
    DATA8 flag1769
    DIVF F.1 2.0 tmpf1769
    CP_EQF 0.0 2.0 flag1769
    SELECTF flag1769 0.0 tmpf1769 F.0

    JR_LTF F.0 500.0 whilebody1760
  endwhile1760:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1772
	MOVEF_32 500.0 milliseconds1772
	DATA32 timer1772
	TIMER_WAIT milliseconds1772 timer1772
	TIMER_READY timer1772
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1774:
    MOVEF_F 520.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1775
    DATA8 flag1775
    DIVF 360.0 VL_M tmpf1775
    CP_EQF 0.0 VL_M flag1775
    SELECTF flag1775 0.0 tmpf1775 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1778:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1778
  whilebody1778:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1780:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1778
  endwhile1778:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1783:
    WRITE32 ENDSUB_BELLAM2:CALLSUB1784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1784:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1785:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1787:
    CALL MOTOR.RESETCOUNT 'bc'
  while1789:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1793
    DATA8 flag1793
    DIVF F.1 2.0 tmpf1793
    CP_EQF 0.0 2.0 flag1793
    SELECTF flag1793 0.0 tmpf1793 F.0

    JR_GTEQF F.0 470.0 endwhile1789
  whilebody1789:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1794:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1798
    DATA8 flag1798
    DIVF F.1 2.0 tmpf1798
    CP_EQF 0.0 2.0 flag1798
    SELECTF flag1798 0.0 tmpf1798 F.0

    JR_LTF F.0 470.0 whilebody1789
  endwhile1789:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1801
	MOVEF_32 500.0 milliseconds1801
	DATA32 timer1801
	TIMER_WAIT milliseconds1801 timer1801
	TIMER_READY timer1801
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1803:
    MOVEF_F 500.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1804:
    WRITE32 ENDSUB_PR:CALLSUB1805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1805:
    CALL MOTOR.RESETCOUNT 'bc'
  while1807:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1811
    DATA8 flag1811
    DIVF F.1 2.0 tmpf1811
    CP_EQF 0.0 2.0 flag1811
    SELECTF flag1811 0.0 tmpf1811 F.0

    JR_GTEQF F.0 270.0 endwhile1807
  whilebody1807:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1812:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1816
    DATA8 flag1816
    DIVF F.1 2.0 tmpf1816
    CP_EQF 0.0 2.0 flag1816
    SELECTF flag1816 0.0 tmpf1816 F.0

    JR_LTF F.0 270.0 whilebody1807
  endwhile1807:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1819
	MOVEF_32 500.0 milliseconds1819
	DATA32 timer1819
	TIMER_WAIT milliseconds1819 timer1819
	TIMER_READY timer1819
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1821:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1822
    DATA8 flag1822
    DIVF 360.0 VL_M tmpf1822
    CP_EQF 0.0 VL_M flag1822
    SELECTF flag1822 0.0 tmpf1822 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1825:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1825
  whilebody1825:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1827:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1825
  endwhile1825:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1830:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1831:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1832:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB1834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1834:
    CALL MOTOR.RESETCOUNT 'bc'
  while1836:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1840
    DATA8 flag1840
    DIVF F.1 2.0 tmpf1840
    CP_EQF 0.0 2.0 flag1840
    SELECTF flag1840 0.0 tmpf1840 F.0

    JR_GTEQF F.0 270.0 endwhile1836
  whilebody1836:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1841:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1845
    DATA8 flag1845
    DIVF F.1 2.0 tmpf1845
    CP_EQF 0.0 2.0 flag1845
    SELECTF flag1845 0.0 tmpf1845 F.0

    JR_LTF F.0 270.0 whilebody1836
  endwhile1836:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1848
	MOVEF_32 500.0 milliseconds1848
	DATA32 timer1848
	TIMER_WAIT milliseconds1848 timer1848
	TIMER_READY timer1848
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1850:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1851:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1852
	DATA8 nos1852
	DATA8 busy1852
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1852 nos1852
	JR_EQ8 0 nos1852 motornotbusy1852
  motorwaiting1852:
	OUTPUT_TEST layer1852 nos1852 busy1852
	JR_EQ8 busy1852 0 motornotbusy1852
	SLEEP
	JR motorwaiting1852
  motornotbusy1852:
    PROGRAM_STOP -1
  else1757_1:
  endif1757:
  else1724_1:
  endif1724:
    JR_NEQF VCOLOR4_M 5.0 else1854_1
    WRITE32 ENDSUB_PR:CALLSUB1855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1855:
    CALL MOTOR.RESETCOUNT 'bc'
  while1857:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1861
    DATA8 flag1861
    DIVF F.1 2.0 tmpf1861
    CP_EQF 0.0 2.0 flag1861
    SELECTF flag1861 0.0 tmpf1861 F.0

    JR_GTEQF F.0 450.0 endwhile1857
  whilebody1857:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1862 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1862:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1866
    DATA8 flag1866
    DIVF F.1 2.0 tmpf1866
    CP_EQF 0.0 2.0 flag1866
    SELECTF flag1866 0.0 tmpf1866 F.0

    JR_LTF F.0 450.0 whilebody1857
  endwhile1857:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1869
	MOVEF_32 500.0 milliseconds1869
	DATA32 timer1869
	TIMER_WAIT milliseconds1869 timer1869
	TIMER_READY timer1869
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB1871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB1871:
    MOVEF_F 400.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1872
    DATA8 flag1872
    DIVF 360.0 VL_M tmpf1872
    CP_EQF 0.0 VL_M flag1872
    SELECTF flag1872 0.0 tmpf1872 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1875:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1875
  whilebody1875:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1877:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1875
  endwhile1875:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1880:
    JR_NEQF VC_M 1.0 else1881_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB1882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB1882:
    JR endif1881
  else1881_1:
    JR_NEQF VC_M 0.0 else1881_2
    WRITE32 ENDSUB_BELLAM:CALLSUB1883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB1883:
    JR endif1881
  else1881_2:
    JR_NEQF VC_M 2.0 else1881_3
    WRITE32 ENDSUB_BELLAM3:CALLSUB1884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1884:
    MOVEF_F 160.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1885:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1887:
    CALL MOTOR.RESETCOUNT 'bc'
  while1889:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1893
    DATA8 flag1893
    DIVF F.1 2.0 tmpf1893
    CP_EQF 0.0 2.0 flag1893
    SELECTF flag1893 0.0 tmpf1893 F.0

    JR_GTEQF F.0 400.0 endwhile1889
  whilebody1889:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1894:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1898
    DATA8 flag1898
    DIVF F.1 2.0 tmpf1898
    CP_EQF 0.0 2.0 flag1898
    SELECTF flag1898 0.0 tmpf1898 F.0

    JR_LTF F.0 400.0 whilebody1889
  endwhile1889:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1901
	MOVEF_32 500.0 milliseconds1901
	DATA32 timer1901
	TIMER_WAIT milliseconds1901 timer1901
	TIMER_READY timer1901
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1903:
    CALL MOTOR.RESETCOUNT 'bc'
  while1905:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1909
    DATA8 flag1909
    DIVF F.1 2.0 tmpf1909
    CP_EQF 0.0 2.0 flag1909
    SELECTF flag1909 0.0 tmpf1909 F.0

    JR_GTEQF F.0 100.0 endwhile1905
  whilebody1905:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1910:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1914
    DATA8 flag1914
    DIVF F.1 2.0 tmpf1914
    CP_EQF 0.0 2.0 flag1914
    SELECTF flag1914 0.0 tmpf1914 F.0

    JR_LTF F.0 100.0 whilebody1905
  endwhile1905:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1916:
    ADDF VC_M 1.0 VC_M
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer1918
	DATA8 nos1918
	DATA8 busy1918
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1918 nos1918
	JR_EQ8 0 nos1918 motornotbusy1918
  motorwaiting1918:
	OUTPUT_TEST layer1918 nos1918 busy1918
	JR_EQ8 busy1918 0 motornotbusy1918
	SLEEP
	JR motorwaiting1918
  motornotbusy1918:
    PROGRAM_STOP -1
  else1881_3:
  endif1881:
    MOVEF_F 150.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1920:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PL:CALLSUB1922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PL
CALLSUB1922:
    CALL MOTOR.RESETCOUNT 'bc'
  while1924:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1928
    DATA8 flag1928
    DIVF F.1 2.0 tmpf1928
    CP_EQF 0.0 2.0 flag1928
    SELECTF flag1928 0.0 tmpf1928 F.0

    JR_GTEQF F.0 400.0 endwhile1924
  whilebody1924:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1929:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1933
    DATA8 flag1933
    DIVF F.1 2.0 tmpf1933
    CP_EQF 0.0 2.0 flag1933
    SELECTF flag1933 0.0 tmpf1933 F.0

    JR_LTF F.0 400.0 whilebody1924
  endwhile1924:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds1936
	MOVEF_32 500.0 milliseconds1936
	DATA32 timer1936
	TIMER_WAIT milliseconds1936 timer1936
	TIMER_READY timer1936
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp1938
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp1938
    JR_NEQ32 0 tmp1938 alreadylaunched1938
    OBJECT_START TVIDVIG
  alreadylaunched1938:
    WRITE32 ENDSUB_NPP:CALLSUB1939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1939:
    WRITE32 ENDSUB_A3:CALLSUB1940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1940:
    WRITE32 ENDSUB_A2:CALLSUB1941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1941:
  while1942:
    JR_LTEQF VS3_M 6.0 and1944
    JR_GTF VS2_M 6.0 or1943
  and1944:
    JR_GTEQF VS3_M 6.0 endwhile1942
    JR_GTEQF VS2_M 6.0 endwhile1942
  or1943:
  whilebody1942:
    WRITE32 ENDSUB_A3:CALLSUB1945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1945:
    WRITE32 ENDSUB_A2:CALLSUB1946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1946:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1947:
    JR_LTEQF VS3_M 6.0 and1948
    JR_GTF VS2_M 6.0 whilebody1942
  and1948:
    JR_GTEQF VS3_M 6.0 and1949
    JR_LTF VS2_M 6.0 whilebody1942
  and1949:
  endwhile1942:
    CALL MOTOR.STOP 'bc' 'true'
    ADDF VC_M 1.0 VC_M
  else1854_1:
  endif1854:
    WRITE32 ENDSUB_HSV_100:CALLSUB1952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_100
CALLSUB1952:
    JR_LTF VV_M 0.01178 or1954
    JR_NEQF VH_M 30.0 else1953_1
  or1954:
    MOVEF_F 5.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    JR endif1953
  else1953_1:
    MOVEF_F 4.0 VCOLOR5_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
  else1953_2:
  endif1953:
    JR_NEQF VCOLOR5_M 4.0 else1957_1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer1958
	DATA8 nos1958
	DATA8 busy1958
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer1958 nos1958
	JR_EQ8 0 nos1958 motornotbusy1958
  motorwaiting1958:
	OUTPUT_TEST layer1958 nos1958 busy1958
	JR_EQ8 busy1958 0 motornotbusy1958
	SLEEP
	JR motorwaiting1958
  motornotbusy1958:
    MOVEF_F 520.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1959:
    WRITE32 ENDSUB_PR:CALLSUB1960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB1960:
    CALL MOTOR.RESETCOUNT 'bc'
  while1962:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1966
    DATA8 flag1966
    DIVF F.1 2.0 tmpf1966
    CP_EQF 0.0 2.0 flag1966
    SELECTF flag1966 0.0 tmpf1966 F.0

    JR_GTEQF F.0 270.0 endwhile1962
  whilebody1962:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1967:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1971
    DATA8 flag1971
    DIVF F.1 2.0 tmpf1971
    CP_EQF 0.0 2.0 flag1971
    SELECTF flag1971 0.0 tmpf1971 F.0

    JR_LTF F.0 270.0 whilebody1962
  endwhile1962:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds1974
	MOVEF_32 500.0 milliseconds1974
	DATA32 timer1974
	TIMER_WAIT milliseconds1974 timer1974
	TIMER_READY timer1974
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB1976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB1976:
    CALL MOTOR.RESETCOUNT 'bc'
  while1978:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1982
    DATA8 flag1982
    DIVF F.1 2.0 tmpf1982
    CP_EQF 0.0 2.0 flag1982
    SELECTF flag1982 0.0 tmpf1982 F.0

    JR_GTEQF F.0 100.0 endwhile1978
  whilebody1978:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1983:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf1987
    DATA8 flag1987
    DIVF F.1 2.0 tmpf1987
    CP_EQF 0.0 2.0 flag1987
    SELECTF flag1987 0.0 tmpf1987 F.0

    JR_LTF F.0 100.0 whilebody1978
  endwhile1978:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1050.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf1989
    DATA8 flag1989
    DIVF 360.0 VL_M tmpf1989
    CP_EQF 0.0 VL_M flag1989
    SELECTF flag1989 0.0 tmpf1989 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while1992:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile1992
  whilebody1992:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB1994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB1994:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody1992
  endwhile1992:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB1997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB1997:
    WRITE32 ENDSUB_BELLAM3:CALLSUB1998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB1998:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB1999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB1999:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2001:
    CALL MOTOR.RESETCOUNT 'bc'
  while2003:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2007
    DATA8 flag2007
    DIVF F.1 2.0 tmpf2007
    CP_EQF 0.0 2.0 flag2007
    SELECTF flag2007 0.0 tmpf2007 F.0

    JR_GTEQF F.0 270.0 endwhile2003
  whilebody2003:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2008:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2012
    DATA8 flag2012
    DIVF F.1 2.0 tmpf2012
    CP_EQF 0.0 2.0 flag2012
    SELECTF flag2012 0.0 tmpf2012 F.0

    JR_LTF F.0 270.0 whilebody2003
  endwhile2003:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2015
	MOVEF_32 500.0 milliseconds2015
	DATA32 timer2015
	TIMER_WAIT milliseconds2015 timer2015
	TIMER_READY timer2015
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2017:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2018:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2019
	DATA8 nos2019
	DATA8 busy2019
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2019 nos2019
	JR_EQ8 0 nos2019 motornotbusy2019
  motorwaiting2019:
	OUTPUT_TEST layer2019 nos2019 busy2019
	JR_EQ8 busy2019 0 motornotbusy2019
	SLEEP
	JR motorwaiting2019
  motornotbusy2019:
    PROGRAM_STOP -1
  else1957_1:
  endif1957:
    JR_NEQF VCOLOR5_M 5.0 else2021_1
    WRITE32 ENDSUB_PR:CALLSUB2022 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2022:
    CALL MOTOR.RESETCOUNT 'bc'
  while2024:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2028
    DATA8 flag2028
    DIVF F.1 2.0 tmpf2028
    CP_EQF 0.0 2.0 flag2028
    SELECTF flag2028 0.0 tmpf2028 F.0

    JR_GTEQF F.0 500.0 endwhile2024
  whilebody2024:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2029:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2033
    DATA8 flag2033
    DIVF F.1 2.0 tmpf2033
    CP_EQF 0.0 2.0 flag2033
    SELECTF flag2033 0.0 tmpf2033 F.0

    JR_LTF F.0 500.0 whilebody2024
  endwhile2024:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds2036
	MOVEF_32 500.0 milliseconds2036
	DATA32 timer2036
	TIMER_WAIT milliseconds2036 timer2036
	TIMER_READY timer2036
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB2038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB2038:
    MOVEF_F 520.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf2039
    DATA8 flag2039
    DIVF 360.0 VL_M tmpf2039
    CP_EQF 0.0 VL_M flag2039
    SELECTF flag2039 0.0 tmpf2039 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2042:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2042
  whilebody2042:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2044:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2042
  endwhile2042:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB2047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB2047:
    JR_NEQF VC_M 1.0 else2048_1
    WRITE32 ENDSUB_BELLAM2:CALLSUB2049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM2
CALLSUB2049:
    MOVEF_F 300.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2050:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2052 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2052:
    CALL MOTOR.RESETCOUNT 'bc'
  while2054:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2058
    DATA8 flag2058
    DIVF F.1 2.0 tmpf2058
    CP_EQF 0.0 2.0 flag2058
    SELECTF flag2058 0.0 tmpf2058 F.0

    JR_GTEQF F.0 470.0 endwhile2054
  whilebody2054:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2059:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2063
    DATA8 flag2063
    DIVF F.1 2.0 tmpf2063
    CP_EQF 0.0 2.0 flag2063
    SELECTF flag2063 0.0 tmpf2063 F.0

    JR_LTF F.0 470.0 whilebody2054
  endwhile2054:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2066
	MOVEF_32 500.0 milliseconds2066
	DATA32 timer2066
	TIMER_WAIT milliseconds2066 timer2066
	TIMER_READY timer2066
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2068:
    MOVEF_F 520.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2069:
    WRITE32 ENDSUB_PR:CALLSUB2070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2070:
    CALL MOTOR.RESETCOUNT 'bc'
  while2072:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2076
    DATA8 flag2076
    DIVF F.1 2.0 tmpf2076
    CP_EQF 0.0 2.0 flag2076
    SELECTF flag2076 0.0 tmpf2076 F.0

    JR_GTEQF F.0 270.0 endwhile2072
  whilebody2072:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2077:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2081
    DATA8 flag2081
    DIVF F.1 2.0 tmpf2081
    CP_EQF 0.0 2.0 flag2081
    SELECTF flag2081 0.0 tmpf2081 F.0

    JR_LTF F.0 270.0 whilebody2072
  endwhile2072:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds2084
	MOVEF_32 500.0 milliseconds2084
	DATA32 timer2084
	TIMER_WAIT milliseconds2084 timer2084
	TIMER_READY timer2084
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPP:CALLSUB2086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPP
CALLSUB2086:
    MOVEF_F 1150.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf2087
    DATA8 flag2087
    DIVF 360.0 VL_M tmpf2087
    CP_EQF 0.0 VL_M flag2087
    SELECTF flag2087 0.0 tmpf2087 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2090:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2090
  whilebody2090:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2092:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2090
  endwhile2090:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB2095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB2095:
    WRITE32 ENDSUB_BELLAM3:CALLSUB2096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB2096:
    MOVEF_F 950.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2097:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2099:
    CALL MOTOR.RESETCOUNT 'bc'
  while2101:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2105
    DATA8 flag2105
    DIVF F.1 2.0 tmpf2105
    CP_EQF 0.0 2.0 flag2105
    SELECTF flag2105 0.0 tmpf2105 F.0

    JR_GTEQF F.0 270.0 endwhile2101
  whilebody2101:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2106:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2110
    DATA8 flag2110
    DIVF F.1 2.0 tmpf2110
    CP_EQF 0.0 2.0 flag2110
    SELECTF flag2110 0.0 tmpf2110 F.0

    JR_LTF F.0 270.0 whilebody2101
  endwhile2101:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2113
	MOVEF_32 500.0 milliseconds2113
	DATA32 timer2113
	TIMER_WAIT milliseconds2113 timer2113
	TIMER_READY timer2113
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2115:
    MOVEF_F 600.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2116:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2117
	DATA8 nos2117
	DATA8 busy2117
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2117 nos2117
	JR_EQ8 0 nos2117 motornotbusy2117
  motorwaiting2117:
	OUTPUT_TEST layer2117 nos2117 busy2117
	JR_EQ8 busy2117 0 motornotbusy2117
	SLEEP
	JR motorwaiting2117
  motornotbusy2117:
    PROGRAM_STOP -1
    JR endif2048
  else2048_1:
    WRITE32 ENDSUB_BELLAM3:CALLSUB2119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM3
CALLSUB2119:
    MOVEF_F 330.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2120:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_PR:CALLSUB2122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_PR
CALLSUB2122:
    CALL MOTOR.RESETCOUNT 'bc'
  while2124:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2128
    DATA8 flag2128
    DIVF F.1 2.0 tmpf2128
    CP_EQF 0.0 2.0 flag2128
    SELECTF flag2128 0.0 tmpf2128 F.0

    JR_GTEQF F.0 470.0 endwhile2124
  whilebody2124:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2129:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf2133
    DATA8 flag2133
    DIVF F.1 2.0 tmpf2133
    CP_EQF 0.0 2.0 flag2133
    SELECTF flag2133 0.0 tmpf2133 F.0

    JR_LTF F.0 470.0 whilebody2124
  endwhile2124:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds2136
	MOVEF_32 500.0 milliseconds2136
	DATA32 timer2136
	TIMER_WAIT milliseconds2136 timer2136
	TIMER_READY timer2136
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB2138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB2138:
    MOVEF_F 1200.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2139:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 250.0 'true'

	DATA8 layer2140
	DATA8 nos2140
	DATA8 busy2140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2140 nos2140
	JR_EQ8 0 nos2140 motornotbusy2140
  motorwaiting2140:
	OUTPUT_TEST layer2140 nos2140 busy2140
	JR_EQ8 busy2140 0 motornotbusy2140
	SLEEP
	JR motorwaiting2140
  motornotbusy2140:
    PROGRAM_STOP -1
  else2048_2:
  endif2048:
  else2021_1:
  endif2021:
    PROGRAM_STOP -1
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer2143
	DATA8 nos2143
	DATA8 busy2143
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2143 nos2143
	JR_EQ8 0 nos2143 motornotbusy2143
  motorwaiting2143:
	OUTPUT_TEST layer2143 nos2143 busy2143
	JR_EQ8 busy2143 0 motornotbusy2143
	SLEEP
	JR motorwaiting2143
  motornotbusy2143:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 210.0 'true'

	DATA8 layer2144
	DATA8 nos2144
	DATA8 busy2144
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2144 nos2144
	JR_EQ8 0 nos2144 motornotbusy2144
  motorwaiting2144:
	OUTPUT_TEST layer2144 nos2144 busy2144
	JR_EQ8 busy2144 0 motornotbusy2144
	SLEEP
	JR motorwaiting2144
  motornotbusy2144:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer2146
	DATA8 nos2146
	DATA8 busy2146
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2146 nos2146
	JR_EQ8 0 nos2146 motornotbusy2146
  motorwaiting2146:
	OUTPUT_TEST layer2146 nos2146 busy2146
	JR_EQ8 busy2146 0 motornotbusy2146
	SLEEP
	JR motorwaiting2146
  motornotbusy2146:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer2147
	DATA8 nos2147
	DATA8 busy2147
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer2147 nos2147
	JR_EQ8 0 nos2147 motornotbusy2147
  motorwaiting2147:
	OUTPUT_TEST layer2147 nos2147 busy2147
	JR_EQ8 busy2147 0 motornotbusy2147
	SLEEP
	JR motorwaiting2147
  motornotbusy2147:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1250.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf2149
    DATA8 flag2149
    DIVF 360.0 VL_M tmpf2149
    CP_EQF 0.0 VL_M flag2149
    SELECTF flag2149 0.0 tmpf2149 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while2152:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile2152
  whilebody2152:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB2154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB2154:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody2152
  endwhile2152:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 320.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB2157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB2157:
    ADDF VC_M 1.0 VC_M
    DATA32 tmp2159
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp2159
    JR_NEQ32 0 tmp2159 alreadylaunched2159
    OBJECT_START TVIDVIG
  alreadylaunched2159:
ENDTHREAD:
    RETURN
SUB_US:
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf6
    DATA8 flag6
    DIVF 360.0 VL_M tmpf6
    CP_EQF 0.0 VL_M flag6
    SELECTF flag6 0.0 tmpf6 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while9:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf13
    DATA8 flag13
    DIVF F.1 2.0 tmpf13
    CP_EQF 0.0 2.0 flag13
    SELECTF flag13 0.0 tmpf13 F.0

    JR_GTEQF F.0 VX_M endwhile9
  whilebody9:
    WRITE32 ENDSUB_A3:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB14:
    WRITE32 ENDSUB_A2:CALLSUB15 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB15:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB16:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf20
    DATA8 flag20
    DIVF F.1 2.0 tmpf20
    CP_EQF 0.0 2.0 flag20
    SELECTF flag20 0.0 tmpf20 F.0

    JR_LTF F.0 VX_M whilebody9
  endwhile9:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB22:
    WRITE32 ENDSUB_A2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB23:
  while24:
    JR_LTEQF VS3_M 7.0 and26
    JR_GTF VS2_M 7.0 or25
  and26:
    JR_GTEQF VS3_M 7.0 endwhile24
    JR_GTEQF VS2_M 7.0 endwhile24
  or25:
  whilebody24:
    WRITE32 ENDSUB_A3:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB27:
    WRITE32 ENDSUB_A2:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB28:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB29:
    JR_LTEQF VS3_M 7.0 and30
    JR_GTF VS2_M 7.0 whilebody24
  and30:
    JR_GTEQF VS3_M 7.0 and31
    JR_LTF VS2_M 7.0 whilebody24
  and31:
  endwhile24:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_US:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_US:
SUB_PL:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer33
	DATA8 nos33
	DATA8 busy33
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer33 nos33
	JR_EQ8 0 nos33 motornotbusy33
  motorwaiting33:
	OUTPUT_TEST layer33 nos33 busy33
	JR_EQ8 busy33 0 motornotbusy33
	SLEEP
	JR motorwaiting33
  motornotbusy33:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB35:
    WRITE32 ENDSUB_A2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB36:
  while37:
    JR_LTEQF VS2_M 5.0 endwhile37
  whilebody37:
    WRITE32 ENDSUB_A3:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB38:
    WRITE32 ENDSUB_A2:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB39:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 5.0 whilebody37
  endwhile37:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB42:
    WRITE32 ENDSUB_A2:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB43:
  while44:
    JR_GTEQF VS2_M 15.0 endwhile44
  whilebody44:
    WRITE32 ENDSUB_A3:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB45:
    WRITE32 ENDSUB_A2:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB46:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody44
  endwhile44:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PL:
SUB_PR:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 80.0 'true'

	DATA8 layer49
	DATA8 nos49
	DATA8 busy49
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer49 nos49
	JR_EQ8 0 nos49 motornotbusy49
  motorwaiting49:
	OUTPUT_TEST layer49 nos49 busy49
	JR_EQ8 busy49 0 motornotbusy49
	SLEEP
	JR motorwaiting49
  motornotbusy49:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB51:
    WRITE32 ENDSUB_A2:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB52:
  while53:
    JR_LTEQF VS3_M 6.0 endwhile53
  whilebody53:
    WRITE32 ENDSUB_A3:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB54:
    WRITE32 ENDSUB_A2:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB55:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody53
  endwhile53:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB58:
    WRITE32 ENDSUB_A2:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB59:
  while60:
    JR_GTEQF VS3_M 15.0 endwhile60
  whilebody60:
    WRITE32 ENDSUB_A3:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB61:
    WRITE32 ENDSUB_A2:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB62:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody60
  endwhile60:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_PR:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_PR:
SUB_NPL:
    WRITE32 ENDSUB_A2:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB65:
    WRITE32 ENDSUB_A3:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB66:
  while67:
    JR_LTEQF VS3_M 6.0 and69
    JR_GTF VS2_M 6.0 or68
  and69:
    JR_GTEQF VS3_M 6.0 and70
    JR_GTF VS2_M 6.0 or68
  and70:
    JR_LTEQF VS3_M 6.0 endwhile67
    JR_GTEQF VS2_M 6.0 endwhile67
  or68:
  whilebody67:
    WRITE32 ENDSUB_A2:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB71:
    WRITE32 ENDSUB_A3:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB72:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 6.0 and74
    JR_GTF VS2_M 6.0 whilebody67
  and74:
    JR_GTEQF VS3_M 6.0 and75
    JR_GTF VS2_M 6.0 whilebody67
  and75:
    JR_LTEQF VS3_M 6.0 and76
    JR_LTF VS2_M 6.0 whilebody67
  and76:
  endwhile67:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer78
	DATA8 nos78
	DATA8 busy78
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer78 nos78
	JR_EQ8 0 nos78 motornotbusy78
  motorwaiting78:
	OUTPUT_TEST layer78 nos78 busy78
	JR_EQ8 busy78 0 motornotbusy78
	SLEEP
	JR motorwaiting78
  motornotbusy78:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 90.0 'true'

	DATA8 layer80
	DATA8 nos80
	DATA8 busy80
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer80 nos80
	JR_EQ8 0 nos80 motornotbusy80
  motorwaiting80:
	OUTPUT_TEST layer80 nos80 busy80
	JR_EQ8 busy80 0 motornotbusy80
	SLEEP
	JR motorwaiting80
  motornotbusy80:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB82:
    WRITE32 ENDSUB_A2:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB83:
  while84:
    JR_LTEQF VS2_M 6.0 endwhile84
  whilebody84:
    WRITE32 ENDSUB_A3:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB85:
    WRITE32 ENDSUB_A2:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB86:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 6.0 whilebody84
  endwhile84:
    WRITE32 ENDSUB_A3:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB88:
    WRITE32 ENDSUB_A2:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB89:
  while90:
    JR_GTEQF VS2_M 60.0 endwhile90
  whilebody90:
    WRITE32 ENDSUB_A3:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB91:
    WRITE32 ENDSUB_A2:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB92:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 60.0 whilebody90
  endwhile90:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPL:
SUB_NPP:
    WRITE32 ENDSUB_A2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB95:
    WRITE32 ENDSUB_A3:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB96:
  while97:
    JR_LTEQF VS3_M 6.0 and99
    JR_GTF VS2_M 6.0 or98
  and99:
    JR_GTEQF VS3_M 6.0 and100
    JR_GTF VS2_M 6.0 or98
  and100:
    JR_LTEQF VS3_M 6.0 endwhile97
    JR_GTEQF VS2_M 6.0 endwhile97
  or98:
  whilebody97:
    WRITE32 ENDSUB_A2:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB101:
    WRITE32 ENDSUB_A3:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB102:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 6.0 and104
    JR_GTF VS2_M 6.0 whilebody97
  and104:
    JR_GTEQF VS3_M 6.0 and105
    JR_GTF VS2_M 6.0 whilebody97
  and105:
    JR_LTEQF VS3_M 6.0 and106
    JR_LTF VS2_M 6.0 whilebody97
  and106:
  endwhile97:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 90.0 'true'

	DATA8 layer108
	DATA8 nos108
	DATA8 busy108
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer108 nos108
	JR_EQ8 0 nos108 motornotbusy108
  motorwaiting108:
	OUTPUT_TEST layer108 nos108 busy108
	JR_EQ8 busy108 0 motornotbusy108
	SLEEP
	JR motorwaiting108
  motornotbusy108:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 90.0 'true'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB112:
    WRITE32 ENDSUB_A2:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB113:
  while114:
    JR_LTEQF VS3_M 6.0 endwhile114
  whilebody114:
    WRITE32 ENDSUB_A3:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB115:
    WRITE32 ENDSUB_A2:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB116:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody114
  endwhile114:
    WRITE32 ENDSUB_A3:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB118:
    WRITE32 ENDSUB_A2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB119:
  while120:
    JR_GTEQF VS3_M 60.0 endwhile120
  whilebody120:
    WRITE32 ENDSUB_A3:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB121:
    WRITE32 ENDSUB_A2:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB122:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody120
  endwhile120:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_NPP:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_NPP:
SUB_REDL:
    DATA32 tmp125
    CALL GETANDINC32 RUNCOUNTER_ZADVIG 1  RUNCOUNTER_ZADVIG tmp125
    JR_NEQ32 0 tmp125 alreadylaunched125
    OBJECT_START TZADVIG
  alreadylaunched125:
    WRITE32 ENDSUB_A3:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB126:
    WRITE32 ENDSUB_A2:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB127:
  while128:
    JR_LTEQF VS3_M 6.0 and130
    JR_GTF VS2_M 6.0 or129
  and130:
    JR_GTEQF VS3_M 6.0 and131
    JR_GTF VS2_M 6.0 or129
  and131:
    JR_LTEQF VS3_M 6.0 endwhile128
    JR_GTEQF VS2_M 6.0 endwhile128
  or129:
  whilebody128:
    WRITE32 ENDSUB_A3:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB132:
    WRITE32 ENDSUB_A2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB133:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB134:
    JR_LTEQF VS3_M 6.0 and135
    JR_GTF VS2_M 6.0 whilebody128
  and135:
    JR_GTEQF VS3_M 6.0 and136
    JR_GTF VS2_M 6.0 whilebody128
  and136:
    JR_LTEQF VS3_M 6.0 and137
    JR_LTF VS2_M 6.0 whilebody128
  and137:
  endwhile128:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer140
	DATA8 nos140
	DATA8 busy140
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer140 nos140
	JR_EQ8 0 nos140 motornotbusy140
  motorwaiting140:
	OUTPUT_TEST layer140 nos140 busy140
	JR_EQ8 busy140 0 motornotbusy140
	SLEEP
	JR motorwaiting140
  motornotbusy140:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
    WRITE32 ENDSUB_A2:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB143:
    WRITE32 ENDSUB_A3:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB144:
  while145:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 400.0 endwhile145
  whilebody145:
    WRITE32 ENDSUB_A2:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB147:
    WRITE32 ENDSUB_A3:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB148:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB149:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 400.0 whilebody145
  endwhile145:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds153
	MOVEF_32 500.0 milliseconds153
	DATA32 timer153
	TIMER_WAIT milliseconds153 timer153
	TIMER_READY timer153
    CALL MOTOR.STOP 'd' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 150.0 'true'

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer156
	DATA8 nos156
	DATA8 busy156
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer156 nos156
	JR_EQ8 0 nos156 motornotbusy156
  motorwaiting156:
	OUTPUT_TEST layer156 nos156 busy156
	JR_EQ8 busy156 0 motornotbusy156
	SLEEP
	JR motorwaiting156
  motornotbusy156:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 300.0 'true'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB159:
    WRITE32 ENDSUB_A2:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB160:
  while161:
    JR_LTEQF VS3_M 5.0 endwhile161
  whilebody161:
    WRITE32 ENDSUB_A3:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB162:
    WRITE32 ENDSUB_A2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB163:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 5.0 whilebody161
  endwhile161:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB166:
    WRITE32 ENDSUB_A2:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB167:
  while168:
    JR_GTEQF VS3_M 15.0 endwhile168
  whilebody168:
    WRITE32 ENDSUB_A3:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB169:
    WRITE32 ENDSUB_A2:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB170:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody168
  endwhile168:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds173
	MOVEF_32 100.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    CALL MOTOR.RESETCOUNT 'bc'
  while175:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf179
    DATA8 flag179
    DIVF F.1 2.0 tmpf179
    CP_EQF 0.0 2.0 flag179
    SELECTF flag179 0.0 tmpf179 F.0

    JR_GTEQF F.0 100.0 endwhile175
  whilebody175:
    WRITE32 ENDSUB_A3:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB180:
    WRITE32 ENDSUB_A2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB181:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB182:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf186
    DATA8 flag186
    DIVF F.1 2.0 tmpf186
    CP_EQF 0.0 2.0 flag186
    SELECTF flag186 0.0 tmpf186 F.0

    JR_LTF F.0 100.0 whilebody175
  endwhile175:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB188:
    WRITE32 ENDSUB_A2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB189:
  while190:
    JR_LTEQF VS3_M 6.0 and192
    JR_GTF VS2_M 6.0 or191
  and192:
    JR_GTEQF VS3_M 6.0 endwhile190
    JR_GTEQF VS2_M 6.0 endwhile190
  or191:
  whilebody190:
    WRITE32 ENDSUB_A3:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB193:
    WRITE32 ENDSUB_A2:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB194:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB195:
    JR_LTEQF VS3_M 6.0 and196
    JR_GTF VS2_M 6.0 whilebody190
  and196:
    JR_GTEQF VS3_M 6.0 and197
    JR_LTF VS2_M 6.0 whilebody190
  and197:
  endwhile190:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_REDL:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_REDL:
SUB_BELLAM:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer199
	DATA8 nos199
	DATA8 busy199
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer199 nos199
	JR_EQ8 0 nos199 motornotbusy199
  motorwaiting199:
	OUTPUT_TEST layer199 nos199 busy199
	JR_EQ8 busy199 0 motornotbusy199
	SLEEP
	JR motorwaiting199
  motornotbusy199:
    CALL MOTOR.RESETCOUNT 'bc'
  while201:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf205
    DATA8 flag205
    DIVF F.1 2.0 tmpf205
    CP_EQF 0.0 2.0 flag205
    SELECTF flag205 0.0 tmpf205 F.0

    JR_GTEQF F.0 100.0 endwhile201
  whilebody201:
    WRITE32 ENDSUB_A3:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB206:
    WRITE32 ENDSUB_A2:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB207:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB208:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf212
    DATA8 flag212
    DIVF F.1 2.0 tmpf212
    CP_EQF 0.0 2.0 flag212
    SELECTF flag212 0.0 tmpf212 F.0

    JR_LTF F.0 100.0 whilebody201
  endwhile201:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 70.0 'true'

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 125.0 'true'

	DATA8 layer214
	DATA8 nos214
	DATA8 busy214
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer214 nos214
	JR_EQ8 0 nos214 motornotbusy214
  motorwaiting214:
	OUTPUT_TEST layer214 nos214 busy214
	JR_EQ8 busy214 0 motornotbusy214
	SLEEP
	JR motorwaiting214
  motornotbusy214:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds216
	MOVEF_32 500.0 milliseconds216
	DATA32 timer216
	TIMER_WAIT milliseconds216 timer216
	TIMER_READY timer216
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 125.0 'true'

	DATA8 layer218
	DATA8 nos218
	DATA8 busy218
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer218 nos218
	JR_EQ8 0 nos218 motornotbusy218
  motorwaiting218:
	OUTPUT_TEST layer218 nos218 busy218
	JR_EQ8 busy218 0 motornotbusy218
	SLEEP
	JR motorwaiting218
  motornotbusy218:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 0.0 70.0 'true'

	DATA8 layer219
	DATA8 nos219
	DATA8 busy219
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer219 nos219
	JR_EQ8 0 nos219 motornotbusy219
  motorwaiting219:
	OUTPUT_TEST layer219 nos219 busy219
	JR_EQ8 busy219 0 motornotbusy219
	SLEEP
	JR motorwaiting219
  motornotbusy219:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 60.0 'true'

	DATA8 layer220
	DATA8 nos220
	DATA8 busy220
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer220 nos220
	JR_EQ8 0 nos220 motornotbusy220
  motorwaiting220:
	OUTPUT_TEST layer220 nos220 busy220
	JR_EQ8 busy220 0 motornotbusy220
	SLEEP
	JR motorwaiting220
  motornotbusy220:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 230.0 'true'

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    WRITE32 ENDSUB_A2:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB222:
    WRITE32 ENDSUB_A3:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB223:
  while224:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 55.0 endwhile224
  whilebody224:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 55.0 whilebody224
  endwhile224:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 40.0 50.0 'true'

	DATA8 layer229
	DATA8 nos229
	DATA8 busy229
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer229 nos229
	JR_EQ8 0 nos229 motornotbusy229
  motorwaiting229:
	OUTPUT_TEST layer229 nos229 busy229
	JR_EQ8 busy229 0 motornotbusy229
	SLEEP
	JR motorwaiting229
  motornotbusy229:
    CALL MOTOR.RESETCOUNT 'bc'
  while231:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf235
    DATA8 flag235
    DIVF F.1 2.0 tmpf235
    CP_EQF 0.0 2.0 flag235
    SELECTF flag235 0.0 tmpf235 F.0

    JR_GTEQF F.0 475.0 endwhile231
  whilebody231:
    WRITE32 ENDSUB_A3:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB236:
    WRITE32 ENDSUB_A2:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB237:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB238:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf242
    DATA8 flag242
    DIVF F.1 2.0 tmpf242
    CP_EQF 0.0 2.0 flag242
    SELECTF flag242 0.0 tmpf242 F.0

    JR_LTF F.0 475.0 whilebody231
  endwhile231:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds245
	MOVEF_32 500.0 milliseconds245
	DATA32 timer245
	TIMER_WAIT milliseconds245 timer245
	TIMER_READY timer245
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' -50.0 -50.0 160.0 'true'

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    WRITE32 ENDSUB_A3:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB248:
    WRITE32 ENDSUB_A2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB249:
  while250:
    JR_LTEQF VS3_M 6.0 endwhile250
  whilebody250:
    WRITE32 ENDSUB_A3:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB251:
    WRITE32 ENDSUB_A2:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB252:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody250
  endwhile250:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB255:
    WRITE32 ENDSUB_A2:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB256:
  while257:
    JR_GTEQF VS3_M 15.0 endwhile257
  whilebody257:
    WRITE32 ENDSUB_A3:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB258:
    WRITE32 ENDSUB_A2:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB259:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody257
  endwhile257:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while263:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 200.0 endwhile263
  whilebody263:
    MOVEF_F 40.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB265:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 200.0 whilebody263
  endwhile263:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB268:
    WRITE32 ENDSUB_A2:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB269:
    MOVEF_F 1.0 VI_M
  for270:
    JR_GTF VI_M 1.0 endfor270
  forbody270:
    WRITE32 ENDSUB_A3:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB271:
    WRITE32 ENDSUB_A2:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB272:
  while273:
    JR_LTEQF VS3_M 10.0 and275
    JR_GTF VS2_M 10.0 or274
  and275:
    JR_GTEQF VS3_M 10.0 endwhile273
    JR_GTEQF VS2_M 10.0 endwhile273
  or274:
  whilebody273:
    WRITE32 ENDSUB_A3:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB276:
    WRITE32 ENDSUB_A2:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB277:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB278:
    JR_LTEQF VS3_M 10.0 and279
    JR_GTF VS2_M 10.0 whilebody273
  and279:
    JR_GTEQF VS3_M 10.0 and280
    JR_LTF VS2_M 10.0 whilebody273
  and280:
  endwhile273:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody270
  endfor270:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB286:
    WRITE32 ENDSUB_A2:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB287:
    MOVEF_F 80.0 VJ_M
  while288:
    JR_LTEQF VS3_M 6.0 endwhile288
  whilebody288:
    WRITE32 ENDSUB_A3:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB289:
    WRITE32 ENDSUB_A2:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB290:
    JR_LTEQF VJ_M 30.0 else291_1
    SUBF VJ_M 0.1 VJ_M
  else291_1:
  endif291:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 6.0 whilebody288
  endwhile288:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB295:
    WRITE32 ENDSUB_A2:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB296:
    MOVEF_F 80.0 VJ_M
  while297:
    JR_GTEQF VS3_M 15.0 endwhile297
  whilebody297:
    WRITE32 ENDSUB_A3:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB298:
    WRITE32 ENDSUB_A2:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB299:
    JR_LTEQF VJ_M 30.0 else300_1
    SUBF VJ_M 0.1 VJ_M
  else300_1:
  endif300:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody297
  endwhile297:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while305:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf309
    DATA8 flag309
    DIVF F.1 2.0 tmpf309
    CP_EQF 0.0 2.0 flag309
    SELECTF flag309 0.0 tmpf309 F.0

    JR_GTEQF F.0 50.0 endwhile305
  whilebody305:
    WRITE32 ENDSUB_A3:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB310:
    WRITE32 ENDSUB_A2:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB311:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB312:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf316
    DATA8 flag316
    DIVF F.1 2.0 tmpf316
    CP_EQF 0.0 2.0 flag316
    SELECTF flag316 0.0 tmpf316 F.0

    JR_LTF F.0 50.0 whilebody305
  endwhile305:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    CALL MOTOR.START 'd' 50.0
    DATA32 milliseconds320
	MOVEF_32 500.0 milliseconds320
	DATA32 timer320
	TIMER_WAIT milliseconds320 timer320
	TIMER_READY timer320
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB322:
    WRITE32 ENDSUB_A3:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB323:
  while324:
    JR_LTEQF VS3_M 6.0 and326
    JR_GTF VS2_M 6.0 or325
  and326:
    JR_GTEQF VS3_M 6.0 and327
    JR_GTF VS2_M 6.0 or325
  and327:
    JR_LTEQF VS3_M 6.0 endwhile324
    JR_GTEQF VS2_M 6.0 endwhile324
  or325:
  whilebody324:
    WRITE32 ENDSUB_A2:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB328:
    WRITE32 ENDSUB_A3:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB329:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    JR_LTEQF VS3_M 6.0 and331
    JR_GTF VS2_M 6.0 whilebody324
  and331:
    JR_GTEQF VS3_M 6.0 and332
    JR_GTF VS2_M 6.0 whilebody324
  and332:
    JR_LTEQF VS3_M 6.0 and333
    JR_LTF VS2_M 6.0 whilebody324
  and333:
  endwhile324:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer335
	DATA8 nos335
	DATA8 busy335
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer335 nos335
	JR_EQ8 0 nos335 motornotbusy335
  motorwaiting335:
	OUTPUT_TEST layer335 nos335 busy335
	JR_EQ8 busy335 0 motornotbusy335
	SLEEP
	JR motorwaiting335
  motornotbusy335:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 40.0 -40.0 90.0 'true'

	DATA8 layer337
	DATA8 nos337
	DATA8 busy337
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer337 nos337
	JR_EQ8 0 nos337 motornotbusy337
  motorwaiting337:
	OUTPUT_TEST layer337 nos337 busy337
	JR_EQ8 busy337 0 motornotbusy337
	SLEEP
	JR motorwaiting337
  motornotbusy337:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB339:
    WRITE32 ENDSUB_A2:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB340:
  while341:
    JR_LTEQF VS3_M 6.0 endwhile341
  whilebody341:
    WRITE32 ENDSUB_A3:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB342:
    WRITE32 ENDSUB_A2:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB343:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody341
  endwhile341:
    WRITE32 ENDSUB_A3:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB345:
    WRITE32 ENDSUB_A2:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB346:
  while347:
    JR_GTEQF VS3_M 60.0 endwhile347
  whilebody347:
    WRITE32 ENDSUB_A3:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB348:
    WRITE32 ENDSUB_A2:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB349:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 60.0 whilebody347
  endwhile347:
    CALL MOTOR.RESETCOUNT 'bc'
  while352:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 100.0 endwhile352
  whilebody352:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB354:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 100.0 whilebody352
  endwhile352:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB357:
    WRITE32 ENDSUB_A3:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB358:
  while359:
    JR_LTEQF VS3_M 6.0 and361
    JR_GTF VS2_M 6.0 or360
  and361:
    JR_LTEQF VS3_M 6.0 and362
    JR_LTF VS2_M 6.0 or360
  and362:
    JR_GTEQF VS3_M 6.0 endwhile359
    JR_LTEQF VS2_M 6.0 endwhile359
  or360:
  whilebody359:
    WRITE32 ENDSUB_A3:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB363:
    WRITE32 ENDSUB_A2:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB364:
    MOVEF_F 80.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB365:
    JR_LTEQF VS3_M 6.0 and366
    JR_GTF VS2_M 6.0 whilebody359
  and366:
    JR_LTEQF VS3_M 6.0 and367
    JR_LTF VS2_M 6.0 whilebody359
  and367:
    JR_GTEQF VS3_M 6.0 and368
    JR_GTF VS2_M 6.0 whilebody359
  and368:
  endwhile359:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 70.0 'true'

	DATA8 layer370
	DATA8 nos370
	DATA8 busy370
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer370 nos370
	JR_EQ8 0 nos370 motornotbusy370
  motorwaiting370:
	OUTPUT_TEST layer370 nos370 busy370
	JR_EQ8 busy370 0 motornotbusy370
	SLEEP
	JR motorwaiting370
  motornotbusy370:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB372:
    WRITE32 ENDSUB_A2:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB373:
  while374:
    JR_LTEQF VS3_M 6.0 endwhile374
  whilebody374:
    WRITE32 ENDSUB_A3:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB375:
    WRITE32 ENDSUB_A2:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB376:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody374
  endwhile374:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB379:
    WRITE32 ENDSUB_A2:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB380:
  while381:
    JR_GTEQF VS3_M 15.0 endwhile381
  whilebody381:
    WRITE32 ENDSUB_A3:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB382:
    WRITE32 ENDSUB_A2:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB383:
    CALL MOTOR.STARTSYNC 'bc' 20.0 -20.0
    JR_LTF VS3_M 15.0 whilebody381
  endwhile381:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds386
	MOVEF_32 100.0 milliseconds386
	DATA32 timer386
	TIMER_WAIT milliseconds386 timer386
	TIMER_READY timer386
    WRITE32 ENDSUB_A3:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB387:
    WRITE32 ENDSUB_A2:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB388:
  while389:
    JR_LTEQF VS2_M 70.0 endwhile389
  whilebody389:
    WRITE32 ENDSUB_A3:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB390:
    WRITE32 ENDSUB_A2:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB391:
    CALL MOTOR.STARTSYNC 'bc' 20.0 0.0
    JR_GTF VS2_M 70.0 whilebody389
  endwhile389:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds394
	MOVEF_32 100.0 milliseconds394
	DATA32 timer394
	TIMER_WAIT milliseconds394 timer394
	TIMER_READY timer394
RETSUB_BELLAM:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM:
SUB_BELLAM2:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer395
	DATA8 nos395
	DATA8 busy395
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer395 nos395
	JR_EQ8 0 nos395 motornotbusy395
  motorwaiting395:
	OUTPUT_TEST layer395 nos395 busy395
	JR_EQ8 busy395 0 motornotbusy395
	SLEEP
	JR motorwaiting395
  motornotbusy395:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 230.0 'true'

	DATA8 layer396
	DATA8 nos396
	DATA8 busy396
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer396 nos396
	JR_EQ8 0 nos396 motornotbusy396
  motorwaiting396:
	OUTPUT_TEST layer396 nos396 busy396
	JR_EQ8 busy396 0 motornotbusy396
	SLEEP
	JR motorwaiting396
  motornotbusy396:
    WRITE32 ENDSUB_A2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB397:
    WRITE32 ENDSUB_A3:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB398:
  while399:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile399
  whilebody399:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody399
  endwhile399:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB404:
    WRITE32 ENDSUB_A3:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB405:
  while406:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf410
    DATA8 flag410
    DIVF F.1 2.0 tmpf410
    CP_EQF 0.0 2.0 flag410
    SELECTF flag410 0.0 tmpf410 F.0

    JR_GTEQF F.0 80.0 endwhile406
  whilebody406:
    WRITE32 ENDSUB_A3:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB411:
    WRITE32 ENDSUB_A2:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB412:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB413:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf417
    DATA8 flag417
    DIVF F.1 2.0 tmpf417
    CP_EQF 0.0 2.0 flag417
    SELECTF flag417 0.0 tmpf417 F.0

    JR_LTF F.0 80.0 whilebody406
  endwhile406:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB419:
    WRITE32 ENDSUB_A2:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB420:
  while421:
    JR_LTEQF VS3_M 10.0 and423
    JR_GTF VS2_M 10.0 or422
  and423:
    JR_GTEQF VS3_M 10.0 endwhile421
    JR_GTEQF VS2_M 10.0 endwhile421
  or422:
  whilebody421:
    WRITE32 ENDSUB_A3:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB424:
    WRITE32 ENDSUB_A2:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB425:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB426:
    JR_LTEQF VS3_M 10.0 and427
    JR_GTF VS2_M 10.0 whilebody421
  and427:
    JR_GTEQF VS3_M 10.0 and428
    JR_LTF VS2_M 10.0 whilebody421
  and428:
  endwhile421:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer430
	DATA8 nos430
	DATA8 busy430
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer430 nos430
	JR_EQ8 0 nos430 motornotbusy430
  motorwaiting430:
	OUTPUT_TEST layer430 nos430 busy430
	JR_EQ8 busy430 0 motornotbusy430
	SLEEP
	JR motorwaiting430
  motornotbusy430:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB432:
    WRITE32 ENDSUB_A2:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB433:
  while434:
    JR_LTEQF VS3_M 6.0 endwhile434
  whilebody434:
    WRITE32 ENDSUB_A3:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB435:
    WRITE32 ENDSUB_A2:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB436:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody434
  endwhile434:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB439:
    WRITE32 ENDSUB_A2:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB440:
  while441:
    JR_GTEQF VS3_M 15.0 endwhile441
  whilebody441:
    WRITE32 ENDSUB_A3:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB442:
    WRITE32 ENDSUB_A2:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB443:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody441
  endwhile441:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB446:
    WRITE32 ENDSUB_A2:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB447:
    MOVEF_F 1.0 VI_M
  for448:
    JR_GTF VI_M 2.0 endfor448
  forbody448:
    WRITE32 ENDSUB_A3:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB449:
    WRITE32 ENDSUB_A2:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB450:
  while451:
    JR_LTEQF VS3_M 10.0 and453
    JR_GTF VS2_M 10.0 or452
  and453:
    JR_GTEQF VS3_M 10.0 endwhile451
    JR_GTEQF VS2_M 10.0 endwhile451
  or452:
  whilebody451:
    WRITE32 ENDSUB_A3:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB454:
    WRITE32 ENDSUB_A2:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB455:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB456:
    JR_LTEQF VS3_M 10.0 and457
    JR_GTF VS2_M 10.0 whilebody451
  and457:
    JR_GTEQF VS3_M 10.0 and458
    JR_LTF VS2_M 10.0 whilebody451
  and458:
  endwhile451:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer459
	DATA8 nos459
	DATA8 busy459
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer459 nos459
	JR_EQ8 0 nos459 motornotbusy459
  motorwaiting459:
	OUTPUT_TEST layer459 nos459 busy459
	JR_EQ8 busy459 0 motornotbusy459
	SLEEP
	JR motorwaiting459
  motornotbusy459:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 2.0 forbody448
  endfor448:
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 20.0 'true'

	DATA8 layer461
	DATA8 nos461
	DATA8 busy461
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer461 nos461
	JR_EQ8 0 nos461 motornotbusy461
  motorwaiting461:
	OUTPUT_TEST layer461 nos461 busy461
	JR_EQ8 busy461 0 motornotbusy461
	SLEEP
	JR motorwaiting461
  motornotbusy461:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB463:
    WRITE32 ENDSUB_A2:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB464:
    MOVEF_F 80.0 VJ_M
  while465:
    JR_LTEQF VS3_M 6.0 endwhile465
  whilebody465:
    WRITE32 ENDSUB_A3:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB466:
    WRITE32 ENDSUB_A2:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB467:
    JR_LTEQF VJ_M 30.0 else468_1
    SUBF VJ_M 0.1 VJ_M
  else468_1:
  endif468:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_GTF VS3_M 6.0 whilebody465
  endwhile465:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB472:
    WRITE32 ENDSUB_A2:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB473:
    MOVEF_F 80.0 VJ_M
  while474:
    JR_GTEQF VS3_M 15.0 endwhile474
  whilebody474:
    WRITE32 ENDSUB_A3:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB475:
    WRITE32 ENDSUB_A2:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB476:
    JR_LTEQF VJ_M 30.0 else477_1
    SUBF VJ_M 0.1 VJ_M
  else477_1:
  endif477:
    CALL MOTOR.STARTSYNC 'bc' 40.0 -40.0
    JR_LTF VS3_M 15.0 whilebody474
  endwhile474:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while482:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf486
    DATA8 flag486
    DIVF F.1 2.0 tmpf486
    CP_EQF 0.0 2.0 flag486
    SELECTF flag486 0.0 tmpf486 F.0

    JR_GTEQF F.0 50.0 endwhile482
  whilebody482:
    WRITE32 ENDSUB_A3:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB487:
    WRITE32 ENDSUB_A2:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB488:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB489:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf493
    DATA8 flag493
    DIVF F.1 2.0 tmpf493
    CP_EQF 0.0 2.0 flag493
    SELECTF flag493 0.0 tmpf493 F.0

    JR_LTF F.0 50.0 whilebody482
  endwhile482:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer495
	DATA8 nos495
	DATA8 busy495
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer495 nos495
	JR_EQ8 0 nos495 motornotbusy495
  motorwaiting495:
	OUTPUT_TEST layer495 nos495 busy495
	JR_EQ8 busy495 0 motornotbusy495
	SLEEP
	JR motorwaiting495
  motornotbusy495:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds497
	MOVEF_32 500.0 milliseconds497
	DATA32 timer497
	TIMER_WAIT milliseconds497 timer497
	TIMER_READY timer497
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while500:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf504
    DATA8 flag504
    DIVF F.1 2.0 tmpf504
    CP_EQF 0.0 2.0 flag504
    SELECTF flag504 0.0 tmpf504 F.0

    JR_LTEQF F.0 -200.0 endwhile500
  whilebody500:
    CALL MOTOR.STARTPOWER 'bc' -60.0
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf509
    DATA8 flag509
    DIVF F.1 2.0 tmpf509
    CP_EQF 0.0 2.0 flag509
    SELECTF flag509 0.0 tmpf509 F.0

    JR_GTF F.0 -200.0 whilebody500
  endwhile500:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 210.0 'true'

	DATA8 layer511
	DATA8 nos511
	DATA8 busy511
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer511 nos511
	JR_EQ8 0 nos511 motornotbusy511
  motorwaiting511:
	OUTPUT_TEST layer511 nos511 busy511
	JR_EQ8 busy511 0 motornotbusy511
	SLEEP
	JR motorwaiting511
  motornotbusy511:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB513:
    WRITE32 ENDSUB_A3:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB514:
  while515:
    JR_LTEQF VS3_M 6.0 and517
    JR_GTF VS2_M 6.0 or516
  and517:
    JR_LTEQF VS3_M 6.0 and518
    JR_LTF VS2_M 6.0 or516
  and518:
    JR_GTEQF VS3_M 6.0 endwhile515
    JR_LTEQF VS2_M 6.0 endwhile515
  or516:
  whilebody515:
    WRITE32 ENDSUB_A2:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB519:
    WRITE32 ENDSUB_A3:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB520:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 6.0 and522
    JR_GTF VS2_M 6.0 whilebody515
  and522:
    JR_LTEQF VS3_M 6.0 and523
    JR_LTF VS2_M 6.0 whilebody515
  and523:
    JR_GTEQF VS3_M 6.0 and524
    JR_GTF VS2_M 6.0 whilebody515
  and524:
  endwhile515:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    WRITE32 ENDSUB_A3:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB527:
    WRITE32 ENDSUB_A2:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB528:
  while529:
    JR_LTEQF VS3_M 6.0 endwhile529
  whilebody529:
    WRITE32 ENDSUB_A3:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB530:
    WRITE32 ENDSUB_A2:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB531:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody529
  endwhile529:
    WRITE32 ENDSUB_A3:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB533:
    WRITE32 ENDSUB_A2:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB534:
  while535:
    JR_GTEQF VS3_M 15.0 endwhile535
  whilebody535:
    WRITE32 ENDSUB_A3:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB536:
    WRITE32 ENDSUB_A2:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB537:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody535
  endwhile535:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM2:
SUB_BELLAM3:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer540
	DATA8 nos540
	DATA8 busy540
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer540 nos540
	JR_EQ8 0 nos540 motornotbusy540
  motorwaiting540:
	OUTPUT_TEST layer540 nos540 busy540
	JR_EQ8 busy540 0 motornotbusy540
	SLEEP
	JR motorwaiting540
  motornotbusy540:
    CALL MOTOR.SCHEDULESYNC 'bc' -30.0 30.0 230.0 'true'

	DATA8 layer541
	DATA8 nos541
	DATA8 busy541
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer541 nos541
	JR_EQ8 0 nos541 motornotbusy541
  motorwaiting541:
	OUTPUT_TEST layer541 nos541 busy541
	JR_EQ8 busy541 0 motornotbusy541
	SLEEP
	JR motorwaiting541
  motornotbusy541:
    WRITE32 ENDSUB_A2:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB542:
    WRITE32 ENDSUB_A3:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB543:
  while544:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 60.0 endwhile544
  whilebody544:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 60.0 whilebody544
  endwhile544:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A2:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB549:
    WRITE32 ENDSUB_A3:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB550:
  while551:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf555
    DATA8 flag555
    DIVF F.1 2.0 tmpf555
    CP_EQF 0.0 2.0 flag555
    SELECTF flag555 0.0 tmpf555 F.0

    JR_GTEQF F.0 80.0 endwhile551
  whilebody551:
    WRITE32 ENDSUB_A3:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB556:
    WRITE32 ENDSUB_A2:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB557:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB558:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf562
    DATA8 flag562
    DIVF F.1 2.0 tmpf562
    CP_EQF 0.0 2.0 flag562
    SELECTF flag562 0.0 tmpf562 F.0

    JR_LTF F.0 80.0 whilebody551
  endwhile551:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB564:
    WRITE32 ENDSUB_A2:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB565:
  while566:
    JR_LTEQF VS3_M 10.0 and568
    JR_GTF VS2_M 10.0 or567
  and568:
    JR_GTEQF VS3_M 10.0 endwhile566
    JR_GTEQF VS2_M 10.0 endwhile566
  or567:
  whilebody566:
    WRITE32 ENDSUB_A3:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB569:
    WRITE32 ENDSUB_A2:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB570:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB571:
    JR_LTEQF VS3_M 10.0 and572
    JR_GTF VS2_M 10.0 whilebody566
  and572:
    JR_GTEQF VS3_M 10.0 and573
    JR_LTF VS2_M 10.0 whilebody566
  and573:
  endwhile566:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer575
	DATA8 nos575
	DATA8 busy575
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer575 nos575
	JR_EQ8 0 nos575 motornotbusy575
  motorwaiting575:
	OUTPUT_TEST layer575 nos575 busy575
	JR_EQ8 busy575 0 motornotbusy575
	SLEEP
	JR motorwaiting575
  motornotbusy575:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB577:
    WRITE32 ENDSUB_A2:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB578:
  while579:
    JR_LTEQF VS3_M 6.0 endwhile579
  whilebody579:
    WRITE32 ENDSUB_A3:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB580:
    WRITE32 ENDSUB_A2:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB581:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_GTF VS3_M 6.0 whilebody579
  endwhile579:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB584:
    WRITE32 ENDSUB_A2:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB585:
  while586:
    JR_GTEQF VS3_M 15.0 endwhile586
  whilebody586:
    WRITE32 ENDSUB_A3:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB587:
    WRITE32 ENDSUB_A2:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB588:
    CALL MOTOR.STARTSYNC 'bc' 30.0 -30.0
    JR_LTF VS3_M 15.0 whilebody586
  endwhile586:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB591:
    WRITE32 ENDSUB_A2:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB592:
    MOVEF_F 1.0 VI_M
  for593:
    JR_GTF VI_M 3.0 endfor593
  forbody593:
    WRITE32 ENDSUB_A3:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB594:
    WRITE32 ENDSUB_A2:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB595:
  while596:
    JR_LTEQF VS3_M 10.0 and598
    JR_GTF VS2_M 10.0 or597
  and598:
    JR_GTEQF VS3_M 10.0 endwhile596
    JR_GTEQF VS2_M 10.0 endwhile596
  or597:
  whilebody596:
    WRITE32 ENDSUB_A3:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB599:
    WRITE32 ENDSUB_A2:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB600:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB601:
    JR_LTEQF VS3_M 10.0 and602
    JR_GTF VS2_M 10.0 whilebody596
  and602:
    JR_GTEQF VS3_M 10.0 and603
    JR_LTF VS2_M 10.0 whilebody596
  and603:
  endwhile596:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 3.0 forbody593
  endfor593:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 20.0 'true'

	DATA8 layer607
	DATA8 nos607
	DATA8 busy607
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer607 nos607
	JR_EQ8 0 nos607 motornotbusy607
  motorwaiting607:
	OUTPUT_TEST layer607 nos607 busy607
	JR_EQ8 busy607 0 motornotbusy607
	SLEEP
	JR motorwaiting607
  motornotbusy607:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 100.0 'true'

	DATA8 layer608
	DATA8 nos608
	DATA8 busy608
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer608 nos608
	JR_EQ8 0 nos608 motornotbusy608
  motorwaiting608:
	OUTPUT_TEST layer608 nos608 busy608
	JR_EQ8 busy608 0 motornotbusy608
	SLEEP
	JR motorwaiting608
  motornotbusy608:
    CALL MOTOR.SCHEDULESYNC 'bc' 50.0 -30.0 70.0 'true'

	DATA8 layer609
	DATA8 nos609
	DATA8 busy609
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer609 nos609
	JR_EQ8 0 nos609 motornotbusy609
  motorwaiting609:
	OUTPUT_TEST layer609 nos609 busy609
	JR_EQ8 busy609 0 motornotbusy609
	SLEEP
	JR motorwaiting609
  motornotbusy609:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 0.0 50.0 'true'

	DATA8 layer610
	DATA8 nos610
	DATA8 busy610
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer610 nos610
	JR_EQ8 0 nos610 motornotbusy610
  motorwaiting610:
	OUTPUT_TEST layer610 nos610 busy610
	JR_EQ8 busy610 0 motornotbusy610
	SLEEP
	JR motorwaiting610
  motornotbusy610:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 30.0 'true'

	DATA8 layer611
	DATA8 nos611
	DATA8 busy611
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer611 nos611
	JR_EQ8 0 nos611 motornotbusy611
  motorwaiting611:
	OUTPUT_TEST layer611 nos611 busy611
	JR_EQ8 busy611 0 motornotbusy611
	SLEEP
	JR motorwaiting611
  motornotbusy611:
    CALL MOTOR.RESETCOUNT 'bc'
  while613:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf617
    DATA8 flag617
    DIVF F.1 2.0 tmpf617
    CP_EQF 0.0 2.0 flag617
    SELECTF flag617 0.0 tmpf617 F.0

    JR_GTEQF F.0 50.0 endwhile613
  whilebody613:
    WRITE32 ENDSUB_A3:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB618:
    WRITE32 ENDSUB_A2:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB619:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB620:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf624
    DATA8 flag624
    DIVF F.1 2.0 tmpf624
    CP_EQF 0.0 2.0 flag624
    SELECTF flag624 0.0 tmpf624 F.0

    JR_LTF F.0 50.0 whilebody613
  endwhile613:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer626
	DATA8 nos626
	DATA8 busy626
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer626 nos626
	JR_EQ8 0 nos626 motornotbusy626
  motorwaiting626:
	OUTPUT_TEST layer626 nos626 busy626
	JR_EQ8 busy626 0 motornotbusy626
	SLEEP
	JR motorwaiting626
  motornotbusy626:
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds628
	MOVEF_32 500.0 milliseconds628
	DATA32 timer628
	TIMER_WAIT milliseconds628 timer628
	TIMER_READY timer628
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 150.0 'true'

	DATA8 layer630
	DATA8 nos630
	DATA8 busy630
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer630 nos630
	JR_EQ8 0 nos630 motornotbusy630
  motorwaiting630:
	OUTPUT_TEST layer630 nos630 busy630
	JR_EQ8 busy630 0 motornotbusy630
	SLEEP
	JR motorwaiting630
  motornotbusy630:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 -30.0 215.0 'true'

	DATA8 layer631
	DATA8 nos631
	DATA8 busy631
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer631 nos631
	JR_EQ8 0 nos631 motornotbusy631
  motorwaiting631:
	OUTPUT_TEST layer631 nos631 busy631
	JR_EQ8 busy631 0 motornotbusy631
	SLEEP
	JR motorwaiting631
  motornotbusy631:
    WRITE32 ENDSUB_A2:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB632:
    WRITE32 ENDSUB_A3:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB633:
  while634:
    JR_LTEQF VS3_M 4.0 and636
    JR_GTF VS2_M 4.0 or635
  and636:
    JR_GTEQF VS3_M 4.0 and637
    JR_GTF VS2_M 4.0 or635
  and637:
    JR_LTEQF VS3_M 4.0 endwhile634
    JR_GTEQF VS2_M 4.0 endwhile634
  or635:
  whilebody634:
    WRITE32 ENDSUB_A2:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB638:
    WRITE32 ENDSUB_A3:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB639:
    CALL MOTOR.STARTPOWER 'bc' 80.0
    JR_LTEQF VS3_M 4.0 and641
    JR_GTF VS2_M 4.0 whilebody634
  and641:
    JR_GTEQF VS3_M 4.0 and642
    JR_GTF VS2_M 4.0 whilebody634
  and642:
    JR_LTEQF VS3_M 4.0 and643
    JR_LTF VS2_M 4.0 whilebody634
  and643:
  endwhile634:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 60.0 60.0 70.0 'true'

	DATA8 layer645
	DATA8 nos645
	DATA8 busy645
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer645 nos645
	JR_EQ8 0 nos645 motornotbusy645
  motorwaiting645:
	OUTPUT_TEST layer645 nos645 busy645
	JR_EQ8 busy645 0 motornotbusy645
	SLEEP
	JR motorwaiting645
  motornotbusy645:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB647:
    WRITE32 ENDSUB_A2:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB648:
  while649:
    JR_LTEQF VS3_M 6.0 endwhile649
  whilebody649:
    WRITE32 ENDSUB_A3:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB650:
    WRITE32 ENDSUB_A2:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB651:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    JR_GTF VS3_M 6.0 whilebody649
  endwhile649:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB654:
    WRITE32 ENDSUB_A2:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB655:
  while656:
    JR_GTEQF VS3_M 15.0 endwhile656
  whilebody656:
    WRITE32 ENDSUB_A3:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB657:
    WRITE32 ENDSUB_A2:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB658:
    CALL MOTOR.STARTSYNC 'bc' 10.0 -10.0
    JR_LTF VS3_M 15.0 whilebody656
  endwhile656:
    CALL MOTOR.STOP 'bc' 'true'
    MOVEF_F 1.0 VI_M
  for661:
    JR_GTF VI_M 1.0 endfor661
  forbody661:
    WRITE32 ENDSUB_A3:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB662:
    WRITE32 ENDSUB_A2:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB663:
  while664:
    JR_LTEQF VS3_M 10.0 and666
    JR_GTF VS2_M 10.0 or665
  and666:
    JR_GTEQF VS3_M 10.0 endwhile664
    JR_GTEQF VS2_M 10.0 endwhile664
  or665:
  whilebody664:
    WRITE32 ENDSUB_A3:CALLSUB667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB667:
    WRITE32 ENDSUB_A2:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB668:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB669:
    JR_LTEQF VS3_M 10.0 and670
    JR_GTF VS2_M 10.0 whilebody664
  and670:
    JR_GTEQF VS3_M 10.0 and671
    JR_LTF VS2_M 10.0 whilebody664
  and671:
  endwhile664:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer673
	DATA8 nos673
	DATA8 busy673
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer673 nos673
	JR_EQ8 0 nos673 motornotbusy673
  motorwaiting673:
	OUTPUT_TEST layer673 nos673 busy673
	JR_EQ8 busy673 0 motornotbusy673
	SLEEP
	JR motorwaiting673
  motornotbusy673:
    ADDF VI_M 1.0 VI_M
    JR_LTEQF VI_M 1.0 forbody661
  endfor661:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_BELLAM3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_BELLAM3:
SUB_RED_1:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer676
	DATA8 nos676
	DATA8 busy676
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer676 nos676
	JR_EQ8 0 nos676 motornotbusy676
  motorwaiting676:
	OUTPUT_TEST layer676 nos676 busy676
	JR_EQ8 busy676 0 motornotbusy676
	SLEEP
	JR motorwaiting676
  motornotbusy676:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB678:
    WRITE32 ENDSUB_A2:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB679:
  while680:
    JR_LTEQF VS2_M 6.0 endwhile680
  whilebody680:
    WRITE32 ENDSUB_A3:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB681:
    WRITE32 ENDSUB_A2:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB682:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 6.0 whilebody680
  endwhile680:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB685:
    WRITE32 ENDSUB_A2:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB686:
  while687:
    JR_GTEQF VS2_M 15.0 endwhile687
  whilebody687:
    WRITE32 ENDSUB_A3:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB688:
    WRITE32 ENDSUB_A2:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB689:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody687
  endwhile687:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while694:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf698
    DATA8 flag698
    DIVF F.1 2.0 tmpf698
    CP_EQF 0.0 2.0 flag698
    SELECTF flag698 0.0 tmpf698 F.0

    JR_GTEQF F.0 270.0 endwhile694
  whilebody694:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB699:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf703
    DATA8 flag703
    DIVF F.1 2.0 tmpf703
    CP_EQF 0.0 2.0 flag703
    SELECTF flag703 0.0 tmpf703 F.0

    JR_LTF F.0 270.0 whilebody694
  endwhile694:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds705
	MOVEF_32 100.0 milliseconds705
	DATA32 timer705
	TIMER_WAIT milliseconds705 timer705
	TIMER_READY timer705
    CALL MOTOR.START 'd' 30.0
    DATA32 milliseconds707
	MOVEF_32 500.0 milliseconds707
	DATA32 timer707
	TIMER_WAIT milliseconds707 timer707
	TIMER_READY timer707
    CALL MOTOR.STOP 'd' 'true'
    WRITE32 ENDSUB_NPL:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB709:
    MOVEF_F 1470.0 VS_M
    MOVEF_F 195.936 VL_M
    MOVEF_F 0.0 VX_M
    DATAF tmpf710
    DATA8 flag710
    DIVF 360.0 VL_M tmpf710
    CP_EQF 0.0 VL_M flag710
    SELECTF flag710 0.0 tmpf710 F.0

    MULF F.0 VS_M VX_M
    CALL MOTOR.RESETCOUNT 'bc'
  while713:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_GTEQF F.0 VX_M endwhile713
  whilebody713:
    MOVEF_F 90.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2DUS:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2DUS
CALLSUB715:
    CALL MOTOR.GETCOUNT 'b' F.0
    JR_LTF F.0 VX_M whilebody713
  endwhile713:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_REDL:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_REDL
CALLSUB718:
    WRITE32 ENDSUB_BELLAM:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_BELLAM
CALLSUB719:
    MOVEF_F 1250.0 VS_M
    WRITE32 ENDSUB_US:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_US
CALLSUB720:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 90.0 'true'

	DATA8 layer722
	DATA8 nos722
	DATA8 busy722
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer722 nos722
	JR_EQ8 0 nos722 motornotbusy722
  motorwaiting722:
	OUTPUT_TEST layer722 nos722 busy722
	JR_EQ8 busy722 0 motornotbusy722
	SLEEP
	JR motorwaiting722
  motornotbusy722:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB724:
    WRITE32 ENDSUB_A2:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB725:
  while726:
    JR_LTEQF VS2_M 6.0 endwhile726
  whilebody726:
    WRITE32 ENDSUB_A3:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB727:
    WRITE32 ENDSUB_A2:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB728:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 6.0 whilebody726
  endwhile726:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB731:
    WRITE32 ENDSUB_A2:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB732:
  while733:
    JR_GTEQF VS2_M 15.0 endwhile733
  whilebody733:
    WRITE32 ENDSUB_A3:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB734:
    WRITE32 ENDSUB_A2:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB735:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody733
  endwhile733:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.RESETCOUNT 'bc'
  while739:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf743
    DATA8 flag743
    DIVF F.1 2.0 tmpf743
    CP_EQF 0.0 2.0 flag743
    SELECTF flag743 0.0 tmpf743 F.0

    JR_GTEQF F.0 270.0 endwhile739
  whilebody739:
    WRITE32 ENDSUB_A3:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB744:
    WRITE32 ENDSUB_A2:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB745:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB746:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf750
    DATA8 flag750
    DIVF F.1 2.0 tmpf750
    CP_EQF 0.0 2.0 flag750
    SELECTF flag750 0.0 tmpf750 F.0

    JR_LTF F.0 270.0 whilebody739
  endwhile739:
    CALL MOTOR.STOP 'bc' 'true'
    CALL MOTOR.START 'd' -30.0
    DATA32 milliseconds753
	MOVEF_32 500.0 milliseconds753
	DATA32 timer753
	TIMER_WAIT milliseconds753 timer753
	TIMER_READY timer753
    CALL MOTOR.STOP 'd' 'true'
    DATA32 tmp755
    CALL GETANDINC32 RUNCOUNTER_VIDVIG 1  RUNCOUNTER_VIDVIG tmp755
    JR_NEQ32 0 tmp755 alreadylaunched755
    OBJECT_START TVIDVIG
  alreadylaunched755:
    WRITE32 ENDSUB_NPL:CALLSUB756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_NPL
CALLSUB756:
    WRITE32 ENDSUB_A3:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB757:
    WRITE32 ENDSUB_A2:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB758:
  while759:
    JR_LTEQF VS3_M 10.0 and761
    JR_GTF VS2_M 10.0 or760
  and761:
    JR_GTEQF VS3_M 10.0 endwhile759
    JR_GTEQF VS2_M 10.0 endwhile759
  or760:
  whilebody759:
    WRITE32 ENDSUB_A3:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB762:
    WRITE32 ENDSUB_A2:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB763:
    MOVEF_F 50.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB764:
    JR_LTEQF VS3_M 10.0 and765
    JR_GTF VS2_M 10.0 whilebody759
  and765:
    JR_GTEQF VS3_M 10.0 and766
    JR_LTF VS2_M 10.0 whilebody759
  and766:
  endwhile759:
    CALL MOTOR.SCHEDULESYNC 'bc' 30.0 30.0 50.0 'true'

	DATA8 layer767
	DATA8 nos767
	DATA8 busy767
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer767 nos767
	JR_EQ8 0 nos767 motornotbusy767
  motorwaiting767:
	OUTPUT_TEST layer767 nos767 busy767
	JR_EQ8 busy767 0 motornotbusy767
	SLEEP
	JR motorwaiting767
  motornotbusy767:
    WRITE32 ENDSUB_A3:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB768:
    WRITE32 ENDSUB_A2:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB769:
  while770:
    JR_LTEQF VS3_M 10.0 and772
    JR_GTF VS2_M 10.0 or771
  and772:
    JR_GTEQF VS3_M 10.0 endwhile770
    JR_GTEQF VS2_M 10.0 endwhile770
  or771:
  whilebody770:
    WRITE32 ENDSUB_A3:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB773:
    WRITE32 ENDSUB_A2:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB774:
    MOVEF_F 30.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB775:
    JR_LTEQF VS3_M 10.0 and776
    JR_GTF VS2_M 10.0 whilebody770
  and776:
    JR_GTEQF VS3_M 10.0 and777
    JR_LTF VS2_M 10.0 whilebody770
  and777:
  endwhile770:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_RED_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RED_1:
SUB_SB1:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 -40.0 150.0 'true'

	DATA8 layer779
	DATA8 nos779
	DATA8 busy779
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer779 nos779
	JR_EQ8 0 nos779 motornotbusy779
  motorwaiting779:
	OUTPUT_TEST layer779 nos779 busy779
	JR_EQ8 busy779 0 motornotbusy779
	SLEEP
	JR motorwaiting779
  motornotbusy779:
    CALL MOTOR.SCHEDULESYNC 'bc' -40.0 40.0 300.0 'true'

	DATA8 layer780
	DATA8 nos780
	DATA8 busy780
	CALL MOTORDECODEPORTSDESCRIPTOR 'bc' layer780 nos780
	JR_EQ8 0 nos780 motornotbusy780
  motorwaiting780:
	OUTPUT_TEST layer780 nos780 busy780
	JR_EQ8 busy780 0 motornotbusy780
	SLEEP
	JR motorwaiting780
  motornotbusy780:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB782:
    WRITE32 ENDSUB_A2:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB783:
  while784:
    JR_LTEQF VS2_M 5.0 endwhile784
  whilebody784:
    WRITE32 ENDSUB_A3:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB785:
    WRITE32 ENDSUB_A2:CALLSUB786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB786:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_GTF VS2_M 5.0 whilebody784
  endwhile784:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB789:
    WRITE32 ENDSUB_A2:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB790:
  while791:
    JR_GTEQF VS2_M 15.0 endwhile791
  whilebody791:
    WRITE32 ENDSUB_A3:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB792:
    WRITE32 ENDSUB_A2:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB793:
    CALL MOTOR.STARTSYNC 'bc' -30.0 30.0
    JR_LTF VS2_M 15.0 whilebody791
  endwhile791:
    CALL MOTOR.STOP 'bc' 'true'
    DATA32 milliseconds796
	MOVEF_32 100.0 milliseconds796
	DATA32 timer796
	TIMER_WAIT milliseconds796 timer796
	TIMER_READY timer796
    CALL MOTOR.RESETCOUNT 'bc'
  while798:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf802
    DATA8 flag802
    DIVF F.1 2.0 tmpf802
    CP_EQF 0.0 2.0 flag802
    SELECTF flag802 0.0 tmpf802 F.0

    JR_GTEQF F.0 300.0 endwhile798
  whilebody798:
    WRITE32 ENDSUB_A3:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB803:
    WRITE32 ENDSUB_A2:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB804:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB805:
    CALL MOTOR.GETCOUNT 'b' F.2
    CALL MOTOR.GETCOUNT 'c' F.3
    ADDF F.2 F.3 F.1
    DATAF tmpf809
    DATA8 flag809
    DIVF F.1 2.0 tmpf809
    CP_EQF 0.0 2.0 flag809
    SELECTF flag809 0.0 tmpf809 F.0

    JR_LTF F.0 300.0 whilebody798
  endwhile798:
    CALL MOTOR.STOP 'bc' 'true'
    WRITE32 ENDSUB_A3:CALLSUB811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB811:
    WRITE32 ENDSUB_A2:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB812:
  while813:
    JR_LTEQF VS3_M 6.0 and815
    JR_GTF VS2_M 6.0 or814
  and815:
    JR_GTEQF VS3_M 6.0 endwhile813
    JR_GTEQF VS2_M 6.0 endwhile813
  or814:
  whilebody813:
    WRITE32 ENDSUB_A3:CALLSUB816 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB816:
    WRITE32 ENDSUB_A2:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB817:
    MOVEF_F 60.0 VSPEED_M
    WRITE32 ENDSUB_POLIN2D:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_POLIN2D
CALLSUB818:
    JR_LTEQF VS3_M 6.0 and819
    JR_GTF VS2_M 6.0 whilebody813
  and819:
    JR_GTEQF VS3_M 6.0 and820
    JR_LTF VS2_M 6.0 whilebody813
  and820:
  endwhile813:
    CALL MOTOR.STOP 'bc' 'true'
RETSUB_SB1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_SB1:
SUB_HSV:
    DATA8 layer822
	DATA8 no822
	DATA8 mode8822
	
	MOVEF_8 1.0 no822
	SUB8 no822 1 no822
	DIV8 no822 4 layer822
	MATH MOD8 no822 4 no822

	MOVEF_8 2.0 mode8822
	
	INPUT_DEVICE READY_RAW layer822 no822 0 mode8822 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf829
    DATA8 flag829
    DIVF VSRED_M 255.0 tmpf829
    CP_EQF 0.0 255.0 flag829
    SELECTF flag829 0.0 tmpf829 VSRED_M

    DATAF tmpf830
    DATA8 flag830
    DIVF VSGREEN_M 255.0 tmpf830
    CP_EQF 0.0 255.0 flag830
    SELECTF flag830 0.0 tmpf830 VSGREEN_M

    DATAF tmpf831
    DATA8 flag831
    DIVF VSBLUE_M 255.0 tmpf831
    CP_EQF 0.0 255.0 flag831
    SELECTF flag831 0.0 tmpf831 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else832_1
    JR_LTEQF VSRED_M VSBLUE_M else832_1
    MOVEF_F VSRED_M VMAX_M
    JR endif832
  else832_1:
    JR_LTEQF VSGREEN_M VSRED_M else832_2
    JR_LTEQF VSGREEN_M VSBLUE_M else832_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif832
  else832_2:
    JR_LTEQF VSBLUE_M VSRED_M else832_3
    JR_LTEQF VSBLUE_M VSGREEN_M else832_3
    MOVEF_F VSBLUE_M VMAX_M
  else832_3:
  endif832:
    JR_GTEQF VSRED_M VSGREEN_M else833_1
    JR_GTEQF VSRED_M VSBLUE_M else833_1
    MOVEF_F VSRED_M VMIN_M
    JR endif833
  else833_1:
    JR_GTEQF VSGREEN_M VSRED_M else833_2
    JR_GTEQF VSGREEN_M VSBLUE_M else833_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif833
  else833_2:
    JR_GTEQF VSBLUE_M VSRED_M else833_3
    JR_GTEQF VSBLUE_M VSGREEN_M else833_3
    MOVEF_F VSBLUE_M VMIN_M
  else833_3:
  endif833:
    JR_NEQF VMAX_M VMIN_M else834_1
    MOVEF_F 0.0 VH_M
    JR endif834
  else834_1:
    JR_NEQF VSRED_M VMAX_M else835_1
    JR_LTF VSGREEN_M VSBLUE_M else836_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf840
    DATA8 flag840
    DIVF F.0 F.1 tmpf840
    CP_EQF 0.0 F.1 flag840
    SELECTF flag840 0.0 tmpf840 VH_M

    JR endif836
  else836_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf844
    DATA8 flag844
    DIVF F.1 F.2 tmpf844
    CP_EQF 0.0 F.2 flag844
    SELECTF flag844 0.0 tmpf844 F.0

    ADDF F.0 360.0 VH_M
  else836_2:
  endif836:
    JR endif835
  else835_1:
    JR_NEQF VMAX_M VSGREEN_M else846_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf850
    DATA8 flag850
    DIVF F.1 F.2 tmpf850
    CP_EQF 0.0 F.2 flag850
    SELECTF flag850 0.0 tmpf850 F.0

    ADDF F.0 120.0 VH_M
    JR endif846
  else846_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf855
    DATA8 flag855
    DIVF F.1 F.2 tmpf855
    CP_EQF 0.0 F.2 flag855
    SELECTF flag855 0.0 tmpf855 F.0

    ADDF F.0 240.0 VH_M
  else846_2:
  endif846:
  else835_2:
  endif835:
  else834_2:
  endif834:
    JR_NEQF VMAX_M 0.0 else857_1
    MOVEF_F 0.0 VS_M
    JR endif857
  else857_1:
    DATAF tmpf858
    DATA8 flag858
    DIVF VMIN_M VMAX_M tmpf858
    CP_EQF 0.0 VMAX_M flag858
    SELECTF flag858 0.0 tmpf858 F.0

    SUBF 1.0 F.0 VS_M
  else857_2:
  endif857:
    MOVEF_F VMAX_M VV_M
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV:
SUB_HSV_100:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    MOVEF_F 0.0 VD_M
    MOVEF_F 0.0 VZ_M
    DATA8 layer867
	DATA8 no867
	DATA8 mode8867
	
	MOVEF_8 1.0 no867
	SUB8 no867 1 no867
	DIV8 no867 4 layer867
	MATH MOD8 no867 4 no867

	MOVEF_8 2.0 mode8867
	
	INPUT_DEVICE READY_RAW layer867 no867 0 mode8867 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    MOVEF_F 1.0 VP_M
  for868:
    JR_GTF VP_M 100.0 endfor868
  forbody868:
    WRITE32 ENDSUB_HSV:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB869:
    ADDF VX_M VH_M VX_M
    ADDF VZ_M VS_M VZ_M
    ADDF VD_M VV_M VD_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody868
  endfor868:
    DATAF tmpf874
    DATA8 flag874
    DIVF VX_M 100.0 tmpf874
    CP_EQF 0.0 100.0 flag874
    SELECTF flag874 0.0 tmpf874 VH_M

    DATAF tmpf875
    DATA8 flag875
    DIVF VZ_M 100.0 tmpf875
    CP_EQF 0.0 100.0 flag875
    SELECTF flag875 0.0 tmpf875 VS_M

    DATAF tmpf876
    DATA8 flag876
    DIVF VD_M 100.0 tmpf876
    CP_EQF 0.0 100.0 flag876
    SELECTF flag876 0.0 tmpf876 VV_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
RETSUB_HSV_100:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_100:
SUB_HSV_B:
    DATA8 layer884
	DATA8 no884
	DATA8 mode8884
	
	MOVEF_8 1.0 no884
	SUB8 no884 1 no884
	DIV8 no884 4 layer884
	MATH MOD8 no884 4 no884

	MOVEF_8 2.0 mode8884
	
	INPUT_DEVICE READY_RAW layer884 no884 0 mode8884 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf891
    DATA8 flag891
    DIVF VSRED_M 255.0 tmpf891
    CP_EQF 0.0 255.0 flag891
    SELECTF flag891 0.0 tmpf891 VSRED_M

    DATAF tmpf892
    DATA8 flag892
    DIVF VSGREEN_M 255.0 tmpf892
    CP_EQF 0.0 255.0 flag892
    SELECTF flag892 0.0 tmpf892 VSGREEN_M

    DATAF tmpf893
    DATA8 flag893
    DIVF VSBLUE_M 255.0 tmpf893
    CP_EQF 0.0 255.0 flag893
    SELECTF flag893 0.0 tmpf893 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else894_1
    JR_LTEQF VSRED_M VSBLUE_M else894_1
    MOVEF_F VSRED_M VMAX_M
    JR endif894
  else894_1:
    JR_LTEQF VSGREEN_M VSRED_M else894_2
    JR_LTEQF VSGREEN_M VSBLUE_M else894_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif894
  else894_2:
    JR_LTEQF VSBLUE_M VSRED_M else894_3
    JR_LTEQF VSBLUE_M VSGREEN_M else894_3
    MOVEF_F VSBLUE_M VMAX_M
  else894_3:
  endif894:
    JR_GTEQF VSRED_M VSGREEN_M else895_1
    JR_GTEQF VSRED_M VSBLUE_M else895_1
    MOVEF_F VSRED_M VMIN_M
    JR endif895
  else895_1:
    JR_GTEQF VSGREEN_M VSRED_M else895_2
    JR_GTEQF VSGREEN_M VSBLUE_M else895_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif895
  else895_2:
    JR_GTEQF VSBLUE_M VSRED_M else895_3
    JR_GTEQF VSBLUE_M VSGREEN_M else895_3
    MOVEF_F VSBLUE_M VMIN_M
  else895_3:
  endif895:
    JR_NEQF VMAX_M VMIN_M else896_1
    MOVEF_F 0.0 VH_M
    JR endif896
  else896_1:
    JR_NEQF VSRED_M VMAX_M else897_1
    JR_LTF VSGREEN_M VSBLUE_M else898_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf902
    DATA8 flag902
    DIVF F.0 F.1 tmpf902
    CP_EQF 0.0 F.1 flag902
    SELECTF flag902 0.0 tmpf902 VH_M

    JR endif898
  else898_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf906
    DATA8 flag906
    DIVF F.1 F.2 tmpf906
    CP_EQF 0.0 F.2 flag906
    SELECTF flag906 0.0 tmpf906 F.0

    ADDF F.0 360.0 VH_M
  else898_2:
  endif898:
    JR endif897
  else897_1:
    JR_NEQF VMAX_M VSGREEN_M else908_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf912
    DATA8 flag912
    DIVF F.1 F.2 tmpf912
    CP_EQF 0.0 F.2 flag912
    SELECTF flag912 0.0 tmpf912 F.0

    ADDF F.0 120.0 VH_M
    JR endif908
  else908_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf917
    DATA8 flag917
    DIVF F.1 F.2 tmpf917
    CP_EQF 0.0 F.2 flag917
    SELECTF flag917 0.0 tmpf917 F.0

    ADDF F.0 240.0 VH_M
  else908_2:
  endif908:
  else897_2:
  endif897:
  else896_2:
  endif896:
    JR_NEQF VMAX_M 0.0 else919_1
    MOVEF_F 0.0 VS_M
    JR endif919
  else919_1:
    DATAF tmpf920
    DATA8 flag920
    DIVF VMIN_M VMAX_M tmpf920
    CP_EQF 0.0 VMAX_M flag920
    SELECTF flag920 0.0 tmpf920 F.0

    SUBF 1.0 F.0 VS_M
  else919_2:
  endif919:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 300.0 and924
    JR_LTF VH_M 360.0 or923
  and924:
    JR_LTF VH_M 0.0 else922_1
    JR_GTF VH_M 20.0 else922_1
    JR_LTEQF VS_M 0.3 else922_1
    JR_GTF VS_M 1.0 else922_1
    JR_LTEQF VV_M 0.025 else922_1
    JR_GTEQF VV_M 0.1 else922_1
  or923:
    MOVEF_F 5.0 VCOLOR_M
    JR endif922
  else922_1:
    JR_LTF VH_M 20.0 else922_2
    JR_GTEQF VH_M 60.0 else922_2
    JR_LTF VS_M 0.4 else922_2
    JR_LTEQF VV_M 0.03 else922_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif922
  else922_2:
    MOVEF_F 6.0 VCOLOR_M
  else922_3:
  endif922:
RETSUB_HSV_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_B:
SUB_HSV_D:
    DATA8 layer925
	DATA8 no925
	DATA8 mode8925
	
	MOVEF_8 1.0 no925
	SUB8 no925 1 no925
	DIV8 no925 4 layer925
	MATH MOD8 no925 4 no925

	MOVEF_8 2.0 mode8925
	
	INPUT_DEVICE READY_RAW layer925 no925 0 mode8925 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 VSNUM_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 1.0 VSRED_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 2.0 VSGREEN_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 3.0 VSBLUE_M VRECVARRAY_M
    DATAF tmpf932
    DATA8 flag932
    DIVF VSRED_M 255.0 tmpf932
    CP_EQF 0.0 255.0 flag932
    SELECTF flag932 0.0 tmpf932 VSRED_M

    DATAF tmpf933
    DATA8 flag933
    DIVF VSGREEN_M 255.0 tmpf933
    CP_EQF 0.0 255.0 flag933
    SELECTF flag933 0.0 tmpf933 VSGREEN_M

    DATAF tmpf934
    DATA8 flag934
    DIVF VSBLUE_M 255.0 tmpf934
    CP_EQF 0.0 255.0 flag934
    SELECTF flag934 0.0 tmpf934 VSBLUE_M

    JR_LTEQF VSRED_M VSGREEN_M else935_1
    JR_LTEQF VSRED_M VSBLUE_M else935_1
    MOVEF_F VSRED_M VMAX_M
    JR endif935
  else935_1:
    JR_LTEQF VSGREEN_M VSRED_M else935_2
    JR_LTEQF VSGREEN_M VSBLUE_M else935_2
    MOVEF_F VSGREEN_M VMAX_M
    JR endif935
  else935_2:
    JR_LTEQF VSBLUE_M VSRED_M else935_3
    JR_LTEQF VSBLUE_M VSGREEN_M else935_3
    MOVEF_F VSBLUE_M VMAX_M
  else935_3:
  endif935:
    JR_GTEQF VSRED_M VSGREEN_M else936_1
    JR_GTEQF VSRED_M VSBLUE_M else936_1
    MOVEF_F VSRED_M VMIN_M
    JR endif936
  else936_1:
    JR_GTEQF VSGREEN_M VSRED_M else936_2
    JR_GTEQF VSGREEN_M VSBLUE_M else936_2
    MOVEF_F VSGREEN_M VMIN_M
    JR endif936
  else936_2:
    JR_GTEQF VSBLUE_M VSRED_M else936_3
    JR_GTEQF VSBLUE_M VSGREEN_M else936_3
    MOVEF_F VSBLUE_M VMIN_M
  else936_3:
  endif936:
    JR_NEQF VMAX_M VMIN_M else937_1
    MOVEF_F 0.0 VH_M
    JR endif937
  else937_1:
    JR_NEQF VSRED_M VMAX_M else938_1
    JR_LTF VSGREEN_M VSBLUE_M else939_1
    SUBF VSGREEN_M VSBLUE_M F.1
    MULF 60.0 F.1 F.0
    SUBF VMAX_M VMIN_M F.1
    DATAF tmpf943
    DATA8 flag943
    DIVF F.0 F.1 tmpf943
    CP_EQF 0.0 F.1 flag943
    SELECTF flag943 0.0 tmpf943 VH_M

    JR endif939
  else939_1:
    SUBF VSGREEN_M VSBLUE_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf947
    DATA8 flag947
    DIVF F.1 F.2 tmpf947
    CP_EQF 0.0 F.2 flag947
    SELECTF flag947 0.0 tmpf947 F.0

    ADDF F.0 360.0 VH_M
  else939_2:
  endif939:
    JR endif938
  else938_1:
    JR_NEQF VMAX_M VSGREEN_M else949_1
    SUBF VSBLUE_M VSRED_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf953
    DATA8 flag953
    DIVF F.1 F.2 tmpf953
    CP_EQF 0.0 F.2 flag953
    SELECTF flag953 0.0 tmpf953 F.0

    ADDF F.0 120.0 VH_M
    JR endif949
  else949_1:
    SUBF VSRED_M VSGREEN_M F.2
    MULF 60.0 F.2 F.1
    SUBF VMAX_M VMIN_M F.2
    DATAF tmpf958
    DATA8 flag958
    DIVF F.1 F.2 tmpf958
    CP_EQF 0.0 F.2 flag958
    SELECTF flag958 0.0 tmpf958 F.0

    ADDF F.0 240.0 VH_M
  else949_2:
  endif949:
  else938_2:
  endif938:
  else937_2:
  endif937:
    JR_NEQF VMAX_M 0.0 else960_1
    MOVEF_F 0.0 VS_M
    JR endif960
  else960_1:
    DATAF tmpf961
    DATA8 flag961
    DIVF VMIN_M VMAX_M tmpf961
    CP_EQF 0.0 VMAX_M flag961
    SELECTF flag961 0.0 tmpf961 F.0

    SUBF 1.0 F.0 VS_M
  else960_2:
  endif960:
    MOVEF_F VMAX_M VV_M
    JR_LTEQF VH_M 200.0 and965
    JR_LTF VH_M 360.0 or964
  and965:
    JR_LTF VH_M 0.0 else963_1
    JR_GTF VH_M 30.0 else963_1
    JR_LTEQF VS_M 0.3 else963_1
    JR_GTF VS_M 1.0 else963_1
    JR_LTF VV_M 0.0 else963_1
    JR_GTEQF VV_M 0.02 else963_1
  or964:
    MOVEF_F 5.0 VCOLOR_M
    JR endif963
  else963_1:
    JR_LTF VH_M 0.0 else963_2
    JR_GTEQF VH_M 60.0 else963_2
    JR_LTF VS_M 0.4 else963_2
    JR_GTF VS_M 1.0 else963_2
    JR_LTEQF VV_M 0.003 else963_2
    MOVEF_F 4.0 VCOLOR_M
    JR endif963
  else963_2:
    MOVEF_F 6.0 VCOLOR_M
  else963_3:
  endif963:
RETSUB_HSV_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_D:
SUB_HSV_RGB_B:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer966
	DATA8 no966
	DATA8 mode8966
	
	MOVEF_8 1.0 no966
	SUB8 no966 1 no966
	DIV8 no966 4 layer966
	MATH MOD8 no966 4 no966

	MOVEF_8 2.0 mode8966
	
	INPUT_DEVICE READY_RAW layer966 no966 0 mode8966 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV
CALLSUB968:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    DATA32 milliseconds977
	MOVEF_32 100.0 milliseconds977
	DATA32 timer977
	TIMER_WAIT milliseconds977 timer977
	TIMER_READY timer977
    MOVEF_F 1.0 VP_M
  for978:
    JR_GTF VP_M 100.0 endfor978
  forbody978:
    WRITE32 ENDSUB_HSV_B:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_B
CALLSUB979:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody978
  endfor978:
    DATAF tmpf982
    DATA8 flag982
    DIVF VX_M 100.0 tmpf982
    CP_EQF 0.0 100.0 flag982
    SELECTF flag982 0.0 tmpf982 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds986
	MOVEF_32 100.0 milliseconds986
	DATA32 timer986
	TIMER_WAIT milliseconds986 timer986
	TIMER_READY timer986
    JR_LTEQF VH_M 100.0 and989
    JR_LTF VH_M 360.0 or988
  and989:
    JR_LTF VH_M 0.0 else987_1
    JR_GTF VH_M 20.0 else987_1
    JR_LTEQF VS_M 0.3 else987_1
    JR_GTF VS_M 1.0 else987_1
    JR_LTEQF VV_M 0.025 else987_1
    JR_GTEQF VV_M 0.1 else987_1
  or988:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif987
  else987_1:
    JR_LTF VH_M 20.0 else987_2
    JR_GTEQF VH_M 60.0 else987_2
    JR_LTF VS_M 0.4 else987_2
    JR_LTEQF VV_M 0.03 else987_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif987
  else987_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else987_3:
  endif987:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds999
	MOVEF_32 1000.0 milliseconds999
	DATA32 timer999
	TIMER_WAIT milliseconds999 timer999
	TIMER_READY timer999
RETSUB_HSV_RGB_B:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_B:
SUB_HSV_RGB_D:
    MOVEF_F 0.0 VP_M
    MOVEF_F 0.0 VX_M
    DATA8 layer1000
	DATA8 no1000
	DATA8 mode81000
	
	MOVEF_8 1.0 no1000
	SUB8 no1000 1 no1000
	DIV8 no1000 4 layer1000
	MATH MOD8 no1000 4 no1000

	MOVEF_8 2.0 mode81000
	
	INPUT_DEVICE READY_RAW layer1000 no1000 0 mode81000 0
    MOVEF_F 1.0 VI2CPORT_M
    MOVEF_F 1.0 VI2CSLVADDR_M
    CALL LCD.CLEAR
    WRITE32 ENDSUB_HSV_D:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB1002:
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    STRINGS VALUE_FORMATTED VS_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 30.0 S.0
    STRINGS VALUE_FORMATTED VV_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 60.0 S.0
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 80.0 S.0
    MOVEF_F 1.0 VP_M
  for1011:
    JR_GTF VP_M 100.0 endfor1011
  forbody1011:
    WRITE32 ENDSUB_HSV_D:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_HSV_D
CALLSUB1012:
    ADDF VX_M VH_M VX_M
    ADDF VP_M 1.0 VP_M
    JR_LTEQF VP_M 100.0 forbody1011
  endfor1011:
    DATAF tmpf1015
    DATA8 flag1015
    DIVF VX_M 100.0 tmpf1015
    CP_EQF 0.0 100.0 flag1015
    SELECTF flag1015 0.0 tmpf1015 VH_M

    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VH_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    JR_LTEQF VH_M 200.0 and1021
    JR_LTF VH_M 360.0 or1020
  and1021:
    JR_LTF VH_M 0.0 else1019_1
    JR_GTF VH_M 40.0 else1019_1
    JR_LTEQF VS_M 0.3 else1019_1
    JR_GTF VS_M 1.0 else1019_1
    JR_LTF VV_M 0.0 else1019_1
    JR_GTEQF VV_M 0.02 else1019_1
  or1020:
    MOVEF_F 5.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Red'
    SOUND_READY
    JR endif1019
  else1019_1:
    JR_LTF VH_M 0.0 else1019_2
    JR_GTEQF VH_M 100.0 else1019_2
    JR_LTF VS_M 0.4 else1019_2
    JR_GTF VS_M 1.0 else1019_2
    JR_LTEQF VV_M 0.003 else1019_2
    MOVEF_F 4.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Yellow'
    SOUND_READY
    JR endif1019
  else1019_2:
    MOVEF_F 6.0 VCOLOR_M
    CALL SPEAKER.PLAY 100.0 '/home/root/lms2012/prjs/WRO2021/Zero'
    SOUND_READY
  else1019_3:
  endif1019:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VCOLOR_M '%g' 99 S.0
    CALL LCD.WRITE 10.0 10.0 S.0
    DATA32 milliseconds1031
	MOVEF_32 1000.0 milliseconds1031
	DATA32 timer1031
	TIMER_WAIT milliseconds1031 timer1031
	TIMER_READY timer1031
RETSUB_HSV_RGB_D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_HSV_RGB_D:
SUB_A3:
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VMIN3_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX3_M VMIN3_M F.1
    DATAF tmpf1036
    DATA8 flag1036
    DIVF F.0 F.1 tmpf1036
    CP_EQF 0.0 F.1 flag1036
    SELECTF flag1036 0.0 tmpf1036 VS3_M

RETSUB_A3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A3:
SUB_A2:
    CALL SENSOR.READPERCENT 2.0 F.2
    SUBF F.2 VMIN2_M F.1
    MULF 100.0 F.1 F.0
    SUBF VMAX2_M VMIN2_M F.1
    DATAF tmpf1041
    DATA8 flag1041
    DIVF F.0 F.1 tmpf1041
    CP_EQF 0.0 F.1 flag1041
    SELECTF flag1041 0.0 tmpf1041 VS2_M

RETSUB_A2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_A2:
SUB_POLIN2D:
    WRITE32 ENDSUB_A3:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1042:
    WRITE32 ENDSUB_A2:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1043:
    SUBF VS2_M VS3_M VE_M
    MULF VK1_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2D:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2D:
SUB_POLIN2DUS:
    WRITE32 ENDSUB_A3:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A3
CALLSUB1053:
    WRITE32 ENDSUB_A2:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_A2
CALLSUB1054:
    SUBF VS2_M VS3_M VE_M
    MULF VK3_M VE_M F.0
    SUBF VE_M VEOLD_M F.2
    MULF VK2_M F.2 F.1
    ADDF F.0 F.1 VU_M
    MOVEF_F VE_M VEOLD_M
    ADDF VSPEED_M VU_M VSPEEDL_M
    SUBF VSPEED_M VU_M VSPEEDR_M
    CALL MOTOR.STARTPOWER 'B' VSPEEDL_M
    CALL MOTOR.STARTPOWER 'C' VSPEEDR_M
RETSUB_POLIN2DUS:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_POLIN2DUS:
SUB_ZAMOROZ:
    UI_BUTTON FLUSH
    CALL MOTOR.STOP 'BC' 'true'
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_ZAMOROZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZAMOROZ:
SUB_ZADVIG:
    CALL MOTOR.START 'a' 80.0
    DATA32 milliseconds1068
	MOVEF_32 100.0 milliseconds1068
	DATA32 timer1068
	TIMER_WAIT milliseconds1068 timer1068
	TIMER_READY timer1068
  while1069:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTEQF F.0 20.0 endwhile1069
  whilebody1069:
    CALL MOTOR.START 'a' 80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTF F.0 20.0 whilebody1069
  endwhile1069:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_ZADVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_ZADVIG:
SUB_VIDVIG:
    CALL MOTOR.START 'a' -80.0
    DATA32 milliseconds1075
	MOVEF_32 100.0 milliseconds1075
	DATA32 timer1075
	TIMER_WAIT milliseconds1075 timer1075
	TIMER_READY timer1075
  while1076:
    CALL MOTOR.GETSPEED 'a' F.0
    JR_GTEQF F.0 -20.0 endwhile1076
  whilebody1076:
    CALL MOTOR.START 'a' -80.0
    CALL MOTOR.GETSPEED 'a' F.0
    JR_LTF F.0 -20.0 whilebody1076
  endwhile1076:
    CALL MOTOR.STOP 'a' 'true'
RETSUB_VIDVIG:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIDVIG:
SUB_VIRAV_NAZ:
    DATA8 layer1081
	DATA8 no1081
	DATA8 mode81081
	
	MOVEF_8 2.0 no1081
	SUB8 no1081 1 no1081
	DIV8 no1081 4 layer1081
	MATH MOD8 no1081 4 no1081

	MOVEF_8 0.0 mode81081
	
	INPUT_DEVICE READY_RAW layer1081 no1081 0 mode81081 0
    DATA8 layer1082
	DATA8 no1082
	DATA8 mode81082
	
	MOVEF_8 3.0 no1082
	SUB8 no1082 1 no1082
	DIV8 no1082 4 layer1082
	MATH MOD8 no1082 4 no1082

	MOVEF_8 0.0 mode81082
	
	INPUT_DEVICE READY_RAW layer1082 no1082 0 mode81082 0
  while1083:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1083
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1083
  whilebody1083:
    CALL MOTOR.STARTSYNC 'BC' -20.0 -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and1087
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1083
  and1087:
  endwhile1083:
    CALL MOTOR.STOP 'BC' 'True'
  while1091:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1091
  whilebody1091:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody1091
  endwhile1091:
    CALL MOTOR.STOP 'B' 'True'
  while1096:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1096
  whilebody1096:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1096
  endwhile1096:
    CALL MOTOR.STOP 'C' 'True'
  while1101:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1101
  whilebody1101:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1101
  endwhile1101:
    CALL MOTOR.STOP 'B' 'True'
  while1106:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1106
  whilebody1106:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1106
  endwhile1106:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV_NAZ:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV_NAZ:
SUB_VIRAV:
    DATA8 layer1111
	DATA8 no1111
	DATA8 mode81111
	
	MOVEF_8 2.0 no1111
	SUB8 no1111 1 no1111
	DIV8 no1111 4 layer1111
	MATH MOD8 no1111 4 no1111

	MOVEF_8 0.0 mode81111
	
	INPUT_DEVICE READY_RAW layer1111 no1111 0 mode81111 0
    DATA8 layer1112
	DATA8 no1112
	DATA8 mode81112
	
	MOVEF_8 3.0 no1112
	SUB8 no1112 1 no1112
	DIV8 no1112 4 layer1112
	MATH MOD8 no1112 4 no1112

	MOVEF_8 0.0 mode81112
	
	INPUT_DEVICE READY_RAW layer1112 no1112 0 mode81112 0
  while1113:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1113
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1113
  whilebody1113:
    CALL MOTOR.STARTSYNC 'BC' 20.0 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 and1117
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1113
  and1117:
  endwhile1113:
    CALL MOTOR.STOP 'BC' 'True'
  while1121:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTEQF F.0 10.0 endwhile1121
  whilebody1121:
    CALL MOTOR.START 'B' 20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTF F.0 10.0 whilebody1121
  endwhile1121:
    CALL MOTOR.STOP 'B' 'True'
  while1126:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTEQF F.0 10.0 endwhile1126
  whilebody1126:
    CALL MOTOR.START 'C' 20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTF F.0 10.0 whilebody1126
  endwhile1126:
    CALL MOTOR.STOP 'C' 'True'
  while1131:
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_GTEQF F.0 10.0 endwhile1131
  whilebody1131:
    CALL MOTOR.START 'B' -20.0
    CALL SENSOR.READPERCENT 2.0 F.0
    JR_LTF F.0 10.0 whilebody1131
  endwhile1131:
    CALL MOTOR.STOP 'B' 'True'
  while1136:
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_GTEQF F.0 10.0 endwhile1136
  whilebody1136:
    CALL MOTOR.START 'C' -20.0
    CALL SENSOR.READPERCENT 3.0 F.0
    JR_LTF F.0 10.0 whilebody1136
  endwhile1136:
    CALL MOTOR.STOP 'C' 'True'
RETSUB_VIRAV:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_VIRAV:
SUB_RGB:
    CALL ARRAYSTORE_FLOAT 0.0 66.0 VSENDARRAY_M
    CALL SENSOR.COMMUNICATEI2C VI2CPORT_M VI2CSLVADDR_M 1.0 4.0 VSENDARRAY_M VRECVARRAY_M
    CALL ARRAYGET_FLOAT 0.0 F.0 VRECVARRAY_M
    CALL ARRAYSTORE_FLOAT VI_M F.0 VA_M
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 5.0 or1146
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 14.0 or1146
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 6.0 else1145_1
  or1146:
    CALL SPEAKER.NOTE 100.0 'C#1' 500.0
    JR endif1145
  else1145_1:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 1.0 or1151
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 10.0 or1151
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 7.0 or1151
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 8.0 else1145_2
  or1151:
    CALL SPEAKER.NOTE 100.0 'C#5' 500.0
    JR endif1145
  else1145_2:
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 3.0 or1157
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_EQF F.0 2.0 or1157
    CALL ARRAYGET_FLOAT VI_M F.0 VA_M
    JR_NEQF F.0 4.0 else1145_3
  or1157:
    CALL SPEAKER.NOTE 50.0 'C#9' 1000.0
  else1145_3:
  endif1145:
RETSUB_RGB:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_RGB:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.COMMUNICATEI2C     // FFFFAA
{
	IN_F port
	IN_F address
	IN_F writebytes
	IN_F readbytes
	IN_16 writedata
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 wrt
	DATA32 rd
	DATA32 writedatalength
	ARRAY8 outdata 32
	ARRAY8 indata 32

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	MOVEF_8 address adr
	MOVEF_32 writebytes wrt
	MOVEF_32 readbytes rd

	JR_GTEQ32 wrt 0 wrtnottoless
	MOVE32_32 0 wrt
wrtnottoless:
	JR_LTEQ32 wrt 32 wrtnottomuch
	MOVE32_32 32 wrt
wrtnottomuch:
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	ARRAY SIZE writedata writedatalength

	WRITE8 adr 0 outdata		// put adress in first byte of output buffer

	// decode float values from array and put in outdata buffer
	DATA32 i
	DATA8 i8
	MOVE32_32 0 i
	JR_GTEQ32 i wrt endwritecopy
writecopyloop:
	JR_GTEQ32 i writedatalength addzeroelements
	DATAF v
	DATA32 v32
	DATA8 v8
	ARRAY_READ writedata i v 
	MOVEF_32 v v32
	EXTRACTLOWBYTE v32 v8
	ADD32 i 1 i
	MOVE32_8 i i8
	WRITE8 v8 i8 outdata
	JR_LT32 i wrt writecopyloop
	JR endwritecopy
addzeroelements:
	ADD32 i 1 i 
	MOVE32_8 i i8
	WRITE8 0 i8 outdata
	JR_LT32 i wrt addzeroelements	
endwritecopy:

	// do the communciation
	DATA8 wrt8
	MOVE32_8 wrt wrt8
	ADD8 wrt8 1 wrt8
	DATA8 rd8
	MOVE32_8 rd rd8
	INPUT_DEVICE SETUP layer no 1 0 wrt8 outdata rd8 indata 

	// decode response
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 i8
	READ8 indata i8 v8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE v8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall MOTOR.GETSPEED // SF      MOTORDECODEPORTDESCRIPTOR
{
	IN_S ports 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 speed
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR ports layer no
	JR_LT8 no 0 no_port

	OUTPUT_READ layer no speed tacho
	MOVE8_F speed result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

no_port:
	MOVE8_f 0 result
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall EV3FILE.OPENREAD       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16
	DATA32 dummylength

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_READ fullname handle16 dummylength

	MOVE16_F handle16 handle
}
subcall EV3FILE.READLINE     // FS
{
	IN_F handle
	OUT_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE READ_TEXT handle16 6 127 text
	RETURN

invalidhandle:
	STRINGS DUPLICATE '' text
}
subcall EV3FILE.CONVERTTONUMBER            // SF
{
	IN_S s 252
	OUT_F value

	STRINGS STRING_TO_VALUE s value
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
